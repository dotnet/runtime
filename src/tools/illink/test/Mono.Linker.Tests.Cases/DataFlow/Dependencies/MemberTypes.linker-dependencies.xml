<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsPrivateParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsPrivateParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge b="Field:TStorage[] System.Enum/EnumInfo`1::Values" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IComparable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IConvertible" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ICloneable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Runtime.Serialization.ISerializable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Runtime.Serialization.ISerializable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesEmpty:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesEmpty:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesWithMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesWithMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesOnBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:System.Int64" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseDefaultMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedDefaultMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:System.Int64" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::DerivedInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::BaseInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.IEquatable`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IEquatable`1::Equals(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IDisposable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.IEnumerator::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IDisposable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T System.Collections.Generic.List`1/Enumerator::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNextRare()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1/Enumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.List`1/Enumerator::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1/Enumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.ICollection`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.ICollection`1::IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IList`1::IndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.ICollection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.ICollection::CopyTo(System.Array,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.ICollection::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.ICollection::get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.ICollection::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.ICollection::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.ICollection::SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.ICollection::get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.ICollection::IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IList::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.IList::Add(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::Contains(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.IList::IndexOf(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Insert(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Remove(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.IList::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IList::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.IList::IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.IList::IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.ICollection" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IReadOnlyList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T[] System.Collections.Generic.List`1::_items" />
	<edge b="Field:T[] System.Collections.Generic.List`1::_items" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1::_size" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1::_version" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T[] System.Collections.Generic.List`1::s_emptyArray" />
	<edge b="Field:T[] System.Collections.Generic.List`1::s_emptyArray" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::IsCompatibleObject(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Add(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::AddWithResize(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::AddRange(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt; System.Collections.Generic.List`1::AsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Contains(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.Contains(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;TOutput&gt; System.Collections.Generic.List`1::ConvertAll(System.Converter`2&lt;T,TOutput&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(System.Int32,T[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::EnsureCapacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Grow(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::GrowForInsertion(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::GetNewCapacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Exists(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::Find(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::FindAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::FindLast(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::ForEach(System.Action`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1/Enumerator&lt;T&gt; System.Collections.Generic.List`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.List`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::GetRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::Slice(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.IndexOf(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Insert(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Remove(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Remove(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::RemoveAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::RemoveRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Reverse()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Reverse(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Comparison`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T[] System.Collections.Generic.List`1::ToArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::TrimExcess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::TrueForAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.List`1::Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.List`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.List`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.IList.Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="MemberRef:System.Void System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="Method:T[] System.Collections.Generic.List`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(System.Int32,T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" e="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::BaseInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::DerivedInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedDefaultMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseDefaultMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:TStorage&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:TEnum[] System.Enum::GetValues()" e="TypeSpec:TEnum[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="ModuleRef:QCall" />
	<edge b="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" e="TypeSpec:TResult[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
</dependencies>