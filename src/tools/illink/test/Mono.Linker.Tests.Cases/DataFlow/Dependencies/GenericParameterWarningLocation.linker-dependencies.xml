<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Void" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Module:System.Private.CoreLib.dll" e="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Object" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:System.Type" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" />
	<edge mark="1" b="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" e="TypeDef:System.RuntimeTypeHandle" />
	<edge mark="1" b="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.String" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.DefaultMemberAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.DefaultMemberAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.DefaultMemberAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.DefaultMemberAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Attribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.AttributeUsageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_AllowMultiple(System.Boolean)" e="Property:System.Boolean System.AttributeUsageAttribute::AllowMultiple()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_AllowMultiple(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Int32 System.Boolean::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.String System.Boolean::ToString()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Boolean System.Boolean::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Field:System.Boolean System.Boolean::m_value" />
	<edge mark="1" b="Field:System.Boolean System.Boolean::m_value" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Field:System.Boolean System.Boolean::m_value" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Int32 System.Boolean::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.String System.Boolean::ToString()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Boolean System.Boolean::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Object::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Int32" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Field:System.Int32 System.Int32::m_value" e="TypeDef:System.Int32" />
	<edge mark="1" b="Field:System.Int32 System.Int32::m_value" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="Method:System.String System.Int32::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int32::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int32::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Object::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsReadOnlyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsReadOnlyAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsReadOnlyAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsReadOnlyAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge b="Method:System.Void System.ComponentModel.EditorBrowsableAttribute::.ctor(System.ComponentModel.EditorBrowsableState)" e="TypeDef:System.ComponentModel.EditorBrowsableAttribute" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ComponentModel.EditorBrowsableAttribute::.ctor(System.ComponentModel.EditorBrowsableState)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Enum" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" />
	<edge mark="1" b="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.String System.Enum::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Enum::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Enum::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Enum::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Enum::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::set_Justification(System.String)" e="Property:System.String System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::Justification()" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::set_Justification(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilerGeneratedAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_Inherited(System.Boolean)" e="Property:System.Boolean System.AttributeUsageAttribute::Inherited()" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_Inherited(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.AttributeUsageAttribute::.ctor(System.AttributeTargets)" e="TypeDef:System.AttributeUsageAttribute" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::.ctor(System.AttributeTargets)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.Int32 System.AttributeTargets::value__" />
	<edge mark="1" b="Field:System.Int32 System.AttributeTargets::value__" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.Int32 System.AttributeTargets::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Assembly" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Assembly" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Assembly" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Module" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Module" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Module" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Class" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Class" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Class" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Struct" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Struct" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Struct" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Enum" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Enum" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Enum" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Constructor" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Constructor" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Constructor" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Method" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Method" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Method" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Property" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Property" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Property" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Field" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Field" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Field" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Event" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Event" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Event" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Interface" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Interface" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Interface" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Parameter" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Parameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Parameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Delegate" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Delegate" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Delegate" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::All" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::All" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::All" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.FlagsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.FlagsAttribute::.ctor()" e="TypeDef:System.FlagsAttribute" />
	<edge mark="1" b="Method:System.Void System.FlagsAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.Object::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Int32 System.Boolean::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Boolean System.Boolean::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.TypeForwardedFromAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TypeForwardedFromAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.TypeForwardedFromAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetInterfaces()" e="Method:System.Type[] System.RuntimeType::GetInterfaces()" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Method:System.String System.RuntimeType::get_FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Method:System.String System.RuntimeType::get_Namespace()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Method:System.Guid System.RuntimeType::get_GUID()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.RuntimeType::get_Name()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Method:System.Type System.RuntimeType::get_BaseType()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.RuntimeType::get_Module()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="Method:System.Type System.RuntimeType::GetElementType()" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="Method:System.Boolean System.RuntimeType::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="Method:System.Boolean System.RuntimeType::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="Method:System.Boolean System.RuntimeType::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.Binder" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="TypeDef:System.Reflection.ParameterModifier" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Globalization.CultureInfo" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Reflection.ParameterModifier" e="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" />
	<edge mark="1" b="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" e="TypeDef:System.Reflection.ParameterModifier" />
	<edge b="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" e="TypeSpec:System.Boolean[]" />
	<edge mark="1" b="TypeSpec:System.Boolean[]" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Int32 System.Reflection.BindingFlags::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.BindingFlags::value__" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.BindingFlags::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" e="TypeDef:System.Reflection.BindingFlags" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeDef:System.Byte" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Boolean System.Byte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Int32 System.Byte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.String System.Byte::ToString()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Field:System.Byte System.Byte::m_value" />
	<edge mark="1" b="Field:System.Byte System.Byte::m_value" e="TypeDef:System.Byte" />
	<edge mark="1" b="Field:System.Byte System.Byte::m_value" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Boolean System.Byte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Int32 System.Byte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.String System.Byte::ToString()" />
	<edge mark="1" b="Method:System.String System.Byte::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Byte::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Byte::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeDef:System.Runtime.CompilerServices.NullableAttribute" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeSpec:System.Byte[]" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute::.ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute::.ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerHiddenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerHiddenAttribute::.ctor()" e="TypeDef:System.Diagnostics.DebuggerHiddenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerHiddenAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerStepThroughAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerStepThroughAttribute::.ctor()" e="TypeDef:System.Diagnostics.DebuggerStepThroughAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerStepThroughAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" e="Method:System.Boolean System.Type::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPointerImpl()" e="Method:System.Boolean System.Type::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="Method:System.Boolean System.RuntimeType::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" e="Method:System.Boolean System.Type::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsByRefImpl()" e="Method:System.Boolean System.Type::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="Method:System.Boolean System.RuntimeType::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsArrayImpl()" e="Method:System.Boolean System.Type::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="Method:System.Boolean System.RuntimeType::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" e="Method:System.Boolean System.Type::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetElementType()" e="Method:System.Type System.Type::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="Method:System.Type System.RuntimeType::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Int32 System.Reflection.TypeAttributes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.TypeAttributes::value__" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.TypeAttributes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.ObsoleteAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_UrlFormat(System.String)" e="Property:System.String System.ObsoleteAttribute::UrlFormat()" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_UrlFormat(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_DiagnosticId(System.String)" e="Property:System.String System.ObsoleteAttribute::DiagnosticId()" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_DiagnosticId(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String)" e="TypeDef:System.ObsoleteAttribute" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="Property:System.Type System.RuntimeType::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="Method:System.Type System.Type::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Property:System.Type System.Type::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="Property:System.Reflection.Module System.RuntimeType::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="TypeDef:System.Reflection.Module" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" e="Property:System.Reflection.Module System.Reflection.MemberInfo::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Property:System.Reflection.Module System.Type::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.RuntimeType::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="Property:System.Type System.RuntimeType::BaseType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Property:System.Type System.Type::BaseType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Method:System.Type System.RuntimeType::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="Property:System.Reflection.Assembly System.RuntimeType::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="Method:System.Reflection.Assembly System.Type::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="TypeDef:System.Reflection.Assembly" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Property:System.Reflection.Assembly System.Type::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="Property:System.String System.RuntimeType::Name()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Property:System.String System.Reflection.MemberInfo::Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.RuntimeType::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="Property:System.Guid System.RuntimeType::GUID()" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="Method:System.Guid System.Type::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="TypeDef:System.Guid" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Int32 System.Guid::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.String System.Guid::ToString()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int32 System.Guid::_a" />
	<edge mark="1" b="Field:System.Int32 System.Guid::_a" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int32 System.Guid::_a" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int16 System.Guid::_b" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_b" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_b" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Int16" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int16 System.Guid::_c" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_c" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_c" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_d" />
	<edge mark="1" b="Field:System.Byte System.Guid::_d" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_d" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_e" />
	<edge mark="1" b="Field:System.Byte System.Guid::_e" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_e" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_f" />
	<edge mark="1" b="Field:System.Byte System.Guid::_f" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_f" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_g" />
	<edge mark="1" b="Field:System.Byte System.Guid::_g" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_g" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_h" />
	<edge mark="1" b="Field:System.Byte System.Guid::_h" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_h" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_i" />
	<edge mark="1" b="Field:System.Byte System.Guid::_i" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_i" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_j" />
	<edge mark="1" b="Field:System.Byte System.Guid::_j" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_j" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_k" />
	<edge mark="1" b="Field:System.Byte System.Guid::_k" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_k" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Int32 System.Guid::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.String System.Guid::ToString()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Boolean System.Int16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Int32 System.Int16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.String System.Int16::ToString()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Field:System.Int16 System.Int16::m_value" />
	<edge mark="1" b="Field:System.Int16 System.Int16::m_value" e="TypeDef:System.Int16" />
	<edge mark="1" b="Field:System.Int16 System.Int16::m_value" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Boolean System.Int16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Int32 System.Int16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.String System.Int16::ToString()" />
	<edge mark="1" b="Method:System.String System.Int16::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int16::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int16::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Guid::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Guid::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Guid::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Guid::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Guid::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Property:System.Guid System.Type::GUID()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Method:System.Guid System.RuntimeType::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="Property:System.String System.RuntimeType::Namespace()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="Method:System.String System.Type::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Property:System.String System.Type::Namespace()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Method:System.String System.RuntimeType::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="Property:System.String System.RuntimeType::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Property:System.String System.Type::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="Property:System.String System.RuntimeType::FullName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="Method:System.String System.Type::get_FullName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Property:System.String System.Type::FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Method:System.String System.RuntimeType::get_FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.FieldInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.FieldInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Int32 System.Reflection.MemberTypes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MemberTypes::value__" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MemberTypes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.MemberInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Type::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.EventInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.EventInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.PropertyInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.PropertyInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.ConstructorInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Int32 System.Reflection.CallingConventions::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.CallingConventions::value__" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.CallingConventions::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodBase" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.MethodInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MemberInfo[]" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MemberInfo[]" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.RuntimeType::GetInterfaces()" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge b="Method:System.Type[] System.RuntimeType::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetInterfaces()" e="Method:System.Type[] System.RuntimeType::GetInterfaces()" />
	<edge b="Method:System.Type[] System.Type::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.FieldInfo[]" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.FieldInfo[]" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.EventInfo[]" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.EventInfo[]" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.PropertyInfo[]" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.PropertyInfo[]" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ConstructorInfo[]" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ConstructorInfo[]" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MethodInfo[]" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MethodInfo[]" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.NonVersionableAttribute:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.Versioning.NonVersionableAttribute::.ctor()" e="TypeDef:System.Runtime.Versioning.NonVersionableAttribute:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.NonVersionableAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte)" e="TypeDef:System.Runtime.CompilerServices.NullableAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IntrinsicAttribute:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IntrinsicAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IntrinsicAttribute:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IntrinsicAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullableContextAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableContextAttribute::.ctor(System.Byte)" e="TypeDef:System.Runtime.CompilerServices.NullableContextAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableContextAttribute::.ctor(System.Byte)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" e="Module:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithRUC::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type System.Object::GetType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Object::GetType()" e="Method:System.Void System.Type::.ctor()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.String System.Type::ToString()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge b="Method:System.Void System.Type::.ctor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void System.Type::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Type::GetHashCode()" e="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Type::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Type::Equals(System.Object)" e="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Type::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Type::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Type::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="Property:System.Type System.Type::ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="Property:System.Type System.Reflection.MemberInfo::ReflectedType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="Property:System.Type System.Type::DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="Property:System.Type System.Reflection.MemberInfo::DeclaringType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" e="Module:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithFields`1::.cctor()" e="TypeDef:System.Void" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/IBase`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/InterfaceGenericNesting/DerivedWithNothing`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.String System.Type::ToString()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Object" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void System.Object::Finalize()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ComVisibleAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.ComVisibleAttribute::.ctor(System.Boolean)" e="TypeDef:System.Runtime.InteropServices.ComVisibleAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.ComVisibleAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(System.Runtime.InteropServices.ClassInterfaceType)" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(System.Runtime.InteropServices.ClassInterfaceType)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithRUC:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1::.cctor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1::.cctor()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="TypeDef:System.Reflection.MemberInfo" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithFields`1::.cctor()" e="TypeDef:System.Void" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/DerivedWithNothing`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/BaseTypeGenericNesting/Base`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::Field" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::Field" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::Field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::Field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::Field" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::Field" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::Field" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::FieldOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::Field" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod&lt;System.String&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod&lt;System.String&gt;()" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod&lt;System.String&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;::GenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;TUnknown&gt;&gt;&gt;&gt;&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;::GenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::MethodOnGenericTypeNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;::GenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericInstanceMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericInstanceMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericInstanceMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GenericInstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericInstanceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::GenericInstanceMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/GenericTypeWithMethodAndField`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNestingAccessToT()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirementsAccessToT()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;TUnknown&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresFields`1&lt;TUnknown&gt;&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNesting()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/RequiresMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics/TypeWithRUCMethod&gt;&gt;&gt;&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/NestedGenerics::GenericMethodNoRequirements()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::TwoSpecificTypes()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithTwoAttribute`2::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Attribute::.ctor()" e="TypeDef:System.Attribute" />
	<edge mark="1" b="TypeDef:System.Attribute" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Attribute" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge b="Method:System.Void System.Attribute::.ctor()" e="TypeDef:System.Attribute" />
	<edge mark="1" b="Method:System.Void System.Attribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes::OneSpecificType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/GenericAttributes/TypeWithPublicMethodsAttribute`1::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Attribute::.ctor()" e="TypeDef:System.Attribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="Method:System.Type System.Type::GetType(System.String)" />
	<edge mark="1" b="Method:System.Type System.Type::GetType(System.String)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod::PrivateRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="Method:System.Void System.Object::Finalize()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeGetType::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Object System.Object::MemberwiseClone()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod::PrivateRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type System.Type::GetType(System.String)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::_annotatedField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::_annotatedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::_annotatedField" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod::PrivateRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Void System.Object::Finalize()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedField()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod::PrivateRUCMethod()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Void System.Object::Finalize()" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1:test.exe" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedReturnValue()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::MethodWithAnnotatedParameter(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::MethodWithAnnotatedParameter(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod::PrivateRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Void System.Object::Finalize()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithRUCMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPrivateMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::AnnotatedParameter()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AnnotatedString::MethodWithAnnotatedParameter(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" e="TypeDef:System.Exception" />
	<edge mark="1" b="TypeDef:System.Exception" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionFilter::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::TwoMismatchesInOneStatement()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::MultipleReferencesToTheSameType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::OneMatchingAnnotation()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/ExceptionCatch::SpecificType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation::DoNothing()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::_value" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/AsType::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::_value" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IsInstance::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::TwoMismatchesInOneStatement()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithTwo`2::.ctor()" e="Method:System.Void System.Exception::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Exception::.ctor()" e="TypeDef:System.Exception" />
	<edge mark="1" b="TypeDef:System.Exception" e="Method:System.String System.Exception::ToString()" />
	<edge b="Method:System.Void System.Exception::.ctor()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void System.Exception::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.Exception::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Exception::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" e="Method:System.Void System.Exception::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Exception::.ctor()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::OneMatchingAnnotation()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/CreateInstance::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="TypeDef:System.Func`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression`1" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="Module:System.Linq.Expressions.dll" e="Assembly:System.Linq.Expressions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::get_Property()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::get_Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression" e="Module:System.Linq.Expressions.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::set_Property(System.String)" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::set_Property(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::set_Property(System.String)" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::&lt;Property&gt;k__BackingField" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerBrowsableAttribute::.ctor(System.Diagnostics.DebuggerBrowsableState)" e="TypeDef:System.Diagnostics.DebuggerBrowsableAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerBrowsableAttribute::.ctor(System.Diagnostics.DebuggerBrowsableState)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge b="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Linq.Expressions.ParameterExpression[]" />
	<edge b="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;TDelegate&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;TDelegate&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge mark="1" b="TypeDef:System.ParamArrayAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ParamArrayAttribute::.ctor()" e="TypeDef:System.ParamArrayAttribute" />
	<edge mark="1" b="Method:System.Void System.ParamArrayAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Array" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Array::Empty()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression/ParameterExpressionProxy:System.Linq.Expressions.dll" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Field:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression/ParameterExpressionProxy::_node" />
	<edge mark="1" b="Field:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression/ParameterExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.Expression/ParameterExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Field:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression/ParameterExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Void System.Linq.Expressions.Expression/ParameterExpressionProxy::.ctor(System.Linq.Expressions.ParameterExpression)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_IsByRef()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::IsByRef()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_IsByRef()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Property:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ParameterExpression" e="Method:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Type()" e="Property:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::get_NodeType()" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::NodeType()" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/ParameterExpressionProxy::get_NodeType()" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Int32 System.Linq.Expressions.ExpressionType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Linq.Expressions.ExpressionType::value__" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Int32 System.Linq.Expressions.ExpressionType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Add" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Add" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Add" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::And" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::And" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::And" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAlso" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAlso" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAlso" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayLength" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayLength" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayLength" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayIndex" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayIndex" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ArrayIndex" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Call" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Call" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Call" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Coalesce" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Coalesce" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Coalesce" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Conditional" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Conditional" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Conditional" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Constant" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Constant" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Constant" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Convert" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Convert" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Convert" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ConvertChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ConvertChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ConvertChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Divide" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Divide" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Divide" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Equal" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Equal" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Equal" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOr" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOr" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOr" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThan" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThan" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThan" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThanOrEqual" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThanOrEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::GreaterThanOrEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Invoke" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Invoke" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Invoke" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Lambda" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Lambda" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Lambda" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShift" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShift" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShift" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThan" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThan" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThan" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThanOrEqual" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThanOrEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LessThanOrEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ListInit" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ListInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ListInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberAccess" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberAccess" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberAccess" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberInit" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MemberInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Modulo" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Modulo" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Modulo" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Multiply" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Multiply" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Multiply" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Negate" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Negate" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Negate" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::UnaryPlus" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::UnaryPlus" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::UnaryPlus" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NegateChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NegateChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NegateChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::New" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::New" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::New" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayInit" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayInit" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayBounds" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayBounds" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NewArrayBounds" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Not" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Not" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Not" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NotEqual" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NotEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::NotEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Or" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Or" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Or" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrElse" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrElse" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrElse" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Parameter" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Parameter" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Parameter" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Power" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Power" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Power" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Quote" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Quote" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Quote" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShift" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShift" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShift" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Subtract" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Subtract" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Subtract" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeAs" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeAs" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeAs" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeIs" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeIs" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeIs" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Assign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Assign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Assign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Block" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Block" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Block" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DebugInfo" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DebugInfo" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DebugInfo" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Decrement" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Decrement" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Decrement" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Dynamic" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Dynamic" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Dynamic" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Default" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Default" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Default" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Extension" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Extension" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Extension" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Goto" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Goto" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Goto" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Increment" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Increment" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Increment" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Index" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Index" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Index" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Label" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Label" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Label" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RuntimeVariables" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RuntimeVariables" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RuntimeVariables" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Loop" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Loop" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Loop" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Switch" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Switch" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Switch" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Throw" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Throw" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Throw" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Try" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Try" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Try" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Unbox" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Unbox" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::Unbox" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AndAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DivideAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DivideAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::DivideAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOrAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOrAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ExclusiveOrAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShiftAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShiftAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::LeftShiftAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ModuloAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ModuloAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::ModuloAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OrAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PowerAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PowerAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PowerAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShiftAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShiftAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::RightShiftAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssignChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::AddAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssignChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::MultiplyAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssignChecked" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::SubtractAssignChecked" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreIncrementAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreIncrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreIncrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreDecrementAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreDecrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PreDecrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostIncrementAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostIncrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostIncrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostDecrementAssign" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostDecrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::PostDecrementAssign" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeEqual" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::TypeEqual" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OnesComplement" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OnesComplement" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::OnesComplement" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsTrue" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsTrue" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsTrue" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.ExpressionType" e="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsFalse" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsFalse" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Field:System.Linq.Expressions.ExpressionType System.Linq.Expressions.ExpressionType::IsFalse" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Name()" e="Property:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::Name()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_IsByRef()" e="Property:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::IsByRef()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_IsByRef()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_DebugView()" e="Property:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::DebugView()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/ParameterExpressionProxy::get_DebugView()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_CanReduce()" e="Property:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::CanReduce()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/ParameterExpressionProxy::get_CanReduce()" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.Linq.Expressions.Expression/ParameterExpressionProxy::.ctor(System.Linq.Expressions.ParameterExpression)" e="TypeDef:System.Linq.Expressions.Expression/ParameterExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Void System.Linq.Expressions.Expression/ParameterExpressionProxy::.ctor(System.Linq.Expressions.ParameterExpression)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerTypeProxyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerTypeProxyAttribute::.ctor(System.Type)" e="TypeDef:System.Diagnostics.DebuggerTypeProxyAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerTypeProxyAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.MemberExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression/MemberExpressionProxy:System.Linq.Expressions.dll" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Field:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression/MemberExpressionProxy::_node" />
	<edge mark="1" b="Field:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression/MemberExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.Expression/MemberExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Field:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression/MemberExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.MemberExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Void System.Linq.Expressions.Expression/MemberExpressionProxy::.ctor(System.Linq.Expressions.MemberExpression)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::get_Expression()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::get_Member()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::get_Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::Expression()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::get_Expression()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::Member()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::get_Member()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Property:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MemberExpression" e="Method:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::get_Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::get_Type()" e="Property:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/MemberExpressionProxy::get_Type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::get_NodeType()" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::NodeType()" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MemberExpressionProxy::get_NodeType()" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::get_Member()" e="Property:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::Member()" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo System.Linq.Expressions.Expression/MemberExpressionProxy::get_Member()" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::get_Expression()" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::Expression()" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MemberExpressionProxy::get_Expression()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::get_DebugView()" e="Property:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::DebugView()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/MemberExpressionProxy::get_DebugView()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::get_CanReduce()" e="Property:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::CanReduce()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/MemberExpressionProxy::get_CanReduce()" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.Linq.Expressions.Expression/MemberExpressionProxy::.ctor(System.Linq.Expressions.MemberExpression)" e="TypeDef:System.Linq.Expressions.Expression/MemberExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Void System.Linq.Expressions.Expression/MemberExpressionProxy::.ctor(System.Linq.Expressions.MemberExpression)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::op_Equality(System.RuntimeTypeHandle,System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::op_Equality(System.Object,System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::op_Inequality(System.RuntimeTypeHandle,System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::op_Inequality(System.Object,System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:System.String" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="TypeDef:System.String" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberInfo" e="Method:System.Boolean System.Reflection.MemberInfo::op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberInfo" e="Method:System.Boolean System.Reflection.MemberInfo::op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.Module" e="Method:System.Boolean System.Reflection.Module::op_Equality(System.Reflection.Module,System.Reflection.Module)" />
	<edge mark="1" b="TypeDef:System.Reflection.Module" e="Method:System.Boolean System.Reflection.Module::op_Inequality(System.Reflection.Module,System.Reflection.Module)" />
	<edge mark="1" b="TypeDef:System.Reflection.Assembly" e="Method:System.Boolean System.Reflection.Assembly::op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
	<edge mark="1" b="TypeDef:System.Reflection.Assembly" e="Method:System.Boolean System.Reflection.Assembly::op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_Equality(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_Inequality(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_LessThan(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_LessThanOrEqual(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_GreaterThan(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::op_GreaterThanOrEqual(System.Guid,System.Guid)" />
	<edge mark="1" b="TypeDef:System.Reflection.FieldInfo" e="Method:System.Boolean System.Reflection.FieldInfo::op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.FieldInfo" e="Method:System.Boolean System.Reflection.FieldInfo::op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.EventInfo" e="Method:System.Boolean System.Reflection.EventInfo::op_Equality(System.Reflection.EventInfo,System.Reflection.EventInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.EventInfo" e="Method:System.Boolean System.Reflection.EventInfo::op_Inequality(System.Reflection.EventInfo,System.Reflection.EventInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.PropertyInfo" e="Method:System.Boolean System.Reflection.PropertyInfo::op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.PropertyInfo" e="Method:System.Boolean System.Reflection.PropertyInfo::op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.ConstructorInfo" e="Method:System.Boolean System.Reflection.ConstructorInfo::op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.ConstructorInfo" e="Method:System.Boolean System.Reflection.ConstructorInfo::op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodBase" e="Method:System.Boolean System.Reflection.MethodBase::op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodBase" e="Method:System.Boolean System.Reflection.MethodBase::op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodInfo" e="Method:System.Boolean System.Reflection.MethodInfo::op_Equality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodInfo" e="Method:System.Boolean System.Reflection.MethodInfo::op_Inequality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" />
	<edge mark="1" b="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" e="TypeDef:System.RuntimeMethodHandle" />
	<edge mark="1" b="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" e="TypeDef:System.IRuntimeMethodInfo:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.IRuntimeMethodInfo:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::get_Property()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Property()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::get_Property()" e="TypeDef:System.String" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::get_Property()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_TypeCore()" e="Method:System.Type System.Linq.Expressions.Expression`1::get_TypeCore()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_PublicType()" e="Method:System.Type System.Linq.Expressions.Expression`1::get_PublicType()" />
	<edge mark="1" b="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.LambdaExpression::Accept(System.Linq.Expressions.Compiler.StackSpiller)" e="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression`1::Accept(System.Linq.Expressions.Compiler.StackSpiller)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression/LambdaExpressionProxy:System.Linq.Expressions.dll" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Field:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression/LambdaExpressionProxy::_node" />
	<edge mark="1" b="Field:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression/LambdaExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.Expression/LambdaExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Field:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression/LambdaExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.LambdaExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Void System.Linq.Expressions.Expression/LambdaExpressionProxy::.ctor(System.Linq.Expressions.LambdaExpression)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Body()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Parameters()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_ReturnType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_TailCall()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::Body()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Body()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Name()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::Parameters()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Parameters()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::ReturnType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_ReturnType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::TailCall()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_TailCall()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Property:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.LambdaExpression" e="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Type()" e="Property:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_TailCall()" e="Property:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::TailCall()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_TailCall()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_ReturnType()" e="Property:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::ReturnType()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/LambdaExpressionProxy::get_ReturnType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Parameters()" e="Property:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::Parameters()" />
	<edge mark="1" b="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge b="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt; System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Parameters()" e="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.ParameterExpression&gt;" e="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" />
	<edge mark="1" b="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" e="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ICollection`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::get_Count()" e="Property:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::get_Count()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerDisplayAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerDisplayAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.DebuggerDisplayAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerDisplayAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::get_NodeType()" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::NodeType()" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/LambdaExpressionProxy::get_NodeType()" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Name()" e="Property:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::Name()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_DebugView()" e="Property:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::DebugView()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/LambdaExpressionProxy::get_DebugView()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_CanReduce()" e="Property:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::CanReduce()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/LambdaExpressionProxy::get_CanReduce()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Body()" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::Body()" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/LambdaExpressionProxy::get_Body()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void System.Linq.Expressions.Expression/LambdaExpressionProxy::.ctor(System.Linq.Expressions.LambdaExpression)" e="TypeDef:System.Linq.Expressions.Expression/LambdaExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Void System.Linq.Expressions.Expression/LambdaExpressionProxy::.ctor(System.Linq.Expressions.LambdaExpression)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Compiler.StackSpiller:System.Linq.Expressions.dll" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression`1::Accept(System.Linq.Expressions.Compiler.StackSpiller)" e="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.LambdaExpression::Accept(System.Linq.Expressions.Compiler.StackSpiller)" />
	<edge mark="1" b="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression`1::Accept(System.Linq.Expressions.Compiler.StackSpiller)" e="TypeDef:System.Linq.Expressions.LambdaExpression" />
	<edge mark="1" b="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.LambdaExpression::Accept(System.Linq.Expressions.Compiler.StackSpiller)" e="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.Expression`1::Accept(System.Linq.Expressions.Compiler.StackSpiller)" />
	<edge mark="1" b="Method:System.Linq.Expressions.LambdaExpression System.Linq.Expressions.LambdaExpression::Accept(System.Linq.Expressions.Compiler.StackSpiller)" e="TypeDef:System.Linq.Expressions.LambdaExpression" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_PublicType()" e="Property:System.Type System.Linq.Expressions.Expression`1::PublicType()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_PublicType()" e="Method:System.Type System.Linq.Expressions.LambdaExpression::get_PublicType()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_PublicType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_PublicType()" e="Property:System.Type System.Linq.Expressions.LambdaExpression::PublicType()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_PublicType()" e="Method:System.Type System.Linq.Expressions.Expression`1::get_PublicType()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_PublicType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_TypeCore()" e="Property:System.Type System.Linq.Expressions.Expression`1::TypeCore()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_TypeCore()" e="Method:System.Type System.Linq.Expressions.LambdaExpression::get_TypeCore()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression`1::get_TypeCore()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_TypeCore()" e="Property:System.Type System.Linq.Expressions.LambdaExpression::TypeCore()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_TypeCore()" e="Method:System.Type System.Linq.Expressions.Expression`1::get_TypeCore()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.LambdaExpression::get_TypeCore()" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Func`1" e="Method:System.Void System.Func`1::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Func`1" e="Method:TResult System.Func`1::Invoke()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Object System.MulticastDelegate::GetTarget()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Object System.MulticastDelegate::GetTarget()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Object System.Delegate::GetTarget()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 System.MulticastDelegate::GetHashCode()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.MulticastDelegate::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge b="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" e="TypeSpec:System.Delegate[]" />
	<edge mark="1" b="TypeSpec:System.Delegate[]" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge b="Method:System.Delegate[] System.Delegate::GetInvocationList()" e="TypeSpec:System.Delegate[]" />
	<edge mark="1" b="TypeSpec:System.Delegate[]" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.SerializationInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" />
	<edge mark="1" b="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" e="TypeDef:System.Runtime.Serialization.StreamingContext" />
	<edge mark="1" b="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" e="TypeDef:System.Runtime.Serialization.StreamingContext" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Func`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Func`1" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Func`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.IntPtr System.IntPtr::op_Explicit(System.Int32)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.IntPtr System.IntPtr::op_Explicit(System.Void*)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Void* System.IntPtr::op_Explicit(System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int32 System.IntPtr::op_Explicit(System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::op_Equality(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.IntPtr System.IntPtr::op_Addition(System.IntPtr,System.Int32)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.IntPtr System.IntPtr::op_Subtraction(System.IntPtr,System.Int32)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int32 System.IntPtr::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.String System.IntPtr::ToString()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Field:System.IntPtr System.IntPtr::_value" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Field:System.IntPtr System.IntPtr::_value" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int32 System.IntPtr::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.String System.IntPtr::ToString()" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::MultipleReferencesToTheSameProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::&lt;Property&gt;k__BackingField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" e="TypeDef:System.String" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::OneMatchingAnnotation()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::get_Property()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::get_Property()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::get_Property()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfPropertyOnGenericType::SpecificType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::set_Property(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Field" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Field" e="TypeDef:System.String" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.MemberExpression" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Boolean System.RuntimeFieldHandle::op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Boolean System.RuntimeFieldHandle::op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Int32 System.RuntimeFieldHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Boolean System.RuntimeFieldHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Field:System.IRuntimeFieldInfo System.RuntimeFieldHandle::m_ptr" />
	<edge mark="1" b="Field:System.IRuntimeFieldInfo System.RuntimeFieldHandle::m_ptr" e="TypeDef:System.RuntimeFieldHandle" />
	<edge mark="1" b="Field:System.IRuntimeFieldInfo System.RuntimeFieldHandle::m_ptr" e="TypeDef:System.IRuntimeFieldInfo:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.IRuntimeFieldInfo:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Int32 System.RuntimeFieldHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeFieldHandle" e="Method:System.Boolean System.RuntimeFieldHandle::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeFieldHandle::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeFieldHandle::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeFieldHandle::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeFieldHandle::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" e="TypeDef:System.String" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::MultipleReferencesToTheSameField()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::OneMatchingAnnotation()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfFieldOnGenericType::SpecificType()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeSpec:System.Func`1&lt;System.String&gt;" />
	<edge mark="1" b="TypeSpec:System.Func`1&lt;System.String&gt;" e="TypeDef:System.Func`1" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.String&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge mark="1" b="TypeDef:System.Action" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::TwoMismatchesInOneStatement()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeSpec:System.Linq.Expressions.Expression[]" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.MethodCallExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.Expression/MethodCallExpressionProxy:System.Linq.Expressions.dll" e="Module:System.Linq.Expressions.dll" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Field:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression/MethodCallExpressionProxy::_node" />
	<edge mark="1" b="Field:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression/MethodCallExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.Expression/MethodCallExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Field:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression/MethodCallExpressionProxy::_node" e="TypeDef:System.Linq.Expressions.MethodCallExpression" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Void System.Linq.Expressions.Expression/MethodCallExpressionProxy::.ctor(System.Linq.Expressions.MethodCallExpression)" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Arguments()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Method()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Object()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::Arguments()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Arguments()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_CanReduce()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_DebugView()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::Method()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Method()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_NodeType()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::Object()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Object()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Property:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::Type()" />
	<edge mark="1" b="TypeDef:System.Linq.Expressions.MethodCallExpression" e="Method:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Type()" e="Property:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::Type()" />
	<edge mark="1" b="Method:System.Type System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Object()" e="Property:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::Object()" />
	<edge mark="1" b="Method:System.Linq.Expressions.Expression System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Object()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_NodeType()" e="Property:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::NodeType()" />
	<edge mark="1" b="Method:System.Linq.Expressions.ExpressionType System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_NodeType()" e="TypeDef:System.Linq.Expressions.ExpressionType" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Method()" e="Property:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::Method()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Method()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_DebugView()" e="Property:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::DebugView()" />
	<edge mark="1" b="Method:System.String System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_DebugView()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_CanReduce()" e="Property:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::CanReduce()" />
	<edge mark="1" b="Method:System.Boolean System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_CanReduce()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Arguments()" e="Property:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::Arguments()" />
	<edge mark="1" b="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt; System.Linq.Expressions.Expression/MethodCallExpressionProxy::get_Arguments()" e="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;System.Linq.Expressions.Expression&gt;" e="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" />
	<edge b="Method:System.Void System.Linq.Expressions.Expression/MethodCallExpressionProxy::.ctor(System.Linq.Expressions.MethodCallExpression)" e="TypeDef:System.Linq.Expressions.Expression/MethodCallExpressionProxy:System.Linq.Expressions.dll" />
	<edge mark="1" b="Method:System.Void System.Linq.Expressions.Expression/MethodCallExpressionProxy::.ctor(System.Linq.Expressions.MethodCallExpression)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Action" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Action" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void System.Action::Invoke()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::OneMatchingAnnotation()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOfMethodOnGenericType::SpecificType()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" e="TypeDef:System.Linq.Expressions.Expression`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" e="TypeDef:System.Reflection.MethodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" e="Method:T[] System.Array::Empty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LdTokenOnGenericMethod::SpecificType()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="TypeDef:System.Action" />
	<edge mark="1" b="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" e="Method:System.Linq.Expressions.Expression`1&lt;TDelegate&gt; System.Linq.Expressions.Expression::Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::TwoMismatchesInOneStatement()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::OneMatchingAnnotation()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericType::SpecificType()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::TwoMismatchesInOneStatement()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::MultipleReferencesToTheSameMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::OneMatchingAnnotation()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/DelegateUsageOnGenericMethod::SpecificType()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/LocalVariable::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch()" e="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods&lt;TUnknown&gt;()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::InstanceFieldMismatch()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceField" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceField" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::InstanceField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::InstanceField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::InstanceField" e="TypeDef:System.String" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::MultipleReferencesToTheSameField()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Field" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/FieldAccessOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Field" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch()" e="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods&lt;TUnknown&gt;()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;T&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstanceForTypeWithPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::InstanceMethodMismatch()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::InstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::InstanceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::InstanceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::TwoMismatchesInOneStatement()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::MultipleReferencesToTheSameMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::OneMatchingAnnotation()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericType::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::InstanceMethodMismatch()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::InstanceMethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::InstanceMethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::InstanceMethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::InstanceMethodWithPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::TwoMismatchesInOneStatement()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;TPublicFields,TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::MultipleReferencesToTheSameMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::OneMatchingAnnotation()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;TPublicMethods&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/MethodCallOnGenericMethod::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody::MethodWithTwo()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::TwoMismatchesInOneStatement()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::MultipleReferencesToTheSameType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::OneMatchingAnnotation()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::SpecificType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodBody/TypeOf::AccessOpenTypeDefinition()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::&lt;Property&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TwoMismatchesInOne`2::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/IWithTwo`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property1()" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property1()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property1()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property1()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property2()" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property2()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property2()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property2()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property3()" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property3()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::get_Property3()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property3()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property3()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property3(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property3&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property3&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property3&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property3()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property3()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property3()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property3()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property3&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property3&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property2()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property2(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property2&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property2&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property2&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property2()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property2()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property2()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property2()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property2&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property2&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property1()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::set_Property1(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property1&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property1&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property1&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property1()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::Property1()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property1()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::get_Property1()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::&lt;Property1&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/MultipleReferencesToTheSameType`2::&lt;Property1&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::Property()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::&lt;Property&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/OneMatchingAnnotation`1::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::Property()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::set_Property(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/SpecificType::&lt;Property&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/PropertyDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" e="Module:Mono.Linker.Tests.Cases.Expectations.dll" />
	<edge mark="1" b="Module:Mono.Linker.Tests.Cases.Expectations.dll" e="Assembly:Mono.Linker.Tests.Cases.Expectations, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/SpecificType::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/OneMatchingAnnotation`1::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field1" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field1" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field1" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field2" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field2" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field2" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field3" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field3" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/MultipleReferencesToTheSameType`2::_field3" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/TwoMismatchesInOne`2::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinitionViaReflection/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ExtensionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.ExtensionAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.ExtensionAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.ExtensionAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::_field" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2&lt;TPublicMethods,TPublicFields&gt;::_field" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TwoMismatchesInOne`2::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field1" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field1" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field1" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field1" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field1" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field1" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field2" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field2" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field2" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field2" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field2" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field2" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field3" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field3" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2&lt;TPublicMethods,TUnknown&gt;::_field3" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field3" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field3" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/MultipleReferencesToTheSameType`2::_field3" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::Test()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::_field" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1&lt;TPublicMethods&gt;::_field" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/OneMatchingAnnotation`1::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::Test()" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/SpecificType::_field" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/FieldDefinition/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithMatchingReturn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithOneMismatchReturn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatchesInReturn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatchesInReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithOneMismatchReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithMatchingReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificReturnType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicFields&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturnAccessedViaReflection/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithMatchingReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithMatchingReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithMatchingReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithMatchingReturn()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatchReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatchReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatchReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatchReturn()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/ConstructorWithOneMatchAndOneMismatch`1::.ctor(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TMethods,TMethods&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatchesInReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicFields,TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatchReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithMatchingReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificReturnType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithTwoMismatches(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;TPublicMethods,TPublicMethods&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TPublicFields&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithOneMismatch(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;TUnknown&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn::MethodWithSpecificType(Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/MethodParametersAndReturn/IWithTwo`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1&lt;TPublicFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithTwoMismatches`2::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1&lt;TPublicMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithOneMismatch`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1&lt;TAll&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1&lt;TAll&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithMatchingAnnotation`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/IWithPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeImplementingInterface/ImplementsWithSpecificType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMismatchAnnotation`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMismatchAnnotation`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOneMismatch`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOneMismatch`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithTwoMatching`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithTwoMatching`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;:test.exe" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::FastAllocateString(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::InternalCopy(System.String,System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetBytesFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EqualsHelper(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EqualsOrdinalIgnoreCase(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EqualsOrdinalIgnoreCaseNoLengthCheck(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetNonRandomizedHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetNonRandomizedHashCodeOrdinalIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::CheckStringComparison(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Globalization.CompareOptions System.String::GetCaseCompareOfComparisonCulture(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Globalization.CompareOptions System.String::GetCompareOptionsFromOrdinalStringComparison(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.Char*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.Char*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.SByte*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::CreateStringForSByteConstructor(System.Byte*,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::TryGetSpan(System.Int32,System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char&amp; System.String::GetRawStringData()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.UInt16&amp; System.String::GetRawStringDataAsUInt16()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::CreateFromChar(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::CreateFromChar(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt; System.String::System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Collections.IEnumerator System.String::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::wcslen(System.Char*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::strlen(System.Byte*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char System.String::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.SByte System.String::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Byte System.String::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int16 System.String::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.UInt16 System.String::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.UInt32 System.String::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int64 System.String::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.UInt64 System.String::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Single System.String::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Double System.String::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Decimal System.String::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.DateTime System.String::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Object System.String::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::System.IParsable&lt;System.String&gt;.Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::System.IParsable&lt;System.String&gt;.TryParse(System.String,System.IFormatProvider,System.String&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::System.ISpanParsable&lt;System.String&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::System.ISpanParsable&lt;System.String&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.String&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::CopyStringContent(System.String,System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::FormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceCore(System.String,System.String,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceHelper(System.Int32,System.String,System.ReadOnlySpan`1&lt;System.Int32&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceLineEndingsCore(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOfNewlineChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceLineEndingsWithLineFeed()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::SplitInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::SplitInternal(System.String,System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::CreateSplitArrayOfThisAsSoleValue(System.StringSplitOptions,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::SplitInternal(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::SplitWithoutPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::SplitWithPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::MakeSeparatorListVectorized(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Char,System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::CheckStringSplitOptions(System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::ThrowSubstringArgumentOutOfRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::InternalSubString(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimWhiteSpaceHelper(System.Text.TrimType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimHelper(System.Char*,System.Int32,System.Text.TrimType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::CreateTrimmedString(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOfCharOrdinalIgnoreCase(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::&lt;GetNonRandomizedHashCodeOrdinalIgnoreCase&gt;g__GetNonRandomizedHashCodeOrdinalIgnoreCaseSlow|45_0(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;System.String&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GetDerivedMethods()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GetDerivedMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;::GetDerivedMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1::GetDerivedMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1::GetDerivedMethods()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1::GetDerivedMethods()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::GetMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::GetMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::GetMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::GetMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::GetMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::GetMethods()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" e="TypeDef:System.Type" />
	<edge b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MethodInfo[]" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOnlyStaticMethodReference`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance::TestWithUnannotatedTypeArgument()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.Int32 System.StringComparison::value__" />
	<edge mark="1" b="Field:System.Int32 System.StringComparison::value__" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.Int32 System.StringComparison::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::CurrentCulture" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::CurrentCulture" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::CurrentCulture" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::CurrentCultureIgnoreCase" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::CurrentCultureIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::CurrentCultureIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::InvariantCulture" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::InvariantCulture" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::InvariantCulture" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::InvariantCultureIgnoreCase" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::InvariantCultureIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::InvariantCultureIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::Ordinal" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::Ordinal" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::Ordinal" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="TypeDef:System.StringComparison" e="Field:System.StringComparison System.StringComparison::OrdinalIgnoreCase" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::OrdinalIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Field:System.StringComparison System.StringComparison::OrdinalIgnoreCase" e="TypeDef:System.StringComparison" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.String)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="TypeDef:System.Char" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Int32 System.Char::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Boolean System.Char::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.String System.Char::ToString()" />
	<edge mark="1" b="TypeDef:System.Char" e="Field:System.Char System.Char::m_value" />
	<edge mark="1" b="Field:System.Char System.Char::m_value" e="TypeDef:System.Char" />
	<edge mark="1" b="Field:System.Char System.Char::m_value" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Int32 System.Char::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Boolean System.Char::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.String System.Char::ToString()" />
	<edge mark="1" b="Method:System.String System.Char::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Char::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Char::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Char::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::LastIndexOf(System.Char)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.String)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::IndexOfAny(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOfAny(System.Char[])" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOf(System.Char)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Contains(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Contains(System.String)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.String System.String::TrimEnd(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.String System.String::TrimEnd(System.Char[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::TrimEnd(System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::TrimEnd()" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::TrimStart(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.String System.String::TrimStart(System.Char[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::TrimStart(System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::TrimStart()" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Trim(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.String System.String::Trim(System.Char[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Trim(System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Trim()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToUpperInvariant()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToUpper()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToLowerInvariant()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToLower()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Substring(System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Substring(System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeDef:System.StringSplitOptions" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.StringSplitOptions" e="Field:System.Int32 System.StringSplitOptions::value__" />
	<edge mark="1" b="Field:System.Int32 System.StringSplitOptions::value__" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="Field:System.Int32 System.StringSplitOptions::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.StringSplitOptions" e="Field:System.StringSplitOptions System.StringSplitOptions::None" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::None" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::None" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="TypeDef:System.StringSplitOptions" e="Field:System.StringSplitOptions System.StringSplitOptions::RemoveEmptyEntries" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::RemoveEmptyEntries" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::RemoveEmptyEntries" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="TypeDef:System.StringSplitOptions" e="Field:System.StringSplitOptions System.StringSplitOptions::TrimEntries" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::TrimEntries" e="TypeDef:System.StringSplitOptions" />
	<edge mark="1" b="Field:System.StringSplitOptions System.StringSplitOptions::TrimEntries" e="TypeDef:System.StringSplitOptions" />
	<edge b="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge b="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.Char[]" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" e="TypeSpec:System.Char[]" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.Int32)" e="TypeSpec:System.Char[]" />
	<edge b="Method:System.String[] System.String::Split(System.Char[],System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge b="Method:System.String[] System.String::Split(System.Char[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ReplaceLineEndings(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ReplaceLineEndings()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Replace(System.String,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Replace(System.Char,System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Remove(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Remove(System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::PadRight(System.Int32,System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::PadRight(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::PadLeft(System.Int32,System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::PadLeft(System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IEnumerable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.String,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.String,System.Object[])" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.Char,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.Char,System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.String,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.String,System.String[])" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Join(System.Char,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::Join(System.Char,System.String[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Insert(System.Int32,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.IFormatProvider" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Text.CompositeFormat" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" e="TypeDef:System.Object" />
	<edge b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.String" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:T[] System.SpanDebugView`1::_array" />
	<edge mark="1" b="Field:T[] System.SpanDebugView`1::_array" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1::_length" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1::_length" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.ReadOnlySpan`1::ToString()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:T&amp; System.ReadOnlySpan`1::_reference" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:System.Int32 System.ReadOnlySpan`1::_length" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.ReadOnlySpan`1::ToString()" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.UInt32*" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.UInt32*" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" e="TypeSpec:System.Runtime.CompilerServices.MethodTableAuxiliaryData*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTableAuxiliaryData*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" e="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" e="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="Field:System.UInt32 System.UInt32::m_value" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Field:System.UInt32 System.UInt32::m_value" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Boolean System.UInt32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Int32 System.UInt32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.String System.UInt32::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Boolean System.UInt32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Int32 System.UInt32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.String System.UInt32::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.CLSCompliantAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.CLSCompliantAttribute::.ctor(System.Boolean)" e="TypeDef:System.CLSCompliantAttribute" />
	<edge mark="1" b="Method:System.Void System.CLSCompliantAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" e="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Boolean System.UInt16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Int32 System.UInt16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.String System.UInt16::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Field:System.UInt16 System.UInt16::m_value" />
	<edge mark="1" b="Field:System.UInt16 System.UInt16::m_value" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Field:System.UInt16 System.UInt16::m_value" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Boolean System.UInt16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Int32 System.UInt16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.String System.UInt16::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge b="Method:System.Void System.ValueType::.ctor()" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Void System.ValueType::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*&amp;:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable*&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.CodeDom.Compiler.GeneratedCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(System.String,System.String)" e="TypeDef:System.CodeDom.Compiler.GeneratedCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.LibraryImportAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_EntryPoint(System.String)" e="Property:System.String System.Runtime.InteropServices.LibraryImportAttribute::EntryPoint()" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_EntryPoint(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.InteropServices.LibraryImportAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Boolean" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Slice(System.Int32,System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Slice(System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.String System.ReadOnlySpan`1::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.ReadOnlySpan`1::ToString()" e="TypeDef:System.String" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.ReadOnlySpan`1&lt;T&gt; System.Span`1::op_Implicit(System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:T[] System.SpanDebugView`1::_array" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:T&amp; System.Span`1::_reference" e="TypeDef:System.Span`1" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.Span`1::_length" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Field:System.Int32 System.Span`1::_length" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Span`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Span`1::ToString()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:T&amp; System.Span`1::_reference" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:System.Int32 System.Span`1::_length" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Span`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Span`1::ToString()" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::Slice(System.Int32,System.Int32)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::Slice(System.Int32)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Method:System.String System.Span`1::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Span`1::ToString()" e="TypeDef:System.String" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.Span`1::op_Implicit(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.Span`1::op_Implicit(System.Span`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Span`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.Span`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Span`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Span`1::Fill(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Span`1::Clear()" e="TypeDef:System.Void" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1/Enumerator&lt;T&gt; System.Span`1::GetEnumerator()" e="TypeSpec:System.Span`1/Enumerator&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1/Enumerator&lt;T&gt;" e="TypeDef:System.Span`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" e="TypeDef:System.Span`1/Enumerator" />
	<edge b="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Field:System.Int32 System.Span`1/Enumerator::_index" />
	<edge mark="1" b="Field:System.Int32 System.Span`1/Enumerator::_index" e="TypeDef:System.Span`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.Span`1/Enumerator::_index" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Span`1&lt;T&gt; System.Span`1::get_Empty()" e="Property:System.Span`1&lt;T&gt; System.Span`1::Empty()" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::get_Empty()" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::op_Equality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::op_Inequality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.ArraySegment`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:T[] System.ArraySegment`1::_array" />
	<edge mark="1" b="Field:T[] System.ArraySegment`1::_array" e="TypeDef:System.ArraySegment`1" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Int32 System.ArraySegment`1::_offset" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_offset" e="TypeDef:System.ArraySegment`1" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_offset" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Int32 System.ArraySegment`1::_count" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_count" e="TypeDef:System.ArraySegment`1" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_count" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.ArraySegment`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::get_Count()" e="Property:System.Int32 System.ArraySegment`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::get_Count()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::get_IsEmpty()" e="Property:System.Boolean System.Span`1::IsEmpty()" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::get_IsEmpty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::get_Length()" e="Property:System.Int32 System.Span`1::Length()" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::get_Length()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="Property:T&amp; System.Span`1::Item(System.Int32)" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Module:System.Private.CoreLib.dll" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsUnmanagedAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsUnmanagedAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsUnmanagedAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsUnmanagedAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute::.ctor()" e="TypeDef:System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" />
	<edge mark="1" b="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" />
	<edge mark="1" b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute::.ctor(System.Type,System.Runtime.InteropServices.Marshalling.MarshalMode,System.Type)" e="TypeDef:System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute::.ctor(System.Type,System.Runtime.InteropServices.Marshalling.MarshalMode,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.InAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1/Enumerator&lt;T&gt; System.ReadOnlySpan`1::GetEnumerator()" e="TypeSpec:System.ReadOnlySpan`1/Enumerator&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1/Enumerator&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" />
	<edge mark="1" b="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge b="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" e="TypeDef:System.Int32" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::CastUp(System.ReadOnlySpan`1&lt;TDerived&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;TDerived&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::CastUp(System.ReadOnlySpan`1&lt;TDerived&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::get_Empty()" e="Property:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Empty()" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::get_Empty()" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::get_IsEmpty()" e="Property:System.Boolean System.ReadOnlySpan`1::IsEmpty()" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::get_IsEmpty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::get_Length()" e="Property:System.Int32 System.ReadOnlySpan`1::Length()" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::get_Length()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="Property:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::Item(System.Int32)" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RequiresLocationAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RequiresLocationAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.RequiresLocationAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RequiresLocationAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/UnmanagedToManagedOut" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/UnmanagedToManagedOut" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" />
	<edge mark="1" b="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" />
	<edge mark="1" b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute::.ctor(System.Type)" e="TypeDef:System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T[] System.SpanDebugView`1::get_Items()" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String,System.Boolean)" e="TypeDef:System.ObsoleteAttribute" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String,System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsByRefLikeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsByRefLikeAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsByRefLikeAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsByRefLikeAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.Text.CompositeFormat::get_Format()" e="Property:System.String System.Text.CompositeFormat::Format()" />
	<edge mark="1" b="Method:System.String System.Text.CompositeFormat::get_Format()" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.StringSyntaxAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.StringSyntaxAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Format(System.String,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Format(System.String,System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.String,System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Format(System.String,System.Object)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Concat(System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.String[])" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.String,System.String,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.String,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Concat(System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Object,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.String::get_Length()" e="Property:System.Int32 System.String::Length()" />
	<edge mark="1" b="Method:System.Int32 System.String::get_Length()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.String::get_Chars(System.Int32)" e="Property:System.Char System.String::Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Char System.String::get_Chars(System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Field:System.Int32 System.Text.NormalizationForm::value__" />
	<edge mark="1" b="Field:System.Int32 System.Text.NormalizationForm::value__" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="Field:System.Int32 System.Text.NormalizationForm::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormC" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormC" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormC" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormD" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormD" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormD" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKC" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKC" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKC" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="TypeDef:System.Text.NormalizationForm" e="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKD" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKD" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="Field:System.Text.NormalizationForm System.Text.NormalizationForm::FormKD" e="TypeDef:System.Text.NormalizationForm" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.UnsupportedOSPlatformAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.Versioning.UnsupportedOSPlatformAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.Versioning.UnsupportedOSPlatformAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.UnsupportedOSPlatformAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.OSPlatformAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Normalize()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::IsNormalized()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.TypeCode System.String::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.Int32 System.TypeCode::value__" />
	<edge mark="1" b="Field:System.Int32 System.TypeCode::value__" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.Int32 System.TypeCode::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Empty" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Empty" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Empty" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Object" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Object" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Object" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::DBNull" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DBNull" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DBNull" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Boolean" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Boolean" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Boolean" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Char" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Char" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Char" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::SByte" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::SByte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::SByte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Byte" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Byte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Byte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int16" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt16" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int32" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt32" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int64" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt64" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Single" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Single" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Single" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Double" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Double" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Double" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Decimal" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Decimal" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Decimal" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::DateTime" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DateTime" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DateTime" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::String" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::String" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::String" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" e="TypeDef:System.Text.StringRuneEnumerator" />
	<edge mark="1" b="TypeDef:System.Text.StringRuneEnumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeDef:System.Text.StringRuneEnumerator" e="Field:System.String System.Text.StringRuneEnumerator::_string" />
	<edge mark="1" b="Field:System.String System.Text.StringRuneEnumerator::_string" e="TypeDef:System.Text.StringRuneEnumerator" />
	<edge mark="1" b="Field:System.String System.Text.StringRuneEnumerator::_string" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Text.StringRuneEnumerator" e="Field:System.Text.Rune System.Text.StringRuneEnumerator::_current" />
	<edge mark="1" b="Field:System.Text.Rune System.Text.StringRuneEnumerator::_current" e="TypeDef:System.Text.StringRuneEnumerator" />
	<edge mark="1" b="Field:System.Text.Rune System.Text.StringRuneEnumerator::_current" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="TypeDef:System.Text.StringRuneEnumerator" e="Field:System.Int32 System.Text.StringRuneEnumerator::_nextIndex" />
	<edge mark="1" b="Field:System.Int32 System.Text.StringRuneEnumerator::_nextIndex" e="TypeDef:System.Text.StringRuneEnumerator" />
	<edge mark="1" b="Field:System.Int32 System.Text.StringRuneEnumerator::_nextIndex" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_Equality(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_Inequality(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_LessThan(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_GreaterThan(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.Char)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.UInt32)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.Int32)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Int32 System.Text.Rune::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.String System.Text.Rune::ToString()" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Field:System.UInt32 System.Text.Rune::_value" />
	<edge mark="1" b="Field:System.UInt32 System.Text.Rune::_value" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="Field:System.UInt32 System.Text.Rune::_value" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Boolean System.Text.Rune::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.Int32 System.Text.Rune::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Text.Rune" e="Method:System.String System.Text.Rune::ToString()" />
	<edge mark="1" b="Method:System.String System.Text.Rune::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Text.Rune::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Text.Rune::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Text.Rune::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Text.Rune::get_DebuggerDisplay()" e="Property:System.String System.Text.Rune::DebuggerDisplay()" />
	<edge mark="1" b="Method:System.String System.Text.Rune::get_DebuggerDisplay()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.CharEnumerator System.String::GetEnumerator()" e="TypeDef:System.CharEnumerator" />
	<edge mark="1" b="TypeDef:System.CharEnumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.String::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute)" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" e="TypeSpec:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute)" />
	<edge b="TypeSpec:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="TypeSpec:System.Char&amp;" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="TypeSpec:System.Char[]" e="TypeDef:System.Char" />
	<edge b="Method:System.Char[] System.String::ToCharArray()" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="TypeSpec:System.Char[]" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.String::Copy(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Object System.String::Clone()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" e="TypeSpec:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Method:System.String System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::ToString()" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Field:System.IFormatProvider System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_provider" />
	<edge mark="1" b="Field:System.IFormatProvider System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_provider" e="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" />
	<edge mark="1" b="Field:System.IFormatProvider System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_provider" e="TypeDef:System.IFormatProvider" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Field:System.Char[] System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_arrayToReturnToPool" />
	<edge mark="1" b="Field:System.Char[] System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_arrayToReturnToPool" e="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" />
	<edge b="Field:System.Char[] System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_arrayToReturnToPool" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="TypeSpec:System.Char[]" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Field:System.Span`1&lt;System.Char&gt; System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_chars" />
	<edge mark="1" b="Field:System.Span`1&lt;System.Char&gt; System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_chars" e="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Field:System.Span`1&lt;System.Char&gt; System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_chars" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Field:System.Int32 System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_pos" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_pos" e="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_pos" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Field:System.Boolean System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_hasCustomFormatter" />
	<edge mark="1" b="Field:System.Boolean System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_hasCustomFormatter" e="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" />
	<edge mark="1" b="Field:System.Boolean System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::_hasCustomFormatter" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler" e="Method:System.String System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::ToString()" />
	<edge mark="1" b="Method:System.String System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Runtime.CompilerServices.DefaultInterpolatedStringHandler::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute::.ctor(System.String[])" e="TypeDef:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute::.ctor(System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute::.ctor(System.String[])" e="TypeDef:System.Void" />
	<edge b="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" e="TypeSpec:System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;" />
	<edge mark="1" b="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,TState&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" e="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,TState&gt;" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" />
	<edge b="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Buffers.SpanAction`2" />
	<edge mark="1" b="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.String::StartsWith(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::StartsWith(System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::op_Equality(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.String::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::EndsWith(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::EndsWith(System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareTo(System.String)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Int32 System.Globalization.CompareOptions::value__" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.CompareOptions::value__" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.CompareOptions::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::None" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::None" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::None" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreCase" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreCase" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreCase" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreNonSpace" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreNonSpace" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreNonSpace" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreSymbols" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreSymbols" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreSymbols" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreKanaType" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreKanaType" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreKanaType" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreWidth" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreWidth" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::IgnoreWidth" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::OrdinalIgnoreCase" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::OrdinalIgnoreCase" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::OrdinalIgnoreCase" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::StringSort" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::StringSort" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::StringSort" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareOptions" e="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::Ordinal" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::Ordinal" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Field:System.Globalization.CompareOptions System.Globalization.CompareOptions::Ordinal" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::Compare(System.String,System.String)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String System.String::IsInterned(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Intern(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.String::&lt;GetNonRandomizedHashCodeOrdinalIgnoreCase&gt;g__GetNonRandomizedHashCodeOrdinalIgnoreCaseSlow|45_0(System.String)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOfCharOrdinalIgnoreCase(System.Char)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String System.String::CreateTrimmedString(System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::TrimHelper(System.Char*,System.Int32,System.Text.TrimType)" e="TypeSpec:System.Char*" />
	<edge mark="1" b="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::TrimHelper(System.Char*,System.Int32,System.Text.TrimType)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" e="Field:System.Int32 System.Text.TrimType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Text.TrimType::value__" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.Text.TrimType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" e="Field:System.Text.TrimType System.Text.TrimType::Head" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Head" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Head" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" e="Field:System.Text.TrimType System.Text.TrimType::Tail" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Tail" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Tail" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" e="Field:System.Text.TrimType System.Text.TrimType::Both" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Both" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Text.TrimType System.Text.TrimType::Both" e="TypeDef:System.Text.TrimType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::TrimWhiteSpaceHelper(System.Text.TrimType)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::InternalSubString(System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void System.String::ThrowSubstringArgumentOutOfRange(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute::.ctor()" e="TypeDef:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.String::CheckStringSplitOptions(System.StringSplitOptions)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.String&gt;" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" e="Field:System.Span`1&lt;T&gt; System.Collections.Generic.ValueListBuilder`1::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;T&gt; System.Collections.Generic.ValueListBuilder`1::_span" e="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" />
	<edge b="Field:System.Span`1&lt;T&gt; System.Collections.Generic.ValueListBuilder`1::_span" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" e="Field:T[] System.Collections.Generic.ValueListBuilder`1::_arrayFromPool" />
	<edge mark="1" b="Field:T[] System.Collections.Generic.ValueListBuilder`1::_arrayFromPool" e="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.Collections.Generic.ValueListBuilder`1::_arrayFromPool" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" e="Field:System.Int32 System.Collections.Generic.ValueListBuilder`1::_pos" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.ValueListBuilder`1::_pos" e="TypeDef:System.Collections.Generic.ValueListBuilder`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.ValueListBuilder`1::_pos" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorListVectorized(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Char,System.Char,System.Char)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Void System.String::MakeSeparatorListVectorized(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Char,System.Char,System.Char)" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::MakeSeparatorListVectorized(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Char,System.Char,System.Char)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge b="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.String[] System.String::SplitWithPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.String[] System.String::SplitWithPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge b="Method:System.String[] System.String::SplitWithPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.String[] System.String::SplitWithoutPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.String[] System.String::SplitWithoutPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge b="Method:System.String[] System.String::SplitWithoutPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::SplitInternal(System.String,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::CreateSplitArrayOfThisAsSoleValue(System.StringSplitOptions,System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.String::SplitInternal(System.String,System.String[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge b="Method:System.String[] System.String::SplitInternal(System.String,System.String[],System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String[] System.String::SplitInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.String[] System.String::SplitInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.StringSplitOptions)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ReplaceLineEndingsWithLineFeed()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::IndexOfNewlineChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Int32 System.String::IndexOfNewlineChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32 System.String::IndexOfNewlineChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Int32&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String System.String::ReplaceLineEndingsCore(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.String System.String::ReplaceHelper(System.Int32,System.String,System.ReadOnlySpan`1&lt;System.Int32&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.String System.String::ReplaceHelper(System.Int32,System.String,System.ReadOnlySpan`1&lt;System.Int32&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeDef:System.Globalization.CompareInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::ReplaceCore(System.String,System.String,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.String&gt;" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object[])" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object[])" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String[],System.Int32,System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String[],System.Int32,System.Int32)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String[],System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" e="TypeDef:System.Object" />
	<edge b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" />
	<edge mark="1" b="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" e="TypeDef:System.Object" />
	<edge b="Method:System.String System.String::FormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Object&gt;" />
	<edge mark="1" b="Method:System.String System.String::FormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan`1&lt;System.Object&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void System.String::CopyStringContent(System.String,System.Int32,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.String::System.ISpanParsable&lt;System.String&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.String&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.String::System.ISpanParsable&lt;System.String&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.Boolean System.String::System.ISpanParsable&lt;System.String&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.String&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::System.ISpanParsable&lt;System.String&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::System.ISpanParsable&lt;System.String&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge b="Method:System.Boolean System.String::System.IParsable&lt;System.String&gt;.TryParse(System.String,System.IFormatProvider,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.Boolean System.String::System.IParsable&lt;System.String&gt;.TryParse(System.String,System.IFormatProvider,System.String&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.String::System.IParsable&lt;System.String&gt;.Parse(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Object System.String::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="TypeDef:System.IConvertible" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.String::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.DateTime System.String::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.String::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.TimeSpan System.DateTime::op_Subtraction(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_Equality(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_Inequality(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_LessThan(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_LessThanOrEqual(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_GreaterThan(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Int32 System.DateTime::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.String System.DateTime::ToString()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Int32 System.DateTime::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.String System.DateTime::ToString()" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.Decimal System.String::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.String::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.Byte)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.Int16)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.UInt16)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.Char)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.Int32)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.UInt32)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Byte System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Char System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int16 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.UInt16 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int32 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.UInt32 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_UnaryPlus(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_UnaryNegation(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Increment(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Decrement(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Addition(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Subtraction(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Multiply(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Division(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Modulus(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_Equality(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_Inequality(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_LessThan(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_LessThanOrEqual(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_GreaterThan(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int32 System.Decimal::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.String System.Decimal::ToString()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.Int32 System.Decimal::_flags" />
	<edge mark="1" b="Field:System.Int32 System.Decimal::_flags" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.Int32 System.Decimal::_flags" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.UInt32 System.Decimal::_hi32" />
	<edge mark="1" b="Field:System.UInt32 System.Decimal::_hi32" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.UInt32 System.Decimal::_hi32" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.UInt64 System.Decimal::_lo64" />
	<edge mark="1" b="Field:System.UInt64 System.Decimal::_lo64" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.UInt64 System.Decimal::_lo64" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int32 System.Decimal::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.String System.Decimal::ToString()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.UInt64)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.UInt64 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Boolean System.UInt64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Int32 System.UInt64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.String System.UInt64::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Field:System.UInt64 System.UInt64::m_value" />
	<edge mark="1" b="Field:System.UInt64 System.UInt64::m_value" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Field:System.UInt64 System.UInt64::m_value" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Boolean System.UInt64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Int32 System.UInt64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.String System.UInt64::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Double System.String::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.String::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeDef:System.Double" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_Equality(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_Inequality(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_LessThan(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_GreaterThan(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_LessThanOrEqual(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::op_GreaterThanOrEqual(System.Double,System.Double)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Explicit(System.Double)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Double System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Int32 System.Double::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.String System.Double::ToString()" />
	<edge mark="1" b="TypeDef:System.Double" e="Field:System.Double System.Double::m_value" />
	<edge mark="1" b="Field:System.Double System.Double::m_value" e="TypeDef:System.Double" />
	<edge mark="1" b="Field:System.Double System.Double::m_value" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Int32 System.Double::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.String System.Double::ToString()" />
	<edge mark="1" b="Method:System.String System.Double::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Double::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Double::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Double::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.String::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.String::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.Single" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_Equality(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_Inequality(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_LessThan(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_GreaterThan(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_LessThanOrEqual(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::op_GreaterThanOrEqual(System.Single,System.Single)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Explicit(System.Single)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Single System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Int32 System.Single::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.String System.Single::ToString()" />
	<edge mark="1" b="TypeDef:System.Single" e="Field:System.Single System.Single::m_value" />
	<edge mark="1" b="Field:System.Single System.Single::m_value" e="TypeDef:System.Single" />
	<edge mark="1" b="Field:System.Single System.Single::m_value" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Int32 System.Single::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.String System.Single::ToString()" />
	<edge mark="1" b="Method:System.String System.Single::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Single::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Single::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Single::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.UInt64 System.String::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.String::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Int64 System.String::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.String::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeDef:System.Int64" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.IntPtr System.IntPtr::op_Explicit(System.Int64)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int64 System.IntPtr::op_Explicit(System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.Int64)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int64 System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Boolean System.Int64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Int32 System.Int64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.String System.Int64::ToString()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Field:System.Int64 System.Int64::m_value" />
	<edge mark="1" b="Field:System.Int64 System.Int64::m_value" e="TypeDef:System.Int64" />
	<edge mark="1" b="Field:System.Int64 System.Int64::m_value" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Boolean System.Int64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Int32 System.Int64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.String System.Int64::ToString()" />
	<edge mark="1" b="Method:System.String System.Int64::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int64::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int64::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt32 System.String::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.String::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int32 System.String::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.String::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt16 System.String::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.String::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int16 System.String::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.String::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.String::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.String::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.SByte System.String::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.String::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeDef:System.SByte" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Decimal System.Decimal::op_Implicit(System.SByte)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.SByte System.Decimal::op_Explicit(System.Decimal)" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Boolean System.SByte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Int32 System.SByte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.String System.SByte::ToString()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Field:System.SByte System.SByte::m_value" />
	<edge mark="1" b="Field:System.SByte System.SByte::m_value" e="TypeDef:System.SByte" />
	<edge mark="1" b="Field:System.SByte System.SByte::m_value" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Boolean System.SByte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Int32 System.SByte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.String System.SByte::ToString()" />
	<edge mark="1" b="Method:System.String System.SByte::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.SByte::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.SByte::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Char System.String::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.String::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.String::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.String::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.String::strlen(System.Byte*)" e="TypeSpec:System.Byte*" />
	<edge mark="1" b="Method:System.Int32 System.String::strlen(System.Byte*)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.String::wcslen(System.Char*)" e="TypeSpec:System.Char*" />
	<edge mark="1" b="Method:System.Int32 System.String::wcslen(System.Char*)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.String::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="TypeDef:System.Collections.IEnumerable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.String::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="TypeDef:System.Collections.IEnumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.GuidAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.GuidAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.InteropServices.GuidAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.GuidAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt; System.String::System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;::GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt; System.String::System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IEnumerator`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="Method:System.String System.String::CreateFromChar(System.Char,System.Char)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::CreateFromChar(System.Char)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" e="TypeSpec:System.Byte*" />
	<edge mark="1" b="TypeDef:System.Text.Encoding" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.String::CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" e="TypeDef:System.String" />
	<edge b="Method:System.UInt16&amp; System.String::GetRawStringDataAsUInt16()" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="TypeSpec:System.UInt16&amp;" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Char&amp; System.String::GetRawStringData()" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="TypeSpec:System.Char&amp;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.String::TryGetSpan(System.Int32,System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;&amp;" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.String::TryGetSpan(System.Int32,System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.String System.String::Ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.Char,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" e="TypeSpec:System.SByte*" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::CreateStringForSByteConstructor(System.Byte*,System.Int32)" e="TypeSpec:System.Byte*" />
	<edge mark="1" b="Method:System.String System.String::CreateStringForSByteConstructor(System.Byte*,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32)" e="TypeSpec:System.SByte*" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.SByte*)" e="TypeSpec:System.SByte*" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.SByte*)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.Char*,System.Int32,System.Int32)" e="TypeSpec:System.Char*" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.Char*,System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.Char*)" e="TypeSpec:System.Char*" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.Char*)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.Char[],System.Int32,System.Int32)" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.Char[],System.Int32,System.Int32)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.String::Ctor(System.Char[])" e="TypeSpec:System.Char[]" />
	<edge mark="1" b="Method:System.String System.String::Ctor(System.Char[])" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Globalization.CompareOptions System.String::GetCompareOptionsFromOrdinalStringComparison(System.StringComparison)" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Method:System.Globalization.CompareOptions System.String::GetCaseCompareOfComparisonCulture(System.StringComparison)" e="TypeDef:System.Globalization.CompareOptions" />
	<edge mark="1" b="Method:System.Void System.String::CheckStringComparison(System.StringComparison)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.String::GetNonRandomizedHashCodeOrdinalIgnoreCase()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::GetNonRandomizedHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.String::CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.String)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.String::EqualsOrdinalIgnoreCaseNoLengthCheck(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.String::EqualsOrdinalIgnoreCase(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.String::EqualsHelper(System.String,System.String)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.String::GetBytesFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" e="TypeSpec:System.Byte*" />
	<edge mark="1" b="Method:System.Int32 System.String::GetBytesFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.String::InternalCopy(System.String,System.IntPtr,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.StringHandleOnStack:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.StringHandleOnStack::_ptr" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.StringHandleOnStack::_ptr" e="TypeDef:System.Runtime.CompilerServices.StringHandleOnStack:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.StringHandleOnStack::_ptr" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.StringHandleOnStack:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.StringHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.StringHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.String System.String::FastAllocateString(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.String::FastAllocateString(System.Int32)" e="Field:System.Int32 System.String::_stringLength" />
	<edge mark="1" b="Field:System.Int32 System.String::_stringLength" e="TypeDef:System.String" />
	<edge mark="1" b="Field:System.Int32 System.String::_stringLength" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String System.String::FastAllocateString(System.Int32)" e="Field:System.Char System.String::_firstChar" />
	<edge mark="1" b="Field:System.Char System.String::_firstChar" e="TypeDef:System.String" />
	<edge mark="1" b="Field:System.Char System.String::_firstChar" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.String System.String::FastAllocateString(System.Int32)" e="Field:System.Int32 System.Int32::m_value" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1::.ctor()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithTwoMatching`2:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithTwo`2&lt;TPublicMethods,TPublicFields&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithTwo`2:test.exe" e="Module:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithOneMismatch`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithTwo`2&lt;TPublicFields,TPublicFields&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMismatchAnnotation`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TPublicFields&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithNoAnnotations`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TUnknown&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithMatchingAnnotation`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;TAllMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/DerivedWithSpecificType:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TypeInheritance/BaseWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterWarningLocation/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Decimal::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.DateTime::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Double::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int64::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.SByte::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Single::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt64::GetTypeCode()" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Decimal::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.DateTime::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Double::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int64::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.SByte::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Single::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt64::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="Method:System.Collections.IEnumerator System.Text.StringRuneEnumerator::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt; System.Text.StringRuneEnumerator::System.Collections.Generic.IEnumerable&lt;System.Text.Rune&gt;.GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Boolean::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Byte::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Char::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int16::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int32::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt16::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt32::GetTypeCode()" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Boolean::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Byte::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Char::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int16::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt16::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="TypeDef:System.IUtf8SpanFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.IAdditionOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedAddition(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IBinaryInteger`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.LeadingZeroCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.PopCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int32 System.Int32::PopCount(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateLeft(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateRight(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TrailingZeroCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IBinaryNumber`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.IsPow2(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int32::IsPow2(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.Log2(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int32 System.Int32::Log2(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseAnd(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseOr(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_ExclusiveOr(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_OnesComplement(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThan(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThanOrEqual(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThan(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThanOrEqual(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_Decrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IDecrementOperators`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_CheckedDecrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IDivisionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Division(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Equality(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Inequality(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_Increment(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IIncrementOperators`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_CheckedIncrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IModulusOperators&lt;System.Char,System.Char,System.Char&gt;.op_Modulus(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_Multiply(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.IMultiplyOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedMultiply(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Numerics.INumber`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int32::Sign(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Abs(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int32 System.Int32::Abs(System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeDef:System.Numerics.INumberBase`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int32 System.Int32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int32 System.Int32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int32 System.Int32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsCanonical(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsComplexNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsEvenInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsFinite(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsImaginaryNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNaN(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegative(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int32::IsNegative(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegativeInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNormal(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsOddInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositive(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int32::IsPositive(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositiveInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsRealNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsSubnormal(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsZero(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitude(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitudeNumber(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitude(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitudeNumber(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_LeftShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_RightShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_UnsignedRightShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Subtraction(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.ISubtractionOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedSubtraction(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_UnaryNegation(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeDef:System.Numerics.IUnaryNegationOperators`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_CheckedUnaryNegation(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryPlusOperators&lt;System.Char,System.Char&gt;.op_UnaryPlus(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Char&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeDef:System.IUtf8SpanParsable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int32&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" e="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" />
	<edge mark="1" b="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" e="Method:System.Text.Rune System.Text.StringRuneEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" e="Method:System.Boolean System.Text.StringRuneEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="Method:System.Object System.Text.StringRuneEnumerator::System.Collections.IEnumerator.get_Current()" />
	<edge mark="1" b="Method:System.Void System.IDisposable::Dispose()" e="Method:System.Void System.Text.StringRuneEnumerator::System.IDisposable.Dispose()" />
	<edge mark="1" b="Method:System.Void System.Collections.IEnumerator::Reset()" e="Method:System.Void System.Text.StringRuneEnumerator::System.Collections.IEnumerator.Reset()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Byte&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int16&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt32&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt16&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Decimal&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt64&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Double&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Single&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int64&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.SByte&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Decimal::Equals(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Byte::Equals(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Char::Equals(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Double::Equals(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int16::Equals(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int32::Equals(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int64::Equals(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.IntPtr::Equals(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.SByte::Equals(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Single::Equals(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt16::Equals(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt32::Equals(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt64::Equals(System.UInt64)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Decimal::CompareTo(System.Decimal)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Byte::CompareTo(System.Byte)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Char::CompareTo(System.Char)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Double::CompareTo(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int16::CompareTo(System.Int16)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int32::CompareTo(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int64::CompareTo(System.Int64)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.IntPtr::CompareTo(System.IntPtr)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.SByte::CompareTo(System.SByte)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Single::CompareTo(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt16::CompareTo(System.UInt16)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt32::CompareTo(System.UInt32)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt64::CompareTo(System.UInt64)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Decimal::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Byte::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Char::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Double::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int16::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int64::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.IntPtr::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.SByte::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Single::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt16::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt64::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Char System.Char::System.IParsable&lt;System.Char&gt;.Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Decimal::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Byte::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Double::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int16::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int64::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.IntPtr::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.SByte::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Single::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt16::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt64::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Addition(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Addition(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IAdditionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Addition(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Addition(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Addition(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_Addition(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Addition(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IAdditionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Addition(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Addition(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Addition(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Addition(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedAddition(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedAddition(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedAddition(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_CheckedAddition(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedAddition(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedAddition(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedAddition(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedAddition(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Byte,System.Byte&gt; System.Byte::DivRem(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int16,System.Int16&gt; System.Int16::DivRem(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int64,System.Int64&gt; System.Int64::DivRem(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt; System.IntPtr::DivRem(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.SByte,System.SByte&gt; System.SByte::DivRem(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt; System.UInt16::DivRem(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt; System.UInt32::DivRem(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt; System.UInt64::DivRem(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Byte System.Byte::LeadingZeroCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int16 System.Int16::LeadingZeroCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int64 System.Int64::LeadingZeroCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.IntPtr System.IntPtr::LeadingZeroCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.SByte System.SByte::LeadingZeroCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt16 System.UInt16::LeadingZeroCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt32 System.UInt32::LeadingZeroCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt64 System.UInt64::LeadingZeroCount(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Byte System.Byte::PopCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int16 System.Int16::PopCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int64 System.Int64::PopCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.IntPtr System.IntPtr::PopCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.SByte System.SByte::PopCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt16 System.UInt16::PopCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt32 System.UInt32::PopCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt64 System.UInt64::PopCount(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Byte System.Byte::RotateLeft(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int16 System.Int16::RotateLeft(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int64 System.Int64::RotateLeft(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.IntPtr System.IntPtr::RotateLeft(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.SByte System.SByte::RotateLeft(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt16 System.UInt16::RotateLeft(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt32 System.UInt32::RotateLeft(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt64 System.UInt64::RotateLeft(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Byte System.Byte::RotateRight(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int16 System.Int16::RotateRight(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int64 System.Int64::RotateRight(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.IntPtr System.IntPtr::RotateRight(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.SByte System.SByte::RotateRight(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt16 System.UInt16::RotateRight(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt32 System.UInt32::RotateRight(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt64 System.UInt64::RotateRight(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Byte System.Byte::TrailingZeroCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int16 System.Int16::TrailingZeroCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int64 System.Int64::TrailingZeroCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.IntPtr System.IntPtr::TrailingZeroCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.SByte System.SByte::TrailingZeroCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt16 System.UInt16::TrailingZeroCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt32 System.UInt32::TrailingZeroCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt64 System.UInt64::TrailingZeroCount(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Byte::IsPow2(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Double::IsPow2(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int16::IsPow2(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int64::IsPow2(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.IntPtr::IsPow2(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.SByte::IsPow2(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Single::IsPow2(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt16::IsPow2(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt32::IsPow2(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt64::IsPow2(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Byte System.Byte::Log2(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Double System.Double::Log2(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int16 System.Int16::Log2(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int64 System.Int64::Log2(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.IntPtr System.IntPtr::Log2(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.SByte System.SByte::Log2(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Single System.Single::Log2(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt16 System.UInt16::Log2(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt32 System.UInt32::Log2(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt64 System.UInt64::Log2(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseAnd(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseAnd(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseAnd(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseAnd(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseAnd(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseAnd(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseAnd(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseAnd(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseAnd(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseAnd(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseOr(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseOr(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseOr(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseOr(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseOr(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseOr(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseOr(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseOr(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseOr(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseOr(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_ExclusiveOr(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_ExclusiveOr(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_ExclusiveOr(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_ExclusiveOr(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_ExclusiveOr(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_ExclusiveOr(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_ExclusiveOr(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_ExclusiveOr(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_ExclusiveOr(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_ExclusiveOr(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_OnesComplement(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_OnesComplement(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_OnesComplement(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_OnesComplement(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_OnesComplement(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_OnesComplement(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_OnesComplement(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_OnesComplement(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_OnesComplement(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_OnesComplement(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThan(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThan(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThan(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThan(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThan(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThan(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThan(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThan(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThanOrEqual(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThanOrEqual(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThanOrEqual(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThanOrEqual(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThanOrEqual(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThanOrEqual(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThanOrEqual(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThanOrEqual(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThan(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThan(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThan(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThan(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThan(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThan(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThan(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThan(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThanOrEqual(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThanOrEqual(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThanOrEqual(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_Decrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Double System.Double::System.Numerics.IDecrementOperators&lt;System.Double&gt;.op_Decrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_Decrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_Decrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_Decrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_Decrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Single System.Single::System.Numerics.IDecrementOperators&lt;System.Single&gt;.op_Decrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_Decrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_Decrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_Decrement(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_CheckedDecrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_CheckedDecrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_CheckedDecrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_CheckedDecrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_CheckedDecrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_CheckedDecrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_CheckedDecrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_CheckedDecrement(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IDivisionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Division(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IDivisionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Division(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IDivisionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Division(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IDivisionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Division(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDivisionOperators&lt;nint,nint,nint&gt;.op_Division(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IDivisionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Division(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IDivisionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Division(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDivisionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Division(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDivisionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Division(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDivisionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Division(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Equality(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Equality(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Equality(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Equality(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Equality(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Equality(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Equality(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Inequality(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Inequality(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Inequality(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Inequality(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Inequality(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Inequality(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Inequality(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_Increment(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Double System.Double::System.Numerics.IIncrementOperators&lt;System.Double&gt;.op_Increment(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_Increment(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_Increment(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_Increment(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_Increment(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Single System.Single::System.Numerics.IIncrementOperators&lt;System.Single&gt;.op_Increment(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_Increment(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_Increment(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_Increment(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_CheckedIncrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_CheckedIncrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_CheckedIncrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_CheckedIncrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_CheckedIncrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_CheckedIncrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_CheckedIncrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_CheckedIncrement(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IModulusOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Modulus(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IModulusOperators&lt;System.Double,System.Double,System.Double&gt;.op_Modulus(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IModulusOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Modulus(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IModulusOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Modulus(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IModulusOperators&lt;nint,nint,nint&gt;.op_Modulus(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IModulusOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Modulus(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IModulusOperators&lt;System.Single,System.Single,System.Single&gt;.op_Modulus(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IModulusOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Modulus(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IModulusOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Modulus(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IModulusOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Modulus(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Multiply(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IMultiplyOperators&lt;System.Double,System.Double,System.Double&gt;.op_Multiply(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Multiply(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Multiply(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_Multiply(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Multiply(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IMultiplyOperators&lt;System.Single,System.Single,System.Single&gt;.op_Multiply(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Multiply(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Multiply(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Multiply(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedMultiply(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedMultiply(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedMultiply(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_CheckedMultiply(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedMultiply(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedMultiply(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedMultiply(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedMultiply(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Clamp(System.Decimal,System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Byte System.Byte::Clamp(System.Byte,System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::Clamp(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int16 System.Int16::Clamp(System.Int16,System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int64 System.Int64::Clamp(System.Int64,System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Clamp(System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.SByte System.SByte::Clamp(System.SByte,System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::Clamp(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Clamp(System.UInt16,System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Clamp(System.UInt32,System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Clamp(System.UInt64,System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::CopySign(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.CopySign(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Double System.Double::CopySign(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int16 System.Int16::CopySign(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int64 System.Int64::CopySign(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::CopySign(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.SByte System.SByte::CopySign(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Single System.Single::CopySign(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.CopySign(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.CopySign(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.CopySign(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Max(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Byte System.Byte::Max(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Double System.Double::Max(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int16 System.Int16::Max(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int64 System.Int64::Max(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Max(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.SByte System.SByte::Max(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Single System.Single::Max(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Max(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Max(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Max(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MaxNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MaxNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MaxNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MaxNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MaxNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MaxNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MaxNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MaxNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MaxNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MaxNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MaxNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Min(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Byte System.Byte::Min(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Double System.Double::Min(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int16 System.Int16::Min(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int64 System.Int64::Min(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Min(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.SByte System.SByte::Min(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Single System.Single::Min(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Min(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Min(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Min(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MinNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MinNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MinNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MinNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MinNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MinNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MinNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MinNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MinNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MinNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MinNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Decimal::Sign(System.Decimal)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Byte::Sign(System.Byte)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Double::Sign(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int16::Sign(System.Int16)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int64::Sign(System.Int64)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.IntPtr::Sign(System.IntPtr)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.SByte::Sign(System.SByte)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Single::Sign(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt16::Sign(System.UInt16)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt32::Sign(System.UInt32)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt64::Sign(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Decimal System.Decimal::Abs(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Abs(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Double System.Double::Abs(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int16 System.Int16::Abs(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int64 System.Int64::Abs(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.IntPtr System.IntPtr::Abs(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.SByte System.SByte::Abs(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Single System.Single::Abs(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Abs(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Abs(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Abs(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Decimal System.Decimal::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Byte System.Byte::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Double System.Double::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int16 System.Int16::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int64 System.Int64::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.SByte System.SByte::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Single System.Single::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Byte System.Byte::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Double System.Double::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int16 System.Int16::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int64 System.Int64::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.SByte System.SByte::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Single System.Single::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Byte System.Byte::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Double System.Double::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int16 System.Int16::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int64 System.Int64::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.SByte System.SByte::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Single System.Single::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Decimal::IsCanonical(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsCanonical(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsCanonical(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsCanonical(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsCanonical(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsCanonical(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsCanonical(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsCanonical(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsCanonical(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsCanonical(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsCanonical(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsComplexNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsComplexNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsComplexNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsComplexNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsComplexNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsComplexNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsComplexNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsComplexNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsComplexNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsComplexNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsComplexNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsEvenInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Byte::IsEvenInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Double::IsEvenInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int16::IsEvenInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int64::IsEvenInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.IntPtr::IsEvenInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.SByte::IsEvenInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Single::IsEvenInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt16::IsEvenInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt32::IsEvenInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt64::IsEvenInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsFinite(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsFinite(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Double::IsFinite(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsFinite(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsFinite(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsFinite(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsFinite(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Single::IsFinite(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsFinite(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsFinite(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsFinite(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsImaginaryNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsImaginaryNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsImaginaryNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsImaginaryNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsImaginaryNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsImaginaryNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsImaginaryNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsImaginaryNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsImaginaryNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsImaginaryNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsImaginaryNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Double::IsInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Single::IsInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Double::IsInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Single::IsInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNaN(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNaN(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Double::IsNaN(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNaN(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNaN(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNaN(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNaN(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Single::IsNaN(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNaN(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNaN(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNaN(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Decimal::IsNegative(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegative(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Double::IsNegative(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int16::IsNegative(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int64::IsNegative(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.IntPtr::IsNegative(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.SByte::IsNegative(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Single::IsNegative(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegative(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegative(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegative(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNegativeInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegativeInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Double::IsNegativeInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNegativeInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNegativeInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNegativeInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNegativeInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Single::IsNegativeInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegativeInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegativeInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegativeInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNormal(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNormal(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Double::IsNormal(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNormal(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNormal(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNormal(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNormal(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Single::IsNormal(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNormal(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNormal(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNormal(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsOddInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Byte::IsOddInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Double::IsOddInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int16::IsOddInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int64::IsOddInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.IntPtr::IsOddInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.SByte::IsOddInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Single::IsOddInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt16::IsOddInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt32::IsOddInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt64::IsOddInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Decimal::IsPositive(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositive(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Double::IsPositive(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int16::IsPositive(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int64::IsPositive(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.IntPtr::IsPositive(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.SByte::IsPositive(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Single::IsPositive(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositive(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositive(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositive(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsPositiveInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositiveInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Double::IsPositiveInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsPositiveInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsPositiveInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsPositiveInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsPositiveInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Single::IsPositiveInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositiveInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositiveInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositiveInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsRealNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsRealNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Double::IsRealNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsRealNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsRealNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsRealNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsRealNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Single::IsRealNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsRealNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsRealNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsRealNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsSubnormal(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsSubnormal(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Double::IsSubnormal(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsSubnormal(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsSubnormal(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsSubnormal(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsSubnormal(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Single::IsSubnormal(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsSubnormal(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsSubnormal(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsSubnormal(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsZero(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsZero(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsZero(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsZero(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsZero(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsZero(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsZero(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsZero(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsZero(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsZero(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsZero(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::MaxMagnitude(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitude(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Double System.Double::MaxMagnitude(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int16 System.Int16::MaxMagnitude(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int64 System.Int64::MaxMagnitude(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::MaxMagnitude(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.SByte System.SByte::MaxMagnitude(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Single System.Single::MaxMagnitude(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitude(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitude(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitude(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MaxMagnitudeNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitudeNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MaxMagnitudeNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MaxMagnitudeNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MaxMagnitudeNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MaxMagnitudeNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MaxMagnitudeNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MaxMagnitudeNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitudeNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitudeNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitudeNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::MinMagnitude(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitude(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Double System.Double::MinMagnitude(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int16 System.Int16::MinMagnitude(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int64 System.Int64::MinMagnitude(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::MinMagnitude(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.SByte System.SByte::MinMagnitude(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Single System.Single::MinMagnitude(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitude(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitude(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitude(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MinMagnitudeNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitudeNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MinMagnitudeNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MinMagnitudeNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MinMagnitudeNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MinMagnitudeNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MinMagnitudeNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MinMagnitudeNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitudeNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitudeNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitudeNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_LeftShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_LeftShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_LeftShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_LeftShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_LeftShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_LeftShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_LeftShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_LeftShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_RightShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_RightShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_RightShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_RightShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_RightShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_RightShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_RightShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_RightShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_UnsignedRightShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_UnsignedRightShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_UnsignedRightShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_UnsignedRightShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_UnsignedRightShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_UnsignedRightShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_UnsignedRightShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_UnsignedRightShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Subtraction(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.ISubtractionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Subtraction(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Subtraction(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Subtraction(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_Subtraction(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Subtraction(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.ISubtractionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Subtraction(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Subtraction(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Subtraction(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Subtraction(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedSubtraction(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedSubtraction(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedSubtraction(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_CheckedSubtraction(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedSubtraction(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedSubtraction(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedSubtraction(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedSubtraction(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_UnaryNegation(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Double System.Double::System.Numerics.IUnaryNegationOperators&lt;System.Double,System.Double&gt;.op_UnaryNegation(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_UnaryNegation(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_UnaryNegation(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_UnaryNegation(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_UnaryNegation(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Single System.Single::System.Numerics.IUnaryNegationOperators&lt;System.Single,System.Single&gt;.op_UnaryNegation(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryNegation(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryNegation(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryNegation(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_CheckedUnaryNegation(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_CheckedUnaryNegation(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_CheckedUnaryNegation(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_CheckedUnaryNegation(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_CheckedUnaryNegation(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_CheckedUnaryNegation(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_CheckedUnaryNegation(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_CheckedUnaryNegation(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryPlusOperators&lt;System.Byte,System.Byte&gt;.op_UnaryPlus(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Double System.Double::System.Numerics.IUnaryPlusOperators&lt;System.Double,System.Double&gt;.op_UnaryPlus(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryPlusOperators&lt;System.Int16,System.Int16&gt;.op_UnaryPlus(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryPlusOperators&lt;System.Int64,System.Int64&gt;.op_UnaryPlus(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryPlusOperators&lt;nint,nint&gt;.op_UnaryPlus(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryPlusOperators&lt;System.SByte,System.SByte&gt;.op_UnaryPlus(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Single System.Single::System.Numerics.IUnaryPlusOperators&lt;System.Single,System.Single&gt;.op_UnaryPlus(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryPlusOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryPlus(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryPlusOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryPlus(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryPlusOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryPlus(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IFloatingPoint`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Decimal System.Decimal::Ceiling(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Double System.Double::Ceiling(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Single System.Single::Ceiling(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Decimal System.Decimal::Floor(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Double System.Double::Floor(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Single System.Single::Floor(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Decimal System.Decimal::Round(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Double System.Double::Round(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Single System.Single::Round(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Double System.Double::Round(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Single System.Single::Round(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Double System.Double::Round(System.Double,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Single System.Single::Round(System.Single,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Double System.Double::Round(System.Double,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Single System.Single::Round(System.Single,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Decimal System.Decimal::Truncate(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Double System.Double::Truncate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Single System.Single::Truncate(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IExponentialFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::ExpM1(TSelf)" e="Method:System.Double System.Double::ExpM1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::ExpM1(TSelf)" e="Method:System.Single System.Single::ExpM1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2(TSelf)" e="Method:System.Double System.Double::Exp2(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2(TSelf)" e="Method:System.Single System.Single::Exp2(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2M1(TSelf)" e="Method:System.Double System.Double::Exp2M1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2M1(TSelf)" e="Method:System.Single System.Single::Exp2M1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10(TSelf)" e="Method:System.Double System.Double::Exp10(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10(TSelf)" e="Method:System.Single System.Single::Exp10(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10M1(TSelf)" e="Method:System.Double System.Double::Exp10M1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10M1(TSelf)" e="Method:System.Single System.Single::Exp10M1(System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IFloatingPointIeee754`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Lerp(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::Lerp(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Lerp(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::Lerp(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalEstimate(TSelf)" e="Method:System.Double System.Double::ReciprocalEstimate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalEstimate(TSelf)" e="Method:System.Single System.Single::ReciprocalEstimate(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalSqrtEstimate(TSelf)" e="Method:System.Double System.Double::ReciprocalSqrtEstimate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalSqrtEstimate(TSelf)" e="Method:System.Single System.Single::ReciprocalSqrtEstimate(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ScaleB(TSelf,System.Int32)" e="Method:System.Double System.Double::ScaleB(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ScaleB(TSelf,System.Int32)" e="Method:System.Single System.Single::ScaleB(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Acosh(TSelf)" e="Method:System.Double System.Double::Acosh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Acosh(TSelf)" e="Method:System.Single System.Single::Acosh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Asinh(TSelf)" e="Method:System.Double System.Double::Asinh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Asinh(TSelf)" e="Method:System.Single System.Single::Asinh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Atanh(TSelf)" e="Method:System.Double System.Double::Atanh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Atanh(TSelf)" e="Method:System.Single System.Single::Atanh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Cosh(TSelf)" e="Method:System.Double System.Double::Cosh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Cosh(TSelf)" e="Method:System.Single System.Single::Cosh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Sinh(TSelf)" e="Method:System.Double System.Double::Sinh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Sinh(TSelf)" e="Method:System.Single System.Single::Sinh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Tanh(TSelf)" e="Method:System.Double System.Double::Tanh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Tanh(TSelf)" e="Method:System.Single System.Single::Tanh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf)" e="Method:System.Double System.Double::Log(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf)" e="Method:System.Single System.Single::Log(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf,TSelf)" e="Method:System.Double System.Double::Log(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf,TSelf)" e="Method:System.Single System.Single::Log(System.Single,System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.ILogarithmicFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::LogP1(TSelf)" e="Method:System.Double System.Double::LogP1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::LogP1(TSelf)" e="Method:System.Single System.Single::LogP1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log2P1(TSelf)" e="Method:System.Double System.Double::Log2P1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log2P1(TSelf)" e="Method:System.Single System.Single::Log2P1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10(TSelf)" e="Method:System.Double System.Double::Log10(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10(TSelf)" e="Method:System.Single System.Single::Log10(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10P1(TSelf)" e="Method:System.Double System.Double::Log10P1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10P1(TSelf)" e="Method:System.Single System.Single::Log10P1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IPowerFunctions`1::Pow(TSelf,TSelf)" e="Method:System.Double System.Double::Pow(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IPowerFunctions`1::Pow(TSelf,TSelf)" e="Method:System.Single System.Single::Pow(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Cbrt(TSelf)" e="Method:System.Double System.Double::Cbrt(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Cbrt(TSelf)" e="Method:System.Single System.Single::Cbrt(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Hypot(TSelf,TSelf)" e="Method:System.Double System.Double::Hypot(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Hypot(TSelf,TSelf)" e="Method:System.Single System.Single::Hypot(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::RootN(TSelf,System.Int32)" e="Method:System.Double System.Double::RootN(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::RootN(TSelf,System.Int32)" e="Method:System.Single System.Single::RootN(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Sqrt(TSelf)" e="Method:System.Double System.Double::Sqrt(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Sqrt(TSelf)" e="Method:System.Single System.Single::Sqrt(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Acos(TSelf)" e="Method:System.Double System.Double::Acos(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Acos(TSelf)" e="Method:System.Single System.Single::Acos(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AcosPi(TSelf)" e="Method:System.Double System.Double::AcosPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AcosPi(TSelf)" e="Method:System.Single System.Single::AcosPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Asin(TSelf)" e="Method:System.Double System.Double::Asin(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Asin(TSelf)" e="Method:System.Single System.Single::Asin(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AsinPi(TSelf)" e="Method:System.Double System.Double::AsinPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AsinPi(TSelf)" e="Method:System.Single System.Single::AsinPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Atan(TSelf)" e="Method:System.Double System.Double::Atan(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Atan(TSelf)" e="Method:System.Single System.Single::Atan(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AtanPi(TSelf)" e="Method:System.Double System.Double::AtanPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AtanPi(TSelf)" e="Method:System.Single System.Single::AtanPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Cos(TSelf)" e="Method:System.Double System.Double::Cos(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Cos(TSelf)" e="Method:System.Single System.Single::Cos(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::CosPi(TSelf)" e="Method:System.Double System.Double::CosPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::CosPi(TSelf)" e="Method:System.Single System.Single::CosPi(System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.ITrigonometricFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::DegreesToRadians(TSelf)" e="Method:System.Double System.Double::DegreesToRadians(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::DegreesToRadians(TSelf)" e="Method:System.Single System.Single::DegreesToRadians(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::RadiansToDegrees(TSelf)" e="Method:System.Double System.Double::RadiansToDegrees(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::RadiansToDegrees(TSelf)" e="Method:System.Single System.Single::RadiansToDegrees(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Sin(TSelf)" e="Method:System.Double System.Double::Sin(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Sin(TSelf)" e="Method:System.Single System.Single::Sin(System.Single)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCos(TSelf)" e="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCos(System.Double)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCos(TSelf)" e="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCos(System.Single)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCosPi(TSelf)" e="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCosPi(System.Double)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCosPi(TSelf)" e="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCosPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::SinPi(TSelf)" e="Method:System.Double System.Double::SinPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::SinPi(TSelf)" e="Method:System.Single System.Single::SinPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Tan(TSelf)" e="Method:System.Double System.Double::Tan(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Tan(TSelf)" e="Method:System.Single System.Single::Tan(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::TanPi(TSelf)" e="Method:System.Double System.Double::TanPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::TanPi(TSelf)" e="Method:System.Single System.Single::TanPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp(TSelf)" e="Method:System.Double System.Double::Exp(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp(TSelf)" e="Method:System.Single System.Single::Exp(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_Epsilon()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_Epsilon()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NaN()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NaN()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeInfinity()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeInfinity()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeZero()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeZero()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_PositiveInfinity()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_PositiveInfinity()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2(TSelf,TSelf)" e="Method:System.Double System.Double::Atan2(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2(TSelf,TSelf)" e="Method:System.Single System.Single::Atan2(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2Pi(TSelf,TSelf)" e="Method:System.Double System.Double::Atan2Pi(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2Pi(TSelf,TSelf)" e="Method:System.Single System.Single::Atan2Pi(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitDecrement(TSelf)" e="Method:System.Double System.Double::BitDecrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitDecrement(TSelf)" e="Method:System.Single System.Single::BitDecrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitIncrement(TSelf)" e="Method:System.Double System.Double::BitIncrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitIncrement(TSelf)" e="Method:System.Single System.Single::BitIncrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::FusedMultiplyAdd(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::FusedMultiplyAdd(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::FusedMultiplyAdd(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::FusedMultiplyAdd(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Ieee754Remainder(TSelf,TSelf)" e="Method:System.Double System.Double::Ieee754Remainder(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Ieee754Remainder(TSelf,TSelf)" e="Method:System.Single System.Single::Ieee754Remainder(System.Single,System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPointIeee754`1::ILogB(TSelf)" e="Method:System.Int32 System.Double::ILogB(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPointIeee754`1::ILogB(TSelf)" e="Method:System.Int32 System.Single::ILogB(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Single::ILogB(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::ILogB(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Single System.Single::Ieee754Remainder(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Ieee754Remainder(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::FusedMultiplyAdd(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::FusedMultiplyAdd(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::BitIncrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::BitIncrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::BitDecrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::BitDecrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan2Pi(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan2Pi(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan2(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan2(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.PositiveInfinity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.PositiveInfinity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NegativeZero()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NegativeZero()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NegativeInfinity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NegativeInfinity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NaN()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NaN()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.Epsilon()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.Epsilon()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" e="Property:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" e="Property:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" e="Property:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::TanPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::TanPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Tan(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Tan(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::SinPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::SinPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCosPi(System.Single)" e="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.TupleElementNamesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeDef:System.Runtime.CompilerServices.TupleElementNamesAttribute" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Int32 System.ValueTuple`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.String System.ValueTuple`2::ToString()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Int32 System.ValueTuple`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.String System.ValueTuple`2::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueTuple`2::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueTuple`2::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCosPi(System.Double)" e="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCos(System.Single)" e="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCos(System.Double)" e="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="Method:System.Single System.Single::Sin(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sin(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::RadiansToDegrees(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::RadiansToDegrees(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::DegreesToRadians(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::DegreesToRadians(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.ITrigonometricFunctions`1" e="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::CosPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::CosPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cos(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cos(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AtanPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AtanPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AsinPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AsinPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Asin(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Asin(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AcosPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AcosPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Acos(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Acos(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Sqrt(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sqrt(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::RootN(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::RootN(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Hypot(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Hypot(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cbrt(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cbrt(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Pow(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Pow(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log10P1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log10P1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log10(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log10(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log2P1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log2P1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::LogP1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::LogP1(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.ILogarithmicFunctions`1" e="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::Log(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Tanh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Tanh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Sinh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sinh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cosh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cosh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atanh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atanh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Asinh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Asinh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Acosh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Acosh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ScaleB(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ScaleB(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ReciprocalSqrtEstimate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ReciprocalSqrtEstimate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ReciprocalEstimate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ReciprocalEstimate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Lerp(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Lerp(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.IFloatingPointIeee754`1" e="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="Method:System.Single System.Single::Exp10M1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp10M1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp10(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp10(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp2M1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp2M1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp2(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp2(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ExpM1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ExpM1(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.IExponentialFunctions`1" e="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.Tau()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.Tau()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.Tau()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.Pi()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.Pi()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.Pi()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.E()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.E()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.E()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Single System.Single::Truncate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Truncate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Truncate(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.Int32,System.MidpointRounding)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.Int32 System.MidpointRounding::value__" />
	<edge mark="1" b="Field:System.Int32 System.MidpointRounding::value__" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.Int32 System.MidpointRounding::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToEven" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToEven" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToEven" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToZero" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.Int32,System.MidpointRounding)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32,System.MidpointRounding)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.MidpointRounding)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.MidpointRounding)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.MidpointRounding)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Floor(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Floor(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Floor(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Ceiling(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Ceiling(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Ceiling(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge b="TypeDef:System.Numerics.IFloatingPoint`1" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Int32 System.Globalization.NumberStyles::value__" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.NumberStyles::value__" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.NumberStyles::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryPlusOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryPlus(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryPlusOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryPlus(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryPlusOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryPlus(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IUnaryPlusOperators&lt;System.Single,System.Single&gt;.op_UnaryPlus(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryPlusOperators&lt;System.SByte,System.SByte&gt;.op_UnaryPlus(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryPlusOperators&lt;nint,nint&gt;.op_UnaryPlus(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryPlusOperators&lt;System.Int64,System.Int64&gt;.op_UnaryPlus(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryPlusOperators&lt;System.Int16,System.Int16&gt;.op_UnaryPlus(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IUnaryPlusOperators&lt;System.Double,System.Double&gt;.op_UnaryPlus(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryPlusOperators&lt;System.Byte,System.Byte&gt;.op_UnaryPlus(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_CheckedUnaryNegation(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_CheckedUnaryNegation(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_CheckedUnaryNegation(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_CheckedUnaryNegation(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_CheckedUnaryNegation(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_CheckedUnaryNegation(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_CheckedUnaryNegation(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_CheckedUnaryNegation(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryNegation(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryNegation(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryNegation(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IUnaryNegationOperators&lt;System.Single,System.Single&gt;.op_UnaryNegation(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_UnaryNegation(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_UnaryNegation(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_UnaryNegation(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_UnaryNegation(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IUnaryNegationOperators&lt;System.Double,System.Double&gt;.op_UnaryNegation(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_UnaryNegation(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedSubtraction(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedSubtraction(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedSubtraction(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedSubtraction(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_CheckedSubtraction(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedSubtraction(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedSubtraction(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedSubtraction(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Subtraction(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Subtraction(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Subtraction(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISubtractionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Subtraction(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Subtraction(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_Subtraction(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Subtraction(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Subtraction(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISubtractionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Subtraction(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Subtraction(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_UnsignedRightShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_UnsignedRightShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_UnsignedRightShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_UnsignedRightShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_UnsignedRightShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_UnsignedRightShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_UnsignedRightShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_UnsignedRightShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_RightShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_RightShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_RightShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_RightShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_RightShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_RightShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_RightShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_RightShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_LeftShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_LeftShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_LeftShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_LeftShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_LeftShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_LeftShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_LeftShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_LeftShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitudeNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitudeNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitudeNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinMagnitudeNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MinMagnitudeNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MinMagnitudeNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MinMagnitudeNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MinMagnitudeNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinMagnitudeNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitudeNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MinMagnitudeNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitude(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitude(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitude(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinMagnitude(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::MinMagnitude(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::MinMagnitude(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::MinMagnitude(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::MinMagnitude(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinMagnitude(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitude(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::MinMagnitude(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitudeNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitudeNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitudeNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxMagnitudeNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MaxMagnitudeNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MaxMagnitudeNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MaxMagnitudeNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MaxMagnitudeNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxMagnitudeNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitudeNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MaxMagnitudeNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitude(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitude(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitude(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxMagnitude(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::MaxMagnitude(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::MaxMagnitude(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::MaxMagnitude(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::MaxMagnitude(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxMagnitude(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitude(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::MaxMagnitude(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsZero(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsZero(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsZero(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsZero(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsZero(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsZero(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsZero(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsZero(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsZero(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsZero(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsZero(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsSubnormal(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsSubnormal(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsSubnormal(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsSubnormal(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsSubnormal(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsSubnormal(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsSubnormal(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsSubnormal(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsSubnormal(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsSubnormal(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsSubnormal(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsRealNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsRealNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsRealNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsRealNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsRealNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsRealNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsRealNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsRealNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsRealNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsRealNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsRealNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositiveInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositiveInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositiveInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPositiveInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsPositiveInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsPositiveInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsPositiveInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsPositiveInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPositiveInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositiveInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsPositiveInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositive(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositive(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositive(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPositive(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsPositive(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsPositive(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsPositive(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsPositive(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPositive(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositive(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsPositive(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsOddInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsOddInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsOddInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsOddInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsOddInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsOddInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsOddInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsOddInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsOddInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsOddInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsOddInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNormal(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNormal(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNormal(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNormal(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNormal(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNormal(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNormal(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNormal(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNormal(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNormal(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNormal(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegativeInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegativeInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegativeInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNegativeInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNegativeInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNegativeInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNegativeInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNegativeInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNegativeInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegativeInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNegativeInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegative(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegative(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegative(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNegative(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsNegative(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsNegative(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsNegative(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsNegative(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNegative(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegative(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsNegative(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNaN(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNaN(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNaN(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNaN(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNaN(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNaN(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNaN(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNaN(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNaN(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNaN(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNaN(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsImaginaryNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsImaginaryNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsImaginaryNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsImaginaryNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsImaginaryNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsImaginaryNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsImaginaryNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsImaginaryNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsImaginaryNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsImaginaryNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsImaginaryNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsFinite(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsFinite(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsFinite(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsFinite(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsFinite(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsFinite(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsFinite(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsFinite(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsFinite(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsFinite(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsFinite(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsEvenInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsEvenInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsEvenInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsEvenInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsEvenInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsEvenInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsEvenInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsEvenInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsEvenInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsEvenInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsEvenInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsComplexNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsComplexNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsComplexNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsComplexNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsComplexNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsComplexNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsComplexNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsComplexNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsComplexNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsComplexNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsComplexNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsCanonical(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsCanonical(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsCanonical(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsCanonical(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsCanonical(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsCanonical(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsCanonical(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsCanonical(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsCanonical(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsCanonical(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsCanonical(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateTruncating(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateTruncating(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateTruncating(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int16 System.Int16::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateTruncating(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateTruncating(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateTruncating(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" e="TypeDef:System.Decimal" />
	<edge b="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateSaturating(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateSaturating(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateSaturating(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int16 System.Int16::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateSaturating(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateSaturating(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateSaturating(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" e="TypeDef:System.Decimal" />
	<edge b="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateChecked(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateChecked(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateChecked(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int16 System.Int16::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateChecked(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateChecked(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateChecked(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateChecked(TOther)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Abs(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Abs(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Abs(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Abs(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Abs(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Abs(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Abs(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Abs(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Abs(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Abs(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Abs(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" e="Property:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" e="Property:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" e="Property:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" e="Property:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.Zero()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" e="Property:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.Zero()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" e="Property:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.Zero()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" e="Property:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" e="Property:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" e="Property:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.Zero()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" e="Property:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Zero()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" e="Property:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.Zero()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" e="Property:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" e="Property:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" e="Property:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" e="Property:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" e="Property:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" e="Property:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" e="Property:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" e="Property:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" e="Property:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" e="Property:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" e="Property:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" e="Property:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.One()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" e="Property:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.One()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" e="Property:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.One()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" e="Property:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.One()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" e="Property:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.One()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" e="Property:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.One()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" e="Property:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.One()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" e="Property:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.One()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" e="Property:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.One()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" e="Property:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.One()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" e="Property:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.One()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::Sign(System.UInt64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::Sign(System.UInt32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::Sign(System.UInt16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::Sign(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::Sign(System.SByte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::Sign(System.IntPtr)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::Sign(System.Int64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::Sign(System.Int16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::Sign(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::Sign(System.Byte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::Sign(System.Decimal)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MinNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MinNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MinNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MinNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MinNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MinNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MinNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MinNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MinNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Min(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Min(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Min(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Min(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Min(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Min(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Min(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Min(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Min(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Min(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Min(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MaxNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MaxNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MaxNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MaxNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MaxNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MaxNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MaxNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MaxNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MaxNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Max(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Max(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Max(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Max(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Max(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Max(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Max(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Max(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Max(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Max(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Max(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.CopySign(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.CopySign(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.CopySign(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::CopySign(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::CopySign(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CopySign(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CopySign(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CopySign(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::CopySign(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.CopySign(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CopySign(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Clamp(System.UInt64,System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Clamp(System.UInt32,System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Clamp(System.UInt16,System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Clamp(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Clamp(System.SByte,System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Clamp(System.IntPtr,System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Clamp(System.Int64,System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Clamp(System.Int16,System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Clamp(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Clamp(System.Byte,System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Clamp(System.Decimal,System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedMultiply(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedMultiply(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedMultiply(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedMultiply(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_CheckedMultiply(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedMultiply(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedMultiply(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedMultiply(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Multiply(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Multiply(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Multiply(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplyOperators&lt;System.Single,System.Single,System.Single&gt;.op_Multiply(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Multiply(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_Multiply(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Multiply(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Multiply(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplyOperators&lt;System.Double,System.Double,System.Double&gt;.op_Multiply(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Multiply(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" e="Property:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" e="Property:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" e="Property:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" e="Property:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" e="Property:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" e="Property:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" e="Property:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IModulusOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Modulus(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IModulusOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Modulus(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IModulusOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Modulus(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IModulusOperators&lt;System.Single,System.Single,System.Single&gt;.op_Modulus(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IModulusOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Modulus(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IModulusOperators&lt;nint,nint,nint&gt;.op_Modulus(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IModulusOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Modulus(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IModulusOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Modulus(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IModulusOperators&lt;System.Double,System.Double,System.Double&gt;.op_Modulus(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IModulusOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Modulus(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_CheckedIncrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_CheckedIncrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_CheckedIncrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_CheckedIncrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_CheckedIncrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_CheckedIncrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_CheckedIncrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_CheckedIncrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_Increment(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_Increment(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_Increment(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IIncrementOperators&lt;System.Single&gt;.op_Increment(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_Increment(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_Increment(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_Increment(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_Increment(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IIncrementOperators&lt;System.Double&gt;.op_Increment(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_Increment(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Inequality(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Inequality(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Inequality(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Inequality(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Inequality(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Inequality(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Inequality(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Equality(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Equality(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Equality(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Equality(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Equality(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Equality(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Equality(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDivisionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Division(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDivisionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Division(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDivisionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Division(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IDivisionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Division(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDivisionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Division(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDivisionOperators&lt;nint,nint,nint&gt;.op_Division(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDivisionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Division(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDivisionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Division(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IDivisionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Division(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDivisionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Division(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_CheckedDecrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_CheckedDecrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_CheckedDecrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_CheckedDecrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_CheckedDecrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_CheckedDecrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_CheckedDecrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_CheckedDecrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_Decrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_Decrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_Decrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IDecrementOperators&lt;System.Single&gt;.op_Decrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_Decrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_Decrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_Decrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_Decrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IDecrementOperators&lt;System.Double&gt;.op_Decrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_Decrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThanOrEqual(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThanOrEqual(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThanOrEqual(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThan(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThan(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThan(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThan(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThan(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThan(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThan(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThan(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThanOrEqual(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThanOrEqual(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThanOrEqual(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThanOrEqual(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThanOrEqual(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThanOrEqual(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThanOrEqual(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThanOrEqual(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThan(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThan(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThan(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThan(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThan(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThan(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThan(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThan(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_OnesComplement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_OnesComplement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_OnesComplement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_OnesComplement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_OnesComplement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_OnesComplement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_OnesComplement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_OnesComplement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_OnesComplement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_OnesComplement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_ExclusiveOr(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_ExclusiveOr(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_ExclusiveOr(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_ExclusiveOr(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_ExclusiveOr(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_ExclusiveOr(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_ExclusiveOr(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_ExclusiveOr(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_ExclusiveOr(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_ExclusiveOr(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseOr(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseOr(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseOr(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseOr(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseOr(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseOr(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseOr(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseOr(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseOr(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseOr(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseAnd(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseAnd(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseAnd(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseAnd(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseAnd(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseAnd(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseAnd(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseAnd(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseAnd(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseAnd(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Log2(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Log2(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Log2(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Log2(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Log2(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Log2(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Log2(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Log2(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Log2(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Log2(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsPow2(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsPow2(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsPow2(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPow2(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsPow2(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsPow2(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsPow2(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsPow2(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPow2(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsPow2(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" e="Property:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" e="Property:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" e="Property:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" e="Property:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" e="Property:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" e="Property:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" e="Property:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" e="Property:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" e="Property:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::TrailingZeroCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::TrailingZeroCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::TrailingZeroCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::TrailingZeroCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::TrailingZeroCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::TrailingZeroCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::TrailingZeroCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::TrailingZeroCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::RotateRight(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::RotateRight(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::RotateRight(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::RotateRight(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::RotateRight(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::RotateRight(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::RotateRight(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::RotateRight(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::RotateLeft(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::RotateLeft(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::RotateLeft(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::RotateLeft(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::RotateLeft(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::RotateLeft(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::RotateLeft(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::RotateLeft(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::PopCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::PopCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::PopCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::PopCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::PopCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::PopCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::PopCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::PopCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::LeadingZeroCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::LeadingZeroCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::LeadingZeroCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::LeadingZeroCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::LeadingZeroCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::LeadingZeroCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::LeadingZeroCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::LeadingZeroCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt; System.UInt64::DivRem(System.UInt64,System.UInt64)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt; System.UInt32::DivRem(System.UInt32,System.UInt32)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt; System.UInt16::DivRem(System.UInt16,System.UInt16)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="Method:System.ValueTuple`2&lt;System.SByte,System.SByte&gt; System.SByte::DivRem(System.SByte,System.SByte)" e="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt; System.IntPtr::DivRem(System.IntPtr,System.IntPtr)" e="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int64,System.Int64&gt; System.Int64::DivRem(System.Int64,System.Int64)" e="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int16,System.Int16&gt; System.Int16::DivRem(System.Int16,System.Int16)" e="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.ValueTuple`2&lt;System.Byte,System.Byte&gt; System.Byte::DivRem(System.Byte,System.Byte)" e="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" e="Property:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" e="Property:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" e="Property:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" e="Property:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" e="Property:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" e="Property:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" e="Property:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" e="Property:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" e="Property:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" e="Property:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" e="Property:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" e="Property:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedAddition(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedAddition(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedAddition(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedAddition(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_CheckedAddition(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedAddition(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedAddition(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedAddition(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Addition(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Addition(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Addition(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Addition(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Addition(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_Addition(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Addition(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Addition(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Addition(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Addition(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Addition(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeDef:System.ISpanFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Single::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.SByte::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int64::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int16::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Double::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="TypeDef:System.IFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Byte::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.IParsable&lt;System.Char&gt;.Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::CompareTo(System.UInt64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::CompareTo(System.UInt32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::CompareTo(System.UInt16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::CompareTo(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::CompareTo(System.SByte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::CompareTo(System.IntPtr)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::CompareTo(System.Int64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CompareTo(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::CompareTo(System.Int16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::CompareTo(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::CompareTo(System.Char)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::CompareTo(System.Byte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::CompareTo(System.Decimal)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Text.StringRuneEnumerator::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void System.Text.StringRuneEnumerator::System.Collections.IEnumerator.Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.IEnumerator::Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Text.StringRuneEnumerator::System.IDisposable.Dispose()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="TypeDef:System.IDisposable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Text.StringRuneEnumerator::System.IDisposable.Dispose()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.IDisposable::Dispose()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Text.StringRuneEnumerator::System.Collections.IEnumerator.get_Current()" e="Property:System.Object System.Text.StringRuneEnumerator::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Object System.Text.StringRuneEnumerator::System.Collections.IEnumerator.get_Current()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Object System.Text.StringRuneEnumerator::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="Property:System.Object System.Collections.IEnumerator::Current()" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.Text.StringRuneEnumerator::MoveNext()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Text.Rune System.Text.StringRuneEnumerator::get_Current()" e="Property:System.Text.Rune System.Text.StringRuneEnumerator::Current()" />
	<edge mark="1" b="Method:System.Text.Rune System.Text.StringRuneEnumerator::get_Current()" e="TypeDef:System.Text.Rune" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" e="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" />
	<edge b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" e="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" e="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" />
	<edge b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" e="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="Property:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly()" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="Property:System.Boolean System.Collections.Generic.ICollection`1::IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="TypeDef:System.IUtf8SpanParsable`1" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryPlusOperators&lt;System.Char,System.Char&gt;.op_UnaryPlus(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_CheckedUnaryNegation(System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.IUnaryNegationOperators`2" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TResult&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_UnaryNegation(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedSubtraction(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.ISubtractionOperators`3" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Subtraction(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_UnsignedRightShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_RightShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_LeftShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitudeNumber(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitude(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitudeNumber(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitude(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsZero(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsSubnormal(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsRealNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositiveInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsPositive(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositive(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsOddInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNormal(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegativeInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsNegative(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegative(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNaN(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsImaginaryNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsFinite(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsEvenInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsComplexNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsCanonical(System.Char)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.Int32::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateTruncating(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Int32 System.Int32::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateSaturating(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Int32 System.Int32::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateChecked(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="TypeDef:System.Numerics.INumberBase`1" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Abs(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Abs(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" e="Property:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Zero()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" e="Property:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.One()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" e="Property:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.One()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Sign(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge b="TypeDef:System.Numerics.INumber`1" e="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedMultiply(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.IMultiplyOperators`3" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_Multiply(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" e="Property:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" e="Property:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IModulusOperators&lt;System.Char,System.Char,System.Char&gt;.op_Modulus(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_CheckedIncrement(System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.IIncrementOperators`1" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_Increment(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Inequality(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Equality(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDivisionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Division(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_CheckedDecrement(System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.IDecrementOperators`1" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_Decrement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThanOrEqual(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThan(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThanOrEqual(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThan(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_OnesComplement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_ExclusiveOr(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseOr(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseAnd(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Log2(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.Log2(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsPow2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.IsPow2(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" e="Property:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" e="Property:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Property:TSelf System.Numerics.IBinaryNumber`1::AllBitsSet()" />
	<edge b="TypeDef:System.Numerics.IBinaryNumber`1" e="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TrailingZeroCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateRight(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateLeft(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::PopCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.PopCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.LeadingZeroCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" e="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="TypeSpec:System.ValueTuple`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge b="TypeDef:System.Numerics.IBinaryInteger`1" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedAddition(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge b="TypeDef:System.Numerics.IAdditionOperators`3" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int32::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int16::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Char::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Byte::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.TypeCode System.UInt32::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.UInt16::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int32::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int16::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Char::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Byte::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Boolean::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Enum::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt; System.Text.StringRuneEnumerator::System.Collections.Generic.IEnumerable&lt;System.Text.Rune&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;::GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Text.Rune" />
	<edge b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;System.Text.Rune&gt;::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Text.Rune" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt; System.Text.StringRuneEnumerator::System.Collections.Generic.IEnumerable&lt;System.Text.Rune&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Text.Rune&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" />
	<edge b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Text.StringRuneEnumerator::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Text.StringRuneEnumerator::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Single::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.SByte::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int64::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Double::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.TypeCode System.UInt64::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Single::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.SByte::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int64::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Double::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.DateTime::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Decimal::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.SByte System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.SByte)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int64 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.Int64)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int64 System.IntPtr::op_Explicit(System.IntPtr)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::op_Explicit(System.Int64)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Single System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Explicit(System.Single)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_GreaterThanOrEqual(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_LessThanOrEqual(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_GreaterThan(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_LessThan(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_Inequality(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_Equality(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Double System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Explicit(System.Double)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_GreaterThanOrEqual(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_LessThanOrEqual(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_GreaterThan(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_LessThan(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_Inequality(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_Equality(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.UInt64)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_GreaterThanOrEqual(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_GreaterThan(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_LessThanOrEqual(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_LessThan(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_Inequality(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_Equality(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Modulus(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Division(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Multiply(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Subtraction(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Addition(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Decrement(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Increment(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_UnaryNegation(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_UnaryPlus(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt32 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt16 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int16 System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Decimal::op_Explicit(System.Decimal)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.UInt32)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.Int32)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.Char)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.UInt16)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.Int16)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Implicit(System.Byte)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_GreaterThanOrEqual(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_GreaterThan(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_LessThanOrEqual(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_LessThan(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_Inequality(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::op_Equality(System.DateTime,System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.TimeSpan System.DateTime::op_Subtraction(System.DateTime,System.DateTime)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_UnaryNegation(System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_Subtraction(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_UnaryPlus(System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_Addition(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_Multiply(System.TimeSpan,System.Double)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_Multiply(System.Double,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.TimeSpan System.TimeSpan::op_Division(System.TimeSpan,System.Double)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Double System.TimeSpan::op_Division(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_Equality(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_Inequality(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_LessThan(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.DateTime System.DateTime::op_Addition(System.DateTime,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.DateTime System.DateTime::op_Subtraction(System.DateTime,System.TimeSpan)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Int32 System.TimeSpan::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.String System.TimeSpan::ToString()" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Field:System.Int64 System.TimeSpan::_ticks" />
	<edge mark="1" b="Field:System.Int64 System.TimeSpan::_ticks" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Field:System.Int64 System.TimeSpan::_ticks" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Boolean System.TimeSpan::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.Int32 System.TimeSpan::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.TimeSpan" e="Method:System.String System.TimeSpan::ToString()" />
	<edge mark="1" b="Method:System.String System.TimeSpan::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.TimeSpan::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.TimeSpan::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.TimeSpan::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.Int32)" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.UInt32)" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="Method:System.Text.Rune System.Text.Rune::op_Explicit(System.Char)" e="TypeDef:System.Text.Rune" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_GreaterThan(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_LessThan(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_Inequality(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ArraySegment`1::op_Equality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ArraySegment`1::op_Equality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::op_Equality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::op_Equality(System.Text.Rune,System.Text.Rune)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeFieldHandle::op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeFieldHandle::op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::op_Subtraction(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::op_Addition(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::op_Equality(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::op_Explicit(System.IntPtr)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void* System.IntPtr::op_Explicit(System.IntPtr)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge b="Method:System.IntPtr System.IntPtr::op_Explicit(System.Void*)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::op_Explicit(System.Void*)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::op_Explicit(System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MethodInfo::op_Inequality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MethodInfo::op_Equality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MethodBase::op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MethodBase::op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.ConstructorInfo::op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.ConstructorInfo::op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.PropertyInfo::op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.PropertyInfo::op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.EventInfo::op_Inequality(System.Reflection.EventInfo,System.Reflection.EventInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.EventInfo::op_Equality(System.Reflection.EventInfo,System.Reflection.EventInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.FieldInfo::op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.FieldInfo::op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_GreaterThanOrEqual(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_GreaterThan(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_LessThanOrEqual(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_LessThan(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_Inequality(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::op_Equality(System.Guid,System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Assembly::op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Assembly::op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Module::op_Inequality(System.Reflection.Module,System.Reflection.Module)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Module::op_Equality(System.Reflection.Module,System.Reflection.Module)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ArraySegment`1::op_Inequality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ArraySegment`1::op_Inequality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::op_Inequality(System.ArraySegment`1&lt;T&gt;,System.ArraySegment`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ArraySegment`1&lt;T&gt;" e="TypeDef:System.ArraySegment`1" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::op_Inequality(System.Object,System.RuntimeTypeHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::op_Inequality(System.RuntimeTypeHandle,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::op_Equality(System.RuntimeTypeHandle,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::op_Equality(System.Object,System.RuntimeTypeHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.DateTime::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Guid::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.TimeSpan::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Text.Rune::System.IFormattable.ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Text.Rune::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Text.Rune::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.Text.Rune::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TimeSpan::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Guid::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_UnaryNegation(System.TimeSpan)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_Subtraction(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_UnaryPlus(System.TimeSpan)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_Addition(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_Multiply(System.TimeSpan,System.Double)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_Multiply(System.Double,System.TimeSpan)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.TimeSpan System.TimeSpan::op_Division(System.TimeSpan,System.Double)" e="TypeDef:System.TimeSpan" />
	<edge mark="1" b="Method:System.Double System.TimeSpan::op_Division(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_Equality(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_Inequality(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_LessThan(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_GreaterThan(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TimeSpan::op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::op_Addition(System.DateTime,System.TimeSpan)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::op_Subtraction(System.DateTime,System.TimeSpan)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="TypeDef:System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::SkipAssembly(System.Reflection.Assembly)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyDefaultAliasAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyDefaultAliasAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyDefaultAliasAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyDefaultAliasAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.SkipLocalsInitAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.SkipLocalsInitAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.SkipLocalsInitAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.SkipLocalsInitAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullablePublicOnlyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullablePublicOnlyAttribute::.ctor(System.Boolean)" e="TypeDef:System.Runtime.CompilerServices.NullablePublicOnlyAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullablePublicOnlyAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.Versioning.RequiresPreviewFeaturesAttribute::.ctor()" e="TypeDef:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.RequiresPreviewFeaturesAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyTitleAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyTitleAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyTitleAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyTitleAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyProductAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyProductAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyProductAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyProductAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyInformationalVersionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyInformationalVersionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyInformationalVersionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyInformationalVersionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyFileVersionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyFileVersionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyFileVersionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyFileVersionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyDescriptionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyDescriptionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyDescriptionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyDescriptionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyCopyrightAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyCopyrightAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyCopyrightAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyCopyrightAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyConfigurationAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyConfigurationAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyConfigurationAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyConfigurationAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyCompanyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyCompanyAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyCompanyAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyCompanyAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.TargetFrameworkAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::set_FrameworkDisplayName(System.String)" e="Property:System.String System.Runtime.Versioning.TargetFrameworkAttribute::FrameworkDisplayName()" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::set_FrameworkDisplayName(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.Versioning.TargetFrameworkAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Resources.NeutralResourcesLanguageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Resources.NeutralResourcesLanguageAttribute::.ctor(System.String)" e="TypeDef:System.Resources.NeutralResourcesLanguageAttribute" />
	<edge mark="1" b="Method:System.Void System.Resources.NeutralResourcesLanguageAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyMetadataAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyMetadataAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Reflection.AssemblyMetadataAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyMetadataAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute::.ctor(System.Runtime.InteropServices.DllImportSearchPath)" e="TypeDef:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute::.ctor(System.Runtime.InteropServices.DllImportSearchPath)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::SkipAssembly(System.Reflection.Assembly)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.Metadata.MetadataUpdateHandlerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.Metadata.MetadataUpdateHandlerAttribute::.ctor(System.Type)" e="TypeDef:System.Reflection.Metadata.MetadataUpdateHandlerAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.MetadataUpdateHandlerAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RefSafetyRulesAttribute::.ctor(System.Int32)" e="TypeDef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RefSafetyRulesAttribute::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggableAttribute::.ctor(System.Diagnostics.DebuggableAttribute/DebuggingModes)" e="TypeDef:System.Diagnostics.DebuggableAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggableAttribute::.ctor(System.Diagnostics.DebuggableAttribute/DebuggingModes)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows(System.Boolean)" e="Property:System.Boolean System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::WrapNonExceptionThrows()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(System.Int32)" e="TypeDef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(System.Int32)" e="TypeDef:System.Void" />
</dependencies>