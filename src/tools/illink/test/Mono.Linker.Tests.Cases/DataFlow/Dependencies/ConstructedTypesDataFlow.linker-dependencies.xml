<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::RecordConstruction(System.Type,System.Type)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::.ctor(System.Type,System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::Equals(!0,!0)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Int32&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Int32&gt;::Equals(!0,!0)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Int32&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Int32&gt;::GetHashCode(!0)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="TypeDef:System.Text.StringBuilder" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Void System.Text.StringBuilder::.ctor()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::EnsureSufficientExecutionStack()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Type()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Value()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Value()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Value()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Value()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Value()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Value()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Value&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Type()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::get_Type()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::&lt;Type&gt;k__BackingField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable/TypeAndValue::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithAnnotation(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="Property:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::Type()" />
	<edge mark="1" b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" />
	<edge b="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge mark="1" b="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge b="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge mark="1" b="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="TypeDef:System.Object" />
	<edge b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;&lt;Type&gt;j__TPar&gt;::get_Default()" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;&lt;Type&gt;j__TPar&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;&lt;Value&gt;j__TPar&gt;::get_Default()" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge b="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;&lt;Value&gt;j__TPar&gt;::GetHashCode(!0)" />
	<edge mark="1" b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;&lt;Type&gt;j__TPar&gt;::get_Default()" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;&lt;Type&gt;j__TPar&gt;::Equals(!0,!0)" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;&lt;Value&gt;j__TPar&gt;::get_Default()" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge b="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;&lt;Value&gt;j__TPar&gt;::Equals(!0,!0)" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.Boolean &lt;&gt;f__AnonymousType0`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.Int32 &lt;&gt;f__AnonymousType0`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" e="Method:System.String &lt;&gt;f__AnonymousType0`2::ToString()" />
	<edge mark="1" b="Method:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Value()" e="Property:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::Value()" />
	<edge b="Method:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Value()" e="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" />
	<edge b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Value&gt;i__Field" e="Field:&lt;Value&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Value&gt;i__Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithExplicitTypesWithoutAnnotations()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" e="Method:System.Void &lt;&gt;f__AnonymousType0`2::.ctor(&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;System.Type,System.Int32&gt;::get_Type()" e="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::AnonymousTypeWithoutAnnotations()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Int32&gt;::.ctor(!0,!1)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Int32&gt;::Item1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeWithAnnotations(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Int32&gt;::.ctor(!0,!1)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Int32&gt;::Item1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedTypeNamed()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Int32&gt;::.ctor(!0,!1)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Int32&gt;::Item1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/ConstructedVariable::ConstructedType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Object&gt;::.ctor(!0,!1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Object&gt;::.ctor(!0,!1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithMismatchAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordManualWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::.ctor(System.Type,System.Object)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::Equals(!0,!0)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::Equals(!0,!0)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::GetHashCode(!0)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="TypeDef:System.Text.StringBuilder" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Void System.Text.StringBuilder::.ctor()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::EnsureSufficientExecutionStack()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" e="Property:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructClassWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::type" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::type" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::type" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::.ctor(System.Type,System.Object)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::instance" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::instance" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::instance" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructRecordWithAnnotation(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::.ctor(System.Type,System.Object)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::Equals(!0,!0)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance)" e="MemberRef:System.Boolean System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::Equals(!0,!0)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_EqualityContract()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Type&gt;::GetHashCode(!0)" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Collections.Generic.EqualityComparer`1&lt;!0&gt; System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::get_Default()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" e="MemberRef:System.Int32 System.Collections.Generic.EqualityComparer`1&lt;System.Object&gt;::GetHashCode(!0)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="TypeDef:System.Text.StringBuilder" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Void System.Text.StringBuilder::.ctor()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::EnsureSufficientExecutionStack()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::PrintMembers(System.Text.StringBuilder)" e="Method:System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" e="Property:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;instance&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::&lt;type&gt;k__BackingField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Equals(System.Object)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Object&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Object&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="MemberRef:!1 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item2" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariablePropertyReference(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::AnnotatedProperty()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::get_AnnotatedProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::annotatedfield" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::annotatedfield" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::annotatedfield" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="MemberRef:!1 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item2" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableFlowCapture(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Object&gt;" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.ValueTuple`2&lt;System.Type,System.Object&gt; Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::GetInput(System.Int32)" e="MemberRef:System.Void System.ValueTuple`2&lt;System.Type,System.Object&gt;::.ctor(!0,!1)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeSpec:System.ValueTuple`2&lt;System.Type,System.Object&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="MemberRef:!0 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="MemberRef:!1 System.ValueTuple`2&lt;System.Type,System.Object&gt;::Item2" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable::DeconstructVariableNoAnnotation(System.ValueTuple`2&lt;System.Type,System.Object&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::get_Type()" e="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" />
	<edge b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:&lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;:test.exe" e="TypeDef:&lt;&gt;f__AnonymousType0`2:test.exe" />
	<edge mark="1" b="MemberRef:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2&lt;&lt;Type&gt;j__TPar,&lt;Value&gt;j__TPar&gt;::&lt;Type&gt;i__Field" e="Field:&lt;Type&gt;j__TPar &lt;&gt;f__AnonymousType0`2::&lt;Type&gt;i__Field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_type()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual::get_instance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceRecordManual:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Field:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstanceManual::instance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_type()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::Deconstruct(System.Type&amp;,System.Object&amp;)" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance::get_instance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ConstructedTypesDataFlow/DeconstructedVariable/TypeAndInstance:test.exe" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>