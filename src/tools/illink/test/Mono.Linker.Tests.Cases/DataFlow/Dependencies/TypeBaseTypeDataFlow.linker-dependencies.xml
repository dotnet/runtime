<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAllPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAllPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicConstructorsAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicConstructorsAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicNestedTypesAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicNestedTypesAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicParameterlessConstructorIsNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicParameterlessConstructorIsNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicConstructorsAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicConstructorsAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicEventsAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicEventsAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicFieldsAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicFieldsAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicMethodsAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicMethodsAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicNestedTypesAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicNestedTypesAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicPropertiesAreNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicPropertiesAreNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestInterfacesPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestInterfacesPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypesWithForeach(System.Type)" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="Method:System.Collections.IEnumerator System.Array::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumeratePrivatePropertiesOnBaseTypes(System.Type)" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes_Unannotated(System.Type)" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/LoopPatterns::EnumerateInterfacesOnBaseTypes(System.Type)" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Base::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Derived::Test(System.Type,System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/Mixed_Base::PublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoValue()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNull()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAnnotatedAndUnannotated(System.Type,System.Type,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoAnnotation(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNoAnnotation(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicAndNonPublicsPropagatesPublicOnly(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfNonPublicsIsNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestCombinationOfPublicsIsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestInterfacesPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestInterfacesPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestInterfacesPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresInterfaces(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicPropertiesAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicPropertiesAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicPropertiesAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicNestedTypesAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicNestedTypesAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicNestedTypesAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicMethodsAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicMethodsAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicMethodsAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicFieldsAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicFieldsAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicFieldsAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicEventsAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicEventsAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicEventsAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicConstructorsAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicConstructorsAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestNonPublicConstructorsAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicPropertiesPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicParameterlessConstructorIsNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicParameterlessConstructorIsNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicParameterlessConstructorIsNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicNestedTypesAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicNestedTypesAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicNestedTypesAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicMethodsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicFieldsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicEventsPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicConstructorsAreNotPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicConstructorsAreNotPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestPublicConstructorsAreNotPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::Test()" e="Method:System.Void System.TestSystemTypeBase::.ctor()" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.TestSystemTypeBase" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::TestAllPropagated(System.TestSystemTypeBase)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::TestAllPropagated(System.TestSystemTypeBase)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::TestAllPropagated(System.TestSystemTypeBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::TestAllPropagated(System.TestSystemTypeBase)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow/AllPropagatedWithDerivedClass::TestAllPropagated(System.TestSystemTypeBase)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_BaseType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_FullName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Guid System.TestSystemTypeBase::get_GUID()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Namespace()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Name()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetElementType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" />
	<edge b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.TestSystemTypeBase" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="Method:System.Void System.Type::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="Method:System.Boolean System.Type::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="Method:System.Boolean System.Type::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="Method:System.Boolean System.Type::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="Method:System.Boolean System.Type::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="Method:System.Boolean System.Type::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="Method:System.Boolean System.Type::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="Method:System.Type System.Type::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Property:System.String System.TestSystemTypeBase::Name()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Property:System.Type System.TestSystemTypeBase::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Method:System.Type System.Type::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Property:System.String System.TestSystemTypeBase::Namespace()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Method:System.String System.Type::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Property:System.Reflection.Module System.TestSystemTypeBase::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Property:System.Guid System.TestSystemTypeBase::GUID()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Method:System.Guid System.Type::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Property:System.String System.TestSystemTypeBase::FullName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Method:System.String System.Type::get_FullName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Property:System.Type System.TestSystemTypeBase::BaseType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Property:System.String System.TestSystemTypeBase::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Property:System.Reflection.Assembly System.TestSystemTypeBase::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Method:System.Reflection.Assembly System.Type::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_BaseType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_FullName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Guid System.TestSystemTypeBase::get_GUID()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Namespace()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Name()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetElementType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAllPropagated(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAllPropagated(System.Type)" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeBaseTypeDataFlow::TestAllPropagated(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
</dependencies>