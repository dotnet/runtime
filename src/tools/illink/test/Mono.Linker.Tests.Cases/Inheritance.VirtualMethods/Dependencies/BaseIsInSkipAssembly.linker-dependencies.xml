<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Uninstantiated:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Uninstantiated:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.Dependencies.BaseInSkipAssembly::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::Method()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.Dependencies.BaseInSkipAssembly::Method()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::Method()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.Inheritance.VirtualMethods.BaseIsInSkipAssembly/Instantiated::Method()" />
</dependencies>