<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::SameContext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::SameContext()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Broken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Broken()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Conditional()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Conditional()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::TestRequiresInPreserveDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::TestRequiresInPreserveDependency()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::TestRequiresInPreserveDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod::RequiresUnreferencedCodeInPreserveDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Conditional()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Broken()" e="TypeDef:System.Void" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::field" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::SameContext()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method2(System.SByte&amp;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::field" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.C:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.C:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::field" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::get_Property()" e="Property:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::Property()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::get_Property()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested::.cctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested::NextOne(Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested::NextOne(Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/Nested&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.C:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::Dependency2(T[],System.Int32)" e="TypeSpec:T[]:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::Dependency2(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.C::Dependency1()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.PreserveDependencies.PreserveDependencyMethod/B::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::get_Property()" e="Field:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.PreserveDependencies.C:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.PreserveDependencies.C::&lt;Property&gt;k__BackingField" e="TypeDef:System.String" />
</dependencies>