<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInParentClassAccesedByStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInParentClassAccesedByStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByCctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByCctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldSuppression()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldSuppression()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestNameOfDoesntWarn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestNameOfDoesntWarn()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1&lt;System.Int32&gt;::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassUsingFieldInAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassUsingFieldInAttribute()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassUsingFieldInAttribute()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassUsingFieldInAttribute()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequiresUsingField::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequiresUsingField::Method()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequiresUsingField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequiresUsingField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequiresUsingField::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires::TestClassWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequires::Method()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ConstFieldsOnClassWithRequires/ConstClassWithRequires::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MinValue" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::field" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::field" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::field" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::field" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::field" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceField" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceField" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt; Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceField" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::fieldWithAttribute" />
	<edge b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::fieldWithAttribute" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::fieldWithAttribute" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::fieldWithAttribute" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::fieldWithAttribute" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::fieldWithAttribute" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceFieldWithAttribute" />
	<edge b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceFieldWithAttribute" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::instanceFieldWithAttribute" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceFieldWithAttribute" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceFieldWithAttribute" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::instanceFieldWithAttribute" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge b="Field:TStorage[] System.Enum/EnumInfo`1::Values" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IConvertible" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IConvertible" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IComparable`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IComparable`1::CompareTo(T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IEquatable`1::Equals(T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IComparable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IComparisonOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IModulusOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TResult System.Numerics.IAdditiveIdentity`2::AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IDivisionOperators`3::op_CheckedDivision(TSelf,TOther)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TResult System.Numerics.IMultiplicativeIdentity`2::MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.INumberBase`1::One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Numerics.INumberBase`1::Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.INumberBase`1::Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IComparable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IComparisonOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IModulusOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IBinaryNumber`1::AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IComparable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IComparisonOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IModulusOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IShiftOperators`3&lt;TSelf,System.Int32,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.Byte[],System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.Byte[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.Byte[],System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.Byte[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Byte[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Byte[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Span`1&lt;System.Byte&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Byte[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Byte[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Span`1&lt;System.Byte&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IComparisonOperators`3&lt;System.Int32,System.Int32,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;System.Int32,System.Int32,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IModulusOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IShiftOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IMinMaxValue`1::MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IMinMaxValue`1::MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISignedNumber`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.ISignedNumber`1::NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IComparable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IComparable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IComparisonOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IEqualityOperators`3&lt;TSelf,TSelf,System.Boolean&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IModulusOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IAdditiveIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IDivisionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplicativeIdentity`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.ISpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryPlusOperators`2&lt;TSelf,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.IUtf8SpanFormattable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IShiftOperators`3&lt;TSelf,System.Int32,TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.String System.IBinaryIntegerParseAndFormatInfo`1::OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MinValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CompareTo(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::Equals(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.Int32::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::PopCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsPow2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Log2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Sign(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Abs(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsNegative(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsPositive(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsGreaterThanAsUnsigned(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy10(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy16(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="TypeDef:System.Int32" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IComparable`1::CompareTo(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IEquatable`1::Equals(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TResult System.Numerics.IAdditiveIdentity`2::AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IDivisionOperators`3::op_CheckedDivision(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TResult System.Numerics.IMultiplicativeIdentity`2::MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.INumberBase`1::One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Numerics.INumberBase`1::Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.INumberBase`1::Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IBinaryNumber`1::AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.Byte[],System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.Byte[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.Byte[],System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.Byte[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::ReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Byte[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Byte[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteBigEndian(System.Span`1&lt;System.Byte&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Byte[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Byte[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::WriteLittleEndian(System.Span`1&lt;System.Byte&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IMinMaxValue`1::MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.IMinMaxValue`1::MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.Numerics.ISignedNumber`1::NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.String System.IBinaryIntegerParseAndFormatInfo`1::OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MinValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CompareTo(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::Equals(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.TypeCode System.Int32::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::PopCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsPow2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Log2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Sign(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Abs(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsNegative(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::IsPositive(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsGreaterThanAsUnsigned(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy10(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy16(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.Numerics.ISignedNumber&lt;System.Int32&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Property:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,System.Int32&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="TypeDef:System.Int32" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod&lt;System.Int32&gt;(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,!!0&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::MethodWithAttribute()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::MethodWithAttribute()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::MethodWithAttribute()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::MethodWithAttribute()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::InstanceMethodWithAttribute()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::InstanceMethodWithAttribute()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;::InstanceMethodWithAttribute()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::InstanceMethodWithAttribute()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1::Test(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires&lt;T&gt;)" e="Field:System.Int32 System.Int32::MinValue" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1&lt;T,System.Int32&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithAttribute::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::InstanceMethodWithAttribute()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::MethodWithAttribute()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires::GenericMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:TStorage&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:TEnum[] System.Enum::GetValues()" e="TypeSpec:TEnum[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="ModuleRef:QCall" />
	<edge b="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" e="TypeSpec:TResult[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnCtorAttribute:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnCtorAttribute::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnCtorAttribute:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnCtorAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnCtorAttribute::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericAnnotatedWithWarningWithRequires`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,TFields&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithWarningWithRequires:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/GenericClassWithWarningWithRequires`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,U&gt;:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/ClassWithRequires/ClassWithWarning:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MembersOnClassWithRequires`1/RequiresAll`1&lt;T,T&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass::Test()" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::AnnotatedField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::AnnotatedField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::AnnotatedField" e="TypeDef:System.Type" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::AnnotatedField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::AnnotatedField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass::Test()" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties::AnnotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/TestClass::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::set_PropertyWithRequires(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::PropertyWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::set_PropertyWithRequires(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeParametersAndProperties/AttributeWithRequirementsOnParameters::.ctor(System.Type)" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttributeInner()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttributeInner()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttribute()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttributeInner()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::KeepFieldOnAttributeInner()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::PropertyOnAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::baseProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::get_baseProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::set_baseProperty(System.Int32)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::privateProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_privateProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_privateProperty(System.Int32)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::publicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_publicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_publicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_publicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::publicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_publicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_publicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;publicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;publicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;publicProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_publicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::publicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_publicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_publicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;publicProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_privateProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::privateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_privateProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::set_privateProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;privateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;privateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;privateProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_privateProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::privateProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_privateProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::get_privateProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DAMAnnotatedClass::&lt;privateProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::set_baseProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::baseProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::set_baseProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::set_baseProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::&lt;baseProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::&lt;baseProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::&lt;baseProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::get_baseProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::baseProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::get_baseProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::get_baseProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/BaseForDAMAnnotatedClass::&lt;baseProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDynamicDependencyAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::&lt;DerivedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::&lt;DerivedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::&lt;DerivedStaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::&lt;DerivedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::&lt;DerivedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::&lt;DerivedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::&lt;DerivedStaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::&lt;DerivedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;StaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;StaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;StaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;StaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_PrivateStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::set_InstanceProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::set_InstanceProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::get_InstanceProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::InstanceProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::get_InstanceProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_PrivateStaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_PrivateStaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_PrivateStaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_PrivateStaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_PrivateStaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_PrivateStaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_PrivateStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequiresOnlyInstanceProperties::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithoutRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::get_DerivedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/DerivedWithRequires::set_DerivedStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_InstanceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_InstanceProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::get_StaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnProperties/WithRequires::set_StaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires:test.exe" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::remove_StaticEvent(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::StaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnEvents/WithRequires::add_StaticEvent(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1&lt;System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1&lt;System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1&lt;System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnInstantiatedGeneric()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1::NonGenericField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1::NonGenericField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1::NonGenericField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccessOnOpenGeneric()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/GenericTypeWithRequires`1::NonGenericField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccessInRUCScope(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClassAccessedFromRUCScope::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/BaseForDAMAnnotatedClass::baseField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/BaseForDAMAnnotatedClass::baseField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/BaseForDAMAnnotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/BaseForDAMAnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/BaseForDAMAnnotatedClass::baseField" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::privatefield" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::privatefield" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::privatefield" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::publicField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass::publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMOnTypeAccess(Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DAMAnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires::DerivedStaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires::DerivedStaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires::DerivedStaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires::DerivedStaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires::DerivedStaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires::DerivedStaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDynamicDependencyAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::PrivateStaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::PrivateStaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::PrivateStaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields::InstanceField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields::InstanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields::InstanceField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires::DerivedStaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDirectReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires::DerivedStaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::PrivateStaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequiresOnlyInstanceFields::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithoutRequires::DerivedStaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/DerivedWithRequires::DerivedStaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::InstanceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField::TestDAMAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnField/WithRequires::StaticField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Void System.Type::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithoutRequires::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/BaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnCtor/DerivedWithRequiresOnBaseWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDirectReflectionAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequiresOnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequiresOnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnTypeOverBaseWithNoRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnTypeOverBaseWithNoRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/InterfaceWithoutRequires::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ImplementationWithRequiresOnType::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnTypeOverBaseWithNoRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithNoRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ReflectionAccessOnMethod::TestDAMAccess()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithNoRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithNoRequires::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnTypeOverBaseWithNoRequires::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithNoRequires::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnTypeOverBaseWithNoRequires::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequiresOnType::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequiresOnType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnType::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/BaseWithoutRequiresOnType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequiresOnType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestNameOfDoesntWarn()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::set_Property(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::set_Property(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestOtherMemberTypesWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::remove_Event(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::add_Event(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::set_Property(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::set_Property(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::set_Property(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/MemberTypesWithRequires::&lt;Property&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCctorRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCctorRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessWrite()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessWrite()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingTriggeredOnSecondAccessWrite()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingTriggeredOnSecondAccessWrite()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorTriggeredByCtorCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorTriggeredByCtorCall()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticConstructorCalls()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldCallDontWarn()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceField::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorTriggeredByCtorCall()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorTriggeredByCtorCall()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.cctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByCtorCalls::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessRead()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::.cctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCCtorTriggeredByFieldAccessRead::field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod_Inner()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod_Inner()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod_Inner()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod_Inner()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticRequiresFieldAccessSuppressedByRequiresOnMethod_Inner()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::.cctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingTriggeredOnSecondAccessWrite()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingTriggeredOnSecondAccessWrite()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessWrite()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCtorMarkingIsTriggeredByFieldAccessWrite()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtorTriggeredByFieldAccess::field" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCctorRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticCctorRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.cctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/StaticCtor::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestStaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::StaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::StaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::StaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::StaticMethodOnRequiresTypeSuppressedByRequiresOnMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires::StaticMethodInInheritedClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires::StaticMethodInInheritedClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires::StaticMethodInInheritedClass()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestSuppressionsOnClass()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/TestUnconditionalSuppressMessage::StaticMethodInTestSuppressionClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/TestUnconditionalSuppressMessage::StaticMethodInTestSuppressionClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/TestUnconditionalSuppressMessage:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/TestUnconditionalSuppressMessage:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/TestUnconditionalSuppressMessage::StaticMethodInTestSuppressionClass()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::TestSuppressions(System.Type[])" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::&lt;TestSuppressions&gt;g__LocalFunction|7_0(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::&lt;TestSuppressions&gt;g__LocalFunction|7_0(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::&lt;TestSuppressions&gt;g__LocalFunction|7_0(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.cctor()" e="Method:System.Type System.Type::GetType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.cctor()" e="Method:System.Object System.Activator::CreateInstance(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.cctor()" e="Field:System.Object Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::Instance" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::Instance" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::Instance" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldSuppression()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestInstanceFieldSuppression()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::_instanceField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::_instanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::_instanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithInstanceFieldWhichInitsDangerousClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2::StaticMethodInInheritedClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2::StaticMethodInInheritedClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseAndDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2/DerivedNestedClass::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires2::StaticMethodInInheritedClass()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires::StaticMethodInInheritedClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires::StaticMethodInInheritedClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires/DerivedNestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires/DerivedNestedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires/DerivedNestedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnDerivedButNotOnBase()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires/NestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires/NestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires/NestedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires/NestedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires/NestedClass::NestedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithRequires/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithoutRequires::StaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::StaticMethodInInheritedClass()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::StaticMethodInInheritedClass()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::CallMethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::CallMethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires/DerivedNestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires/DerivedNestedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires/DerivedNestedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::CallMethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::CallMethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::ShouldntWarn(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::ShouldntWarn(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Field:System.Object Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::Instance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresOnBaseButNotOnDerived()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires2::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires2::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires2::StaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::ShouldntWarn(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::ShouldntWarn(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::ShouldntWarn(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::CallMethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::CallMethodWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod::MethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod::MethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires/DerivedNestedClass::NestedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::CallMethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::CallMethodWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod::MethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/RequiresOnMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::StaticMethodInInheritedClass()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/DerivedWithoutRequires::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByCctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByCctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByCctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInParentClassAccesedByStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInParentClassAccesedByStaticMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass::NestedStaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires/NestedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass::TestRequiresInClassAccessedByStaticMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires::StaticMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/ClassWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::set_PropertyOnAttribute(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresOnClass/AttributeWithRequires::field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>