<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicInstanceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicInstanceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::RequiresAndPublicMethods(System.Type)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicStaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicStaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TestRequiresAndDynamicallyAccessedMembers::PublicStaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;::Method()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType::_publicField" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericType&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersOnGenericsEnabled()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsForGenericMethod&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::MethodRequiresPublicFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::MethodRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeRequiresPublicFields`1::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithMethodAccessed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithMethodAccessed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithReflectionPattern()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithMethodAccessed::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithMethodAccessed::PublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled::TestRequiresAttributeWithDynamicallyAccessedMembersEnabled()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresCapabilityReflectionAnalysisEnabled/TypeWithPublicFieldsAccessed::_publicField" e="TypeDef:System.Int32" />
</dependencies>