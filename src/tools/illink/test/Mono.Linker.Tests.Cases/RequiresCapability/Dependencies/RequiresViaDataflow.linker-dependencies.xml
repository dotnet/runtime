<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::RequiresInDynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/DynamicDependency::RequiresInDynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethodsInference&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;(T)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethodsInference&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;(T)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::MethodWhichRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethodWithInferenceOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethodsInference&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;(T)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethodsInference(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethodsInference(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::MethodWhichRequires()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::MethodWhichRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethods&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::MethodWithPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod::MethodWhichRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter::TestAccessOnGenericType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithRequiresMethod&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedGenericParameter/TypeWithPublicMethods`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/TypeWhichOverridesMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/TypeWhichOverridesMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::MethodWithAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::MethodWithAnnotatedParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/TypeWhichOverridesMethod::VirtualMethodRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/BaseType::VirtualMethodRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestOverriddenVirtualMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/BaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/BaseType::VirtualMethodRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/TypeWhichOverridesMethod::VirtualMethodRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/BaseType::VirtualMethodRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/TypeWhichOverridesMethod::VirtualMethodRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::MethodWithAnnotatedParameter(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/DynamicallyAccessedTypeWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/DynamicallyAccessedTypeWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::MethodWithAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::MethodWithAnnotatedParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/DynamicallyAccessedTypeWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter::TestNonVirtualMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresViaDataflow/AnnotatedParameter/DynamicallyAccessedTypeWithRequires::MethodWithRequires()" e="TypeDef:System.Void" />
</dependencies>