<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" e="Module:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedType()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::MethodRequires(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::MethodRequires(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Constructor(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Constructor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor:test.exe" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::InstanceField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::InstanceField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::InstanceField" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticField(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::StaticField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::StaticField" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::StaticField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresInstanceMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::InstanceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::InstanceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresStaticMethod(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::StaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::StaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::TargetRequiresConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/TargetWithRequires::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Constructor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::Constructor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::MethodRequires(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor::MethodRequires(Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::MethodRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughUnsafeAccessor/Target::MethodRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::&lt;LocalFunctionThroughDelegate&gt;g__Local|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LocalFunctionThroughDelegate()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::&lt;LocalFunctionThroughDelegate&gt;g__Local|3_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9__2_0" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9__2_0" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9__2_0" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;LambdaThroughDelegate&gt;b__2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9__2_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::LambdaThroughDelegate()" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;LambdaThroughDelegate&gt;b__2_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::&lt;&gt;9" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O::&lt;0&gt;__MethodWithDelegate" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O::&lt;0&gt;__MethodWithDelegate" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O::&lt;0&gt;__MethodWithDelegate" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::MethodWithDelegate()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::TestMethodWithDelegate()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate/&lt;&gt;O::&lt;0&gt;__MethodWithDelegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughDelegate::MethodWithDelegate()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Int32&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken/FieldWithLdTokenType::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken/FieldWithLdTokenType::Field" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken/FieldWithLdTokenType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken/FieldWithLdTokenType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken/FieldWithLdTokenType::Field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestFieldLdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.Int32&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:T[] System.Array::Empty()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::MethodWithLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestMethodLdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::MethodWithLdToken()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Boolean&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::get_PropertyWithLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.Boolean&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="Property:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::PropertyWithLdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::TestPropertyLdToken()" e="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::get_PropertyWithLdToken()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::get_PropertyWithLdToken()" e="Property:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::PropertyWithLdToken()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::get_PropertyWithLdToken()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughLdToken::get_PropertyWithLdToken()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedType()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType::Method()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType::Method()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/AnnotatedType::Method()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterInAnnotatedMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::AnnotatedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::AnnotatedMethod()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::AnnotatedMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::AnnotatedMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::AnnotatedMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::DoNothing()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::DoNothing()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::DoNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1::DoNothing()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::DoNothing()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::DoNothing()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::DoNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1::DoNothing()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameterOfStaticType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;T&gt;::DoNothing()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;T&gt;::DoNothing()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1&lt;T&gt;::DoNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1::DoNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameterOfStaticType`1::DoNothing()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::TestNewConstraintOnTypeParameter()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintOnTypeParameter`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint/NewConstraintTestAnnotatedType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughNewConstraint::GenericMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::Test()" e="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::PInvokeReturnsType()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::PInvokeReturnsType()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::PInvokeReturnsType()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::PInvokeReturnsType()" e="ModuleRef:nonexistent" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke::PInvokeReturnsType()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughPInvoke/PInvokeReturnType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessThroughSpecialAttribute/TypeWithDebuggerDisplay::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::RequiresOnlyThroughReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough/AccessedThroughReflectionOnGenericType`1::RequiresOnlyThroughReflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::TestRequiresOnlyThroughReflection()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::RequiresOnlyThroughReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.RequiresAccessedThrough::RequiresOnlyThroughReflection()" e="TypeDef:System.Void" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
</dependencies>