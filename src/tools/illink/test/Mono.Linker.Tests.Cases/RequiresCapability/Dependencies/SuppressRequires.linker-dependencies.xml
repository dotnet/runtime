<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires::Main()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType,Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethodMismatch()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethodMismatch()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericMethodMismatch()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethodMismatch()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericType()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericType()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestGenericType()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithStaticTypes()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithStaticTypes()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithStaticTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithDynamicTypes()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithDynamicTypes()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericTypeWithDynamicTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::TestMakeGenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::MakeGenericMethod(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::GenericMethodRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::GenericMethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="MemberRef:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::_unknownType" />
	<edge b="MemberRef:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::_unknownType" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::_unknownType" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::_unknownType" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::_unknownType" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::_unknownType" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithDynamicTypes()" e="Method:System.Type System.Type::MakeGenericType(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestMakeGenericTypeWithStaticTypes()" e="Method:System.Type System.Type::MakeGenericType(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1&lt;TUnknown,TPublicProperties,TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1&lt;TUnknown,TPublicProperties,TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1&lt;TUnknown,TPublicProperties,TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1&lt;TUnknown,TPublicProperties,TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1&lt;TUnknown,TPublicProperties,TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2/GenericTypeRequiresPublicFields`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethodMismatch()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethodMismatch()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods&lt;TPublicProperties&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods&lt;TPublicProperties&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::GenericMethodRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::TestGenericMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods&lt;TUnknown&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods&lt;TUnknown&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2&lt;TUnknown,TPublicProperties&gt;::GenericMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressGenericParameters`2::GenericMethodRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestMethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestMethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestParameter()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestField()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestField()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestField()" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_unknownType" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_unknownType" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_unknownType" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestField()" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_requiresPublicConstructors" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_requiresPublicConstructors" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_requiresPublicConstructors" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestReturnValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestReturnValue()" e="Method:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestReturnValue()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::GetUnknownType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestParameter()" e="Field:System.Type Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::_unknownType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestMethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::TestMethodWithRequires()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::MethodWithRequires()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.SuppressRequires/SuppressMethodBodyReferences::MethodWithRequires()" e="TypeDef:System.Void" />
</dependencies>