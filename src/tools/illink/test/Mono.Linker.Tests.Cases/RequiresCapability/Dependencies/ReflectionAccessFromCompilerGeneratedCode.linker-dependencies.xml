<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__3_0" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__3_0" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__3_0" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__3_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaInMethodWithRUC()" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaInMethodWithRUC&gt;b__3_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__2_0" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__2_0" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__2_0" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__2_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUCLdftn()" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUCLdftn&gt;b__2_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__1_0" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__1_0" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__1_0" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__1_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambdaWithRUC()" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambdaWithRUC&gt;b__1_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__0_0" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__0_0" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__0_0" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Field:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Field:System.Action Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;&gt;9__0_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda::TestLambda()" e="Method:System.Void System.Action::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLambda/&lt;&gt;c::&lt;TestLambda&gt;b__0_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunction()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunction()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionInMethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionInMethodWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionInMethodWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionInMethodWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionInMethodWithRUC&gt;g__LocalFunction|2_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunctionWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunctionWithRUC&gt;g__LocalFunction|1_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunction()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::TestLocalFunction()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromLocalFunction::&lt;TestLocalFunction&gt;g__LocalFunction|0_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIterator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIterator()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;!0&gt; System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIteratorWithRUC()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIteratorWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="Method:System.Runtime.CompilerServices.AsyncVoidMethodBuilder System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Create()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" e="TypeDef:System.Runtime.CompilerServices.AsyncVoidMethodBuilder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsyncWithRUC()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3&gt;(!!0&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3&gt;(!!0&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="MemberRef:System.Runtime.CompilerServices.TaskAwaiter`1&lt;!0&gt; System.Threading.Tasks.Task`1&lt;System.Int32&gt;::GetAwaiter()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="MemberRef:System.Boolean System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::get_IsCompleted()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;u__1" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;u__1" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;u__1" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3&gt;(!!0&amp;,!!1&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3&gt;(!!0&amp;,!!1&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;u__1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;u__1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="MemberRef:!0 System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::GetResult()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetException(System.Exception)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::&lt;&gt;t__builder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetResult()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted(TAwaiter&amp;,TStateMachine&amp;)" e="TypeSpec:TAwaiter&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted(TAwaiter&amp;,TStateMachine&amp;)" e="TypeSpec:TStateMachine&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="TypeSpec:System.Threading.Tasks.Task`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="MemberRef:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;!0&gt; System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::Create()" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge b="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" e="TypeSpec:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4&gt;(!!0&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4&gt;(!!0&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="MemberRef:System.Threading.Tasks.Task`1&lt;!0&gt; System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::get_Task()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MethodSpec:System.Threading.Tasks.Task`1&lt;!!0&gt; System.Threading.Tasks.Task::FromResult&lt;System.Int32&gt;(!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MemberRef:System.Runtime.CompilerServices.TaskAwaiter`1&lt;!0&gt; System.Threading.Tasks.Task`1&lt;System.Int32&gt;::GetAwaiter()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MemberRef:System.Boolean System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::get_IsCompleted()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;u__1" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;u__1" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;u__1" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4&gt;(!!0&amp;,!!1&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4&gt;(!!0&amp;,!!1&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;u__1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;u__1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MemberRef:!0 System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::GetResult()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;s__1" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;s__1" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;s__1" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;s__1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MemberRef:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::SetException(System.Exception)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="MemberRef:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Int32&gt;::SetResult(!0)" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::AwaitUnsafeOnCompleted(TAwaiter&amp;,TStateMachine&amp;)" e="TypeSpec:TAwaiter&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::AwaitUnsafeOnCompleted(TAwaiter&amp;,TStateMachine&amp;)" e="TypeSpec:TStateMachine&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::Start(TStateMachine&amp;)" e="TypeSpec:TStateMachine&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start(TStateMachine&amp;)" e="TypeSpec:TStateMachine&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="Method:System.Runtime.CompilerServices.AsyncVoidMethodBuilder System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Create()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" e="TypeDef:System.Runtime.CompilerServices.AsyncVoidMethodBuilder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestAsync()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2&gt;(!!0&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start&lt;Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2&gt;(!!0&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:System.Exception" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" />
	<edge mark="1" b="Method:System.Threading.Tasks.Task`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode::MethodAsync()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="MemberRef:System.Runtime.CompilerServices.TaskAwaiter`1&lt;!0&gt; System.Threading.Tasks.Task`1&lt;System.Int32&gt;::GetAwaiter()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="MemberRef:System.Boolean System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::get_IsCompleted()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;u__1" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;u__1" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge b="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;u__1" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2&gt;(!!0&amp;,!!1&amp;)" />
	<edge mark="1" b="MethodSpec:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted&lt;System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;,Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2&gt;(!!0&amp;,!!1&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;u__1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;u__1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeSpec:System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="MemberRef:!0 System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Int32&gt;::GetResult()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetException(System.Exception)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Field:System.Runtime.CompilerServices.AsyncVoidMethodBuilder Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::&lt;&gt;t__builder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetResult()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIteratorWithRUC()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIteratorWithRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="Method:System.Int32 System.Environment::get_CurrentManagedThreadId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;l__initialThreadId" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;l__initialThreadId" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;l__initialThreadId" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;2__current" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;2__current" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;2__current" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;2__current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.NotSupportedException::.ctor()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;2__current" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;l__initialThreadId" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Method:System.Int32 System.Environment::get_CurrentManagedThreadId()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;!0&gt; System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;::GetEnumerator()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIterator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine::TestIterator()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="Method:System.Int32 System.Environment::get_CurrentManagedThreadId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;l__initialThreadId" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;l__initialThreadId" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;l__initialThreadId" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;2__current" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;2__current" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;2__current" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;2__current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.NotSupportedException::.ctor()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;2__current" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;l__initialThreadId" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Method:System.Int32 System.Environment::get_CurrentManagedThreadId()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Field:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::&lt;&gt;1__state" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithRequires()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithAnnotations(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionWithRUC()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::MethodWithLocalFunctionCallsRUC()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionWithRUC&gt;g__LocalFunction|2_0()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/TypeWithMethodWithRequires::&lt;MethodWithLocalFunctionCallsRUC&gt;g__LocalFunction|3_0()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;!0&gt; System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;::GetEnumerator()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt; Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerable&lt;System.Int32&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" e="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" e="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void System.IDisposable::Dispose()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.IDisposable.Dispose()" />
	<edge mark="1" b="Method:System.Void System.IDisposable::Dispose()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.IDisposable.Dispose()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" />
	<edge mark="1" b="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" e="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" />
	<edge mark="1" b="Method:System.Void System.Collections.IEnumerator::Reset()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.Reset()" />
	<edge mark="1" b="Method:System.Void System.Collections.IEnumerator::Reset()" e="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.Reset()" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" e="Property:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" e="Property:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerator.Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerator.Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.Current()" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="MemberRef:!0 System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt;::get_Current()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="Property:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.Current()" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="MemberRef:!0 System.Collections.Generic.IEnumerator`1&lt;System.Int32&gt;::get_Current()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.Generic.IEnumerator&lt;System.Int32&gt;.get_Current()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/&lt;MethodAsync&gt;d__4::MoveNext()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsyncWithRUC&gt;d__3::MoveNext()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="Method:System.Void System.Runtime.CompilerServices.IAsyncStateMachine::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestAsync&gt;d__2::MoveNext()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.IDisposable.Dispose()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.IDisposable.Dispose()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.IDisposable.Dispose()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.IDisposable.Dispose()" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIteratorWithRUC&gt;d__1::MoveNext()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.RequiresCapability.ReflectionAccessFromCompilerGeneratedCode/ReflectionAccessFromStateMachine/&lt;TestIterator&gt;d__0::MoveNext()" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>