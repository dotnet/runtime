<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithConstrainedGenericAttribute::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1&lt;Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType:test.exe" e="Module:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1&lt;Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1&lt;Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1&lt;Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1&lt;Mono.Linker.Tests.Cases.Attributes.GenericAttributes/DerivedFromConstraintType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstrainedGenericAttribute`1:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstraintType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/ConstraintType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfInt::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.Int32&gt;::.ctor(T)" e="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.Int32&gt;::.ctor(T)" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::.ctor(T)" />
	<edge mark="1" b="Field:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::F" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="Property:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::P()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::.ctor(T)" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::.ctor(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::.ctor(T)" e="Method:System.Void System.Attribute::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/WithGenericAttribute_OfString::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.String&gt;:test.exe" e="TypeDef:System.String" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.String&gt;::.ctor(T)" e="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.String&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.String&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;System.String&gt;::.ctor(T)" e="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::.ctor(T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::set_P(T)" e="MemberRef:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;T&gt;::&lt;P&gt;k__BackingField" />
	<edge b="MemberRef:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;T&gt;::&lt;P&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge mark="1" b="MemberRef:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1&lt;T&gt;::&lt;P&gt;k__BackingField" e="Field:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::&lt;P&gt;k__BackingField" />
	<edge mark="1" b="Field:T Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1::&lt;P&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Attributes.GenericAttributes/GenericAttribute`1:test.exe" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>