<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="Module:test.exe" />
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:&lt;Module&gt;:test.exe" />
	<edge mark="1" b="TypeDef:&lt;Module&gt;:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Field" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Field" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::&lt;Property&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::get_Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::set_Property(System.Int32)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::MethodWithEnum()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::MethodWithParameter(System.Int32)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Property:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::get_Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::set_Property(System.Int32)" />
	<edge mark="1" b="Other:" e="Event:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" />
	<edge mark="1" b="Other:" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" />
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" e="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::.ctor()" />
	<edge mark="1" b="TypeRef:System.Void" e="ExportedType:System.Void" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" e="ExportedType:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
	<edge mark="1" b="TypeRef:System.Int32" e="ExportedType:System.Int32" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" e="ExportedType:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
	<edge mark="1" b="TypeRef:System.Boolean" e="ExportedType:System.Boolean" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggableAttribute" e="ExportedType:System.Diagnostics.DebuggableAttribute" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="ExportedType:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" e="ExportedType:System.Runtime.CompilerServices.RefSafetyRulesAttribute" />
	<edge mark="1" b="TypeRef:System.Object" e="ExportedType:System.Object" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.CompilerGeneratedAttribute" e="ExportedType:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggerBrowsableAttribute" e="ExportedType:System.Diagnostics.DebuggerBrowsableAttribute" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggerBrowsableState" e="ExportedType:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="TypeRef:System.EventHandler" e="ExportedType:System.EventHandler" />
	<edge mark="1" b="TypeRef:System.Delegate" e="ExportedType:System.Delegate" />
	<edge mark="1" b="TypeRef:System.Threading.Interlocked" e="ExportedType:System.Threading.Interlocked" />
	<edge mark="1" b="TypeRef:System.Type" e="ExportedType:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept::Main()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::MethodWithParameter(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::MethodWithEnum()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::remove_Event(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::add_Event(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::set_Property(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::set_Property(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::set_Property(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::get_Property()" e="Property:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::Property()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::get_Property()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::get_Property()" e="Field:System.Int32 Mono.Linker.Tests.Cases.References.CopyWithLinkedWillHaveAttributeDepsKept/Foo::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="N:null" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
</dependencies>