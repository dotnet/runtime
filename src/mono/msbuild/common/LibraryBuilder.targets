<Project>
  <UsingTask TaskName="EmitBundleSourceFiles"
             AssemblyFile="$(EmitBundleTasksAssemblyPath)" />
  <UsingTask TaskName="LibraryBuilderTask" 
             AssemblyFile="$(LibraryBuilderTasksAssemblyPath)" />

  <Target Name="_BuildNativeLibrary"
          Condition="'$(_IsLibraryMode)' == 'true' and '$(RunAOTCompilation)' == 'true'"
          DependsOnTargets="_GenerateBundle">

    <PropertyGroup>
      <_IsSharedLibrary>false</_IsSharedLibrary>
      <_IsSharedLibrary Condition="'$(NativeLib)' == 'shared'">true</_IsSharedLibrary>
      <_UsesCustomRuntimeInitCallback>false</_UsesCustomRuntimeInitCallback>
      <_UsesCustomRuntimeInitCallback Condition="$(CustomRuntimeInitCallback) != ''">true</_UsesCustomRuntimeInitCallback>
    </PropertyGroup>

    <ItemGroup>
      <_ExtraLibrarySources Include="$(_AotModuleTablePath)" />
      <_ExtraLibrarySources Include="$(_AssembliesToBundleSourceFile)" />
      <_ExtraLibrarySources Include="%(_AssembliesToBundleWithHashes.DestinationFile)" />
      <_ExtraLinkerArgs Include="@(_CommonLinkerArgs)" />
    </ItemGroup>

    <LibraryBuilderTask
      Assemblies="@(_AssembliesToBundleInternal)"
      AssembliesLocation="$(AssembliesLocation)"
      BundlesAssemblies="$(BundlesAssemblies)"
      ExtraLinkerArguments="@(_ExtraLinkerArgs)"
      ExtraSources="@(_ExtraLibrarySources)"
      IsSharedLibrary="$(_IsSharedLibrary)"
      MonoRuntimeHeaders="$(_MonoHeaderPath)"
      Name="$(AssemblyName)"
      OutputDirectory="$(BundleDir)"
      RuntimeIdentifier="$(RuntimeIdentifier)"
      RuntimeLibraries="@(_RuntimeLibraries)"
      TargetOS="$(TargetOS)"
      UsesCustomRuntimeInitCallback="$(_UsesCustomRuntimeInitCallback)"
      UsesRuntimeInitCallback="$(_UsesRuntimeInitCallback)">
      <Output TaskParameter="OutputPath" PropertyName="LibraryOutputPath" />
    </LibraryBuilderTask>
  </Target>

  <Target Name="_GenerateBundle"
          Condition="'$(BundlesAssemblies)' == 'true'">

    <PropertyGroup>
      <_AssembliesToBundleSourceFile>$(BundleDir)bundled_assemblies.c</_AssembliesToBundleSourceFile>
    </PropertyGroup>

    <ItemGroup>
      <_AssembliesToBundle Remove="@(_AssembliesToBundle)" />
      <_AssembliesToBundle Include="@(_AssembliesToBundleInternal)" />
    </ItemGroup>

    <GetFileHash Files="@(_AssembliesToBundle)">
      <Output TaskParameter="Items" ItemName="_AssembliesToBundleWithHashes" />
    </GetFileHash>

    <ItemGroup>
      <_AssembliesToBundleWithHashes Update="@(_AssembliesToBundleWithHashes)">
        <DestinationFile>$(BundleDir)%(_AssembliesToBundleWithHashes.Filename)%(_AssembliesToBundleWithHashes.Extension).$([System.String]::Copy(%(_AssembliesToBundleWithHashes.FileHash)).Substring(0, 8)).c</DestinationFile>
      </_AssembliesToBundleWithHashes>
    </ItemGroup>

    <EmitBundleSourceFiles
      FilesToBundle="@(_AssembliesToBundleWithHashes)"
      BundleName="assemblies"
      BundleFile="$(_AssembliesToBundleSourceFile)"
      RegistrationCallbackFunctionName="mono_add_bundled_assembly"
      />
  </Target>

</Project>