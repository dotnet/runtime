<Project>
  <UsingTask TaskName="EmitBundleSourceFiles"
             AssemblyFile="$(EmitBundleTasksAssemblyPath)" />
  <UsingTask TaskName="LibraryBuilderTask" 
             AssemblyFile="$(LibraryBuilderTasksAssemblyPath)" />

  <Target Name="_BuildNativeLibrary"
          Condition="'$(_IsLibraryMode)' == 'true' and '$(RunAOTCompilation)' == 'true'"
          DependsOnTargets="_GenerateBundle">

    <PropertyGroup>
      <_IsSharedLibrary>false</_IsSharedLibrary>
      <_IsSharedLibrary Condition="'$(NativeLib)' == 'shared'">true</_IsSharedLibrary>
      <_UsesCustomRuntimeInitCallback>false</_UsesCustomRuntimeInitCallback>
      <_UsesCustomRuntimeInitCallback Condition="$(CustomRuntimeInitCallback) != ''">true</_UsesCustomRuntimeInitCallback>
      <_BundlesResources>$(BundlesResources)</_BundlesResources>
      <_BundlesResources Condition="'$(_BundlesResources)' == ''">true</_BundlesResources>
    </PropertyGroup>

    <ItemGroup>
      <_ExtraLibrarySources Include="$(_AotModuleTablePath)" />
      <_ExtraLibrarySources Include="@(BundledSources)" />
      <_ExtraLinkerArgs Include="@(_CommonLinkerArgs)" />
    </ItemGroup>

    <LibraryBuilderTask
      Assemblies="@(_AssembliesToBundleInternal)"
      AssembliesLocation="$(AssembliesLocation)"
      BundlesResources="$(_BundlesResources)"
      BundledPreallocatedSymbols="@(BundledPreallocatedSymbols)"
      ExtraLinkerArguments="@(_ExtraLinkerArgs)"
      ExtraSources="@(_ExtraLibrarySources)"
      IsSharedLibrary="$(_IsSharedLibrary)"
      MonoRuntimeHeaders="$(_MonoHeaderPath)"
      Name="$(AssemblyName)"
      OutputDirectory="$(BundleDir)"
      RuntimeIdentifier="$(RuntimeIdentifier)"
      RuntimeLibraries="@(_RuntimeLibraries)"
      TargetOS="$(TargetOS)"
      UsesCustomRuntimeInitCallback="$(_UsesCustomRuntimeInitCallback)"
      UsesRuntimeInitCallback="$(_UsesRuntimeInitCallback)">
      <Output TaskParameter="OutputPath" PropertyName="LibraryOutputPath" />
      <Output TaskParameter="ExportedSymbols" ItemName="LibraryRuntimeExportedSymbols" />
    </LibraryBuilderTask>
  </Target>

  <Target Name="_GenerateBundle"
          Condition="'$(BundlesResources)' != 'false'">
    <PropertyGroup>
      <BundledSourceFile>mono-bundled-source.c</BundledSourceFile>
      <BundleOutputDirectory>$(BundleDir)</BundleOutputDirectory>
    </PropertyGroup>

    <ItemGroup>
      <BundledSources Include="$(BundleOutputDirectory)$(BundledSourceFile)" />
      <BundledSources Include="$(BundleOutputDirectory)mono-bundled-source.h" />
      <BundledSources Include="$(BundleOutputDirectory)mono-bundled-preallocated-source.c" />
    </ItemGroup>

    <ItemGroup>
      <_ResourcesToBundle Remove="@(_ResourcesToBundle)" />
      <_ResourcesToBundle Include="@(_AssembliesToBundleInternal)" />
      <_ResourcesToBundle Include="$(_ParsedRuntimeConfigFilePath)" />
    </ItemGroup>

    <GetFileHash Files="@(_ResourcesToBundle)">
      <Output TaskParameter="Items" ItemName="_ResourcesToBundleWithHashes" />
    </GetFileHash>

    <ItemGroup>
      <_ResourcesToBundleWithHashes Update="@(_ResourcesToBundleWithHashes)">
        <DestinationFile>$(BundleOutputDirectory)%(_ResourcesToBundleWithHashes.Filename)%(_ResourcesToBundleWithHashes.Extension).$([System.String]::Copy(%(_ResourcesToBundleWithHashes.FileHash)).Substring(0, 8)).c</DestinationFile>
      </_ResourcesToBundleWithHashes>
    </ItemGroup>

    <Delete Files="$(BundledSourceFile)"/>

    <EmitBundleSourceFiles
      FilesToBundle="@(_ResourcesToBundleWithHashes)"
      CombinedResourceSource="$(BundledSourceFile)"
      OutputDirectory="$(BundleOutputDirectory)">
      <Output TaskParameter="PreallocatedSymbols" ItemName="BundledPreallocatedSymbols" />
    </EmitBundleSourceFiles>
  </Target>

</Project>