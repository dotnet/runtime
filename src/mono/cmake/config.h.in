#ifndef __MONO_CONFIG_H__
#define __MONO_CONFIG_H__

#ifdef _MSC_VER

// FIXME This is all questionable but the logs are flooded and nothing else is fixing them.
#pragma warning(disable:4018) // signed/unsigned mismatch
#pragma warning(disable:4090) // const problem
#pragma warning(disable:4146) // unary minus operator applied to unsigned type, result still unsigned
#pragma warning(disable:4244) // integer conversion, possible loss of data
#pragma warning(disable:4267) // integer conversion, possible loss of data

// promote warnings to errors
#pragma warning(  error:4013) // function undefined; assuming extern returning int
#pragma warning(  error:4022) // call and prototype disagree
#pragma warning(  error:4047) // differs in level of indirection
#pragma warning(  error:4098) // void return returns a value
#pragma warning(  error:4113) // call and prototype disagree
#pragma warning(  error:4172) // returning address of local variable or temporary
#pragma warning(  error:4197) // top-level volatile in cast is ignored
#pragma warning(  error:4273) // inconsistent dll linkage
#pragma warning(  error:4293) // shift count negative or too big, undefined behavior
#pragma warning(  error:4312) // 'type cast': conversion from 'MonoNativeThreadId' to 'gpointer' of greater size
#pragma warning(  error:4715) // 'keyword' not all control paths return a value

#include <SDKDDKVer.h>

#if _WIN32_WINNT < 0x0601
#error "Mono requires Windows 7 or later."
#endif /* _WIN32_WINNT < 0x0601 */

#ifndef HAVE_WINAPI_FAMILY_SUPPORT

#define HAVE_WINAPI_FAMILY_SUPPORT

/* WIN API Family support */
#include <winapifamily.h>

#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
	#define HAVE_CLASSIC_WINAPI_SUPPORT 1
	#define HAVE_UWP_WINAPI_SUPPORT 0
#elif WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
	#define HAVE_CLASSIC_WINAPI_SUPPORT 0
	#define HAVE_UWP_WINAPI_SUPPORT 1
#else
	#define HAVE_CLASSIC_WINAPI_SUPPORT 0
	#define HAVE_UWP_WINAPI_SUPPORT 0
#ifndef HAVE_EXTERN_DEFINED_WINAPI_SUPPORT
	#error Unsupported WINAPI family
#endif
#endif

#endif
#endif

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME 1

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME 1

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION 1

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING 1

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT 1

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL 1

/* Version of the corlib-runtime interface */
#cmakedefine MONO_CORLIB_VERSION "@MONO_CORLIB_VERSION@"

/* Disables the IO portability layer */
#cmakedefine DISABLE_PORTABILITY 1

/* This platform does not support symlinks */
#cmakedefine HOST_NO_SYMLINKS 1

/* pthread is a pointer */
#cmakedefine PTHREAD_POINTER_ID 1

/* Targeting the Android platform */
#cmakedefine HOST_ANDROID 1

/* ... */
#cmakedefine TARGET_ANDROID 1

/* ... */
#cmakedefine USE_MACH_SEMA 1

/* Targeting the Fuchsia platform */
#cmakedefine HOST_FUCHSIA 1

/* Targeting the AIX and PASE platforms */
#cmakedefine HOST_AIX 1

/* Host Platform is Win32 */
#cmakedefine HOST_WIN32 1

/* Target Platform is Win32 */
#cmakedefine TARGET_WIN32 1

/* Host Platform is Darwin */
#cmakedefine HOST_DARWIN 1

/* Host Platform is iOS */
#cmakedefine HOST_IOS 1

/* Host Platform is tvOS */
#cmakedefine HOST_TVOS 1

/* Host Platform is Mac Catalyst */
#cmakedefine HOST_MACCAT 1

/* Use classic Windows API support */
#cmakedefine HAVE_CLASSIC_WINAPI_SUPPORT 1

/* Don't use UWP Windows API support */
#cmakedefine HAVE_UWP_WINAPI_SUPPORT 1

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS 1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to 1 if `major', `minor', and `makedev' are declared in <mkdev.h>.
   */
#cmakedefine MAJOR_IN_MKDEV 1

/* Define to 1 if `major', `minor', and `makedev' are declared in
   <sysmacros.h>. */
#cmakedefine MAJOR_IN_SYSMACROS 1

/* Define to 1 if you have the <sys/filio.h> header file. */
#cmakedefine HAVE_SYS_FILIO_H 1

/* Define to 1 if you have the <sys/sockio.h> header file. */
#cmakedefine HAVE_SYS_SOCKIO_H 1

/* Define to 1 if you have the <netdb.h> header file. */
#cmakedefine HAVE_NETDB_H 1

/* Define to 1 if you have the <utime.h> header file. */
#cmakedefine HAVE_UTIME_H 1

/* Define to 1 if you have the <sys/utime.h> header file. */
#cmakedefine HAVE_SYS_UTIME_H 1

/* Define to 1 if you have the <semaphore.h> header file. */
#cmakedefine HAVE_SEMAPHORE_H 1

/* Define to 1 if you have the <sys/un.h> header file. */
#cmakedefine HAVE_SYS_UN_H 1

/* Define to 1 if you have the <sys/syscall.h> header file. */
#cmakedefine HAVE_SYS_SYSCALL_H 1

/* Define to 1 if you have the <sys/uio.h> header file. */
#cmakedefine HAVE_SYS_UIO_H 1

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the <sys/sysctl.h> header file. */
#cmakedefine HAVE_SYS_SYSCTL_H 1

/* Define to 1 if you have the <libproc.h> header file. */
#cmakedefine HAVE_LIBPROC_H 1

/* Define to 1 if you have the <sys/prctl.h> header file. */
#cmakedefine HAVE_SYS_PRCTL_H 1

/* Define to 1 if you have the <gnu/lib-names.h> header file. */
#cmakedefine HAVE_GNU_LIB_NAMES_H 1

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H 1

/* Define to 1 if you have the <sys/utsname.h> header file. */
#cmakedefine HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the <alloca.h> header file. */
#cmakedefine HAVE_ALLOCA_H 1

/* Define to 1 if you have the <ucontext.h> header file. */
#cmakedefine HAVE_UCONTEXT_H 1

/* Define to 1 if you have the <pwd.h> header file. */
#cmakedefine HAVE_PWD_H 1

/* Define to 1 if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the <netinet/tcp.h> header file. */
#cmakedefine HAVE_NETINET_TCP_H 1

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H 1

/* Define to 1 if you have the <link.h> header file. */
#cmakedefine HAVE_LINK_H 1

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H 1

/* Define to 1 if you have the <unwind.h> header file. */
#cmakedefine HAVE_UNWIND_H 1

/* Define to 1 if you have the <sys/user.h> header file. */
#cmakedefine HAVE_SYS_USER_H 1

/* Use static ICU */
#cmakedefine STATIC_ICU 1

/* Use OS-provided zlib */
#cmakedefine HAVE_SYS_ZLIB 1

/* Define to 1 if you have the <poll.h> header file. */
#cmakedefine HAVE_POLL_H 1

/* Define to 1 if you have the <sys/poll.h> header file. */
#cmakedefine HAVE_SYS_POLL_H 1

/* Define to 1 if you have the <sys/wait.h> header file. */
#cmakedefine HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the <wchar.h> header file. */
#cmakedefine HAVE_WCHAR_H 1

/* Define to 1 if you have the <linux/magic.h> header file. */
#cmakedefine HAVE_LINUX_MAGIC_H 1

/* Define to 1 if you have the <android/legacy_signal_inlines.h> header file.
   */
#cmakedefine HAVE_ANDROID_LEGACY_SIGNAL_INLINES_H 1

/* Define to 1 if you have the <android/ndk-version.h> header file. */
#cmakedefine HAVE_ANDROID_NDK_VERSION_H 1

/* Whether Android NDK unified headers are used */
#cmakedefine ANDROID_UNIFIED_HEADERS 1

/* The size of `void *', as computed by sizeof. */
#define SIZEOF_VOID_P @SIZEOF_VOID_P@

/* The size of `long', as computed by sizeof. */
#define SIZEOF_LONG @SIZEOF_LONG@

/* The size of `int', as computed by sizeof. */
#define SIZEOF_INT @SIZEOF_INT@

/* The size of `long long', as computed by sizeof. */
#define SIZEOF_LONG_LONG @SIZEOF_LONG_LONG@

/* Xen-specific behaviour */
#cmakedefine MONO_XEN_OPT 1

/* Reduce runtime requirements (and capabilities) */
#cmakedefine MONO_SMALL_CONFIG 1

/* Make jemalloc assert for mono */
#cmakedefine MONO_JEMALLOC_ASSERT 1

/* Make jemalloc default for mono */
#cmakedefine MONO_JEMALLOC_DEFAULT 1

/* Enable jemalloc usage for mono */
#cmakedefine MONO_JEMALLOC_ENABLED 1

/* Do not include names of unmanaged functions in the crash dump */
#cmakedefine MONO_PRIVATE_CRASHES 1

/* Do not create structured crash files during unmanaged crashes */
#cmakedefine DISABLE_STRUCTURED_CRASH 1

/* String of disabled features */
#define DISABLED_FEATURES @DISABLED_FEATURES@

/* Disable AOT Compiler */
#cmakedefine DISABLE_AOT 1

/* Disable runtime debugging support */
#cmakedefine DISABLE_DEBUG 1

/* Disable reflection emit support */
#cmakedefine DISABLE_REFLECTION_EMIT 1

/* Disable support debug logging */
#cmakedefine DISABLE_LOGGING 1

/* Disable COM support */
#cmakedefine DISABLE_COM 1

/* Disable advanced SSA JIT optimizations */
#cmakedefine DISABLE_SSA 1

/* Disable the JIT, only full-aot mode or interpreter will be supported by the
   runtime. */
#cmakedefine DISABLE_JIT 1

/* Disable the interpreter. */
#cmakedefine DISABLE_INTERPRETER 1

/* Some VES is available at runtime */
#cmakedefine ENABLE_ILGEN 1

/* Disable non-blittable marshalling */
#cmakedefine DISABLE_NONBLITTABLE

/* Disable SIMD intrinsics related optimizations. */
#cmakedefine DISABLE_SIMD 1

/* Disable Soft Debugger Agent. */
#cmakedefine DISABLE_DEBUGGER_AGENT 1

/* Disable Performance Counters. */
#cmakedefine DISABLE_PERFCOUNTERS 1

/* Disable shared perfcounters. */
#cmakedefine DISABLE_SHARED_PERFCOUNTERS 1

/* Disable support code for the LLDB plugin. */
#cmakedefine DISABLE_LLDB 1

/* Disable support for .mdb symbol files. */
#cmakedefine DISABLE_MDB 1

/* Disable assertion messages. */
#cmakedefine DISABLE_ASSERT_MESSAGES 1

/* Disable concurrent gc support in SGEN. */
#cmakedefine DISABLE_SGEN_MAJOR_MARKSWEEP_CONC 1

/* Disable minor=split support in SGEN. */
#cmakedefine DISABLE_SGEN_SPLIT_NURSERY 1

/* Disable gc bridge support in SGEN. */
#cmakedefine DISABLE_SGEN_GC_BRIDGE 1

/* Disable debug helpers in SGEN. */
#cmakedefine DISABLE_SGEN_DEBUG_HELPERS 1

/* Disable sockets */
#cmakedefine DISABLE_SOCKETS 1

/* Disables use of DllMaps in MonoVM */
#cmakedefine DISABLE_DLLMAP 1

/* Disable Threads */
#cmakedefine DISABLE_THREADS 1

/* Disable perf counters */
#cmakedefine DISABLE_PERF_COUNTERS

/* Disable MONO_LOG_DEST */
#cmakedefine DISABLE_LOG_DEST

/* GC description */
#cmakedefine DEFAULT_GC_NAME 1

/* No GC support. */
#cmakedefine HAVE_NULL_GC 1

/* Length of zero length arrays */
#define MONO_ZERO_LEN_ARRAY @MONO_ZERO_LEN_ARRAY@

/* Define to 1 if you have the `sigaction' function. */
#cmakedefine HAVE_SIGACTION 1

/* Define to 1 if you have the `kill' function. */
#cmakedefine HAVE_KILL 1

/* CLOCK_MONOTONIC */
#cmakedefine HAVE_CLOCK_MONOTONIC 1

/* CLOCK_MONOTONIC_COARSE */
#cmakedefine HAVE_CLOCK_MONOTONIC_COARSE 1

/* clockid_t */
#cmakedefine HAVE_CLOCKID_T 1

/* mach_absolute_time */
#cmakedefine HAVE_MACH_ABSOLUTE_TIME 1

/* gethrtime */
#cmakedefine HAVE_GETHRTIME 1

/* read_real_time */
#cmakedefine HAVE_READ_REAL_TIME 1

/* Define to 1 if you have the `clock_nanosleep' function. */
#cmakedefine HAVE_CLOCK_NANOSLEEP 1

/* Does dlsym require leading underscore. */
#cmakedefine MONO_DL_NEED_USCORE 1

/* Define to 1 if you have the <execinfo.h> header file. */
#cmakedefine HAVE_EXECINFO_H 1

/* Define to 1 if you have the <sys/auxv.h> header file. */
#cmakedefine HAVE_SYS_AUXV_H 1

/* Define to 1 if you have the <sys/resource.h> header file. */
#cmakedefine HAVE_SYS_RESOURCE_H 1

/* kqueue */
#cmakedefine HAVE_KQUEUE 1

/* Define to 1 if you have the `backtrace_symbols' function. */
#cmakedefine HAVE_BACKTRACE_SYMBOLS 1

/* Define to 1 if you have the `mkstemp' function. */
#cmakedefine HAVE_MKSTEMP 1

/* Define to 1 if you have the `mmap' function. */
#cmakedefine HAVE_MMAP 1

/* Define to 1 if you have the `madvise' function. */
#cmakedefine HAVE_MADVISE 1

/* Define to 1 if you have the `getrusage' function. */
#cmakedefine HAVE_GETRUSAGE 1

/* Define to 1 if you have the `dladdr' function. */
#cmakedefine HAVE_DLADDR 1

/* Define to 1 if you have the `sysconf' function. */
#cmakedefine HAVE_SYSCONF 1

/* Define to 1 if you have the `getrlimit' function. */
#cmakedefine HAVE_GETRLIMIT 1

/* Define to 1 if you have the `prctl' function. */
#cmakedefine HAVE_PRCTL 1

/* Define to 1 if you have the `nl_langinfo' function. */
#cmakedefine HAVE_NL_LANGINFO 1

/* sched_getaffinity */
#cmakedefine HAVE_SCHED_GETAFFINITY 1

/* sched_setaffinity */
#cmakedefine HAVE_SCHED_SETAFFINITY 1

/* Define to 1 if you have the `sched_getcpu' function. */
#cmakedefine HAVE_SCHED_GETCPU 1

/* Define to 1 if you have the `getpwuid_r' function. */
#cmakedefine HAVE_GETPWUID_R 1

/* Define to 1 if you have the `readlink' function. */
#cmakedefine HAVE_READLINK 1

/* Define to 1 if you have the `chmod' function. */
#cmakedefine HAVE_CHMOD 1

/* Define to 1 if you have the `lstat' function. */
#cmakedefine HAVE_LSTAT 1

/* Define to 1 if you have the `getdtablesize' function. */
#cmakedefine HAVE_GETDTABLESIZE 1

/* Define to 1 if you have the `ftruncate' function. */
#cmakedefine HAVE_FTRUNCATE 1

/* Define to 1 if you have the `msync' function. */
#cmakedefine HAVE_MSYNC 1

/* Define to 1 if you have the `getpeername' function. */
#cmakedefine HAVE_GETPEERNAME 1

/* Define to 1 if you have the `utime' function. */
#cmakedefine HAVE_UTIME 1

/* Define to 1 if you have the `utimes' function. */
#cmakedefine HAVE_UTIMES 1

/* Define to 1 if you have the `openlog' function. */
#cmakedefine HAVE_OPENLOG 1

/* Define to 1 if you have the `closelog' function. */
#cmakedefine HAVE_CLOSELOG 1

/* Define to 1 if you have the `atexit' function. */
#cmakedefine HAVE_ATEXIT 1

/* Define to 1 if you have the `popen' function. */
#cmakedefine HAVE_POPEN 1

/* Define to 1 if you have the `strerror_r' function. */
#cmakedefine HAVE_STRERROR_R 1

/* Define to 1 if strerror_r returns char *. */
#cmakedefine STRERROR_R_CHAR_P 1

/* Have GLIBC_BEFORE_2_3_4_SCHED_SETAFFINITY */
#cmakedefine GLIBC_BEFORE_2_3_4_SCHED_SETAFFINITY 1

/* GLIBC has CPU_COUNT macro in sched.h */
#cmakedefine GLIBC_HAS_CPU_COUNT 1

/* Have large file support */
#cmakedefine HAVE_LARGE_FILE_SUPPORT 1

/* Have getaddrinfo */
#cmakedefine HAVE_GETADDRINFO 1

/* Have gethostbyname2 */
#cmakedefine HAVE_GETHOSTBYNAME2 1

/* Have gethostbyname */
#cmakedefine HAVE_GETHOSTBYNAME 1

/* Have getprotobyname */
#cmakedefine HAVE_GETPROTOBYNAME 1

/* Have getprotobyname_r */
#cmakedefine HAVE_GETPROTOBYNAME_R 1

/* Have getnameinfo */
#cmakedefine HAVE_GETNAMEINFO 1

/* Have inet_ntop */
#cmakedefine HAVE_INET_NTOP 1

/* Have inet_pton */
#cmakedefine HAVE_INET_PTON 1

/* Define to 1 if you have the `inet_aton' function. */
#cmakedefine HAVE_INET_ATON 1

/* Define to 1 if you have the <pthread.h> header file. */
#cmakedefine HAVE_PTHREAD_H 1

/* Define to 1 if you have the <pthread_np.h> header file. */
#cmakedefine HAVE_PTHREAD_NP_H 1

/* Define to 1 if you have the `pthread_mutex_timedlock' function. */
#cmakedefine HAVE_PTHREAD_MUTEX_TIMEDLOCK 1

/* Define to 1 if you have the `pthread_getattr_np' function. */
#cmakedefine HAVE_PTHREAD_GETATTR_NP 1

/* Define to 1 if you have the `pthread_attr_get_np' function. */
#cmakedefine HAVE_PTHREAD_ATTR_GET_NP 1

/* Define to 1 if you have the `pthread_getname_np' function. */
#cmakedefine HAVE_PTHREAD_GETNAME_NP 1

/* Define to 1 if you have the `pthread_setname_np' function. */
#cmakedefine HAVE_PTHREAD_SETNAME_NP 1

/* Define to 1 if you have the `pthread_cond_timedwait_relative_np' function.
   */
#cmakedefine HAVE_PTHREAD_COND_TIMEDWAIT_RELATIVE_NP 1

/* Define to 1 if you have the `pthread_kill' function. */
#cmakedefine HAVE_PTHREAD_KILL 1

/* Define to 1 if you have the `pthread_attr_setstacksize' function. */
#cmakedefine HAVE_PTHREAD_ATTR_SETSTACKSIZE 1

/* Define to 1 if you have the `pthread_attr_getstack' function. */
#cmakedefine HAVE_PTHREAD_ATTR_GETSTACK 1

/* Define to 1 if you have the `pthread_attr_getstacksize' function. */
#cmakedefine HAVE_PTHREAD_ATTR_GETSTACKSIZE 1

/* Define to 1 if you have the `pthread_get_stacksize_np' function. */
#cmakedefine HAVE_PTHREAD_GET_STACKSIZE_NP 1

/* Define to 1 if you have the `pthread_get_stackaddr_np' function. */
#cmakedefine HAVE_PTHREAD_GET_STACKADDR_NP 1

/* Define to 1 if you have the `pthread_jit_write_protect_np' function. */
#cmakedefine HAVE_PTHREAD_JIT_WRITE_PROTECT_NP 1

/* Define to 1 if you have the declaration of `pthread_mutexattr_setprotocol',
   and to 0 if you don't. */
#cmakedefine HAVE_DECL_PTHREAD_MUTEXATTR_SETPROTOCOL 1

/* Have a working sigaltstack */
#cmakedefine HAVE_WORKING_SIGALTSTACK 1

/* Define to 1 if you have the `shm_open' function. */
#cmakedefine HAVE_SHM_OPEN 1

/* Define to 1 if you have the `poll' function. */
#cmakedefine HAVE_POLL 1

/* epoll_create1 */
#cmakedefine HAVE_EPOLL 1

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#cmakedefine HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the <net/if.h> header file. */
#cmakedefine HAVE_NET_IF_H 1

/* Can get interface list */
#cmakedefine HAVE_SIOCGIFCONF 1

/* sockaddr_in has sin_len */
#cmakedefine HAVE_SOCKADDR_IN_SIN_LEN 1

/* sockaddr_in6 has sin6_len */
#cmakedefine HAVE_SOCKADDR_IN6_SIN_LEN 1

/* Have getifaddrs */
#cmakedefine HAVE_GETIFADDRS 1

/* Have access */
#cmakedefine HAVE_ACCESS 1

/* Define to 1 if you have the <sys/errno.h> header file. */
#cmakedefine HAVE_SYS_ERRNO_H 1

/* Define to 1 if you have the <sys/sendfile.h> header file. */
#cmakedefine HAVE_SYS_SENDFILE_H 1

/* Define to 1 if you have the <sys/statvfs.h> header file. */
#cmakedefine HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the <sys/statfs.h> header file. */
#cmakedefine HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H 1

/* Define to 1 if you have the <sys/mount.h> header file. */
#cmakedefine HAVE_SYS_MOUNT_H 1

/* Define to 1 if you have the `getfsstat' function. */
#cmakedefine HAVE_GETFSSTAT 1

/* Define to 1 if you have the `mremap' function. */
#cmakedefine HAVE_MREMAP 1

/* Define to 1 if you have the `posix_fadvise' function. */
#cmakedefine HAVE_POSIX_FADVISE 1

/* Define to 1 if you have the `vsnprintf' function. */
#cmakedefine HAVE_VSNPRINTF 1

/* Define to 1 if you have the `sendfile' function. */
#cmakedefine HAVE_SENDFILE 1

/* struct statfs */
#cmakedefine HAVE_STATFS 1

/* Define to 1 if you have the `statvfs' function. */
#cmakedefine HAVE_STATVFS 1

/* Define to 1 if you have the `setpgid' function. */
#cmakedefine HAVE_SETPGID 1

/* Define to 1 if you have the `system' function. */
#ifdef _MSC_VER
#if HAVE_WINAPI_FAMILY_SUPPORT(HAVE_CLASSIC_WINAPI_SUPPORT)
#cmakedefine HAVE_SYSTEM 1
#endif
#else
#cmakedefine HAVE_SYSTEM 1
#endif

/* Define to 1 if you have the `fork' function. */
#cmakedefine HAVE_FORK 1

/* Define to 1 if you have the `execv' function. */
#cmakedefine HAVE_EXECV 1

/* Define to 1 if you have the `execve' function. */
#cmakedefine HAVE_EXECVE 1

/* Define to 1 if you have the `waitpid' function. */
#cmakedefine HAVE_WAITPID 1

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine HAVE_LOCALTIME_R 1

/* Define to 1 if you have the `mkdtemp' function. */
#cmakedefine HAVE_MKDTEMP 1

/* The size of `size_t', as computed by sizeof. */
#define SIZEOF_SIZE_T @SIZEOF_SIZE_T@

/* Define to 1 if the system has the type `struct sockaddr'. */
#cmakedefine HAVE_STRUCT_SOCKADDR 1

/* Define to 1 if the system has the type `struct sockaddr_in'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_IN 1

/* Define to 1 if the system has the type `struct sockaddr_in6'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1

/* Define to 1 if the system has the type `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT 1

/* Define to 1 if the system has the type `struct timeval'. */
#cmakedefine HAVE_STRUCT_TIMEVAL 1

/* Define to 1 if `st_atim' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIM 1

/* Define to 1 if `st_atimespec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIMESPEC 1

/* Define to 1 if `kp_proc' is a member of `struct kinfo_proc'. */
#cmakedefine HAVE_STRUCT_KINFO_PROC_KP_PROC 1

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <dirent.h> header file. */
#cmakedefine HAVE_DIRENT_H 1

/* Define to 1 if you have the <CommonCrypto/CommonDigest.h> header file. */
#cmakedefine HAVE_COMMONCRYPTO_COMMONDIGEST_H 1

/* Define to 1 if you have the <sys/random.h> header file. */
#cmakedefine HAVE_SYS_RANDOM_H 1

/* Define to 1 if you have the `getrandom' function. */
#cmakedefine HAVE_GETRANDOM 1

/* Define to 1 if you have the `getentropy' function. */
#cmakedefine HAVE_GETENTROPY 1

/* Qp2getifaddrs */
#cmakedefine HAVE_QP2GETIFADDRS 1

/* Define to 1 if you have the `strlcpy' function. */
#cmakedefine HAVE_STRLCPY 1

/* Define to 1 if you have the <winternl.h> header file. */
#cmakedefine HAVE_WINTERNL_H 1

/* Have socklen_t */
#cmakedefine HAVE_SOCKLEN_T 1

/* Define to 1 if you have the `execvp' function. */
#cmakedefine HAVE_EXECVP 1

/* Name of /dev/random */
#define NAME_DEV_RANDOM @NAME_DEV_RANDOM@

/* Enable the allocation and indexing of arrays greater than Int32.MaxValue */
#cmakedefine MONO_BIG_ARRAYS 1

/* Enable DTrace probes */
#cmakedefine ENABLE_DTRACE 1

/* AOT cross offsets file */
#cmakedefine MONO_OFFSETS_FILE "@MONO_OFFSETS_FILE@"

/* Enable the LLVM back end */
#cmakedefine ENABLE_LLVM 1

/* Runtime support code for llvm enabled */
#cmakedefine ENABLE_LLVM_RUNTIME 1

/* 64 bit mode with 4 byte longs and pointers */
#cmakedefine MONO_ARCH_ILP32 1

/* The runtime is compiled for cross-compiling mode */
#cmakedefine MONO_CROSS_COMPILE 1

/* ... */
#cmakedefine TARGET_WASM 1

/* The JIT/AOT targets WatchOS */
#cmakedefine TARGET_WATCHOS 1

/* ... */
#cmakedefine TARGET_PS3 1

/* ... */
#cmakedefine __mono_ppc64__ 1

/* ... */
#cmakedefine TARGET_XBOX360 1

/* ... */
#cmakedefine TARGET_PS4 1

/* ... */
#cmakedefine DISABLE_HW_TRAPS 1

/* Target is RISC-V */
#cmakedefine TARGET_RISCV 1

/* Target is 32-bit RISC-V */
#cmakedefine TARGET_RISCV32 1

/* Target is 64-bit RISC-V */
#cmakedefine TARGET_RISCV64 1

/* ... */
#cmakedefine TARGET_X86 1

/* ... */
#cmakedefine TARGET_AMD64 1

/* ... */
#cmakedefine TARGET_ARM 1

/* ... */
#cmakedefine TARGET_ARM64 1

/* ... */
#cmakedefine TARGET_POWERPC 1

/* ... */
#cmakedefine TARGET_POWERPC64 1

/* ... */
#cmakedefine TARGET_S390X 1

/* ... */
#cmakedefine TARGET_MIPS 1

/* ... */
#cmakedefine TARGET_SPARC 1

/* ... */
#cmakedefine TARGET_SPARC64 1

/* ... */
#cmakedefine HOST_WASM 1

/* ... */
#cmakedefine HOST_X86 1

/* ... */
#cmakedefine HOST_AMD64 1

/* ... */
#cmakedefine HOST_ARM 1

/* ... */
#cmakedefine HOST_ARM64 1

/* ... */
#cmakedefine HOST_POWERPC 1

/* ... */
#cmakedefine HOST_POWERPC64 1

/* ... */
#cmakedefine HOST_S390X 1

/* ... */
#cmakedefine HOST_MIPS 1

/* ... */
#cmakedefine HOST_SPARC 1

/* ... */
#cmakedefine HOST_SPARC64 1

/* Host is RISC-V */
#cmakedefine HOST_RISCV 1

/* Host is 32-bit RISC-V */
#cmakedefine HOST_RISCV32 1

/* Host is 64-bit RISC-V */
#cmakedefine HOST_RISCV64 1

/* ... */
#cmakedefine USE_GCC_ATOMIC_OPS 1

/* The JIT/AOT targets iOS */
#cmakedefine TARGET_IOS 1

/* The JIT/AOT targets tvOS */
#cmakedefine TARGET_TVOS 1

/* The JIT/AOT targets Mac Catalyst */
#cmakedefine TARGET_MACCAT 1

/* The JIT/AOT targets OSX */
#cmakedefine TARGET_OSX 1

/* The JIT/AOT targets Apple platforms */
#cmakedefine TARGET_MACH 1

/* byte order of target */
#define TARGET_BYTE_ORDER @TARGET_BYTE_ORDER@

/* wordsize of target */
#define TARGET_SIZEOF_VOID_P @TARGET_SIZEOF_VOID_P@

/* size of target machine integer registers */
#define SIZEOF_REGISTER @SIZEOF_REGISTER@

/* host or target doesn't allow unaligned memory access */
#cmakedefine NO_UNALIGNED_ACCESS 1

/* Support for the visibility ("hidden") attribute */
#cmakedefine HAVE_VISIBILITY_HIDDEN 1

/* Support for the deprecated attribute */
#cmakedefine HAVE_DEPRECATED 1

/* Moving collector */
#cmakedefine HAVE_MOVING_COLLECTOR 1

/* Defaults to concurrent GC */
#cmakedefine HAVE_CONC_GC_AS_DEFAULT 1

/* Define to 1 if you have the `stpcpy' function. */
#cmakedefine HAVE_STPCPY 1

/* Define to 1 if you have the `strtok_r' function. */
#cmakedefine HAVE_STRTOK_R 1

/* Define to 1 if you have the `rewinddir' function. */
#cmakedefine HAVE_REWINDDIR 1

/* Define to 1 if you have the `vasprintf' function. */
#cmakedefine HAVE_VASPRINTF 1

/* Overridable allocator support enabled */
#cmakedefine ENABLE_OVERRIDABLE_ALLOCATORS 1

/* Define to 1 if you have the `strndup' function. */
#cmakedefine HAVE_STRNDUP 1

/* Define to 1 if you have the <getopt.h> header file. */
#cmakedefine HAVE_GETOPT_H 1

/* Define to 1 if you have the <iconv.h> header file. */
#cmakedefine HAVE_ICONV_H 1

/* Define to 1 if you have the `iconv' library (-liconv). */
#cmakedefine HAVE_LIBICONV 1

/* Icall symbol map enabled */
#cmakedefine ENABLE_ICALL_SYMBOL_MAP 1

/* Icall export enabled */
#cmakedefine ENABLE_ICALL_EXPORT 1

/* Icall tables disabled */
#cmakedefine DISABLE_ICALL_TABLES 1

/* QCalls disabled */
#cmakedefine DISABLE_QCALLS 1

/* Have __thread keyword */
#cmakedefine MONO_KEYWORD_THREAD @MONO_KEYWORD_THREAD@

/* tls_model available */
#cmakedefine HAVE_TLS_MODEL_ATTR 1

/* ARM v5 */
#cmakedefine HAVE_ARMV5 1

/* ARM v6 */
#cmakedefine HAVE_ARMV6 1

/* ARM v7 */
#cmakedefine HAVE_ARMV7 1

/* RISC-V FPABI is double-precision */
#cmakedefine RISCV_FPABI_DOUBLE 1

/* RISC-V FPABI is single-precision */
#cmakedefine RISCV_FPABI_SINGLE 1

/* RISC-V FPABI is soft float */
#cmakedefine RISCV_FPABI_SOFT 1

/* Use malloc for each single mempool allocation */
#cmakedefine USE_MALLOC_FOR_MEMPOOLS 1

/* Enable lazy gc thread creation by the embedding host. */
#cmakedefine LAZY_GC_THREAD_CREATION 1

/* Enable cooperative stop-the-world garbage collection. */
#cmakedefine ENABLE_COOP_SUSPEND 1

/* Enable hybrid suspend for GC stop-the-world */
#cmakedefine ENABLE_HYBRID_SUSPEND 1

/* Enable feature experiments */
#cmakedefine ENABLE_EXPERIMENTS 1

/* Enable experiment 'null' */
#cmakedefine ENABLE_EXPERIMENT_null 1

/* Enable experiment 'Tiered Compilation' */
#cmakedefine ENABLE_EXPERIMENT_TIERED 1

/* Enable checked build */
#cmakedefine ENABLE_CHECKED_BUILD 1

/* Enable GC checked build */
#cmakedefine ENABLE_CHECKED_BUILD_GC 1

/* Enable metadata checked build */
#cmakedefine ENABLE_CHECKED_BUILD_METADATA 1

/* Enable thread checked build */
#cmakedefine ENABLE_CHECKED_BUILD_THREAD 1

/* Enable private types checked build */
#cmakedefine ENABLE_CHECKED_BUILD_PRIVATE_TYPES 1

/* Enable private types checked build */
#cmakedefine ENABLE_CHECKED_BUILD_CRASH_REPORTING 1

/* Enable EventPipe library support */
#cmakedefine ENABLE_PERFTRACING 1

/* Define to 1 if you have /usr/include/malloc.h. */
#cmakedefine HAVE_USR_INCLUDE_MALLOC_H 1

/* The architecture this is running on */
#define MONO_ARCHITECTURE @MONO_ARCHITECTURE@

/* Disable banned functions from being used by the runtime */
#cmakedefine MONO_INSIDE_RUNTIME 1

/* Version number of package */
#define VERSION @VERSION@

/* Full version number of package */
#define FULL_VERSION @FULL_VERSION@

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H 1

/* Disable crash reporting subsystem */
#cmakedefine DISABLE_CRASH_REPORTING 1

/* Enable lazy gc thread creation by the embedding host */
#cmakedefine LAZY_GC_THREAD_CREATION 1

/* Enable additional checks */
#cmakedefine ENABLE_CHECKED_BUILD 1

/* Enable compile time checking that getter functions are used */
#cmakedefine ENABLE_CHECKED_BUILD_PRIVATE_TYPES 1

/* Enable runtime GC Safe / Unsafe mode assertion checks (must set env var MONO_CHECK_MODE=gc) */
#cmakedefine ENABLE_CHECKED_BUILD_GC 1

/* Enable runtime history of per-thread coop state transitions (must set env var MONO_CHECK_MODE=thread) */
#cmakedefine ENABLE_CHECKED_BUILD_THREAD 1

/* Enable runtime checks of mempool references between metadata images (must set env var MONO_CHECK_MODE=metadata) */
#cmakedefine ENABLE_CHECKED_BUILD_METADATA 1

/* Enable static linking of mono runtime components */
#cmakedefine STATIC_COMPONENTS

#if defined(ENABLE_LLVM) && defined(HOST_WIN32) && defined(TARGET_WIN32) && (!defined(TARGET_AMD64) || !defined(_MSC_VER))
#error LLVM for host=Windows and target=Windows is only supported on x64 MSVC build.
#endif

#endif
