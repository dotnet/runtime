<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <MonoLLVMHostOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">linux</MonoLLVMHostOS>
    <MonoLLVMHostOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true' AND '$(BuildArchitecture)' != 'arm64'">osx.10.12</MonoLLVMHostOS>
    <MonoLLVMHostOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true' AND '$(BuildArchitecture)' == 'arm64'">osx.11.0</MonoLLVMHostOS>
    <MonoLLVMHostOS Condition="'$(OS)' == 'Windows_NT'">win</MonoLLVMHostOS>
    <MonoLLVMSDKVersion Condition="'$(MonoLLVMHostOS)' == 'linux'">$(runtimelinuxx64MicrosoftNETCoreRuntimeMonoLLVMSdkVersion)</MonoLLVMSDKVersion>
    <MonoLLVMSDKVersion Condition="'$(MonoLLVMHostOS)' == 'win'">$(runtimewinx64MicrosoftNETCoreRuntimeMonoLLVMSdkVersion)</MonoLLVMSDKVersion>
    <MonoLLVMSDKVersion Condition="'$(MonoLLVMHostOS)' == 'osx.10.12'">$(runtimeosx1012x64MicrosoftNETCoreRuntimeMonoLLVMSdkVersion)</MonoLLVMSDKVersion>
    <MonoLLVMSDKVersion Condition="'$(MonoLLVMHostOS)' == 'osx.11.0'">$(runtimeosx1012x64MicrosoftNETCoreRuntimeMonoLLVMSdkVersion)</MonoLLVMSDKVersion>
    <MonoLLVMToolsVersion Condition="'$(MonoLLVMHostOS)' == 'linux'">$(runtimelinuxx64MicrosoftNETCoreRuntimeMonoLLVMToolsVersion)</MonoLLVMToolsVersion>
    <MonoLLVMToolsVersion Condition="'$(MonoLLVMHostOS)' == 'win'">$(runtimewinx64MicrosoftNETCoreRuntimeMonoLLVMToolsVersion)</MonoLLVMToolsVersion>
    <MonoLLVMToolsVersion Condition="'$(MonoLLVMHostOS)' == 'osx.10.12'">$(runtimeosx1012x64MicrosoftNETCoreRuntimeMonoLLVMToolsVersion)</MonoLLVMToolsVersion>
    <MonoLLVMToolsVersion Condition="'$(MonoLLVMHostOS)' == 'osx.11.0'">$(runtimeosx1012x64MicrosoftNETCoreRuntimeMonoLLVMToolsVersion)</MonoLLVMToolsVersion>
  </PropertyGroup>

  <Target Name="CopyLLVMToTree" AfterTargets="Build">
    <ItemGroup>
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(TargetArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Tools"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(TargetArchitecture)" />
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(RealTargetArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Tools"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(RealTargetArchitecture)" />
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(BuildArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Tools"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(BuildArchitecture)" />
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(TargetArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Sdk"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(TargetArchitecture)" />
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(RealTargetArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Sdk"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(RealTargetArchitecture)" />
      <LLVMPackage Include="runtime.$(MonoLLVMHostOS)-$(BuildArchitecture).Microsoft.NETCore.Runtime.Mono.LLVM.Sdk"
                   Version="$(MonoLLVMToolsVersion)"
                   PackageArch="$(BuildArchitecture)" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-wasm.Microsoft.NETCore.Runtime.Mono.LLVM.Tools" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-wasm.Microsoft.NETCore.Runtime.Mono.LLVM.Sdk" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-x86.Microsoft.NETCore.Runtime.Mono.LLVM.Tools" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-x86.Microsoft.NETCore.Runtime.Mono.LLVM.Sdk" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-.Microsoft.NETCore.Runtime.Mono.LLVM.Tools" />
      <LLVMPackage Remove="runtime.$(MonoLLVMHostOS)-.Microsoft.NETCore.Runtime.Mono.LLVM.Sdk" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="%(LLVMPackage.Identity)"
                        Version="%(LLVMPackage.Version)" />
    </ItemGroup>

    <ItemGroup>
      <LLVMFiles Include="$(NuGetPackageRoot)\$([System.String]::Copy(%(LLVMPackage.Identity)).ToLowerInvariant())\$(MonoLLVMSDKVersion)\tools\$(MonoLLVMHostOS)-%(LLVMPackage.PackageArch)\**"
                 FileArch="%(LLVMPackage.PackageArch)" />
    </ItemGroup>
    <Copy SourceFiles="@(LLVMFiles)" DestinationFolder="$(MonoLLVMDir)\%(LLVMFiles.FileArch)\%(RecursiveDir)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>
</Project>
