<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFramework>$(NetCoreAppCurrent)</TargetFramework>
    <RuntimeIdentifier>$(TargetOS)-$(TargetArchitecture)</RuntimeIdentifier>
    <IntermediateOutputPath>$(MSBuildThisFileDirectory)/obj/</IntermediateOutputPath>
    <PublishDir Condition="'$(PublishDir)' == ''">$(MSBuildThisFileDirectory)/$(OutputPath)/publish</PublishDir>
    <AppName>HelloiOS</AppName>
    <MainLibraryFileName>$(AssemblyName).dll</MainLibraryFileName>
    <UseConsoleUITemplate>false</UseConsoleUITemplate>

    <RunAOTCompilation Condition="'$(RunAOTCompilation)' == ''">true</RunAOTCompilation>
    <TargetOS Condition="'$(TargetOS)' == ''">iossimulator</TargetOS>
    <Optimized Condition="'$(Configuration)' == 'Release'">true</Optimized>
    <!-- ILLink issue when publishing for Helix, to be fixed -->
    <PublishTrimmed Condition="'$(ArchiveTests)' != 'true'">true</PublishTrimmed>
    <TrimMode Condition="'$(ArchiveTests)' != 'true'">Link</TrimMode>
    <ShouldILStrip Condition="'$(ArchiveTests)' != 'true' and '$(RunAOTCompilation)' == 'true' and '$(MonoForceInterpreter)' != 'true'">true</ShouldILStrip>
    <DefineConstants Condition="'$(ArchiveTests)' == 'true'">$(DefineConstants);CI_TEST</DefineConstants>
    <DefineConstants Condition="'$(ArchiveTests)' == 'true' and '$(TargetOS)' == 'ios'">$(DefineConstants);CI_TEST_IOS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Program.cs" Link="Program.cs" />
  </ItemGroup>

 <Target Name="RunAppBundle"
          AfterTargets="_AppleGenerateAppBundle"
          Condition="'$(ArchiveTests)' != 'true' and '$(DeployAndRun)' == 'true'">
    <!-- Install and run on a device or simulator -->
    <Exec Condition="'$(TargetOS)' == 'iossimulator'" Command="dotnet xharness apple run --app=$(AppBundlePath) --targets=ios-simulator-64 --output-directory=/tmp/out" />
    <Exec Condition="'$(TargetOS)' == 'ios'" Command="dotnet xharness apple run --app=$(AppBundlePath) --targets=ios-device --output-directory=/tmp/out" />

    <!-- run on maccatalyst -->
    <Exec Condition="'$(TargetOS)' == 'maccatalyst'" Command="open -W $(AppBundlePath)" />
  </Target>

  <Target Name="CopySampleAppToHelixTestDir"
          Condition="'$(ArchiveTests)' == 'true' and '$(TargetOS)' != 'ios'"
          AfterTargets="_AppleGenerateAppBundle" >
    <PropertyGroup>
      <!-- Helix properties -->
      <!-- AnyCPU as Platform-->
      <OSPlatformConfig>$(TargetOS).AnyCPU.$(Configuration)</OSPlatformConfig>
      <!-- <OSPlatformConfig>$(TargetOS).$(Platform).$(Configuration)</OSPlatformConfig> -->
      <HelixArchiveRoot>$(ArtifactsDir)helix/</HelixArchiveRoot>
      <HelixArchiveRunOnlyRoot>$(HelixArchiveRoot)runonly/</HelixArchiveRunOnlyRoot>
      <HelixArchiveRunOnlyAppsDir>$(HelixArchiveRunOnlyRoot)$(OSPlatformConfig)/</HelixArchiveRunOnlyAppsDir>
      <_AppBundleName>$([System.IO.Path]::GetFileName('$(AppBundlePath)'))</_AppBundleName>
    </PropertyGroup>
    <ItemGroup>
      <_appFiles Include="$(AppBundlePath)/**/*" />
    </ItemGroup>
    <Copy SourceFiles="@(_appFiles)"
          DestinationFolder="$(HelixArchiveRunOnlyAppsDir)/$(_AppBundleName)/%(RecursiveDir)" />

    <Message Importance="High" Text="AppBundlePath: $(AppBundlePath)"/>
    <Message Importance="High" Text="HelixArchiveRunOnlyAppsDir: $(HelixArchiveRunOnlyAppsDir)"/>
  </Target>
</Project>
