<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <TargetFramework>$(NetCoreAppToolCurrent)</TargetFramework>
    <RuntimeIdentifier>android-$(TargetArchitecture)</RuntimeIdentifier>
    <PublishTrimmed>true</PublishTrimmed>
    <TrimMode>Link</TrimMode>
    <ForceAOT Condition="'$(ForceAOT)' == ''">false</ForceAOT>
  </PropertyGroup>

  <Import Project="$(RepoTasksDir)AotCompilerTask\MonoAOTCompiler.props" />
  <UsingTask TaskName="AndroidAppBuilderTask" AssemblyFile="$(AndroidAppBuilderTasksAssemblyPath)"/>
  <UsingTask TaskName="MonoAOTCompiler" AssemblyFile="$(MonoAOTCompilerTasksAssemblyPath)" />
  
  <PropertyGroup Condition="'$(RunAOTCompilation)' == 'true'">
    <_MobileIntermediateOutputPath>$(IntermediateOutputPath)mobile</_MobileIntermediateOutputPath>
  </PropertyGroup>

  <Target Name="BuildApp" AfterTargets="CopyFilesToPublishDirectory">
    <PropertyGroup>
      <StripDebugSymbols>False</StripDebugSymbols>
      <StripDebugSymbols Condition="'$(Configuration)' == 'Release'">True</StripDebugSymbols>
      <AdbTool>$(ANDROID_SDK_ROOT)\platform-tools\adb</AdbTool>
      <ApkDir>$(PublishDir)apk\</ApkDir>
    </PropertyGroup>

    <ItemGroup>
      <AotInputAssemblies Include="$(PublishDir)\*.dll">
        <AotArguments>@(MonoAOTCompilerDefaultAotArguments, ';')</AotArguments>
        <ProcessArguments>@(MonoAOTCompilerDefaultProcessArguments, ';')</ProcessArguments>
      </AotInputAssemblies>
    </ItemGroup>

    <MakeDir Directories="$(_MobileIntermediateOutputPath)" 
             Condition="'$(ForceAOT)' == 'true'"/>
    <RemoveDir Directories="$(ApkDir)" />

    <PropertyGroup>
      <AndroidAbi Condition="'$(TargetArchitecture)' == 'arm64'">arm64-v8a</AndroidAbi>
      <AndroidAbi Condition="'$(TargetArchitecture)' == 'arm'">armeabi-v7a</AndroidAbi>
      <AndroidAbi Condition="'$(TargetArchitecture)' == 'x64'">x86_64</AndroidAbi>
      <AndroidAbi Condition="'$(TargetArchitecture)' == 'x86'">x86</AndroidAbi>
    </PropertyGroup>

    <Message Importance="High" Text="Path: $(PublishDir)" />
    <Message Importance="High" Text="SourceDir: $(OutputPath)" />

    <PropertyGroup Condition="'$(ForceAOT)' == 'true' and '$(AOTWithLibraryFiles)' != 'true'">
      <_AotOutputType>AsmOnly</_AotOutputType>
      <_AotModulesTablePath>$(BundleDir)\modules.c</_AotModulesTablePath>
    </PropertyGroup>

    <PropertyGroup Condition="'$(ForceAOT)' == 'true' and '$(AOTWithLibraryFiles)' == 'true'">
      <_AotOutputType>Library</_AotOutputType>
      <_AotLibraryFormat>So</_AotLibraryFormat>
      <_PrebuiltOS Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux-x86_64</_PrebuiltOS>
      <_PrebuiltOS Condition="$([MSBuild]::IsOSPlatform('OSX'))">darwin-x86_64</_PrebuiltOS>
      <_PrebuiltOS Condition="$([MSBuild]::IsOSPlatform('Windows'))">windows-x86_64</_PrebuiltOS>
      <_PrebuiltAbi Condition="'$(TargetArchitecture)' == 'arm'">arm-linux-androideabi$</_PrebuiltAbi>
      <_PrebuiltAbi Condition="'$(TargetArchitecture)' == 'arm64'">aarch64-linux-android</_PrebuiltAbi>
      <_PrebuiltAbi Condition="'$(TargetArchitecture)' == 'x64'">x86_64-linux-android</_PrebuiltAbi>
      <_PrebuiltAbi Condition="'$(TargetArchitecture)' == 'x86'">i686-linux-android</_PrebuiltAbi>
      <_AotToolPrefix>$(ANDROID_NDK_ROOT)\toolchains\llvm\prebuilt\$(_PrebuiltOS)\bin\$(_PrebuiltAbi)-</_AotToolPrefix>
    </PropertyGroup>

    <MonoAOTCompiler Condition="'$(ForceAOT)' == 'true'"
        CompilerBinaryPath="@(MonoAotCrossCompiler->WithMetadataValue('RuntimeIdentifier','$(TargetOS.ToLowerInvariant())-$(TargetArchitecture.ToLowerInvariant())'))"
        OutputDir="$(_MobileIntermediateOutputPath)"
        Mode="Full"
        OutputType="$(_AotOutputType)"
        Assemblies="@(AotInputAssemblies)"
        AotModulesTablePath="$(_AotModulesTablePath)"
        ToolPrefix="$(_AotToolPrefix)"
        LibraryFormat="$(_AotLibraryFormat)"
        UseLLVM="$(UseLLVM)"
        LLVMPath="$(MonoAotCrossDir)">
        <Output TaskParameter="CompiledAssemblies" ItemName="BundleAssemblies" />
    </MonoAOTCompiler>

    <AndroidAppBuilderTask
        RuntimeIdentifier="$(RuntimeIdentifier)"
        ProjectName="HelloAndroid"
        ForceInterpreter="$(MonoForceInterpreter)"
        ForceAOT="$(ForceAOT)"
        MonoRuntimeHeaders="$(MicrosoftNetCoreAppRuntimePackDir)runtimes\android-$(TargetArchitecture)\native\include\mono-2.0"
        Assemblies="@(BundleAssemblies)"
        MainLibraryFileName="$(AssemblyName).dll"
        StripDebugSymbols="$(StripDebugSymbols)"
        RuntimeComponents="$(RuntimeComponents)"
        DiagnosticPorts="$(DiagnosticPorts)"
        OutputDir="$(ApkDir)"
        AppDir="$(PublishDir)">
        <Output TaskParameter="ApkBundlePath" PropertyName="ApkBundlePath" />
        <Output TaskParameter="ApkPackageId" PropertyName="ApkPackageId" />
    </AndroidAppBuilderTask>

    <Message Importance="High" Text="Apk:       $(ApkBundlePath)"/>
    <Message Importance="High" Text="PackageId: $(ApkPackageId)"/>

    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) kill-server"/>
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) start-server"/>
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) logcat -c" ContinueOnError="WarnAndContinue" />
    <Message Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Importance="High" Text="Uninstalling apk (ignore errors if any):"/>
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) uninstall net.dot.HelloAndroid" ContinueOnError="WarnAndContinue" />
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) install $(ApkDir)/bin/HelloAndroid.apk" />
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(RunActivity)' != 'true' and '$(ArchiveTests)' != 'true'"
          Command="$(AdbTool) shell am instrument -e env:MONO_LOG_LEVEL warning -e env:MONO_LOG_MASK all -w net.dot.HelloAndroid/net.dot.MonoRunner"/>
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(RunActivity)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) shell am start -n net.dot.HelloAndroid/net.dot.MainActivity" />
    <Exec Condition="'$(DeployAndRun)' == 'true' and '$(ArchiveTests)' != 'true'" Command="$(AdbTool) logcat -d" />
  </Target>

  <ItemGroup>
    <Compile Include="Program.cs" />
  </ItemGroup>

  <Target Name="CopySampleAppToHelixTestDir" 
          Condition="'$(ArchiveTests)' == 'true'" 
          AfterTargets="Build"
          DependsOnTargets="Publish;BuildApp" >
    <PropertyGroup>
      <!-- Helix properties -->
      <!-- AnyCPU as Platform-->
      <OSPlatformConfig>$(TargetOS).AnyCPU.$(Configuration)</OSPlatformConfig>
      <!-- <OSPlatformConfig>$(TargetOS).$(Platform).$(Configuration)</OSPlatformConfig> -->
      <HelixArchiveRoot>$(ArtifactsDir)helix/</HelixArchiveRoot>
      <HelixArchiveRunOnlyRoot>$(HelixArchiveRoot)runonly/</HelixArchiveRunOnlyRoot>
      <HelixArchiveRunOnlyAppsDir>$(HelixArchiveRunOnlyRoot)$(OSPlatformConfig)/</HelixArchiveRunOnlyAppsDir>
    </PropertyGroup>
    <ItemGroup>
      <_apkFiles Include="$(ApkBundlePath)" />
    </ItemGroup>
    <Copy SourceFiles="@(_apkFiles)"
          DestinationFolder="$(HelixArchiveRunOnlyAppsDir)/%(RecursiveDir)" />

    <Message Importance="High" Text="ApkBundlePath: $(ApkBundlePath)"/>
    <Message Importance="High" Text="TestArchiveTestsDir: $(TestArchiveTestsDir)"/>
  </Target>
</Project>
