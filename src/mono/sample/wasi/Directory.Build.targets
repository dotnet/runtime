<Project>
  <Import Project="../Directory.Build.targets" />
  <Import Project="$(MonoProjectRoot)\wasi\build\WasiApp.InTree.targets" />

  <PropertyGroup>
    <_SampleProject Condition="'$(_SampleProject)' == ''">$(MSBuildProjectFile)</_SampleProject>
    <_SampleAssembly Condition="'$(_SampleAssembly)' == ''">$(TargetFileName)</_SampleAssembly>
    <_SampleProjectName>$([System.String]::Copy('$(_SampleProject)').Replace('.csproj',''))</_SampleProjectName>
    <_MONO_LOG_LEVEL Condition="false">--env MONO_LOG_LEVEL=debug --env MONO_LOG_MASK=all</_MONO_LOG_LEVEL>
    <_DOTNET_WASI_PRINT_EXIT_CODE>--env DOTNET_WASI_PRINT_EXIT_CODE=1</_DOTNET_WASI_PRINT_EXIT_CODE>
  </PropertyGroup>

  <Target Name="BuildSampleInTree"
      Inputs="
      Program.cs;
      $(_SampleProject);
      $(MSBuildProjectFile)
      $(TargetFileName)
      "
      Outputs="
      bin/$(Configuration)/AppBundle/dotnet.native.wasm;
      ">
    <PropertyGroup>
      <_AOTFlag Condition="'$(RunAOTCompilation)' != ''">/p:RunAOTCompilation=$(RunAOTCompilation)</_AOTFlag>
    </PropertyGroup>
    <Exec Command="$(_Dotnet) publish -bl:publish.binlog /p:Configuration=$(Configuration) /p:TargetArchitecture=wasm /p:TargetOS=wasi $(_AOTFlag) $(_SampleProject)" />
  </Target>

  <Target Name="RunSampleWithWasmtime" DependsOnTargets="BuildSampleInTree">
    <!--
      TODOWASI - - tcplisten localhost:64000 - - env DEBUGGER_FD=4
    -->

    <PropertyGroup>
      <_DotnetWasmName>dotnet.wasm</_DotnetWasmName>
      <_DotnetWasmName Condition="'$(WasmSingleFileBundle)' == 'true'">$([System.IO.Path]::ChangeExtension($(_SampleAssembly), '.wasm'))</_DotnetWasmName>
      <_AppBundlePath>$([MSBuild]::NormalizeDirectory('bin/wasi-wasm/AppBundle'))</_AppBundlePath>
      <WasiCommand>$(WasmtimeDir)wasmtime$(_ExeExt) $(_MONO_LOG_LEVEL) $(_DOTNET_WASI_PRINT_EXIT_CODE)</WasiCommand>


      <WasiCommand Condition="'$(_WasiNeedsHttp)' == 'true'"                                         >$(WasiCommand) --wasi http</WasiCommand>
      <WasiCommand Condition="'$(_WasiNeedsSocket)' == 'true'"                                       >$(WasiCommand) --wasi inherit-network --wasi tcp --wasi udp --wasi allow-ip-name-lookup</WasiCommand>
      <WasiCommand Condition="'$(WasmSingleFileBundle)' != 'true'"                                   >$(WasiCommand) --dir .</WasiCommand>
      <WasiCommand                                                                                   >$(WasiCommand) $(_DotnetWasmName)</WasiCommand>
      <WasiCommand Condition="'$(WasmSingleFileBundle)' != 'true'"                                   >$(WasiCommand) $(_SampleProjectName)</WasiCommand>
    </PropertyGroup>

    <Message Importance="High" Text="$(_AppBundlePath)> $(WasiCommand)" />
    <Exec WorkingDirectory="$(_AppBundlePath)" 
      Command="$(WasiCommand)" 
      EnvironmentVariables="WASMTIME_BACKTRACE_DETAILS=1"
      IgnoreExitCode="true" />
  </Target>

  <Target Name="TranspileJCO"
      Inputs="
      Program.cs;
      $(_SampleProject);
      $(MSBuildProjectFile);
      $(TargetFileName);
      bin/$(Configuration)/AppBundle/dotnet.native.wasm;
      "
      Outputs="
      bin/$(Configuration)/JCOBundle/dotnet.native.wasm;
      ">
    <Exec Command="npm run transpile" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>


  <Target Name="RunSampleWithNodeJS" DependsOnTargets="BuildSampleInTree;TranspileJCO">
    <Exec Command="npm run run" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

  <Import Project="$(RepositoryEngineeringDir)testing\wasi-provisioning.targets" />
</Project>