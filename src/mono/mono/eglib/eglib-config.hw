#ifndef __EGLIB_CONFIG_H
#define __EGLIB_CONFIG_H

/*
 * System-dependent settings
 */
#define G_OS_WIN32 1

#ifdef _MSC_VER

#include <io.h>
#include <stddef.h>

#define G_GNUC_PRETTY_FUNCTION   __FUNCTION__
#define G_GNUC_UNUSED            
#define G_BYTE_ORDER             1234
#define G_GNUC_NORETURN          
#define G_BREAKPOINT()           __debugbreak()
#define MAXPATHLEN 242

typedef size_t gsize;
typedef ptrdiff_t gssize;
typedef int pid_t;

#define G_DIR_SEPARATOR          '\\'
#define G_DIR_SEPARATOR_S        "\\"
#define G_SEARCHPATH_SEPARATOR_S ";"
#define G_SEARCHPATH_SEPARATOR   ';'

#ifdef _WIN64
// Correct for Win32 and Win64 since circa 2000.
#define G_GSIZE_FORMAT   "Iu"
#else
// Correct for Win32 since circa 1992.
#define G_GSIZE_FORMAT   "u"
#endif

// https://msdn.microsoft.com/en-us/library/40bbyw78.aspx
#define STDOUT_FILENO (1)
#define STDERR_FILENO (2)

/* FIXME: what should this be ?*/
#define X_OK 4 /* This is really read */
#define WNOHANG 1
#define F_SETFD 1
#define FD_CLOEXEC 1

#ifndef __cplusplus
#undef inline
#define inline __inline
#endif

#define strtok_r strtok_s

#undef G_HAVE_UNISTD_H
#undef G_HAVE_SYS_TIME_H
#undef G_HAVE_SYS_WAIT_H
#undef G_HAVE_PWD_H
#undef G_HAVE_STRNDUP
#define G_HAVE_GETOPT_H 1

/* disable the following warnings 
 * C4100: The formal parameter is not referenced in the body of the function. The unreferenced parameter is ignored. 
 * C4127: conditional expression is constant
*/
#pragma warning(disable:4100 4127)
#endif

typedef void * GPid;
#endif
