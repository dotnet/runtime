/*
This test is derived from below F#.
	Comment out the two failing tests.
	fsharpc --standalone --optimize- fsharp.fs
	monolinker fsharp.exe to trim a little
	change resource-using code to use constant strings

(**************************************

    F# tests for validating tail calls
    are correctly generated by the
    compiler and taken by the .NET
    runtime.

    Tested and passes when ran against
    F# v1.9.6.16

    Run this script via:


    Chris Smith
    chrsmith@microsoft.com

**************************************)

open System

// --------------------------------------------------
// Utilities
// --------------------------------------------------

// Check an expression against the result. If they do not
// match the script immediately terminates.
let RunTest msg actual expected =
  if actual = expected then
    Console.WriteLine(msg + ": YES")
  else
    Console.WriteLine("\n***** " + msg + ": FAIL\n")
    exit 1

let HugeInt = 10000000

// --------------------------------------------------
// Tail Call Tests
// --------------------------------------------------

// Not a tail call - test that this overflows the stack
let rec nonTailCall x =
    if x = 0
    then 0
    else 1 + nonTailCall (x - 1)

// Simple tail call, the compiler will convert to while loop
let rec simpleTail1 x acc =
    if x = 0
    then acc
    else simpleTail1 (x - 1) (acc + 1)

RunTest "simpleTail1" (simpleTail1 HugeInt 0) HugeInt

// Another simple example
let rec simpleTail2 acc = function
    |0 -> acc
    |i -> simpleTail2 (acc+1) (i-1)

RunTest "simpleTail2" (simpleTail2 HugeInt 0) HugeInt

// Mutually recurisve tail call, compiler will emit tail instruction
let rec mutualTail1IsOdd x =
    match x with
    | 1 -> true
    | n -> mutualTail1IsEven (x - 1)
and mutualTail1IsEven x =
    match x with
    | 1 -> false
    | 0 -> true
    | n -> mutualTail1IsOdd (x - 1)

RunTest "mutualTail1IsOdd"  (mutualTail1IsOdd HugeInt) false
RunTest "mutualTail1IsEven" (mutualTail1IsEven HugeInt) true

// Interesting parameter types (large stack frame)
// Making mutually recurisve to ensure the .tail call
let rec mutualTail2IsOdd a b c d e f g h i x =
    match x with
    | 1 -> (true, a, b, c)
    | n -> mutualTail2IsEven a b c d e f g h i 0L 0L 0L 0L (x - 1)
and mutualTail2IsEven a b c d e f g h i j k l m x =
    match x with
    | 1 -> (false, a, b, c)
    | 0 -> (true,  a, b, c)
    | n -> mutualTail2IsOdd a b c d e f g h i (x - 1)

// These two tests fail on Mono and probably CoreCLR.
RunTest "mutualTail2IsOdd"  (mutualTail2IsOdd  0.0M [| 1 .. 10 |] "str" 0L 0L 0L 0L 0L 0L HugeInt)             (false, 0.0M, [| 1 .. 10 |], "str")
RunTest "mutualTail2IsEven" (mutualTail2IsEven 0.0M [| 1 .. 10 |] "str" 0L 0L 0L 0L 0L 0L 0L 0L 0L 0L HugeInt) (true,  0.0M, [| 1 .. 10 |], "str")

// Generic tail call within a type
type TailCallLoop<'T1>() =
    let rec f x = if x = 0 then 1 else f (x  - 1)
    let v5 = f 10000000
    member x.Result =
        f 10000000 + v5

RunTest "TailCallLoop<int>"      ((new TailCallLoop<int>()).Result)      2
RunTest "TailCallLoop<DateTime>" ((new TailCallLoop<DateTime>()).Result) 2


// Generic tail call within a type
type TailCallLoopGenericClassAndMethod<'T1>(resultA: 'T1) =
    member this.Method1<'T2>(x:int, resultB: 'T2) =
        if x = 0 then (resultA, resultB) else this.Method2 (x - 1, resultB)
    member this.Method2<'T2>(x:int, resultB: 'T2) =
        if x = 0 then (resultA, resultB) else this.Method1 (x  - 1, resultB)

RunTest "TailCallLoopGenericClassAndMethod<byte>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethod<byte>(3uy)).Method1<byte>(10000000, 4uy))      (3uy, 4uy)
RunTest "TailCallLoopGenericClassAndMethod<byte>.Method1<int>"      ((new TailCallLoopGenericClassAndMethod<byte>(3uy)).Method1<int>(10000000, 4))      (3uy, 4)
RunTest "TailCallLoopGenericClassAndMethod<byte>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethod<byte>(3uy)).Method1<DateTime>(10000000, DateTime.MinValue))      (3uy, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethod<byte>.Method1<string>"      ((new TailCallLoopGenericClassAndMethod<byte>(3uy)).Method1<string>(10000000, "abc"))      (3uy, "abc")

RunTest "TailCallLoopGenericClassAndMethod<int>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethod<int>(3)).Method1<byte>(10000000, 4uy))      (3, 4uy)
RunTest "TailCallLoopGenericClassAndMethod<int>.Method1<int>"      ((new TailCallLoopGenericClassAndMethod<int>(3)).Method1<int>(10000000, 4))      (3, 4)
RunTest "TailCallLoopGenericClassAndMethod<int>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethod<int>(3)).Method1<DateTime>(10000000, DateTime.MinValue))      (3, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethod<int>.Method1<string>"      ((new TailCallLoopGenericClassAndMethod<int>(3)).Method1<string>(10000000, "abc"))      (3, "abc")

RunTest "TailCallLoopGenericClassAndMethod<DateTime>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethod<DateTime>(DateTime.MaxValue)).Method1<byte>(10000000, 4uy))      (DateTime.MaxValue, 4uy)
RunTest "TailCallLoopGenericClassAndMethod<DateTime>.Method1<int>"      ((new TailCallLoopGenericClassAndMethod<DateTime>(DateTime.MaxValue)).Method1<int>(10000000, 4))      (DateTime.MaxValue, 4)
RunTest "TailCallLoopGenericClassAndMethod<DateTime>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethod<DateTime>(DateTime.MaxValue)).Method1<DateTime>(10000000, DateTime.MinValue))      (DateTime.MaxValue, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethod<DateTime>.Method1<string>"      ((new TailCallLoopGenericClassAndMethod<DateTime>(DateTime.MaxValue)).Method1<string>(10000000, "abc"))      (DateTime.MaxValue, "abc")

RunTest "TailCallLoopGenericClassAndMethod<string>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethod<string>("qq")).Method1<byte>(10000000, 4uy))      ("qq", 4uy)
RunTest "TailCallLoopGenericClassAndMethod<string>.Method1<int>"      ((new TailCallLoopGenericClassAndMethod<string>("qq")).Method1<int>(10000000, 4))      ("qq", 4)
RunTest "TailCallLoopGenericClassAndMethod<string>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethod<string>("qq")).Method1<DateTime>(10000000, DateTime.MinValue))      ("qq", DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethod<string>.Method1<string>"      ((new TailCallLoopGenericClassAndMethod<string>("qq")).Method1<string>(10000000, "abc"))      ("qq", "abc")

// Generic tail call within a type via virtual method in abstract class hierarchy
[<AbstractClass>]
type AbstractTailCallLoopGenericClassAndMethod<'T1>(resultA: 'T1) =
    abstract Method1<'T2> : int * 'T2 -> ('T1 * 'T2)
    abstract Method2<'T2> : int * 'T2 -> ('T1 * 'T2)
    default this.Method2<'T2>(x:int, resultB: 'T2) =
        if x = 0 then (resultA, resultB) else this.Method1 (x  - 1, resultB)

type TailCallLoopGenericClassAndMethodAbstractClass<'T1>(resultA: 'T1) =
    inherit AbstractTailCallLoopGenericClassAndMethod<'T1>(resultA)
    override this.Method1<'T2>(x:int, resultB: 'T2) =
        if x = 0 then (resultA, resultB) else this.Method2 (x - 1, resultB)

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<byte>(3uy)).Method1<byte>(10000000, 4uy))      (3uy, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<int>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<byte>(3uy)).Method1<int>(10000000, 4))      (3uy, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<byte>(3uy)).Method1<DateTime>(10000000, DateTime.MinValue))      (3uy, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<string>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<byte>(3uy)).Method1<string>(10000000, "abc"))      (3uy, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<int>(3)).Method1<byte>(10000000, 4uy))      (3, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<int>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<int>(3)).Method1<int>(10000000, 4))      (3, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<int>(3)).Method1<DateTime>(10000000, DateTime.MinValue))      (3, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<string>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<int>(3)).Method1<string>(10000000, "abc"))      (3, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<DateTime>(DateTime.MaxValue)).Method1<byte>(10000000, 4uy))      (DateTime.MaxValue, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<int>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<DateTime>(DateTime.MaxValue)).Method1<int>(10000000, 4))      (DateTime.MaxValue, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<DateTime>(DateTime.MaxValue)).Method1<DateTime>(10000000, DateTime.MinValue))      (DateTime.MaxValue, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<string>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<DateTime>(DateTime.MaxValue)).Method1<string>(10000000, "abc"))      (DateTime.MaxValue, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<byte>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<string>("qq")).Method1<byte>(10000000, 4uy))      ("qq", 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<int>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<string>("qq")).Method1<int>(10000000, 4))      ("qq", 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<DateTime>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<string>("qq")).Method1<DateTime>(10000000, DateTime.MinValue))      ("qq", DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DatstringeTime>.Method1<string>"      ((new TailCallLoopGenericClassAndMethodAbstractClass<string>("qq")).Method1<string>(10000000, "abc"))      ("qq", "abc")


// Generic tail call within a type via interface
type InterfaceTailCallLoopGenericInterface<'T1> =
  interface
    abstract Method1<'T2> : int * 'T2 -> ('T1 * 'T2)
    abstract Method2<'T2> : int * 'T2 -> ('T1 * 'T2)
  end
type TailCallLoopImplementGenericInterface<'T1>(resultA: 'T1) =
    interface InterfaceTailCallLoopGenericInterface<'T1> with
        member this.Method1<'T2>(x:int, resultB: 'T2) =
            if x = 0 then (resultA, resultB) else (this :> InterfaceTailCallLoopGenericInterface<'T1>).Method2 (x - 1, resultB)
        member this.Method2<'T2>(x:int, resultB: 'T2) =
            if x = 0 then (resultA, resultB) else (this :> InterfaceTailCallLoopGenericInterface<'T1>).Method1 (x - 1, resultB)

let create<'T> result = TailCallLoopImplementGenericInterface<'T>(result) :> InterfaceTailCallLoopGenericInterface<'T>

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<byte>"      ((create<byte>(3uy)).Method1<byte>(10000000, 4uy))      (3uy, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<int>"      ((create<byte>(3uy)).Method1<int>(10000000, 4))      (3uy, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<DateTime>"      ((create<byte>(3uy)).Method1<DateTime>(10000000, DateTime.MinValue))      (3uy, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<string>"      ((create<byte>(3uy)).Method1<string>(10000000, "abc"))      (3uy, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<byte>"      ((create<int>(3)).Method1<byte>(10000000, 4uy))      (3, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<int>"      ((create<int>(3)).Method1<int>(10000000, 4))      (3, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<DateTime>"      ((create<int>(3)).Method1<DateTime>(10000000, DateTime.MinValue))      (3, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<string>"      ((create<int>(3)).Method1<string>(10000000, "abc"))      (3, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<byte>"      ((create<DateTime>(DateTime.MaxValue)).Method1<byte>(10000000, 4uy))      (DateTime.MaxValue, 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<int>"      ((create<DateTime>(DateTime.MaxValue)).Method1<int>(10000000, 4))      (DateTime.MaxValue, 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<DateTime>"      ((create<DateTime>(DateTime.MaxValue)).Method1<DateTime>(10000000, DateTime.MinValue))      (DateTime.MaxValue, DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<string>"      ((create<DateTime>(DateTime.MaxValue)).Method1<string>(10000000, "abc"))      (DateTime.MaxValue, "abc")

RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<byte>"      ((create<string>("qq")).Method1<byte>(10000000, 4uy))      ("qq", 4uy)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<int>"      ((create<string>("qq")).Method1<int>(10000000, 4))      ("qq", 4)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<DateTime>"      ((create<string>("qq")).Method1<DateTime>(10000000, DateTime.MinValue))      ("qq", DateTime.MinValue)
RunTest "TailCallLoopGenericClassAndMethodAbstractClass<DatstringeTime>.Method1<string>"      ((create<string>("qq")).Method1<string>(10000000, "abc"))      ("qq", "abc")

// Generic tail call within a type
type TailCallLoopGenericClass<'T1>(resultA: 'T1) =
    member this.Method1(x:int) =
        if x = 0 then resultA else this.Method2 (x - 1)
    member this.Method2(x:int) =
        if x = 0 then resultA else this.Method1 (x  - 1)
    member this.Result =
        this.Method1 10000000

RunTest "TailCallLoopGenericClass<int>"      ((new TailCallLoopGenericClass<int>(3)).Result)      3
RunTest "TailCallLoopGenericClass<DateTime>" ((new TailCallLoopGenericClass<DateTime>(DateTime.MinValue)).Result) DateTime.MinValue
RunTest "TailCallLoopGenericClass<string>" ((new TailCallLoopGenericClass<string>("abc")).Result) "abc"

// Generic tail call calling sizeof within a type
type StaticTailCallLoop<'T1>() =
    static let rec f x = if x = 0 then sizeof<'T1> else f (x  - 1)
    static let v5 = f HugeInt
    static member Result =
        f HugeInt + v5

RunTest "StaticTailCallLoop<int>"      (StaticTailCallLoop<int>.Result)      8
RunTest "StaticTailCallLoop<DateTime>" (StaticTailCallLoop<DateTime>.Result) 16

// --------------------------------------------------
// Some regression tests for F# related to tail calls
// --------------------------------------------------
do RunTest "Seq.filter-length1" ({ 1 .. 1000000 } |> Seq.filter (fun n -> n <> 1) |> Seq.length) 999999;;
do RunTest "Seq.filter-length2" ({ 1 .. 1000000 } |> Seq.filter (fun n -> n = 1)  |> Seq.length) 1;;
do RunTest "Seq.filter-length3" ({ 1 .. 1000000 } |> Seq.filter (fun n -> n % 2 = 0) |> Seq.length) 500000;;

exit 0
*/

.assembly extern mscorlib { }

.assembly 'fsharp-shallowtail' { }

.class private abstract auto ansi sealed '<StartupCode$fsharp>'.$Fsharp
extends [mscorlib]System.Object
{
.method public static void main@() cil managed
{
.entrypoint

ldstr "simpleTail1"
call int32 Fsharp::get_HugeInt()
ldc.i4.0
call int32 Fsharp::simpleTail1(int32, int32)
call int32 Fsharp::get_HugeInt()
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "simpleTail2"
call int32 Fsharp::get_HugeInt()
ldc.i4.0
call int32 Fsharp::simpleTail2(int32, int32)
call int32 Fsharp::get_HugeInt()
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "mutualTail1IsOdd"
call int32 Fsharp::get_HugeInt()
call bool Fsharp::mutualTail1IsOdd(int32)
ldc.i4.0
call void Fsharp::RunTest<bool>(string, !!0, !!0)

ldstr "mutualTail1IsEven"
call int32 Fsharp::get_HugeInt()
call bool Fsharp::mutualTail1IsEven(int32)
ldc.i4.1
call void Fsharp::RunTest<bool>(string, !!0, !!0)

ldstr "TailCallLoop<int>"
newobj instance void class Fsharp/TailCallLoop`1<int32>::.ctor()
callvirt instance int32 class Fsharp/TailCallLoop`1<int32>::get_Result()
ldc.i4.2
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "TailCallLoop<DateTime>"
newobj instance void class Fsharp/TailCallLoop`1<valuetype [mscorlib]System.DateTime>::.ctor()
callvirt instance int32 class Fsharp/TailCallLoop`1<valuetype [mscorlib]System.DateTime>::get_Result()
ldc.i4.2
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<byte>.Method1<byte>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<byte>.Method1<int>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<byte>.Method1<DateTime>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<byte>.Method1<string>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<uint8>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<uint8,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<int>.Method1<byte>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<int>.Method1<int>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<int>.Method1<DateTime>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<int>.Method1<string>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<int32>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<int32,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<DateTime>.Method1<byte>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<uint8>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<DateTime>.Method1<int>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<int32>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<DateTime>.Method1<DateTime>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<DateTime>.Method1<string>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<string>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<string>.Method1<byte>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::Method1<uint8>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<string>.Method1<int>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::Method1<int32>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<string>.Method1<DateTime>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldstr "qq"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethod<string>.Method1<string>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<string>::Method1<string>(int32, !!0)
ldstr "qq"
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<string,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<byte>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<uint8>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<int>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<uint8>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<DateTime>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<uint8>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<string>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<uint8>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<uint8>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<uint8,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<byte>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<int32>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<int>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<int32>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<DateTime>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<int32>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<string>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<int32>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<int32>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<int32,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<byte>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<uint8>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<int>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<int32>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<DateTime>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<string>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<valuetype [mscorlib]System.DateTime>::Method1<string>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<byte>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<string>::Method1<uint8>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<int>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<string>::Method1<int32>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,int32>::.ctor(!0, !1)

call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,int32>>(string, !!0, !!0)
ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<DateTime>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<string>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldstr "qq"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DatstringeTime>.Method1<string>"
ldstr "qq"
newobj instance void class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<string>::.ctor(!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<string>::Method1<string>(int32, !!0)
ldstr "qq"
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<string,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<byte>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<uint8>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<uint8>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<int>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<uint8>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<uint8>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<uint8,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<DateTime>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<uint8>(!!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<uint8>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<byte>.Method1<string>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<uint8>(!!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<uint8>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<uint8,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<uint8,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<byte>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<int32>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<int32>::Method1<uint8>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<int>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<int32>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<int32>::Method1<int32>(int32, !!0)
ldc.i4.3
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<int32,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<DateTime>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<int32>(!!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<int32>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldc.i4.3
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<int>.Method1<string>"
ldc.i4.3
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<int32>(!!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<int32>::Method1<string>(int32, !!0)
ldc.i4.3
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<int32,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<int32,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<byte>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<valuetype [mscorlib]System.DateTime>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<valuetype [mscorlib]System.DateTime>::Method1<uint8>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<int>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<valuetype [mscorlib]System.DateTime>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<valuetype [mscorlib]System.DateTime>::Method1<int32>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<DateTime>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<valuetype [mscorlib]System.DateTime>(!!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<valuetype [mscorlib]System.DateTime>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DateTime>.Method1<string>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<valuetype [mscorlib]System.DateTime>(!!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<valuetype [mscorlib]System.DateTime>::Method1<string>(int32, !!0)
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<valuetype [mscorlib]System.DateTime,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<byte>"
ldstr "qq"
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<string>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<string>::Method1<uint8>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,uint8>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,uint8>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<int>"
ldstr "qq"
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<string>(!!0)
call int32 Fsharp::get_HugeInt()
ldc.i4.4
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<string>::Method1<int32>(int32, !!0)
ldstr "qq"
ldc.i4.4
newobj instance void class [mscorlib]System.Tuple`2<string,int32>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,int32>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<string>.Method1<DateTime>"
ldstr "qq"
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<string>(!!0)
call int32 Fsharp::get_HugeInt()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<string>::Method1<valuetype [mscorlib]System.DateTime>(int32, !!0)
ldstr "qq"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,valuetype [mscorlib]System.DateTime>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClassAndMethodAbstractClass<DatstringeTime>.Method1<string>"
ldstr "qq"
call class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!0> Fsharp::create<string>(!!0)
call int32 Fsharp::get_HugeInt()
ldstr "abc"
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<string>::Method1<string>(int32, !!0)
ldstr "qq"
ldstr "abc"
newobj instance void class [mscorlib]System.Tuple`2<string,string>::.ctor(!0, !1)
call void Fsharp::RunTest<class [mscorlib]System.Tuple`2<string,string>>(string, !!0, !!0)

ldstr "TailCallLoopGenericClass<int>"
ldc.i4.3
newobj instance void class Fsharp/TailCallLoopGenericClass`1<int32>::.ctor(!0)
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<int32>::get_Result()
ldc.i4.3
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "TailCallLoopGenericClass<DateTime>"
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
newobj instance void class Fsharp/TailCallLoopGenericClass`1<valuetype [mscorlib]System.DateTime>::.ctor(!0)
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<valuetype [mscorlib]System.DateTime>::get_Result()
ldsfld valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MinValue
call void Fsharp::RunTest<valuetype [mscorlib]System.DateTime>(string, !!0, !!0)

ldstr "TailCallLoopGenericClass<string>"
ldstr "abc"
newobj instance void class Fsharp/TailCallLoopGenericClass`1<string>::.ctor(!0)
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<string>::get_Result()
ldstr "abc"
call void Fsharp::RunTest<string>(string, !!0, !!0)

ldstr "StaticTailCallLoop<int>"
call int32 class Fsharp/StaticTailCallLoop`1<int32>::get_Result()
ldc.i4.8
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "StaticTailCallLoop<DateTime>"
call int32 class Fsharp/StaticTailCallLoop`1<valuetype [mscorlib]System.DateTime>::get_Result()
ldc.i4.s 16
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "Seq.filter-length1"
newobj instance void Fsharp/clo@223::.ctor()
ldc.i4.1
ldc.i4.1
ldc.i4 0xf4240
call class [mscorlib]System.Collections.Generic.IEnumerable`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::RangeInt32(int32, int32, int32)
call class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> Microsoft.FSharp.Collections.SeqModule::Filter<int32>(class Microsoft.FSharp.Core.FSharpFunc`2<!!0,bool>, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
call int32 Microsoft.FSharp.Collections.SeqModule::Length<int32>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
ldc.i4 0xf423f
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "Seq.filter-length2"
newobj instance void Fsharp/'clo@224-1'::.ctor()
ldc.i4.1
ldc.i4.1
ldc.i4 0xf4240
call class [mscorlib]System.Collections.Generic.IEnumerable`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::RangeInt32(int32, int32, int32)
call class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> Microsoft.FSharp.Collections.SeqModule::Filter<int32>(class Microsoft.FSharp.Core.FSharpFunc`2<!!0,bool>, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
call int32 Microsoft.FSharp.Collections.SeqModule::Length<int32>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
ldc.i4.1
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldstr "Seq.filter-length3"
newobj instance void Fsharp/'clo@225-2'::.ctor()
ldc.i4.1
ldc.i4.1
ldc.i4 0xf4240
call class [mscorlib]System.Collections.Generic.IEnumerable`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::RangeInt32(int32, int32, int32)
call class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> Microsoft.FSharp.Collections.SeqModule::Filter<int32>(class Microsoft.FSharp.Core.FSharpFunc`2<!!0,bool>, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
call int32 Microsoft.FSharp.Collections.SeqModule::Length<int32>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
ldc.i4 0x7a120
call void Fsharp::RunTest<int32>(string, !!0, !!0)

ldc.i4.0
call !!0 Microsoft.FSharp.Core.Operators::Exit<class Microsoft.FSharp.Core.Unit>(int32)
pop
ret
}
}
.class private abstract auto ansi sealed '<StartupCode$FSharp-Core>'.'$Prim-types'
extends [mscorlib]System.Object
{
.field static assembly initonly string AddressOpNotFirstClassString@656
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 49 54 68 69 73 20 76 61 6C 75 65 20 69 73
20 66 6F 72 20 75 73 65 20 62 79 20 63 6F 6D 70
69 6C 65 64 20 46 23 20 63 6F 64 65 20 61 6E 64
20 73 68 6F 75 6C 64 20 6E 6F 74 20 62 65 20 75
73 65 64 20 64 69 72 65 63 74 6C 79 B4 04 00 00
01 00 54 02 08 49 73 48 69 64 64 65 6E 01 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly string NoNegateMinValueString@657
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 49 54 68 69 73 20 76 61 6C 75 65 20 69 73
20 66 6F 72 20 75 73 65 20 62 79 20 63 6F 6D 70
69 6C 65 64 20 46 23 20 63 6F 64 65 20 61 6E 64
20 73 68 6F 75 6C 64 20 6E 6F 74 20 62 65 20 75
73 65 64 20 64 69 72 65 63 74 6C 79 B4 04 00 00
01 00 54 02 08 49 73 48 69 64 64 65 6E 01 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly string InputSequenceEmptyString@659
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 49 54 68 69 73 20 76 61 6C 75 65 20 69 73
20 66 6F 72 20 75 73 65 20 62 79 20 63 6F 6D 70
69 6C 65 64 20 46 23 20 63 6F 64 65 20 61 6E 64
20 73 68 6F 75 6C 64 20 6E 6F 74 20 62 65 20 75
73 65 64 20 64 69 72 65 63 74 6C 79 B4 04 00 00
01 00 54 02 08 49 73 48 69 64 64 65 6E 01 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly string InputArrayEmptyString@661
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 49 54 68 69 73 20 76 61 6C 75 65 20 69 73
20 66 6F 72 20 75 73 65 20 62 79 20 63 6F 6D 70
69 6C 65 64 20 46 23 20 63 6F 64 65 20 61 6E 64
20 73 68 6F 75 6C 64 20 6E 6F 74 20 62 65 20 75
73 65 64 20 64 69 72 65 63 74 6C 79 B4 04 00 00
01 00 54 02 08 49 73 48 69 64 64 65 6E 01 )
.field static assembly initonly string InputMustBeNonNegativeString@663
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 49 54 68 69 73 20 76 61 6C 75 65 20 69 73
20 66 6F 72 20 75 73 65 20 62 79 20 63 6F 6D 70
69 6C 65 64 20 46 23 20 63 6F 64 65 20 61 6E 64
20 73 68 6F 75 6C 64 20 6E 6F 74 20 62 65 20 75
73 65 64 20 64 69 72 65 63 74 6C 79 B4 04 00 00
01 00 54 02 08 49 73 48 69 64 64 65 6E 01 )
.field static assembly initonly class [mscorlib]System.Exception NaNException@951
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer fsComparerPER@1179
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer fsComparerER@1182
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.IEqualityComparer fsEqualityComparerNoHashingPER@1654
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.IEqualityComparer fsEqualityComparerNoHashingER@1661
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER fsEqualityComparerUnlimitedHashingER@1807
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER fsEqualityComparerUnlimitedHashingPER@1810
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.IComparer GenericComparer@2195
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.IEqualityComparer GenericEqualityComparer@2196
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.IEqualityComparer GenericEqualityERComparer@2197
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<bool> BoolIEquality@2220
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<char> CharIEquality@2221
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<string> StringIEquality@2222
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int8> SByteIEquality@2223
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int16> Int16IEquality@2224
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int32> Int32IEquality@2225
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int64> Int64IEquality@2226
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native int> IntPtrIEquality@2227
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint8> ByteIEquality@2228
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint16> UInt16IEquality@2229
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint32> UInt32IEquality@2230
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint64> UInt64IEquality@2231
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native uint> UIntPtrIEquality@2232
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float64> FloatIEquality@2233
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float32> Float32IEquality@2234
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IEqualityComparer`1<valuetype [mscorlib]System.Decimal> DecimalIEquality@2235
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<char> CharComparer@2299
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<string> StringComparer@2300
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<int8> SByteComparer@2301
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<int16> Int16Comparer@2302
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<int32> Int32Comparer@2303
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<int64> Int64Comparer@2304
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<native int> IntPtrComparer@2305
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<uint8> ByteComparer@2306
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<uint16> UInt16Comparer@2307
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<uint32> UInt32Comparer@2308
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<uint64> UInt64Comparer@2309
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<native uint> UIntPtrComparer@2310
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<float64> FloatComparer@2311
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<float32> Float32Comparer@2312
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field static assembly initonly class [mscorlib]System.Collections.Generic.IComparer`1<valuetype [mscorlib]System.Decimal> DecimalComparer@2313
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.method private specialname rtspecialname static void .cctor() cil managed
{
ldstr "addressOpNotFirstClass"
stsfld string '<StartupCode$FSharp-Core>'.'$Prim-types'::AddressOpNotFirstClassString@656
ldstr "noNegateMinValue"
stsfld string '<StartupCode$FSharp-Core>'.'$Prim-types'::NoNegateMinValueString@657
ldstr "inputSequenceEmpty"
stsfld string '<StartupCode$FSharp-Core>'.'$Prim-types'::InputSequenceEmptyString@659
ldstr "arrayWasEmpty"
stsfld string '<StartupCode$FSharp-Core>'.'$Prim-types'::InputArrayEmptyString@661
ldstr "inputMustBeNonNegative"
stsfld string '<StartupCode$FSharp-Core>'.'$Prim-types'::InputMustBeNonNegativeString@663
newobj instance void [mscorlib]System.Exception::.ctor()
stsfld class [mscorlib]System.Exception '<StartupCode$FSharp-Core>'.'$Prim-types'::NaNException@951
ldc.i4.1
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer::.ctor(bool)
stsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsComparerPER@1179
ldc.i4.0
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer::.ctor(bool)
stsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsComparerER@1182
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/fsEqualityComparerNoHashingPER@1655::.ctor()
stsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerNoHashingPER@1654
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/fsEqualityComparerNoHashingER@1662::.ctor()
stsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerNoHashingER@1661
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER::.ctor()
stsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerUnlimitedHashingER@1807
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER::.ctor()
stsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerUnlimitedHashingPER@1810
call class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsComparerER()
stsfld class [mscorlib]System.Collections.IComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::GenericComparer@2195
call class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerUnlimitedHashingPER()
stsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::GenericEqualityComparer@2196
call class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerUnlimitedHashingER()
stsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::GenericEqualityERComparer@2197
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/BoolIEquality@2220::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<bool> '<StartupCode$FSharp-Core>'.'$Prim-types'::BoolIEquality@2220
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/CharIEquality@2221::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<char> '<StartupCode$FSharp-Core>'.'$Prim-types'::CharIEquality@2221
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/StringIEquality@2222::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<string> '<StartupCode$FSharp-Core>'.'$Prim-types'::StringIEquality@2222
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/SByteIEquality@2223::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int8> '<StartupCode$FSharp-Core>'.'$Prim-types'::SByteIEquality@2223
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int16IEquality@2224::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int16> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int16IEquality@2224
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int32IEquality@2225::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int32> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int32IEquality@2225
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int64IEquality@2226::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int64> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int64IEquality@2226
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/IntPtrIEquality@2227::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native int> '<StartupCode$FSharp-Core>'.'$Prim-types'::IntPtrIEquality@2227
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/ByteIEquality@2228::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint8> '<StartupCode$FSharp-Core>'.'$Prim-types'::ByteIEquality@2228
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt16IEquality@2229::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint16> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt16IEquality@2229
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt32IEquality@2230::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint32> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt32IEquality@2230
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt64IEquality@2231::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint64> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt64IEquality@2231
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UIntPtrIEquality@2232::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native uint> '<StartupCode$FSharp-Core>'.'$Prim-types'::UIntPtrIEquality@2232
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/FloatIEquality@2233::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float64> '<StartupCode$FSharp-Core>'.'$Prim-types'::FloatIEquality@2233
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Float32IEquality@2234::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float32> '<StartupCode$FSharp-Core>'.'$Prim-types'::Float32IEquality@2234
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/DecimalIEquality@2235::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IEqualityComparer`1<valuetype [mscorlib]System.Decimal> '<StartupCode$FSharp-Core>'.'$Prim-types'::DecimalIEquality@2235
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/CharComparer@2299::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<char> '<StartupCode$FSharp-Core>'.'$Prim-types'::CharComparer@2299
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/StringComparer@2300::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<string> '<StartupCode$FSharp-Core>'.'$Prim-types'::StringComparer@2300
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/SByteComparer@2301::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<int8> '<StartupCode$FSharp-Core>'.'$Prim-types'::SByteComparer@2301
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int16Comparer@2302::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<int16> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int16Comparer@2302
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int32Comparer@2303::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<int32> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int32Comparer@2303
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Int64Comparer@2304::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<int64> '<StartupCode$FSharp-Core>'.'$Prim-types'::Int64Comparer@2304
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/IntPtrComparer@2305::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<native int> '<StartupCode$FSharp-Core>'.'$Prim-types'::IntPtrComparer@2305
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/ByteComparer@2306::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<uint8> '<StartupCode$FSharp-Core>'.'$Prim-types'::ByteComparer@2306
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt16Comparer@2307::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<uint16> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt16Comparer@2307
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt32Comparer@2308::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<uint32> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt32Comparer@2308
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UInt64Comparer@2309::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<uint64> '<StartupCode$FSharp-Core>'.'$Prim-types'::UInt64Comparer@2309
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/UIntPtrComparer@2310::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<native uint> '<StartupCode$FSharp-Core>'.'$Prim-types'::UIntPtrComparer@2310
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/FloatComparer@2311::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<float64> '<StartupCode$FSharp-Core>'.'$Prim-types'::FloatComparer@2311
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/Float32Comparer@2312::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<float32> '<StartupCode$FSharp-Core>'.'$Prim-types'::Float32Comparer@2312
newobj instance void Microsoft.FSharp.Core.LanguagePrimitives/DecimalComparer@2313::.ctor()
stsfld class [mscorlib]System.Collections.Generic.IComparer`1<valuetype [mscorlib]System.Decimal> '<StartupCode$FSharp-Core>'.'$Prim-types'::DecimalComparer@2313
ret
}
}
.class public abstract auto ansi sealed Fsharp
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class abstract auto ansi serializable nested public AbstractTailCallLoopGenericClassAndMethod`1<T1>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.AbstractClassAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly !T1 resultA
.method public hidebysig abstract virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method1<T2>(int32 A_1, !!T2 A_2) cil managed
{
}
.method public specialname rtspecialname instance void .ctor(!T1 resultA) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld !0 class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>::resultA
ret
}
.method public hidebysig virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method2<T2>(int32 x, !!T2 resultB) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>::Method1<!!0>(int32, !!0)
ret
}
}
.class auto ansi serializable sealed nested assembly beforefieldinit clo@223
extends class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>
{
.method assembly specialname rtspecialname instance void .ctor() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>::.ctor()
ret
}
.method public strict virtual instance bool Invoke(int32 n) cil managed
{
ldarg.1
ldc.i4.1
ceq
ldc.i4.0
ceq
ret
}
}
.class auto ansi serializable sealed nested assembly beforefieldinit 'clo@224-1'
extends class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>
{
.method assembly specialname rtspecialname instance void .ctor() cil managed
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>::.ctor()
ret
}
.method public strict virtual instance bool Invoke(int32 n) cil managed
{
ldarg.1
ldc.i4.1
ceq
ret
}
}
.class auto ansi serializable sealed nested assembly beforefieldinit 'clo@225-2'
extends class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>
{
.method assembly specialname rtspecialname instance void .ctor() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void class Microsoft.FSharp.Core.FSharpFunc`2<int32,bool>::.ctor()
ret
}
.method public strict virtual instance bool Invoke(int32 n) cil managed
{
ldarg.1
ldc.i4.2
rem
ldc.i4.0
ceq
ret
}
}
.class interface abstract auto ansi serializable nested public InterfaceTailCallLoopGenericInterface`1<T1>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.method public hidebysig abstract virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method1<T2>(int32 A_1, !!T2 A_2) cil managed
{
}
.method public hidebysig abstract virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method2<T2>(int32 A_1, !!T2 A_2) cil managed
{
}
}
.class auto ansi serializable nested public StaticTailCallLoop`1<T1>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field static assembly int32 v5
.field static assembly int32 init@211
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private specialname rtspecialname static void .cctor() cil managed
{
call int32 Fsharp::get_HugeInt()
call int32 class Fsharp/StaticTailCallLoop`1<!T1>::f(int32)
stsfld int32 class Fsharp/StaticTailCallLoop`1<!T1>::v5
ldc.i4.2
volatile.
stsfld int32 class Fsharp/StaticTailCallLoop`1<!T1>::init@211
ret
}
.method public specialname static int32 get_Result() cil managed
{
call int32 Fsharp::get_HugeInt()
call int32 class Fsharp/StaticTailCallLoop`1<!T1>::f(int32)
volatile.
ldsfld int32 class Fsharp/StaticTailCallLoop`1<!T1>::init@211
ldc.i4.2
bge.s IL_0016
br.s IL_0018
IL_0016:
br.s IL_001f
IL_0018:
call void Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::FailStaticInit()
br.s IL_001f
IL_001f:
ldsfld int32 class Fsharp/StaticTailCallLoop`1<!T1>::v5
add
ret
}
.method assembly static int32 f(int32 x) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
IL_0000:
ldarg.0
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_000e
IL_0007:
sizeof !T1
ret
IL_000e:
ldarg.0
ldc.i4.1
sub
starg.s x
br.s IL_0000
}
.property int32 Result()
{
.get int32 Fsharp/StaticTailCallLoop`1::get_Result()
}
}
.class auto ansi serializable nested public TailCallLoop`1<T1>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly int32 v5
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.0
call int32 Fsharp::get_HugeInt()
callvirt instance int32 class Fsharp/TailCallLoop`1<!T1>::f(int32)
stfld int32 class Fsharp/TailCallLoop`1<!T1>::v5
ret
}
.method public hidebysig specialname instance int32 get_Result() cil managed
{
ldarg.0
call int32 Fsharp::get_HugeInt()
callvirt instance int32 class Fsharp/TailCallLoop`1<!T1>::f(int32)
ldarg.0
ldfld int32 class Fsharp/TailCallLoop`1<!T1>::v5
add
ret
}
.method assembly hidebysig instance int32 f(int32 x) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Fsharp/TailCallLoop`1<!T1> V_0, int32 V_1)
IL_0000:
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0009
IL_0007:
ldc.i4.1
ret
IL_0009:
ldarg.0
stloc.0
ldarg.1
ldc.i4.1
sub
stloc.1
ldloc.0
ldloc.1
starg.s x
starg.s 0
br.s IL_0000
}
.property instance int32 Result()
{
.get instance int32 Fsharp/TailCallLoop`1::get_Result()
}
}
.class auto ansi serializable nested public TailCallLoopGenericClass`1<T1>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly !T1 resultA
.method public specialname rtspecialname instance void .ctor(!T1 resultA) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::resultA
ret
}
.method public hidebysig instance !T1 Method1(int32 x) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_000e
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::resultA
ret
IL_000e:
ldarg.0
ldarg.1
ldc.i4.1
sub
tail.
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::Method2(int32)
ret
}
.method public hidebysig instance !T1 Method2(int32 x) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_000e
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::resultA
ret
IL_000e:
ldarg.0
ldarg.1
ldc.i4.1
sub
tail.
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::Method1(int32)
ret
}
.method public hidebysig specialname instance !T1 get_Result() cil managed
{
ldarg.0
call int32 Fsharp::get_HugeInt()
tail.
callvirt instance !0 class Fsharp/TailCallLoopGenericClass`1<!T1>::Method1(int32)
ret
}
.property instance !T1 Result()
{
.get instance !T1 Fsharp/TailCallLoopGenericClass`1::get_Result()
}
}
.class auto ansi serializable nested public TailCallLoopGenericClassAndMethod`1<T1>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly !T1 resultA
.method public specialname rtspecialname instance void .ctor(!T1 resultA) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld !0 class Fsharp/TailCallLoopGenericClassAndMethod`1<!T1>::resultA
ret
}
.method public hidebysig instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method1<T2>(int32 x, !!T2 resultB) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopGenericClassAndMethod`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<!T1>::Method2<!!0>(int32, !!0)
ret
}
.method public hidebysig instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method2<T2>(int32 x, !!T2 resultB) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopGenericClassAndMethod`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/TailCallLoopGenericClassAndMethod`1<!T1>::Method1<!!0>(int32, !!0)
ret
}
}
.class auto ansi serializable nested public TailCallLoopGenericClassAndMethodAbstractClass`1<T1>
extends class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly !T1 resultA
.method public specialname rtspecialname instance void .ctor(!T1 resultA) cil managed
{
ldarg.0
ldarg.1
callvirt instance void class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>::.ctor(!0)
ldarg.0
pop
ldarg.0
ldarg.1
stfld !0 class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<!T1>::resultA
ret
}
.method public hidebysig virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> Method1<T2>(int32 x, !!T2 resultB) cil managed
{
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopGenericClassAndMethodAbstractClass`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/AbstractTailCallLoopGenericClassAndMethod`1<!T1>::Method2<!!0>(int32, !!0)
ret
}
}
.class auto ansi serializable nested public TailCallLoopImplementGenericInterface`1<T1>
extends [mscorlib]System.Object
implements class Fsharp/InterfaceTailCallLoopGenericInterface`1<!T1>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly !T1 resultA
.method public specialname rtspecialname instance void .ctor(!T1 resultA) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld !0 class Fsharp/TailCallLoopImplementGenericInterface`1<!T1>::resultA
ret
}
.method private hidebysig newslot virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> 'Fsharp-InterfaceTailCallLoopGenericInterface`1-Method1'<T2>(int32 x, !!T2 resultB) cil managed
{
.override method instance class [mscorlib]System.Tuple`2<!0,!!T2> class Fsharp/InterfaceTailCallLoopGenericInterface`1<!T1>::Method1<[1]>(int32, !!T2)
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopImplementGenericInterface`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<!T1>::Method2<!!0>(int32, !!0)
ret
}
.method private hidebysig newslot virtual instance class [mscorlib]System.Tuple`2<!T1,!!T2> 'Fsharp-InterfaceTailCallLoopGenericInterface`1-Method2'<T2>(int32 x, !!T2 resultB) cil managed
{
.override method instance class [mscorlib]System.Tuple`2<!0,!!T2> class Fsharp/InterfaceTailCallLoopGenericInterface`1<!T1>::Method2<[1]>(int32, !!T2)
ldarg.1
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0014
IL_0007:
ldarg.0
ldfld !0 class Fsharp/TailCallLoopImplementGenericInterface`1<!T1>::resultA
ldarg.2
newobj instance void class [mscorlib]System.Tuple`2<!T1,!!T2>::.ctor(!0, !1)
ret
IL_0014:
ldarg.0
ldarg.1
ldc.i4.1
sub
ldarg.2
tail.
callvirt instance class [mscorlib]System.Tuple`2<!0,!!0> class Fsharp/InterfaceTailCallLoopGenericInterface`1<!T1>::Method1<!!0>(int32, !!0)
ret
}
}
.method public specialname static int32 get_HugeInt() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
ldc.i4 0x80
ret
}
.method public static int32 simpleTail1(int32 x, int32 acc) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
IL_0000:
ldarg.0
brtrue.s IL_0005
br.s IL_0007
IL_0005:
br.s IL_0009
IL_0007:
ldarg.1
ret
IL_0009:
ldarg.0
ldc.i4.1
sub
ldarg.1
ldc.i4.1
add
starg.s acc
starg.s x
br.s IL_0000
}
.method public static void RunTest<a>(string msg, !!a actual, !!a expected) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.locals init (!!a V_0, !!a V_1)
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.0
ldloc.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityIntrinsic<!!0>(!!0, !!0)
brfalse.s IL_000f
br.s IL_0011
IL_000f:
br.s IL_0022
IL_0011:
ldarg.0
ldstr ": YES"
call string [mscorlib]System.String::Concat(string, string)
call void [mscorlib]System.Console::WriteLine(string)
ret
IL_0022:
ldstr "\n***** "
ldarg.0
call string [mscorlib]System.String::Concat(string, string)
ldstr ": FAIL\n"
call string [mscorlib]System.String::Concat(string, string)
call void [mscorlib]System.Console::WriteLine(string)
ldc.i4.1
call !!0 Microsoft.FSharp.Core.Operators::Exit<class Microsoft.FSharp.Core.Unit>(int32)
pop
ret
}
.method public static int32 simpleTail2(int32 acc, int32 _arg1) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1)
IL_0000:
ldarg.1
stloc.0
ldloc.0
switch (
IL_000e)
br.s IL_0010
IL_000e:
ldarg.0
ret
IL_0010:
ldloc.0
stloc.1
ldarg.0
ldc.i4.1
add
ldloc.1
ldc.i4.1
sub
starg.s _arg1
starg.s acc
br.s IL_0000
}
.method public static bool mutualTail1IsOdd(int32 x) cil managed
{
.locals init (int32 V_0, int32 V_1)
ldarg.0
stloc.0
ldloc.0
ldc.i4.1
sub
switch (
IL_0010)
br.s IL_0012
IL_0010:
ldc.i4.1
ret
IL_0012:
ldloc.0
stloc.1
ldarg.0
ldc.i4.1
sub
tail.
call bool Fsharp::mutualTail1IsEven(int32)
ret
}
.method public static bool mutualTail1IsEven(int32 x) cil managed
{
.locals init (int32 V_0, int32 V_1)
ldarg.0
stloc.0
ldloc.0
switch (
IL_0012,
IL_0014)
br.s IL_0018
IL_0012:
br.s IL_0016
IL_0014:
ldc.i4.0
ret
IL_0016:
ldc.i4.1
ret
IL_0018:
ldloc.0
stloc.1
ldarg.0
ldc.i4.1
sub
tail.
call bool Fsharp::mutualTail1IsOdd(int32)
ret
}
.method public static class Fsharp/InterfaceTailCallLoopGenericInterface`1<!!T> create<T>(!!T result) cil managed
{
ldarg.0
newobj instance void class Fsharp/TailCallLoopImplementGenericInterface`1<!!T>::.ctor(!0)
ret
}
.property int32 HugeInt()
{
.get int32 Fsharp::get_HugeInt()
}
}
.class public abstract auto ansi sealed Microsoft.FSharp.Core.LanguagePrimitives
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto autochar serializable sealed nested assembly beforefieldinit specialname BoolIEquality@2220
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<bool>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(bool obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<bool>::GetHashCode(!0)
ldarg.1
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(bool x, bool y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<bool>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname ByteComparer@2306
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<uint8>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(uint8 x, uint8 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<uint8>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname ByteIEquality@2228
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint8>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(uint8 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint8>::GetHashCode(!0)
ldarg.1
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(uint8 x, uint8 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint8>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname CharComparer@2299
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<char>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(char x, char y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<char>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname CharIEquality@2221
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<char>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(char obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<char>::GetHashCode(!0)
ldarg.1
ldc.i4.s 16
shl
ldarg.1
or
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(char x, char y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<char>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname DecimalComparer@2313
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<valuetype [mscorlib]System.Decimal>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(valuetype [mscorlib]System.Decimal x, valuetype [mscorlib]System.Decimal y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<valuetype [mscorlib]System.Decimal>::Compare(!0, !0)
ldarg.1
ldarg.2
call int32 [mscorlib]System.Decimal::Compare(valuetype [mscorlib]System.Decimal, valuetype [mscorlib]System.Decimal)
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname DecimalIEquality@2235
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<valuetype [mscorlib]System.Decimal>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(valuetype [mscorlib]System.Decimal obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<valuetype [mscorlib]System.Decimal>::GetHashCode(!0)
ldarg.1
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashIntrinsic<valuetype [mscorlib]System.Decimal>(!!0)
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(valuetype [mscorlib]System.Decimal x, valuetype [mscorlib]System.Decimal y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<valuetype [mscorlib]System.Decimal>::Equals(!0, !0)
ldarg.1
ldarg.2
call bool [mscorlib]System.Decimal::op_Equality(valuetype [mscorlib]System.Decimal, valuetype [mscorlib]System.Decimal)
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Float32Comparer@2312
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<float32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(float32 x, float32 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<float32>::Compare(!0, !0)
ldarg.1
ldarg.2
clt
brfalse.s IL_0009
ldc.i4.m1
ret
IL_0009:
ldarg.1
ldarg.2
cgt
brfalse.s IL_0011
ldc.i4.1
ret
IL_0011:
ldarg.1
ldarg.2
ceq
brfalse.s IL_0019
ldc.i4.0
ret
IL_0019:
ldarg.2
ldarg.2
ceq
brfalse.s IL_0021
ldc.i4.m1
ret
IL_0021:
ldarg.1
ldarg.1
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Float32IEquality@2234
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(float32 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float32>::GetHashCode(!0)
ldarg.1
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashIntrinsic<float32>(!!0)
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(float32 x, float32 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float32>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname FloatComparer@2311
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<float64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(float64 x, float64 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<float64>::Compare(!0, !0)
ldarg.1
ldarg.2
clt
brfalse.s IL_0009
ldc.i4.m1
ret
IL_0009:
ldarg.1
ldarg.2
cgt
brfalse.s IL_0011
ldc.i4.1
ret
IL_0011:
ldarg.1
ldarg.2
ceq
brfalse.s IL_0019
ldc.i4.0
ret
IL_0019:
ldarg.2
ldarg.2
ceq
brfalse.s IL_0021
ldc.i4.m1
ret
IL_0021:
ldarg.1
ldarg.1
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname FloatIEquality@2233
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(float64 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float64>::GetHashCode(!0)
ldarg.1
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashIntrinsic<float64>(!!0)
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(float64 x, float64 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<float64>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class abstract auto ansi sealed nested public HashCompare
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto autochar serializable sealed nested assembly beforefieldinit specialname fsEqualityComparerNoHashingER@1662
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IEqualityComparer
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-IEqualityComparer-Equals'(object x, object y) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::Equals
ldc.i4.1
ldarg.0
ldarg.1
ldarg.2
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-IEqualityComparer-GetHashCode'(object obj) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::GetHashCode
ldstr "notUsedForHashing"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname fsEqualityComparerNoHashingPER@1655
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IEqualityComparer
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-IEqualityComparer-Equals'(object x, object y) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::Equals
ldc.i4.0
ldarg.0
ldarg.1
ldarg.2
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-IEqualityComparer-GetHashCode'(object obj) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::GetHashCode
ldstr "notUsedForHashing"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
}
.class auto ansi serializable nested assembly GenericComparer
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IComparer
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly bool throwsOnPER
.method public specialname rtspecialname instance void .ctor(bool throwsOnPER) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer::throwsOnPER
ret
}
.method private hidebysig newslot virtual instance int32 'System-Collections-IComparer-Compare'(object x, object y) cil managed
{
.override [mscorlib]System.Collections.IComparer::Compare
ldarg.0
ldarg.1
ldarg.2
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object)
ret
}
}
.class auto ansi serializable nested assembly UnlimitedHasherER
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IEqualityComparer
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual instance bool 'System-Collections-IEqualityComparer-Equals'(object x, object y) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::Equals
ldc.i4.1
ldarg.0
ldarg.1
ldarg.2
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method private hidebysig newslot virtual instance int32 'System-Collections-IEqualityComparer-GetHashCode'(object x) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::GetHashCode
ldarg.0
ldarg.1
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer, object)
ret
}
}
.class auto ansi serializable nested assembly UnlimitedHasherPER
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IEqualityComparer
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual instance bool 'System-Collections-IEqualityComparer-Equals'(object x, object y) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::Equals
ldc.i4.0
ldarg.0
ldarg.1
ldarg.2
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method private hidebysig newslot virtual instance int32 'System-Collections-IEqualityComparer-GetHashCode'(object x) cil managed
{
.override [mscorlib]System.Collections.IEqualityComparer::GetHashCode
ldarg.0
ldarg.1
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer, object)
ret
}
}
.method assembly specialname static class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer get_fsComparerER() cil managed
{
ldsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsComparerER@1182
ret
}
.method assembly specialname static class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER get_fsEqualityComparerUnlimitedHashingPER() cil managed
{
ldsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerUnlimitedHashingPER@1810
ret
}
.method assembly specialname static class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER get_fsEqualityComparerUnlimitedHashingER() cil managed
{
ldsfld class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerUnlimitedHashingER@1807
ret
}
.method public static bool GenericEqualityIntrinsic<T>(!!T x, !!T y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 66 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 61 20 70 72 69 6D 69 74 69 76 65 20
6C 69 62 72 61 72 79 20 72 6F 75 74 69 6E 65 20
75 73 65 64 20 62 79 20 6F 70 74 69 6D 69 7A 65
64 20 46 23 20 63 6F 64 65 20 61 6E 64 20 73 68
6F 75 6C 64 20 6E 6F 74 20 62 65 20 75 73 65 64
20 64 69 72 65 63 74 6C 79 B4 04 00 00 01 00 54
02 08 49 73 48 69 64 64 65 6E 01 )
ldc.i4.0
call class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerNoHashingPER()
ldarg.0
box !!T
ldarg.1
box !!T
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method public static int32 GenericHashIntrinsic<T>(!!T input) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 66 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 61 20 70 72 69 6D 69 74 69 76 65 20
6C 69 62 72 61 72 79 20 72 6F 75 74 69 6E 65 20
75 73 65 64 20 62 79 20 6F 70 74 69 6D 69 7A 65
64 20 46 23 20 63 6F 64 65 20 61 6E 64 20 73 68
6F 75 6C 64 20 6E 6F 74 20 62 65 20 75 73 65 64
20 64 69 72 65 63 74 6C 79 B4 04 00 00 01 00 54
02 08 49 73 48 69 64 64 65 6E 01 )
call class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerUnlimitedHashingPER()
ldarg.0
box !!T
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer, object)
ret
}
.method assembly static !!a FailGenericComparison<a>(object obj) cil managed
{
.locals init (string V_0)
ldarg.0
callvirt instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
callvirt instance string [mscorlib]System.Object::ToString()
stloc.0
ldstr "genericCompareFail1"
ldloc.0
call string [mscorlib]System.String::Format(string, object)
newobj instance void [mscorlib]System.ArgumentException::.ctor(string)
throw
}
.method assembly specialname static class [mscorlib]System.Exception get_NaNException() cil managed
{
ldsfld class [mscorlib]System.Exception '<StartupCode$FSharp-Core>'.'$Prim-types'::NaNException@951
ret
}
.method assembly static int32 GenericCompare$cont@965(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, object yobj, object xobj, class [mscorlib]System.Array arr1, class Microsoft.FSharp.Core.Unit unitVar) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (object[] V_0, object[] V_1, object[] V_2, object[] V_3, uint8[] V_4, uint8[] V_5, uint8[] V_6, uint8[] V_7, class [mscorlib]System.Array V_8, class [mscorlib]System.Array V_9)
ldarg.3
isinst object[]
stloc.0
ldloc.0
brfalse IL_0082
ldarg.1
isinst object[]
stloc.1
ldloc.1
brfalse.s IL_0025
ldloc.1
stloc.2
ldloc.0
stloc.3
ldarg.0
ldloc.3
ldloc.2
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonObjArrayWithComparer(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object[], object[])
ret
IL_0025:
ldarg.3
isinst uint8[]
stloc.s V_4
ldloc.s V_4
brfalse.s IL_0070
ldarg.1
isinst uint8[]
stloc.s V_5
ldloc.s V_5
brfalse.s IL_004f
ldloc.s V_5
stloc.s V_6
ldloc.s V_4
stloc.s V_7
IL_0045:
ldloc.s V_7
ldloc.s V_6
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonByteArray(uint8[], uint8[])
ret
IL_004f:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_8
ldloc.s V_8
brfalse.s IL_0069
ldloc.s V_8
stloc.s V_9
IL_005f:
ldarg.0
ldarg.3
ldloc.s V_9
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonArbArrayWithComparer(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array)
ret
IL_0069:
ldarg.2
call !!0 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::FailGenericComparison<int32>(object)
ret
IL_0070:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_8
ldloc.s V_8
brfalse.s IL_0069
ldloc.s V_8
stloc.s V_9
br.s IL_005f
IL_0082:
ldarg.3
isinst uint8[]
stloc.s V_4
ldloc.s V_4
brfalse.s IL_00b6
ldarg.1
isinst uint8[]
stloc.s V_5
ldloc.s V_5
brfalse.s IL_00a4
ldloc.s V_5
ldloc.s V_4
stloc.s V_7
stloc.s V_6
br.s IL_0045
IL_00a4:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_8
ldloc.s V_8
brfalse.s IL_0069
ldloc.s V_8
stloc.s V_9
br.s IL_005f
IL_00b6:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_8
ldloc.s V_8
brfalse.s IL_0069
ldloc.s V_8
stloc.s V_9
br IL_005f
}
.method assembly static int32 GenericComparisonObjArrayWithComparer(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, object[] x, object[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4, int32 V_5)
ldarg.1
ldlen
conv.i4
stloc.0
ldarg.2
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
bge.s IL_0011
ldc.i4.m1
br.s IL_0016
IL_0011:
ldloc.0
ldloc.1
cgt
IL_0016:
stloc.2
ldloc.2
brfalse.s IL_001c
ldloc.2
ret
IL_001c:
ldc.i4.0
stloc.3
ldc.i4.0
stloc.s V_4
IL_0021:
ldloc.3
ldloc.0
bge.s IL_004f
ldarg.0
ldarg.1
ldloc.3
ldelem [mscorlib]System.Object
ldarg.2
ldloc.3
ldelem [mscorlib]System.Object
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object)
stloc.s V_5
ldloc.s V_5
brfalse.s IL_0048
ldloc.s V_5
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0021
IL_0048:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0021
IL_004f:
ldloc.s V_4
ret
}
.method assembly static int32 GenericComparisonByteArray(uint8[] x, uint8[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4, int32 V_5, uint8 V_6, uint8 V_7)
ldarg.0
ldlen
conv.i4
stloc.0
ldarg.1
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
bge.s IL_0011
ldc.i4.m1
br.s IL_0016
IL_0011:
ldloc.0
ldloc.1
cgt
IL_0016:
stloc.2
ldloc.2
brfalse.s IL_001c
ldloc.2
ret
IL_001c:
ldc.i4.0
stloc.3
ldc.i4.0
stloc.s V_4
IL_0021:
ldloc.3
ldloc.0
bge.s IL_005e
ldarg.0
ldloc.3
ldelem [mscorlib]System.Byte
stloc.s V_6
ldarg.1
ldloc.3
ldelem [mscorlib]System.Byte
stloc.s V_7
ldloc.s V_6
ldloc.s V_7
bge.s IL_0041
ldc.i4.m1
br.s IL_0048
IL_0041:
ldloc.s V_6
ldloc.s V_7
cgt
IL_0048:
stloc.s V_5
ldloc.s V_5
brfalse.s IL_0057
ldloc.s V_5
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0021
IL_0057:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0021
IL_005e:
ldloc.s V_4
ret
}
.method assembly static int32 GenericComparisonArbArrayWithComparer(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.maxstack 10
.locals init (int64 V_0, int64 V_1, int32 V_2, int64 V_3, int64 V_4, int32 V_5, class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer V_6, class [mscorlib]System.Array V_7, class [mscorlib]System.Array V_8, int64 V_9, int64 V_10, int64 V_11, int64 V_12, int32 V_13, int32 V_14, int64 V_15, int64 V_16, int64 V_17, int64 V_18, int64 V_19, int64 V_20, int64[] V_21, class [mscorlib]System.Array V_22, class [mscorlib]System.Array V_23, int32 V_24, int64[] V_25)
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.1
bne.un.s IL_0016
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.1
ceq
br.s IL_0018
IL_0016:
ldc.i4.0
IL_0018:
brfalse IL_0092
ldarg.1
callvirt instance int64 [mscorlib]System.Array::get_LongLength()
stloc.0
ldarg.2
callvirt instance int64 [mscorlib]System.Array::get_LongLength()
stloc.1
ldloc.0
ldloc.1
bge.s IL_0033
ldc.i4.m1
br.s IL_0038
IL_0033:
ldloc.0
ldloc.1
cgt
IL_0038:
stloc.2
ldloc.2
brfalse.s IL_003e
ldloc.2
ret
IL_003e:
ldarg.1
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.3
ldarg.2
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_4
ldloc.3
ldloc.s V_4
bge.s IL_005a
ldc.i4.m1
br.s IL_0060
IL_005a:
ldloc.3
ldloc.s V_4
cgt
IL_0060:
stloc.s V_5
ldloc.s V_5
brfalse.s IL_0069
ldloc.s V_5
ret
IL_0069:
ldarg.0
stloc.s V_6
ldarg.1
stloc.s V_7
ldarg.2
stloc.s V_8
ldloc.0
stloc.s V_9
ldloc.3
stloc.s V_10
ldloc.s V_4
stloc.s V_11
ldarg.0
ldarg.1
ldarg.2
ldloc.0
ldloc.3
ldloc.s V_4
ldc.i8 0x0
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::check@1081(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64)
ret
IL_0092:
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.2
bne.un.s IL_00a7
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.2
ceq
br.s IL_00a9
IL_00a7:
ldc.i4.0
IL_00a9:
brfalse IL_0191
ldarg.1
ldc.i4.0
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.0
ldarg.2
ldc.i4.0
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.1
ldloc.0
ldloc.1
bge.s IL_00c6
ldc.i4.m1
br.s IL_00cb
IL_00c6:
ldloc.0
ldloc.1
cgt
IL_00cb:
stloc.2
ldloc.2
brfalse.s IL_00d1
ldloc.2
ret
IL_00d1:
ldarg.1
ldc.i4.1
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.3
ldarg.2
ldc.i4.1
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.s V_4
ldloc.3
ldloc.s V_4
bge.s IL_00eb
ldc.i4.m1
br.s IL_00f1
IL_00eb:
ldloc.3
ldloc.s V_4
cgt
IL_00f1:
stloc.s V_5
ldloc.s V_5
brfalse.s IL_00fa
ldloc.s V_5
ret
IL_00fa:
ldarg.1
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_9
ldarg.1
ldc.i4.1
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_10
ldarg.2
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_11
ldarg.2
ldc.i4.1
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_12
ldloc.s V_9
ldloc.s V_11
bge.s IL_012c
ldc.i4.m1
br.s IL_0133
IL_012c:
ldloc.s V_9
ldloc.s V_11
cgt
IL_0133:
stloc.s V_13
ldloc.s V_13
brfalse.s IL_013c
ldloc.s V_13
ret
IL_013c:
ldloc.s V_10
ldloc.s V_12
bge.s IL_0146
ldc.i4.m1
br.s IL_014d
IL_0146:
ldloc.s V_10
ldloc.s V_12
cgt
IL_014d:
stloc.s V_14
ldloc.s V_14
brfalse.s IL_0156
ldloc.s V_14
ret
IL_0156:
ldarg.0
stloc.s V_6
ldarg.1
stloc.s V_7
ldarg.2
stloc.s V_8
ldloc.0
stloc.s V_15
ldloc.3
stloc.s V_16
ldloc.s V_9
stloc.s V_17
ldloc.s V_10
stloc.s V_18
ldloc.s V_11
stloc.s V_19
ldloc.s V_12
stloc.s V_20
ldarg.0
ldarg.1
ldarg.2
ldloc.0
ldloc.3
ldloc.s V_9
ldloc.s V_10
ldloc.s V_11
ldloc.s V_12
ldc.i8 0x0
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::check0@1103(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64, int64, int64, int64)
ret
IL_0191:
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Rank()
stloc.s V_5
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
stloc.s V_13
ldloc.s V_5
ldloc.s V_13
bge.s IL_01ab
ldc.i4.m1
br.s IL_01b2
IL_01ab:
ldloc.s V_5
ldloc.s V_13
cgt
IL_01b2:
stloc.2
ldloc.2
brfalse.s IL_01b8
ldloc.2
ret
IL_01b8:
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Rank()
stloc.s V_5
ldarg.1
stloc.s V_7
ldarg.2
stloc.s V_8
ldloc.s V_5
stloc.s V_13
ldarg.1
ldarg.2
ldloc.s V_5
ldc.i4.0
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::precheck@1118(class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int32)
stloc.s V_14
ldloc.s V_14
brfalse.s IL_01dd
ldloc.s V_14
ret
IL_01dd:
ldloc.s V_5
newarr [mscorlib]System.Int64
stloc.s V_21
ldarg.0
stloc.s V_6
ldarg.1
stloc.s V_22
ldarg.2
stloc.s V_23
ldloc.s V_5
stloc.s V_24
ldloc.s V_21
stloc.s V_25
ldarg.0
ldarg.1
ldarg.2
ldloc.s V_5
ldloc.s V_21
ldc.i4.0
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check@1137-1'(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32)
ret
}
.method assembly static int32 GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, object xobj, object yobj) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 02 00 00 00 00 00 )
.locals init (string V_0, string V_1, string V_2, string V_3, class [mscorlib]System.Array V_4, class [mscorlib]System.Array V_5, class [mscorlib]System.Collections.IStructuralComparable V_6, class [mscorlib]System.Collections.IStructuralComparable V_7, class [mscorlib]System.IComparable V_8, class [mscorlib]System.IComparable V_9, float32 V_10, float32 V_11, float64 V_12, float64 V_13, class [mscorlib]System.Collections.IStructuralComparable V_14, int32 V_15, class [mscorlib]System.IComparable V_16, native uint V_17, native uint V_18, native int V_19, native int V_20)
ldarg.1
brfalse IL_040f
ldarg.2
brfalse IL_040d
ldarg.1
isinst [mscorlib]System.String
stloc.0
ldloc.0
brfalse IL_02a5
ldarg.2
isinst [mscorlib]System.String
stloc.1
ldloc.1
brfalse.s IL_0030
ldloc.1
stloc.2
ldloc.0
stloc.3
ldloc.3
ldloc.2
call int32 [mscorlib]System.String::CompareOrdinal(string, string)
ret
IL_0030:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_4
ldloc.s V_4
brfalse.s IL_004e
ldloc.s V_4
stloc.s V_5
IL_0040:
ldarg.0
ldarg.2
ldarg.1
ldloc.s V_5
ldnull
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare$cont@965(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object, class [mscorlib]System.Array, class Microsoft.FSharp.Core.Unit)
ret
IL_004e:
ldarg.1
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_6
ldloc.s V_6
brfalse.s IL_006a
ldloc.s V_6
stloc.s V_7
IL_005e:
ldloc.s V_7
ldarg.2
ldarg.0
tail.
callvirt instance int32 [mscorlib]System.Collections.IStructuralComparable::CompareTo(object, class [mscorlib]System.Collections.IComparer)
ret
IL_006a:
ldarg.1
isinst [mscorlib]System.IComparable
stloc.s V_8
ldloc.s V_8
brfalse IL_0142
ldloc.s V_8
stloc.s V_9
IL_007d:
ldarg.0
ldfld bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer::throwsOnPER
brfalse IL_0136
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_00d8
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_009e
IL_0098:
br IL_0137
IL_009e:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_00a8
br.s IL_0098
IL_00a8:
ldarg.2
unbox.any [mscorlib]System.Single
stloc.s V_10
ldarg.1
unbox.any [mscorlib]System.Single
stloc.s V_11
IL_00b8:
ldloc.s V_11
call bool [mscorlib]System.Single::IsNaN(float32)
brfalse.s IL_00c5
ldc.i4.1
br.s IL_00cd
IL_00c5:
ldloc.s V_10
call bool [mscorlib]System.Single::IsNaN(float32)
IL_00cd:
brfalse.s IL_00d5
call class [mscorlib]System.Exception Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_NaNException()
throw
IL_00d5:
br.s IL_0137
IL_00d8:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_0106
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_00ea
br.s IL_0098
IL_00ea:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_00f4
br.s IL_0098
IL_00f4:
ldarg.2
unbox.any [mscorlib]System.Single
ldarg.1
unbox.any [mscorlib]System.Single
stloc.s V_11
stloc.s V_10
br.s IL_00b8
IL_0106:
ldarg.2
unbox.any [mscorlib]System.Double
stloc.s V_12
ldarg.1
unbox.any [mscorlib]System.Double
stloc.s V_13
ldloc.s V_13
call bool [mscorlib]System.Double::IsNaN(float64)
brfalse.s IL_0123
ldc.i4.1
br.s IL_012b
IL_0123:
ldloc.s V_12
call bool [mscorlib]System.Double::IsNaN(float64)
IL_012b:
brfalse.s IL_0133
call class [mscorlib]System.Exception Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_NaNException()
throw
IL_0133:
br.s IL_0137
IL_0136:
IL_0137:
ldloc.s V_9
ldarg.2
tail.
callvirt instance int32 [mscorlib]System.IComparable::CompareTo(object)
ret
IL_0142:
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native int>(object)
brtrue IL_01fc
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_01b1
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_0180
ldloc.s V_7
stloc.s V_14
IL_0165:
ldloc.s V_14
ldarg.1
ldarg.0
callvirt instance int32 [mscorlib]System.Collections.IStructuralComparable::CompareTo(object, class [mscorlib]System.Collections.IComparer)
stloc.s V_15
ldloc.s V_15
ldc.i4.0
bge.s IL_0177
ldc.i4.1
ret
IL_0177:
ldloc.s V_15
ldc.i4.0
ble.s IL_017e
ldc.i4.m1
ret
IL_017e:
ldc.i4.0
ret
IL_0180:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse.s IL_01aa
ldloc.s V_9
stloc.s V_16
IL_0190:
ldloc.s V_16
ldarg.1
callvirt instance int32 [mscorlib]System.IComparable::CompareTo(object)
stloc.s V_15
ldloc.s V_15
ldc.i4.0
bge.s IL_01a1
ldc.i4.1
ret
IL_01a1:
ldloc.s V_15
ldc.i4.0
ble.s IL_01a8
ldc.i4.m1
ret
IL_01a8:
ldc.i4.0
ret
IL_01aa:
ldarg.1
call !!0 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::FailGenericComparison<int32>(object)
ret
IL_01b1:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_01dd
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_01cb
ldloc.s V_7
stloc.s V_14
br.s IL_0165
IL_01cb:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse.s IL_01aa
ldloc.s V_9
stloc.s V_16
br.s IL_0190
IL_01dd:
ldarg.2
unbox.any [mscorlib]System.UIntPtr
stloc.s V_17
ldarg.1
unbox.any [mscorlib]System.UIntPtr
stloc.s V_18
IL_01ed:
ldloc.s V_18
ldloc.s V_17
bge.un.s IL_01f5
ldc.i4.m1
ret
IL_01f5:
ldloc.s V_18
ldloc.s V_17
cgt.un
ret
IL_01fc:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native int>(object)
brtrue IL_0286
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_023c
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_0224
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_0224:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_023c:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_0271
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_0259
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_0259:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_0271:
ldarg.2
unbox.any [mscorlib]System.UIntPtr
ldarg.1
unbox.any [mscorlib]System.UIntPtr
stloc.s V_18
stloc.s V_17
br IL_01ed
IL_0286:
ldarg.2
unbox.any [mscorlib]System.IntPtr
stloc.s V_19
ldarg.1
unbox.any [mscorlib]System.IntPtr
stloc.s V_20
IL_0296:
ldloc.s V_20
ldloc.s V_19
bge.s IL_029e
ldc.i4.m1
ret
IL_029e:
ldloc.s V_20
ldloc.s V_19
cgt
ret
IL_02a5:
ldarg.1
isinst [mscorlib]System.Array
stloc.s V_4
ldloc.s V_4
brfalse.s IL_02ba
ldloc.s V_4
stloc.s V_5
br IL_0040
IL_02ba:
ldarg.1
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_6
ldloc.s V_6
brfalse.s IL_02cf
ldloc.s V_6
stloc.s V_7
br IL_005e
IL_02cf:
ldarg.1
isinst [mscorlib]System.IComparable
stloc.s V_8
ldloc.s V_8
brfalse.s IL_02e4
ldloc.s V_8
stloc.s V_9
br IL_007d
IL_02e4:
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native int>(object)
brtrue IL_036e
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_0324
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_030c
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_030c:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_0324:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_0359
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_0341
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_0341:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_0359:
ldarg.2
unbox.any [mscorlib]System.UIntPtr
ldarg.1
unbox.any [mscorlib]System.UIntPtr
stloc.s V_18
stloc.s V_17
br IL_01ed
IL_036e:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native int>(object)
brtrue IL_03f8
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_03ae
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_0396
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_0396:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_03ae:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<native uint>(object)
brtrue.s IL_03e3
ldarg.2
isinst [mscorlib]System.Collections.IStructuralComparable
stloc.s V_7
ldloc.s V_7
brfalse.s IL_03cb
ldloc.s V_7
stloc.s V_14
br IL_0165
IL_03cb:
ldarg.2
isinst [mscorlib]System.IComparable
stloc.s V_9
ldloc.s V_9
brfalse IL_01aa
ldloc.s V_9
stloc.s V_16
br IL_0190
IL_03e3:
ldarg.2
unbox.any [mscorlib]System.UIntPtr
ldarg.1
unbox.any [mscorlib]System.UIntPtr
stloc.s V_18
stloc.s V_17
br IL_01ed
IL_03f8:
ldarg.2
unbox.any [mscorlib]System.IntPtr
ldarg.1
unbox.any [mscorlib]System.IntPtr
stloc.s V_20
stloc.s V_19
br IL_0296
IL_040d:
ldc.i4.1
ret
IL_040f:
ldarg.2
brfalse.s IL_0414
ldc.i4.m1
ret
IL_0414:
ldc.i4.0
ret
}
.method assembly static int32 check@1081(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx, int64 basex, int64 basey, int64 i) cil managed
{
.locals init (int32 V_0)
IL_0000:
ldarg.s i
ldarg.3
blt.s IL_0008
ldc.i4.0
ret
IL_0008:
ldarg.0
ldarg.1
ldarg.s i
ldarg.s basex
add
callvirt instance object [mscorlib]System.Array::GetValue(int64)
ldarg.2
ldarg.s i
ldarg.s basey
add
callvirt instance object [mscorlib]System.Array::GetValue(int64)
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object)
stloc.0
ldloc.0
brfalse.s IL_002a
ldloc.0
ret
IL_002a:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s basex
ldarg.s basey
ldarg.s i
ldc.i8 0x1
add
starg.s i
starg.s basey
starg.s basex
starg.s lenx
starg.s y
starg.s x
starg.s comp
br.s IL_0000
}
.method assembly static int32 check1@1104(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx1, int64 basex0, int64 basex1, int64 basey0, int64 basey1, int64 i, int64 j) cil managed
{
.maxstack 11
.locals init (int32 V_0)
IL_0000:
ldarg.s j
ldarg.3
blt.s IL_0008
ldc.i4.0
ret
IL_0008:
ldarg.0
ldarg.1
ldarg.s i
ldarg.s basex0
add
ldarg.s j
ldarg.s basex1
add
callvirt instance object [mscorlib]System.Array::GetValue(int64, int64)
ldarg.2
ldarg.s i
ldarg.s basey0
add
ldarg.s j
ldarg.s basey1
add
callvirt instance object [mscorlib]System.Array::GetValue(int64, int64)
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object)
stloc.0
ldloc.0
brfalse.s IL_0034
ldloc.0
ret
IL_0034:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldarg.s j
ldc.i8 0x1
add
starg.s j
starg.s i
starg.s basey1
starg.s basey0
starg.s basex1
starg.s basex0
starg.s lenx1
starg.s y
starg.s x
starg.s comp
br.s IL_0000
}
.method assembly static int32 check0@1103(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx0, int64 lenx1, int64 basex0, int64 basex1, int64 basey0, int64 basey1, int64 i) cil managed
{
.maxstack 11
.locals init (class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer V_0, class [mscorlib]System.Array V_1, class [mscorlib]System.Array V_2, int64 V_3, int64 V_4, int64 V_5, int64 V_6, int64 V_7, int64 V_8, int32 V_9)
IL_0000:
ldarg.0
stloc.0
ldarg.1
stloc.1
ldarg.2
stloc.2
ldarg.s lenx1
stloc.3
ldarg.s basex0
stloc.s V_4
ldarg.s basex1
stloc.s V_5
ldarg.s basey0
stloc.s V_6
ldarg.s basey1
stloc.s V_7
ldarg.s i
stloc.s V_8
ldarg.s i
ldarg.3
blt.s IL_0025
ldc.i4.0
ret
IL_0025:
ldarg.0
ldarg.1
ldarg.2
ldarg.s lenx1
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldc.i8 0x0
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::check1@1104(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64, int64, int64, int64)
stloc.s V_9
ldloc.s V_9
brfalse.s IL_004b
ldloc.s V_9
ret
IL_004b:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s lenx1
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldc.i8 0x1
add
starg.s i
starg.s basey1
starg.s basey0
starg.s basex1
starg.s basex0
starg.s lenx1
starg.s lenx0
starg.s y
starg.s x
starg.s comp
br IL_0000
}
.method assembly static int32 precheck@1118(class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int32 k) cil managed
{
.locals init (int32 V_0, int64 V_1, int64 V_2, int32 V_3, int32 V_4, int32 V_5)
IL_0000:
ldarg.3
ldarg.2
blt.s IL_0007
ldc.i4.0
ret
IL_0007:
ldarg.0
ldarg.3
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.1
ldarg.1
ldarg.3
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.2
ldloc.1
ldloc.2
bge.s IL_001f
ldc.i4.m1
br.s IL_0024
IL_001f:
ldloc.1
ldloc.2
cgt
IL_0024:
stloc.0
ldloc.0
brfalse.s IL_002a
ldloc.0
ret
IL_002a:
ldarg.0
ldarg.3
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
stloc.s V_4
ldarg.1
ldarg.3
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
stloc.s V_5
ldloc.s V_4
ldloc.s V_5
bge.s IL_0046
ldc.i4.m1
br.s IL_004d
IL_0046:
ldloc.s V_4
ldloc.s V_5
cgt
IL_004d:
stloc.3
ldloc.3
brfalse.s IL_0053
ldloc.3
ret
IL_0053:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldc.i4.1
add
starg.s k
starg.s ndims
starg.s y
starg.s x
br.s IL_0000
}
.method assembly static int32 checkN@1128(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int64[] idxs, int32 k, int64 baseIdx, int64 i, int64 lim) cil managed
{
.maxstack 9
.locals init (int32 V_0)
IL_0000:
ldarg.s i
ldarg.s lim
blt.s IL_0009
ldc.i4.0
ret
IL_0009:
ldarg.s idxs
ldarg.s k
ldarg.s baseIdx
ldarg.s i
add
stelem [mscorlib]System.Int64
ldarg.s k
ldarg.3
ldc.i4.1
sub
bne.un.s IL_0037
ldarg.0
ldarg.1
ldarg.s idxs
callvirt instance object [mscorlib]System.Array::GetValue(int64[])
ldarg.2
ldarg.s idxs
callvirt instance object [mscorlib]System.Array::GetValue(int64[])
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericCompare(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, object, object)
br.s IL_0047
IL_0037:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s idxs
ldarg.s k
ldc.i4.1
add
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check@1137-1'(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32)
IL_0047:
stloc.0
ldloc.0
brfalse.s IL_004d
ldloc.0
ret
IL_004d:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s idxs
ldarg.s k
ldarg.s baseIdx
ldarg.s i
ldc.i8 0x1
add
ldarg.s lim
starg.s lim
starg.s i
starg.s baseIdx
starg.s k
starg.s idxs
starg.s ndims
starg.s y
starg.s x
starg.s comp
br IL_0000
}
.method assembly static int32 'check@1137-1'(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer comp, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int64[] idxs, int32 k) cil managed
{
.maxstack 10
.locals init (int32 V_0)
ldarg.s k
ldarg.3
blt.s IL_0008
ldc.i4.0
ret
IL_0008:
ldarg.1
ldarg.s k
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
stloc.0
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s idxs
ldarg.s k
ldloc.0
conv.i8
ldc.i8 0x0
ldarg.1
ldarg.s k
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::checkN@1128(class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32, int64, int64, int64)
ret
}
.method public static int32 GenericComparisonWithComparerIntrinsic<T>(class [mscorlib]System.Collections.IComparer comp, !!T x, !!T y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 66 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 61 20 70 72 69 6D 69 74 69 76 65 20
6C 69 62 72 61 72 79 20 72 6F 75 74 69 6E 65 20
75 73 65 64 20 62 79 20 6F 70 74 69 6D 69 7A 65
64 20 46 23 20 63 6F 64 65 20 61 6E 64 20 73 68
6F 75 6C 64 20 6E 6F 74 20 62 65 20 75 73 65 64
20 64 69 72 65 63 74 6C 79 B4 04 00 00 01 00 54
02 08 49 73 48 69 64 64 65 6E 01 )
ldarg.0
ldarg.1
box !!T
ldarg.2
box !!T
tail.
callvirt instance int32 [mscorlib]System.Collections.IComparer::Compare(object, object)
ret
}
.method assembly static bool GenericEqualityByteArray(uint8[] x, uint8[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.0
ldlen
conv.i4
stloc.0
ldarg.1
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0041
ldarg.0
ldloc.3
ldelem [mscorlib]System.Byte
ldarg.1
ldloc.3
ldelem [mscorlib]System.Byte
ceq
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003a
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003a:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0041:
ldloc.s V_4
ret
}
.method assembly static bool GenericEqualityInt32Array(int32[] x, int32[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.0
ldlen
conv.i4
stloc.0
ldarg.1
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0041
ldarg.0
ldloc.3
ldelem [mscorlib]System.Int32
ldarg.1
ldloc.3
ldelem [mscorlib]System.Int32
ceq
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003a
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003a:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0041:
ldloc.s V_4
ret
}
.method assembly static bool f32eq@1421(bool er, float32 x, float32 y) cil managed
{
ldarg.0
brfalse.s IL_000e
ldarg.1
ldarg.1
ceq
ldc.i4.0
ceq
br.s IL_0010
IL_000e:
ldc.i4.0
IL_0010:
brfalse.s IL_001c
ldarg.2
ldarg.2
ceq
ldc.i4.0
ceq
br.s IL_001e
IL_001c:
ldc.i4.0
IL_001e:
brfalse.s IL_0022
ldc.i4.1
ret
IL_0022:
ldarg.1
ldarg.2
ceq
ret
}
.method assembly static bool GenericEqualitySingleArray(bool er, float32[] x, float32[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.1
ldlen
conv.i4
stloc.0
ldarg.2
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0045
ldarg.0
ldarg.1
ldloc.3
ldelem [mscorlib]System.Single
ldarg.2
ldloc.3
ldelem [mscorlib]System.Single
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::f32eq@1421(bool, float32, float32)
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003e
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003e:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0045:
ldloc.s V_4
ret
}
.method assembly static bool feq@1438(bool er, float64 x, float64 y) cil managed
{
ldarg.0
brfalse.s IL_000e
ldarg.1
ldarg.1
ceq
ldc.i4.0
ceq
br.s IL_0010
IL_000e:
ldc.i4.0
IL_0010:
brfalse.s IL_001c
ldarg.2
ldarg.2
ceq
ldc.i4.0
ceq
br.s IL_001e
IL_001c:
ldc.i4.0
IL_001e:
brfalse.s IL_0022
ldc.i4.1
ret
IL_0022:
ldarg.1
ldarg.2
ceq
ret
}
.method assembly static bool GenericEqualityDoubleArray(bool er, float64[] x, float64[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.1
ldlen
conv.i4
stloc.0
ldarg.2
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0045
ldarg.0
ldarg.1
ldloc.3
ldelem [mscorlib]System.Double
ldarg.2
ldloc.3
ldelem [mscorlib]System.Double
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::feq@1438(bool, float64, float64)
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003e
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003e:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0045:
ldloc.s V_4
ret
}
.method assembly static bool GenericEqualityCharArray(char[] x, char[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.0
ldlen
conv.i4
stloc.0
ldarg.1
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0041
ldarg.0
ldloc.3
ldelem [mscorlib]System.Char
ldarg.1
ldloc.3
ldelem [mscorlib]System.Char
ceq
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003a
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003a:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0041:
ldloc.s V_4
ret
}
.method assembly static bool GenericEqualityInt64Array(int64[] x, int64[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.0
ldlen
conv.i4
stloc.0
ldarg.1
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0041
ldarg.0
ldloc.3
ldelem [mscorlib]System.Int64
ldarg.1
ldloc.3
ldelem [mscorlib]System.Int64
ceq
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003a
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003a:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0041:
ldloc.s V_4
ret
}
.method assembly static bool GenericEqualityObj$cont@1498(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, object yobj, object xobj, class [mscorlib]System.Array arr1, class Microsoft.FSharp.Core.Unit unitVar) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (object[] V_0, object[] V_1, object[] V_2, object[] V_3, uint8[] V_4, uint8[] V_5, uint8[] V_6, uint8[] V_7, int32[] V_8, int32[] V_9, int32[] V_10, int32[] V_11, int64[] V_12, int64[] V_13, int64[] V_14, int64[] V_15, char[] V_16, char[] V_17, char[] V_18, char[] V_19, float32[] V_20, float32[] V_21, float32[] V_22, float32[] V_23, float64[] V_24, float64[] V_25, float64[] V_26, float64[] V_27, class [mscorlib]System.Array V_28, class [mscorlib]System.Array V_29)
ldarg.s arr1
isinst object[]
stloc.0
ldloc.0
brfalse IL_0fcd
ldarg.2
isinst object[]
stloc.1
ldloc.1
brfalse.s IL_0027
ldloc.1
stloc.2
ldloc.0
stloc.3
ldarg.0
ldarg.1
ldloc.3
ldloc.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObjArray(bool, class [mscorlib]System.Collections.IEqualityComparer, object[], object[])
ret
IL_0027:
ldarg.s arr1
isinst uint8[]
stloc.s V_4
ldloc.s V_4
brfalse IL_081e
ldarg.2
isinst uint8[]
stloc.s V_5
ldloc.s V_5
brfalse.s IL_0055
ldloc.s V_5
stloc.s V_6
ldloc.s V_4
stloc.s V_7
IL_004b:
ldloc.s V_7
ldloc.s V_6
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityByteArray(uint8[], uint8[])
ret
IL_0055:
ldarg.s arr1
isinst int32[]
stloc.s V_8
ldloc.s V_8
brfalse IL_045b
ldarg.2
isinst int32[]
stloc.s V_9
ldloc.s V_9
brfalse.s IL_0083
ldloc.s V_9
stloc.s V_10
ldloc.s V_8
stloc.s V_11
IL_0079:
ldloc.s V_11
ldloc.s V_10
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityInt32Array(int32[], int32[])
ret
IL_0083:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_028e
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_00b1
ldloc.s V_13
stloc.s V_14
ldloc.s V_12
stloc.s V_15
IL_00a7:
ldloc.s V_15
ldloc.s V_14
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityInt64Array(int64[], int64[])
ret
IL_00b1:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_01bc
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_00df
ldloc.s V_17
stloc.s V_18
ldloc.s V_16
stloc.s V_19
IL_00d5:
ldloc.s V_19
ldloc.s V_18
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityCharArray(char[], char[])
ret
IL_00df:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse IL_0172
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_010e
ldloc.s V_21
stloc.s V_22
ldloc.s V_20
stloc.s V_23
IL_0103:
ldarg.0
ldloc.s V_23
ldloc.s V_22
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualitySingleArray(bool, float32[], float32[])
ret
IL_010e:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0160
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_013a
ldloc.s V_25
stloc.s V_26
ldloc.s V_24
stloc.s V_27
IL_012f:
ldarg.0
ldloc.s V_27
ldloc.s V_26
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityDoubleArray(bool, float64[], float64[])
ret
IL_013a:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse.s IL_0156
ldloc.s V_28
stloc.s V_29
IL_014a:
ldarg.0
ldarg.1
ldarg.s arr1
ldloc.s V_29
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityArbArray(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array)
ret
IL_0156:
ldarg.3
ldarg.2
tail.
callvirt instance bool [mscorlib]System.Object::Equals(object)
ret
IL_0160:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse.s IL_0156
ldloc.s V_28
stloc.s V_29
br.s IL_014a
IL_0172:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_01a7
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0195
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br.s IL_012f
IL_0195:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse.s IL_0156
ldloc.s V_28
stloc.s V_29
br.s IL_014a
IL_01a7:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse.s IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_01bc:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0238
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_01e2
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_01e2:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0220
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0208
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0208:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0220:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0238:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0276
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_025e
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_025e:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0276:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_028e:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_0389
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_02b7
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_02b7:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0333
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_02dd
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_02dd:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_031b
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0303
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0303:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_031b:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0333:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0371
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0359
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0359:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0371:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0389:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0405
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_03af
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_03af:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_03ed
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_03d5
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_03d5:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_03ed:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0405:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0443
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_042b
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_042b:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0443:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_045b:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_0651
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_0484
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_0484:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_057f
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_04ad
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_04ad:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0529
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_04d3
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_04d3:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0511
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_04f9
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_04f9:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0511:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0529:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0567
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_054f
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_054f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0567:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_057f:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_05fb
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_05a5
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_05a5:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_05e3
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_05cb
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_05cb:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_05e3:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_05fb:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0639
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0621
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0621:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0639:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0651:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_074c
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_067a
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_067a:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_06f6
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_06a0
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_06a0:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_06de
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_06c6
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_06c6:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_06de:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_06f6:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0734
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_071c
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_071c:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0734:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_074c:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_07c8
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0772
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0772:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_07b0
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0798
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0798:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_07b0:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_07c8:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0806
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_07ee
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_07ee:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0806:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_081e:
ldarg.s arr1
isinst int32[]
stloc.s V_8
ldloc.s V_8
brfalse IL_0c0a
ldarg.2
isinst int32[]
stloc.s V_9
ldloc.s V_9
brfalse.s IL_0847
ldloc.s V_9
ldloc.s V_8
stloc.s V_11
stloc.s V_10
br IL_0079
IL_0847:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_0a3d
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_0870
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_0870:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_096b
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_0899
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_0899:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0915
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_08bf
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_08bf:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_08fd
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_08e5
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_08e5:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_08fd:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0915:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0953
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_093b
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_093b:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0953:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_096b:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_09e7
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0991
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0991:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_09cf
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_09b7
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_09b7:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_09cf:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_09e7:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0a25
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0a0d
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0a0d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0a25:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0a3d:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_0b38
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_0a66
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_0a66:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0ae2
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0a8c
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0a8c:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0aca
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0ab2
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0ab2:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0aca:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0ae2:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0b20
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0b08
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0b08:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0b20:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0b38:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0bb4
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0b5e
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0b5e:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0b9c
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0b84
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0b84:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0b9c:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0bb4:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0bf2
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0bda
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0bda:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0bf2:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0c0a:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_0e00
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_0c33
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_0c33:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_0d2e
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_0c5c
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_0c5c:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0cd8
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0c82
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0c82:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0cc0
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0ca8
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0ca8:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0cc0:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0cd8:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0d16
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0cfe
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0cfe:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0d16:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0d2e:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0daa
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0d54
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0d54:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0d92
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0d7a
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0d7a:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0d92:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0daa:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0de8
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0dd0
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0dd0:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0de8:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0e00:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_0efb
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_0e29
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_0e29:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0ea5
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0e4f
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0e4f:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0e8d
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0e75
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0e75:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0e8d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0ea5:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0ee3
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0ecb
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0ecb:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0ee3:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0efb:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_0f77
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_0f21
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_0f21:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0f5f
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0f47
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0f47:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0f5f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0f77:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_0fb5
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_0f9d
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_0f9d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0fb5:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_0fcd:
ldarg.s arr1
isinst uint8[]
stloc.s V_4
ldloc.s V_4
brfalse IL_17a5
ldarg.2
isinst uint8[]
stloc.s V_5
ldloc.s V_5
brfalse.s IL_0ff6
ldloc.s V_5
ldloc.s V_4
stloc.s V_7
stloc.s V_6
br IL_004b
IL_0ff6:
ldarg.s arr1
isinst int32[]
stloc.s V_8
ldloc.s V_8
brfalse IL_13e2
ldarg.2
isinst int32[]
stloc.s V_9
ldloc.s V_9
brfalse.s IL_101f
ldloc.s V_9
ldloc.s V_8
stloc.s V_11
stloc.s V_10
br IL_0079
IL_101f:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_1215
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_1048
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_1048:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1143
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1071
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1071:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_10ed
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1097
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1097:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_10d5
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_10bd
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_10bd:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_10d5:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_10ed:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_112b
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1113
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1113:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_112b:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1143:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_11bf
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1169
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1169:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_11a7
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_118f
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_118f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_11a7:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_11bf:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_11fd
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_11e5
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_11e5:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_11fd:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1215:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1310
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_123e
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_123e:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_12ba
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1264
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1264:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_12a2
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_128a
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_128a:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_12a2:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_12ba:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_12f8
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_12e0
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_12e0:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_12f8:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1310:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_138c
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1336
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1336:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1374
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_135c
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_135c:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1374:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_138c:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_13ca
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_13b2
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_13b2:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_13ca:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_13e2:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_15d8
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_140b
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_140b:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1506
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1434
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1434:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_14b0
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_145a
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_145a:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1498
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1480
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1480:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1498:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_14b0:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_14ee
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_14d6
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_14d6:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_14ee:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1506:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1582
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_152c
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_152c:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_156a
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1552
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1552:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_156a:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1582:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_15c0
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_15a8
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_15a8:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_15c0:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_15d8:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_16d3
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1601
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1601:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_167d
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1627
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1627:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1665
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_164d
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_164d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1665:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_167d:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_16bb
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_16a3
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_16a3:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_16bb:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_16d3:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_174f
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_16f9
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_16f9:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1737
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_171f
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_171f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1737:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_174f:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_178d
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1775
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1775:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_178d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_17a5:
ldarg.s arr1
isinst int32[]
stloc.s V_8
ldloc.s V_8
brfalse IL_1b91
ldarg.2
isinst int32[]
stloc.s V_9
ldloc.s V_9
brfalse.s IL_17ce
ldloc.s V_9
ldloc.s V_8
stloc.s V_11
stloc.s V_10
br IL_0079
IL_17ce:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_19c4
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_17f7
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_17f7:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_18f2
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1820
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1820:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_189c
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1846
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1846:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1884
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_186c
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_186c:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1884:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_189c:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_18da
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_18c2
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_18c2:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_18da:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_18f2:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_196e
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1918
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1918:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1956
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_193e
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_193e:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1956:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_196e:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_19ac
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1994
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1994:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_19ac:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_19c4:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1abf
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_19ed
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_19ed:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1a69
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1a13
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1a13:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1a51
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1a39
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1a39:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1a51:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1a69:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1aa7
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1a8f
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1a8f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1aa7:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1abf:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1b3b
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1ae5
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1ae5:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1b23
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1b0b
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1b0b:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1b23:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1b3b:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1b79
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1b61
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1b61:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1b79:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1b91:
ldarg.s arr1
isinst int64[]
stloc.s V_12
ldloc.s V_12
brfalse IL_1d87
ldarg.2
isinst int64[]
stloc.s V_13
ldloc.s V_13
brfalse.s IL_1bba
ldloc.s V_13
ldloc.s V_12
stloc.s V_15
stloc.s V_14
br IL_00a7
IL_1bba:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1cb5
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1be3
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1be3:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1c5f
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1c09
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1c09:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1c47
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1c2f
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1c2f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1c47:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1c5f:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1c9d
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1c85
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1c85:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1c9d:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1cb5:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1d31
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1cdb
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1cdb:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1d19
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1d01
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1d01:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1d19:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1d31:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1d6f
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1d57
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1d57:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1d6f:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1d87:
ldarg.s arr1
isinst char[]
stloc.s V_16
ldloc.s V_16
brfalse IL_1e82
ldarg.2
isinst char[]
stloc.s V_17
ldloc.s V_17
brfalse.s IL_1db0
ldloc.s V_17
ldloc.s V_16
stloc.s V_19
stloc.s V_18
br IL_00d5
IL_1db0:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1e2c
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1dd6
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1dd6:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1e14
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1dfc
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1dfc:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1e14:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1e2c:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1e6a
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1e52
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1e52:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1e6a:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1e82:
ldarg.s arr1
isinst float32[]
stloc.s V_20
ldloc.s V_20
brfalse.s IL_1efe
ldarg.2
isinst float32[]
stloc.s V_21
ldloc.s V_21
brfalse.s IL_1ea8
ldloc.s V_21
ldloc.s V_20
stloc.s V_23
stloc.s V_22
br IL_0103
IL_1ea8:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1ee6
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1ece
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1ece:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1ee6:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1efe:
ldarg.s arr1
isinst float64[]
stloc.s V_24
ldloc.s V_24
brfalse.s IL_1f3c
ldarg.2
isinst float64[]
stloc.s V_25
ldloc.s V_25
brfalse.s IL_1f24
ldloc.s V_25
ldloc.s V_24
stloc.s V_27
stloc.s V_26
br IL_012f
IL_1f24:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
IL_1f3c:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_28
ldloc.s V_28
brfalse IL_0156
ldloc.s V_28
stloc.s V_29
br IL_014a
}
.method assembly static bool GenericEqualityObjArray(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, object[] x, object[] y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 04 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, bool V_2, int32 V_3, bool V_4, bool V_5)
ldarg.2
ldlen
conv.i4
stloc.0
ldarg.3
ldlen
conv.i4
stloc.1
ldloc.0
ldloc.1
ceq
stloc.2
ldloc.2
brtrue.s IL_0013
ldloc.2
ret
IL_0013:
ldc.i4.0
stloc.3
ldc.i4.1
stloc.s V_4
IL_0018:
ldloc.3
ldloc.0
bge.s IL_0046
ldarg.0
ldarg.1
ldarg.2
ldloc.3
ldelem [mscorlib]System.Object
ldarg.3
ldloc.3
ldelem [mscorlib]System.Object
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
stloc.s V_5
ldloc.s V_5
brtrue.s IL_003f
ldc.i4.0
stloc.s V_4
ldloc.0
stloc.3
br.s IL_0018
IL_003f:
ldloc.3
ldc.i4.1
add
stloc.3
br.s IL_0018
IL_0046:
ldloc.s V_4
ret
}
.method assembly static bool GenericEqualityArbArray(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 04 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 01 00 00 00 00 00 )
.maxstack 11
.locals init (int64 V_0, int64 V_1, int64 V_2, int64 V_3, bool V_4, class [mscorlib]System.Collections.IEqualityComparer V_5, class [mscorlib]System.Array V_6, class [mscorlib]System.Array V_7, int64 V_8, int64 V_9, int64 V_10, int64 V_11, int64 V_12, int64 V_13, int64 V_14, int64 V_15, int64 V_16, int64 V_17, int32 V_18, int32 V_19, int64[] V_20, class [mscorlib]System.Array V_21, class [mscorlib]System.Array V_22, int32 V_23, int64[] V_24)
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.1
bne.un.s IL_0016
ldarg.3
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.1
ceq
br.s IL_0018
IL_0016:
ldc.i4.0
IL_0018:
brfalse.s IL_0071
ldarg.2
callvirt instance int64 [mscorlib]System.Array::get_LongLength()
stloc.0
ldarg.3
callvirt instance int64 [mscorlib]System.Array::get_LongLength()
stloc.1
ldloc.0
ldloc.1
bne.un.s IL_006f
ldarg.2
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.2
ldarg.3
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.3
ldloc.2
ldloc.3
bne.un.s IL_006d
ldarg.0
stloc.s V_4
ldarg.1
stloc.s V_5
ldarg.2
stloc.s V_6
ldarg.3
stloc.s V_7
ldloc.0
stloc.s V_8
ldloc.2
stloc.s V_9
ldloc.3
stloc.s V_10
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldloc.0
ldloc.2
ldloc.3
ldc.i8 0x0
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check@1588-2'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64)
ret
IL_006d:
ldc.i4.0
ret
IL_006f:
ldc.i4.0
ret
IL_0071:
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.2
bne.un.s IL_0086
ldarg.3
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.2
ceq
br.s IL_0088
IL_0086:
ldc.i4.0
IL_0088:
brfalse IL_013b
ldarg.2
ldc.i4.0
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.0
ldarg.3
ldc.i4.0
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.1
ldloc.0
ldloc.1
bne.un IL_0139
ldarg.2
ldc.i4.1
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.2
ldarg.3
ldc.i4.1
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
stloc.3
ldloc.2
ldloc.3
bne.un IL_0137
ldarg.2
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_8
ldarg.2
ldc.i4.1
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_9
ldarg.3
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_10
ldarg.3
ldc.i4.1
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
conv.i8
stloc.s V_11
ldloc.s V_8
ldloc.s V_10
bne.un.s IL_00f2
ldloc.s V_9
ldloc.s V_11
ceq
br.s IL_00f4
IL_00f2:
ldc.i4.0
IL_00f4:
brfalse.s IL_0135
ldarg.0
stloc.s V_4
ldarg.1
stloc.s V_5
ldarg.2
stloc.s V_6
ldarg.3
stloc.s V_7
ldloc.0
stloc.s V_12
ldloc.2
stloc.s V_13
ldloc.s V_8
stloc.s V_14
ldloc.s V_9
stloc.s V_15
ldloc.s V_10
stloc.s V_16
ldloc.s V_11
stloc.s V_17
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldloc.0
ldloc.2
ldloc.s V_8
ldloc.s V_9
ldloc.s V_10
ldloc.s V_11
ldc.i8 0x0
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check0@1605-1'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64, int64, int64, int64)
ret
IL_0135:
ldc.i4.0
ret
IL_0137:
ldc.i4.0
ret
IL_0139:
ldc.i4.0
ret
IL_013b:
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldarg.3
callvirt instance int32 [mscorlib]System.Array::get_Rank()
bne.un.s IL_0195
ldarg.2
callvirt instance int32 [mscorlib]System.Array::get_Rank()
stloc.s V_18
ldarg.2
stloc.s V_6
ldarg.3
stloc.s V_7
ldloc.s V_18
stloc.s V_19
ldarg.2
ldarg.3
ldloc.s V_18
ldc.i4.0
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'precheck@1613-1'(class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int32)
brfalse.s IL_0193
ldloc.s V_18
newarr [mscorlib]System.Int64
stloc.s V_20
ldarg.0
stloc.s V_4
ldarg.1
stloc.s V_5
ldarg.2
stloc.s V_21
ldarg.3
stloc.s V_22
ldloc.s V_18
stloc.s V_23
ldloc.s V_20
stloc.s V_24
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldloc.s V_18
ldloc.s V_20
ldc.i4.0
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check@1628-3'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32)
ret
IL_0193:
ldc.i4.0
ret
IL_0195:
ldc.i4.0
ret
}
.method assembly static bool GenericEqualityObj(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, object xobj, object yobj) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 02 00
00 00 00 00 )
.locals init (string V_0, string V_1, string V_2, string V_3, class [mscorlib]System.Array V_4, class [mscorlib]System.Array V_5, class [mscorlib]System.Collections.IStructuralEquatable V_6, class [mscorlib]System.Collections.IStructuralEquatable V_7, float32 V_8, float32 V_9, float64 V_10, float64 V_11)
ldarg.2
brfalse IL_01e7
ldarg.3
brfalse IL_01e5
ldarg.2
isinst [mscorlib]System.String
stloc.0
ldloc.0
brfalse IL_0138
ldarg.3
isinst [mscorlib]System.String
stloc.1
ldloc.1
brfalse.s IL_0030
ldloc.1
stloc.2
ldloc.0
stloc.3
ldloc.3
ldloc.2
call bool [mscorlib]System.String::Equals(string, string)
ret
IL_0030:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_4
ldloc.s V_4
brfalse.s IL_004f
ldloc.s V_4
stloc.s V_5
IL_0040:
ldarg.0
ldarg.1
ldarg.3
ldarg.2
ldloc.s V_5
ldnull
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj$cont@1498(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object, class [mscorlib]System.Array, class Microsoft.FSharp.Core.Unit)
ret
IL_004f:
ldarg.2
isinst [mscorlib]System.Collections.IStructuralEquatable
stloc.s V_6
ldloc.s V_6
brfalse.s IL_006b
ldloc.s V_6
stloc.s V_7
IL_005f:
ldloc.s V_7
ldarg.3
ldarg.1
tail.
callvirt instance bool [mscorlib]System.Collections.IStructuralEquatable::Equals(object, class [mscorlib]System.Collections.IEqualityComparer)
ret
IL_006b:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_00cb
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_0085
IL_007b:
ldarg.2
ldarg.3
tail.
callvirt instance bool [mscorlib]System.Object::Equals(object)
ret
IL_0085:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_008f
br.s IL_007b
IL_008f:
ldarg.3
unbox.any [mscorlib]System.Single
stloc.s V_8
ldarg.2
unbox.any [mscorlib]System.Single
stloc.s V_9
IL_009f:
ldarg.0
brfalse.s IL_00ae
ldloc.s V_9
ldloc.s V_9
ceq
ldc.i4.0
ceq
br.s IL_00b0
IL_00ae:
ldc.i4.0
IL_00b0:
brfalse.s IL_00be
ldloc.s V_8
ldloc.s V_8
ceq
ldc.i4.0
ceq
br.s IL_00c0
IL_00be:
ldc.i4.0
IL_00c0:
brfalse.s IL_00c4
ldc.i4.1
ret
IL_00c4:
ldloc.s V_9
ldloc.s V_8
ceq
ret
IL_00cb:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_00fc
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_00dd
br.s IL_007b
IL_00dd:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_00ea
br IL_007b
IL_00ea:
ldarg.3
unbox.any [mscorlib]System.Single
ldarg.2
unbox.any [mscorlib]System.Single
stloc.s V_9
stloc.s V_8
br.s IL_009f
IL_00fc:
ldarg.3
unbox.any [mscorlib]System.Double
stloc.s V_10
ldarg.2
unbox.any [mscorlib]System.Double
stloc.s V_11
IL_010c:
ldarg.0
brfalse.s IL_011b
ldloc.s V_11
ldloc.s V_11
ceq
ldc.i4.0
ceq
br.s IL_011d
IL_011b:
ldc.i4.0
IL_011d:
brfalse.s IL_012b
ldloc.s V_10
ldloc.s V_10
ceq
ldc.i4.0
ceq
br.s IL_012d
IL_012b:
ldc.i4.0
IL_012d:
brfalse.s IL_0131
ldc.i4.1
ret
IL_0131:
ldloc.s V_11
ldloc.s V_10
ceq
ret
IL_0138:
ldarg.2
isinst [mscorlib]System.Array
stloc.s V_4
ldloc.s V_4
brfalse.s IL_014d
ldloc.s V_4
stloc.s V_5
br IL_0040
IL_014d:
ldarg.2
isinst [mscorlib]System.Collections.IStructuralEquatable
stloc.s V_6
ldloc.s V_6
brfalse.s IL_0162
ldloc.s V_6
stloc.s V_7
br IL_005f
IL_0162:
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_0199
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_0177
br IL_007b
IL_0177:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_0184
br IL_007b
IL_0184:
ldarg.3
unbox.any [mscorlib]System.Single
ldarg.2
unbox.any [mscorlib]System.Single
stloc.s V_9
stloc.s V_8
br IL_009f
IL_0199:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float64>(object)
brtrue.s IL_01d0
ldarg.2
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_01ae
br IL_007b
IL_01ae:
ldarg.3
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<float32>(object)
brtrue.s IL_01bb
br IL_007b
IL_01bb:
ldarg.3
unbox.any [mscorlib]System.Single
ldarg.2
unbox.any [mscorlib]System.Single
stloc.s V_9
stloc.s V_8
br IL_009f
IL_01d0:
ldarg.3
unbox.any [mscorlib]System.Double
ldarg.2
unbox.any [mscorlib]System.Double
stloc.s V_11
stloc.s V_10
br IL_010c
IL_01e5:
ldc.i4.0
ret
IL_01e7:
ldarg.3
brfalse.s IL_01ec
ldc.i4.0
ret
IL_01ec:
ldc.i4.1
ret
}
.method assembly static bool 'check@1588-2'(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx, int64 basex, int64 basey, int64 i) cil managed
{
.maxstack 9
IL_0001:
ldarg.s i
ldarg.s lenx
blt.s IL_0009
ldc.i4.1
ret
IL_0009:
ldarg.0
ldarg.1
ldarg.2
ldarg.s basex
ldarg.s i
add
callvirt instance object [mscorlib]System.Array::GetValue(int64)
ldarg.3
ldarg.s basey
ldarg.s i
add
callvirt instance object [mscorlib]System.Array::GetValue(int64)
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
brfalse.s IL_0050
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s lenx
ldarg.s basex
ldarg.s basey
ldarg.s i
ldc.i8 0x1
add
starg.s i
starg.s basey
starg.s basex
starg.s lenx
starg.s y
starg.s x
starg.s iec
starg.s er
br.s IL_0001
IL_0050:
ldc.i4.0
ret
}
.method assembly static bool 'check1@1606-1'(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx1, int64 basex0, int64 basex1, int64 basey0, int64 basey1, int64 i, int64 j) cil managed
{
.maxstack 12
IL_0001:
ldarg.s j
ldarg.s lenx1
blt.s IL_0009
ldc.i4.1
ret
IL_0009:
ldarg.0
ldarg.1
ldarg.2
ldarg.s basex0
ldarg.s i
add
ldarg.s basex1
ldarg.s j
add
callvirt instance object [mscorlib]System.Array::GetValue(int64, int64)
ldarg.3
ldarg.s basey0
ldarg.s i
add
ldarg.s basey1
ldarg.s j
add
callvirt instance object [mscorlib]System.Array::GetValue(int64, int64)
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
brfalse.s IL_0066
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s lenx1
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldarg.s j
ldc.i8 0x1
add
starg.s j
starg.s i
starg.s basey1
starg.s basey0
starg.s basex1
starg.s basex0
starg.s lenx1
starg.s y
starg.s x
starg.s iec
starg.s er
br.s IL_0001
IL_0066:
ldc.i4.0
ret
}
.method assembly static bool 'check0@1605-1'(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int64 lenx0, int64 lenx1, int64 basex0, int64 basex1, int64 basey0, int64 basey1, int64 i) cil managed
{
.maxstack 12
.locals init (bool V_0, class [mscorlib]System.Collections.IEqualityComparer V_1, class [mscorlib]System.Array V_2, class [mscorlib]System.Array V_3, int64 V_4, int64 V_5, int64 V_6, int64 V_7, int64 V_8, int64 V_9)
IL_0001:
ldarg.0
stloc.0
ldarg.1
stloc.1
ldarg.2
stloc.2
ldarg.3
stloc.3
ldarg.s lenx1
stloc.s V_4
ldarg.s basex0
stloc.s V_5
ldarg.s basex1
stloc.s V_6
ldarg.s basey0
stloc.s V_7
ldarg.s basey1
stloc.s V_8
ldarg.s i
stloc.s V_9
ldarg.s i
ldarg.s lenx0
blt.s IL_0029
ldc.i4.1
ret
IL_0029:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s lenx1
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldc.i8 0x0
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check1@1606-1'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int64, int64, int64, int64, int64, int64, int64)
brfalse.s IL_0080
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s lenx0
ldarg.s lenx1
ldarg.s basex0
ldarg.s basex1
ldarg.s basey0
ldarg.s basey1
ldarg.s i
ldc.i8 0x1
add
starg.s i
starg.s basey1
starg.s basey0
starg.s basex1
starg.s basex0
starg.s lenx1
starg.s lenx0
starg.s y
starg.s x
starg.s iec
starg.s er
br IL_0001
IL_0080:
ldc.i4.0
ret
}
.method assembly static bool 'precheck@1613-1'(class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int32 k) cil managed
{
IL_0001:
ldarg.3
ldarg.2
blt.s IL_0007
ldc.i4.1
ret
IL_0007:
ldarg.0
ldarg.3
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
ldarg.1
ldarg.3
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
bne.un.s IL_002a
ldarg.0
ldarg.3
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
ldarg.1
ldarg.3
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
ceq
br.s IL_002c
IL_002a:
ldc.i4.0
IL_002c:
brfalse.s IL_003e
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldc.i4.1
add
starg.s k
starg.s ndims
starg.s y
starg.s x
br.s IL_0001
IL_003e:
ldc.i4.0
ret
}
.method assembly static bool 'checkN@1621-1'(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int64[] idxs, int32 k, int64 baseIdx, int64 i, int64 lim) cil managed
{
.maxstack 10
IL_0000:
ldarg.s i
ldarg.s lim
blt.s IL_0008
ldc.i4.1
ret
IL_0008:
ldarg.s idxs
ldarg.s k
ldarg.s baseIdx
ldarg.s i
add
stelem [mscorlib]System.Int64
ldarg.s k
ldarg.s ndims
ldc.i4.1
sub
bne.un.s IL_0039
ldarg.0
ldarg.1
ldarg.2
ldarg.s idxs
callvirt instance object [mscorlib]System.Array::GetValue(int64[])
ldarg.3
ldarg.s idxs
callvirt instance object [mscorlib]System.Array::GetValue(int64[])
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
br.s IL_004b
IL_0039:
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s ndims
ldarg.s idxs
ldarg.s k
ldc.i4.1
add
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'check@1628-3'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32)
IL_004b:
brfalse.s IL_0080
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s ndims
ldarg.s idxs
ldarg.s k
ldarg.s baseIdx
ldarg.s i
ldc.i8 0x1
add
ldarg.s lim
starg.s lim
starg.s i
starg.s baseIdx
starg.s k
starg.s idxs
starg.s ndims
starg.s y
starg.s x
starg.s iec
starg.s er
br IL_0000
IL_0080:
ldc.i4.0
ret
}
.method assembly static bool 'check@1628-3'(bool er, class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x, class [mscorlib]System.Array y, int32 ndims, int64[] idxs, int32 k) cil managed
{
.maxstack 11
.locals init (int32 V_0)
ldarg.s k
ldarg.s ndims
blt.s IL_0008
ldc.i4.1
ret
IL_0008:
ldarg.2
ldarg.s k
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
stloc.0
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldarg.s ndims
ldarg.s idxs
ldarg.s k
ldloc.0
conv.i8
ldc.i8 0x0
ldarg.2
ldarg.s k
callvirt instance int64 [mscorlib]System.Array::GetLongLength(int32)
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::'checkN@1621-1'(bool, class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array, class [mscorlib]System.Array, int32, int64[], int32, int64, int64, int64)
ret
}
.method assembly specialname static class [mscorlib]System.Collections.IEqualityComparer get_fsEqualityComparerNoHashingPER() cil managed
{
ldsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerNoHashingPER@1654
ret
}
.method assembly specialname static class [mscorlib]System.Collections.IEqualityComparer get_fsEqualityComparerNoHashingER() cil managed
{
ldsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::fsEqualityComparerNoHashingER@1661
ret
}
.method public static bool GenericEqualityERIntrinsic<T>(!!T x, !!T y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 66 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 61 20 70 72 69 6D 69 74 69 76 65 20
6C 69 62 72 61 72 79 20 72 6F 75 74 69 6E 65 20
75 73 65 64 20 62 79 20 6F 70 74 69 6D 69 7A 65
64 20 46 23 20 63 6F 64 65 20 61 6E 64 20 73 68
6F 75 6C 64 20 6E 6F 74 20 62 65 20 75 73 65 64
20 64 69 72 65 63 74 6C 79 B4 04 00 00 01 00 54
02 08 49 73 48 69 64 64 65 6E 01 )
ldc.i4.1
call class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerNoHashingER()
ldarg.0
box !!T
ldarg.1
box !!T
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityObj(bool, class [mscorlib]System.Collections.IEqualityComparer, object, object)
ret
}
.method public static bool GenericEqualityWithComparerIntrinsic<T>(class [mscorlib]System.Collections.IEqualityComparer comp, !!T x, !!T y) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 66 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 61 20 70 72 69 6D 69 74 69 76 65 20
6C 69 62 72 61 72 79 20 72 6F 75 74 69 6E 65 20
75 73 65 64 20 62 79 20 6F 70 74 69 6D 69 7A 65
64 20 46 23 20 63 6F 64 65 20 61 6E 64 20 73 68
6F 75 6C 64 20 6E 6F 74 20 62 65 20 75 73 65 64
20 64 69 72 65 63 74 6C 79 B4 04 00 00 01 00 54
02 08 49 73 48 69 64 64 65 6E 01 )
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
ldarg.0
ldarg.1
box !!T
ldarg.2
box !!T
tail.
callvirt instance bool [mscorlib]System.Collections.IEqualityComparer::Equals(object, object)
ret
}
.method assembly static int32 GenericHashObjArray(class [mscorlib]System.Collections.IEqualityComparer iec, object[] x) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4)
ldarg.1
ldlen
conv.i4
stloc.0
ldloc.0
ldc.i4.1
sub
stloc.1
ldloc.1
ldc.i4.s 18
ble.s IL_0014
ldc.i4.s 18
stloc.1
br.s IL_0015
IL_0014:
IL_0015:
ldc.i4.0
stloc.2
IL_0017:
ldloc.1
ldc.i4.0
blt.s IL_0042
ldloc.1
stloc.3
ldloc.2
stloc.s V_4
ldloc.s V_4
ldc.i4.1
shl
ldarg.0
ldarg.1
ldloc.1
callvirt instance object [mscorlib]System.Array::GetValue(int32)
callvirt instance int32 [mscorlib]System.Collections.IEqualityComparer::GetHashCode(object)
add
ldc.i4 0x277
ldloc.3
mul
add
stloc.2
ldloc.1
ldc.i4.1
sub
stloc.1
br.s IL_0017
IL_0042:
ldloc.2
ret
}
.method assembly static int32 GenericHashByteArray(uint8[] x) cil managed
{
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4)
ldarg.0
ldlen
conv.i4
stloc.0
ldloc.0
ldc.i4.1
sub
stloc.1
ldloc.1
ldc.i4.s 18
ble.s IL_0014
ldc.i4.s 18
stloc.1
br.s IL_0015
IL_0014:
IL_0015:
ldc.i4.0
stloc.2
IL_0017:
ldloc.1
ldc.i4.0
blt.s IL_003c
ldloc.1
stloc.3
ldloc.2
stloc.s V_4
ldloc.s V_4
ldc.i4.1
shl
ldarg.0
ldloc.1
ldelem [mscorlib]System.Byte
add
ldc.i4 0x277
ldloc.3
mul
add
stloc.2
ldloc.1
ldc.i4.1
sub
stloc.1
br.s IL_0017
IL_003c:
ldloc.2
ret
}
.method assembly static int32 GenericHashInt32Array(int32[] x) cil managed
{
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4)
ldarg.0
ldlen
conv.i4
stloc.0
ldloc.0
ldc.i4.1
sub
stloc.1
ldloc.1
ldc.i4.s 18
ble.s IL_0014
ldc.i4.s 18
stloc.1
br.s IL_0015
IL_0014:
IL_0015:
ldc.i4.0
stloc.2
IL_0017:
ldloc.1
ldc.i4.0
blt.s IL_003c
ldloc.1
stloc.3
ldloc.2
stloc.s V_4
ldloc.s V_4
ldc.i4.1
shl
ldarg.0
ldloc.1
ldelem [mscorlib]System.Int32
add
ldc.i4 0x277
ldloc.3
mul
add
stloc.2
ldloc.1
ldc.i4.1
sub
stloc.1
br.s IL_0017
IL_003c:
ldloc.2
ret
}
.method assembly static int32 GenericHashInt64Array(int64[] x) cil managed
{
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4)
ldarg.0
ldlen
conv.i4
stloc.0
ldloc.0
ldc.i4.1
sub
stloc.1
ldloc.1
ldc.i4.s 18
ble.s IL_0014
ldc.i4.s 18
stloc.1
br.s IL_0015
IL_0014:
IL_0015:
ldc.i4.0
stloc.2
IL_0017:
ldloc.1
ldc.i4.0
blt.s IL_003d
ldloc.1
stloc.3
ldloc.2
stloc.s V_4
ldloc.s V_4
ldc.i4.1
shl
ldarg.0
ldloc.1
ldelem [mscorlib]System.Int64
conv.i4
add
ldc.i4 0x277
ldloc.3
mul
add
stloc.2
ldloc.1
ldc.i4.1
sub
stloc.1
br.s IL_0017
IL_003d:
ldloc.2
ret
}
.method assembly static int32 GenericHashArbArray(class [mscorlib]System.Collections.IEqualityComparer iec, class [mscorlib]System.Array x) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (int32 V_0, int32 V_1, int32 V_2, int32 V_3, int32 V_4, int32 V_5)
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Rank()
ldc.i4.1
sub
switch (
IL_002c)
ldarg.1
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLength(int32)
stloc.0
ldloc.0
ldc.i4.1
shl
ldarg.1
ldc.i4.1
callvirt instance int32 [mscorlib]System.Array::GetLength(int32)
add
ldc.i4 0x18a6
add
ret
IL_002c:
ldarg.1
ldc.i4.0
callvirt instance int32 [mscorlib]System.Array::GetLowerBound(int32)
stloc.0
ldarg.1
callvirt instance int32 [mscorlib]System.Array::get_Length()
stloc.1
ldloc.0
ldloc.1
add
ldc.i4.1
sub
stloc.2
ldloc.2
ldloc.0
ldc.i4.s 18
add
ble.s IL_0050
ldloc.0
ldc.i4.s 18
add
stloc.2
br.s IL_0051
IL_0050:
IL_0051:
ldc.i4.0
stloc.3
IL_0053:
ldloc.2
ldloc.0
blt.s IL_0080
ldloc.2
stloc.s V_4
ldloc.3
stloc.s V_5
ldloc.s V_5
ldc.i4.1
shl
ldarg.0
ldarg.1
ldloc.2
callvirt instance object [mscorlib]System.Array::GetValue(int32)
callvirt instance int32 [mscorlib]System.Collections.IEqualityComparer::GetHashCode(object)
add
ldc.i4 0x277
ldloc.s V_4
mul
add
stloc.3
ldloc.2
ldc.i4.1
sub
stloc.2
br.s IL_0053
IL_0080:
ldloc.3
ret
}
.method assembly static int32 GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer iec, object x) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (class [mscorlib]System.Array V_0, class [mscorlib]System.Array V_1, object[] V_2, object[] V_3, uint8[] V_4, uint8[] V_5, int32[] V_6, int32[] V_7, int64[] V_8, int64[] V_9, class [mscorlib]System.Collections.IStructuralEquatable V_10, class [mscorlib]System.Collections.IStructuralEquatable V_11)
ldarg.1
brfalse IL_009b
ldarg.1
isinst [mscorlib]System.Array
stloc.0
ldloc.0
brfalse.s IL_0077
ldloc.0
stloc.1
ldloc.1
isinst object[]
stloc.2
ldloc.2
brfalse.s IL_0027
ldloc.2
stloc.3
ldarg.0
ldloc.3
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashObjArray(class [mscorlib]System.Collections.IEqualityComparer, object[])
ret
IL_0027:
ldloc.1
isinst uint8[]
stloc.s V_4
ldloc.s V_4
brfalse.s IL_003f
ldloc.s V_4
stloc.s V_5
ldloc.s V_5
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashByteArray(uint8[])
ret
IL_003f:
ldloc.1
isinst int32[]
stloc.s V_6
ldloc.s V_6
brfalse.s IL_0057
ldloc.s V_6
stloc.s V_7
ldloc.s V_7
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashInt32Array(int32[])
ret
IL_0057:
ldloc.1
isinst int64[]
stloc.s V_8
ldloc.s V_8
brfalse.s IL_006f
ldloc.s V_8
stloc.s V_9
ldloc.s V_9
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashInt64Array(int64[])
ret
IL_006f:
ldarg.0
ldloc.1
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashArbArray(class [mscorlib]System.Collections.IEqualityComparer, class [mscorlib]System.Array)
ret
IL_0077:
ldarg.1
isinst [mscorlib]System.Collections.IStructuralEquatable
stloc.s V_10
ldloc.s V_10
brfalse.s IL_0092
ldloc.s V_10
stloc.s V_11
ldloc.s V_11
ldarg.0
tail.
callvirt instance int32 [mscorlib]System.Collections.IStructuralEquatable::GetHashCode(class [mscorlib]System.Collections.IEqualityComparer)
ret
IL_0092:
ldarg.1
tail.
callvirt instance int32 [mscorlib]System.Object::GetHashCode()
ret
IL_009b:
ldc.i4.0
ret
}
.property class [mscorlib]System.Exception
NaNException()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class [mscorlib]System.Exception Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_NaNException()
}
.property class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer
fsComparerER()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/GenericComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsComparerER()
}
.property class [mscorlib]System.Collections.IEqualityComparer
fsEqualityComparerNoHashingPER()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerNoHashingPER()
}
.property class [mscorlib]System.Collections.IEqualityComparer
fsEqualityComparerNoHashingER()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerNoHashingER()
}
.property class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER
fsEqualityComparerUnlimitedHashingER()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherER Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerUnlimitedHashingER()
}
.property class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER
fsEqualityComparerUnlimitedHashingPER()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class Microsoft.FSharp.Core.LanguagePrimitives/HashCompare/UnlimitedHasherPER Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::get_fsEqualityComparerUnlimitedHashingPER()
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int16Comparer@2302
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<int16>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(int16 x, int16 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<int16>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int16IEquality@2224
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int16>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(int16 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int16>::GetHashCode(!0)
ldarg.1
conv.u2
ldarg.1
ldc.i4.s 16
shl
or
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(int16 x, int16 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int16>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int32Comparer@2303
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<int32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(int32 x, int32 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<int32>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int32IEquality@2225
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(int32 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int32>::GetHashCode(!0)
ldarg.1
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(int32 x, int32 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int32>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int64Comparer@2304
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<int64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(int64 x, int64 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<int64>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname Int64IEquality@2226
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(int64 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int64>::GetHashCode(!0)
ldarg.1
conv.i4
ldarg.1
ldc.i4.s 32
shr
conv.i4
xor
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(int64 x, int64 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int64>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname IntPtrComparer@2305
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<native int>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(native int x, native int y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<native int>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname IntPtrIEquality@2227
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native int>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(native int obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native int>::GetHashCode(!0)
ldarg.1
conv.u8
conv.i4
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(native int x, native int y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native int>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class abstract auto ansi sealed nested public IntrinsicFunctions
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto ansi serializable nested assembly beforefieldinit TypeInfo`1<T>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field static assembly int32 info
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private specialname rtspecialname static void .cctor() cil managed
{
ldtoken !T
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
call int32 Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::getTypeInfo(class [mscorlib]System.Type)
stsfld int32 class Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions/TypeInfo`1<!T>::info
ret
}
}
.method public static bool TypeTestGeneric<T>(object source) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 4C 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 66 6F 72 20 75 73 65 20 62 79 20 63
6F 6D 70 69 6C 65 64 20 46 23 20 63 6F 64 65 20
61 6E 64 20 73 68 6F 75 6C 64 20 6E 6F 74 20 62
65 20 75 73 65 64 20 64 69 72 65 63 74 6C 79 B4
04 00 00 01 00 54 02 08 49 73 48 69 64 64 65 6E
01 )
ldarg.0
isinst !!T
ldnull
cgt.un
brfalse.s IL_000e
ldc.i4.1
ret
IL_000e:
ldarg.0
ldnull
cgt.un
brfalse.s IL_0016
ldc.i4.0
ret
IL_0016:
ldsfld int32 class Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions/TypeInfo`1<!!T>::info
ldc.i4.2
ceq
ret
}
.method assembly static int32 getTypeInfo(class [mscorlib]System.Type ty) cil managed
{
.locals init (object[] V_0, object[] V_1, object V_2, class Microsoft.FSharp.Core.CompilationRepresentationAttribute V_3)
ldarg.0
callvirt instance bool [mscorlib]System.Type::get_IsValueType()
brfalse.s IL_000b
ldc.i4.4
ret
IL_000b:
ldarg.0
ldtoken Microsoft.FSharp.Core.CompilationMappingAttribute
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
ldc.i4.0
callvirt instance object[] [mscorlib]System.Reflection.MemberInfo::GetCustomAttributes(class [mscorlib]System.Type, bool)
stloc.0
ldloc.0
ldlen
conv.i4
brtrue.s IL_0024
ldc.i4.1
ret
IL_0024:
ldarg.0
ldtoken Microsoft.FSharp.Core.Unit
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
callvirt instance bool [mscorlib]System.Type::Equals(class [mscorlib]System.Type)
brfalse.s IL_0038
ldc.i4.2
ret
IL_0038:
ldtoken [mscorlib]System.Delegate
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
ldarg.0
callvirt instance bool [mscorlib]System.Type::IsAssignableFrom(class [mscorlib]System.Type)
brfalse.s IL_004c
ldc.i4.1
ret
IL_004c:
ldarg.0
ldtoken Microsoft.FSharp.Core.AllowNullLiteralAttribute
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
ldc.i4.0
callvirt instance object[] [mscorlib]System.Reflection.MemberInfo::GetCustomAttributes(class [mscorlib]System.Type, bool)
ldlen
conv.i4
ldc.i4.0
ble.s IL_0064
ldc.i4.1
ret
IL_0064:
ldarg.0
ldtoken Microsoft.FSharp.Core.CompilationRepresentationAttribute
call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
ldc.i4.0
callvirt instance object[] [mscorlib]System.Reflection.MemberInfo::GetCustomAttributes(class [mscorlib]System.Type, bool)
stloc.1
ldloc.1
ldlen
conv.i4
brtrue.s IL_007d
ldc.i4.3
ret
IL_007d:
ldloc.1
ldc.i4.0
ldelem [mscorlib]System.Object
stloc.2
ldloc.2
unbox.any Microsoft.FSharp.Core.CompilationRepresentationAttribute
stloc.3
ldloc.3
ldfld valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags Microsoft.FSharp.Core.CompilationRepresentationAttribute::'flags'
ldc.i4.8
and
brtrue.s IL_0098
ldc.i4.3
ret
IL_0098:
ldc.i4.2
ret
}
.method public static void FailStaticInit() cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 4C 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 66 6F 72 20 75 73 65 20 62 79 20 63
6F 6D 70 69 6C 65 64 20 46 23 20 63 6F 64 65 20
61 6E 64 20 73 68 6F 75 6C 64 20 6E 6F 74 20 62
65 20 75 73 65 64 20 64 69 72 65 63 74 6C 79 B4
04 00 00 01 00 54 02 08 49 73 48 69 64 64 65 6E
01 )
ldstr "checkStaticInit"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname SByteComparer@2301
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<int8>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(int8 x, int8 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<int8>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname SByteIEquality@2223
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int8>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(int8 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int8>::GetHashCode(!0)
ldarg.1
ldc.i4.8
shl
ldarg.1
xor
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(int8 x, int8 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<int8>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname StringComparer@2300
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<string>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(string x, string y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<string>::Compare(!0, !0)
ldarg.1
ldarg.2
call int32 [mscorlib]System.String::CompareOrdinal(string, string)
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname StringIEquality@2222
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<string>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(string obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<string>::GetHashCode(!0)
ldarg.1
brfalse.s IL_000b
ldarg.1
call instance int32 [mscorlib]System.String::GetHashCode()
ret
IL_000b:
ldc.i4.0
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(string x, string y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<string>::Equals(!0, !0)
ldarg.1
ldarg.2
call bool [mscorlib]System.String::Equals(string, string)
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt16Comparer@2307
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<uint16>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(uint16 x, uint16 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<uint16>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt16IEquality@2229
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint16>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(uint16 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint16>::GetHashCode(!0)
ldarg.1
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(uint16 x, uint16 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint16>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt32Comparer@2308
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<uint32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(uint32 x, uint32 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<uint32>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt32IEquality@2230
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(uint32 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint32>::GetHashCode(!0)
ldarg.1
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(uint32 x, uint32 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint32>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt64Comparer@2309
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<uint64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(uint64 x, uint64 y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<uint64>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UInt64IEquality@2231
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint64>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(uint64 obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint64>::GetHashCode(!0)
ldarg.1
conv.i4
ldarg.1
ldc.i4.s 32
shr.un
conv.i4
xor
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(uint64 x, uint64 y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<uint64>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UIntPtrComparer@2310
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IComparer`1<native uint>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IComparer`1-Compare'(native uint x, native uint y) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IComparer`1<native uint>::Compare(!0, !0)
ldarg.1
ldarg.2
bge.un.s IL_0007
ldc.i4.m1
ret
IL_0007:
ldarg.1
ldarg.2
cgt.un
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname UIntPtrIEquality@2232
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native uint>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEqualityComparer`1-GetHashCode'(native uint obj) cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native uint>::GetHashCode(!0)
ldarg.1
conv.u8
conv.i4
ldc.i4 0x7fffffff
and
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-Generic-IEqualityComparer`1-Equals'(native uint x, native uint y) cil managed
{
.override method instance bool class [mscorlib]System.Collections.Generic.IEqualityComparer`1<native uint>::Equals(!0, !0)
ldarg.1
ldarg.2
ceq
ret
}
}
.method assembly static string anyToStringShowingNull<T>(!!T x) cil managed
{
.locals init (object V_0, class [mscorlib]System.IFormattable V_1, class [mscorlib]System.IFormattable V_2, object V_3)
ldarg.0
box !!T
stloc.0
ldloc.0
brfalse.s IL_0031
ldloc.0
isinst [mscorlib]System.IFormattable
stloc.1
ldloc.1
brfalse.s IL_0026
ldloc.1
stloc.2
ldloc.2
ldnull
call class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
tail.
callvirt instance string [mscorlib]System.IFormattable::ToString(string, class [mscorlib]System.IFormatProvider)
ret
IL_0026:
ldloc.0
stloc.3
ldloc.3
tail.
callvirt instance string [mscorlib]System.Object::ToString()
ret
IL_0031:
ldstr "null"
ret
}
.method public specialname static class [mscorlib]System.Collections.IComparer get_GenericComparer() cil managed
{
ldsfld class [mscorlib]System.Collections.IComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::GenericComparer@2195
ret
}
.method public specialname static class [mscorlib]System.Collections.IEqualityComparer get_GenericEqualityComparer() cil managed
{
ldsfld class [mscorlib]System.Collections.IEqualityComparer '<StartupCode$FSharp-Core>'.'$Prim-types'::GenericEqualityComparer@2196
ret
}
.property class [mscorlib]System.Collections.IComparer
GenericComparer()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class [mscorlib]System.Collections.IComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericComparer()
}
.property class [mscorlib]System.Collections.IEqualityComparer
GenericEqualityComparer()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 09 00 00 00 00 00 )
.get class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericEqualityComparer()
}
}
.class public abstract auto ansi serializable beforefieldinit Microsoft.FSharp.Core.FSharpFunc`2<T,TResult>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.AbstractClassAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.method public hidebysig abstract virtual instance !TResult Invoke(!T func) cil managed
{
}
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
}
.class private abstract auto ansi sealed Microsoft.FSharp.Collections.Internal
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class abstract auto ansi sealed nested assembly IEnumerator
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto autochar serializable sealed nested assembly beforefieldinit specialname filter@182<T>
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>,
[mscorlib]System.IDisposable,
[mscorlib]System.Collections.IEnumerator
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public class Microsoft.FSharp.Core.FSharpFunc`2<!T,bool> f
.field public class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> e
.field public class Microsoft.FSharp.Core.FSharpRef`1<bool> started
.method public specialname rtspecialname instance void .ctor(class Microsoft.FSharp.Core.FSharpFunc`2<!T,bool> f, class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> e, class Microsoft.FSharp.Core.FSharpRef`1<bool> started) cil managed
{
ldarg.0
ldarg.1
stfld class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::f
ldarg.0
ldarg.2
stfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
ldarg.0
ldarg.3
stfld class Microsoft.FSharp.Core.FSharpRef`1<bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::started
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance !T 'System-Collections-Generic-IEnumerator`1-get_Current'() cil managed
{
.override method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>::get_Current()
.locals init (bool V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::started
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<bool>::contents@
stloc.0
ldloc.0
brtrue.s IL_0019
call !!0 Microsoft.FSharp.Collections.IEnumerator::notStarted<class Microsoft.FSharp.Core.Unit>()
pop
br.s IL_001a
IL_0019:
IL_001a:
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
tail.
callvirt instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>::get_Current()
ret
}
.method private hidebysig newslot virtual final instance object 'System-Collections-IEnumerator-get_Current'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::get_Current
.locals init (bool V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::started
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<bool>::contents@
stloc.0
ldloc.0
brtrue.s IL_0019
call !!0 Microsoft.FSharp.Collections.IEnumerator::notStarted<class Microsoft.FSharp.Core.Unit>()
pop
br.s IL_001a
IL_0019:
IL_001a:
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
callvirt instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>::get_Current()
box !T
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-IEnumerator-MoveNext'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::MoveNext
.locals init (class Microsoft.FSharp.Core.FSharpFunc`2<!T,bool> V_0, class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> V_1, class Microsoft.FSharp.Core.FSharpRef`1<bool> V_2)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::f
stloc.0
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
stloc.1
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::started
stloc.2
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::f
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<bool> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::started
ldnull
call bool Microsoft.FSharp.Collections.Internal/IEnumerator::next@187<!T>(class Microsoft.FSharp.Core.FSharpFunc`2<!!0,bool>, class [mscorlib]System.Collections.Generic.IEnumerator`1<!!0>, class Microsoft.FSharp.Core.FSharpRef`1<bool>, class Microsoft.FSharp.Core.Unit)
ret
}
.method private hidebysig newslot virtual final instance void 'System-Collections-IEnumerator-Reset'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::Reset
ldstr "resetNotSupported"
newobj instance void [mscorlib]System.NotSupportedException::.ctor(string)
throw
}
.method private hidebysig newslot virtual final instance void 'System-IDisposable-Dispose'() cil managed
{
.override [mscorlib]System.IDisposable::Dispose
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!T>::e
tail.
callvirt instance void [mscorlib]System.IDisposable::Dispose()
ret
}
}
.method assembly static bool next@187<T>(class Microsoft.FSharp.Core.FSharpFunc`2<!!T,bool> f, class [mscorlib]System.Collections.Generic.IEnumerator`1<!!T> e, class Microsoft.FSharp.Core.FSharpRef`1<bool> started, class Microsoft.FSharp.Core.Unit unitVar0) cil managed
{
IL_0000:
ldarg.2
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<bool>::contents@
brtrue.s IL_0013
ldarg.2
ldc.i4.1
call instance void class Microsoft.FSharp.Core.FSharpRef`1<bool>::set_contents(!0)
br.s IL_0014
IL_0013:
IL_0014:
ldarg.1
callvirt instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
brfalse.s IL_003a
ldarg.0
ldarg.1
callvirt instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<!!T>::get_Current()
callvirt instance !1 class Microsoft.FSharp.Core.FSharpFunc`2<!!T,bool>::Invoke(!0)
brfalse.s IL_002c
ldc.i4.1
ret
IL_002c:
ldarg.0
ldarg.1
ldarg.2
ldnull
starg.s unitVar0
starg.s started
starg.s e
starg.s f
br.s IL_0000
IL_003a:
ldc.i4.0
ret
}
.method assembly static class [mscorlib]System.Collections.Generic.IEnumerator`1<!!T> 'filter'<T>(class Microsoft.FSharp.Core.FSharpFunc`2<!!T,bool> f, class [mscorlib]System.Collections.Generic.IEnumerator`1<!!T> e) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (class Microsoft.FSharp.Core.FSharpRef`1<bool> V_0)
ldc.i4.0
newobj instance void class Microsoft.FSharp.Core.FSharpRef`1<bool>::.ctor(!0)
stloc.0
ldarg.0
ldarg.1
ldloc.0
newobj instance void class Microsoft.FSharp.Collections.Internal/IEnumerator/filter@182<!!T>::.ctor(class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool>,
class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>,
class Microsoft.FSharp.Core.FSharpRef`1<bool>)
ret
}
}
}
.class public abstract auto ansi sealed Microsoft.FSharp.Collections.SeqModule
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationRepresentationAttribute::.ctor(valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags) = ( 01 00 04 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.RequireQualifiedAccessAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto ansi serializable sealed nested assembly beforefieldinit Filter@583<T>
extends class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>>
{
.field public class Microsoft.FSharp.Core.FSharpFunc`2<!T,bool> f
.method assembly specialname rtspecialname instance void .ctor(class Microsoft.FSharp.Core.FSharpFunc`2<!T,bool> f) cil managed
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>>::.ctor()
ldarg.0
ldarg.1
stfld class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool> class Microsoft.FSharp.Collections.SeqModule/Filter@583<!T>::f
ret
}
.method public strict virtual instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> Invoke(class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> e) cil managed
{
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool> class Microsoft.FSharp.Collections.SeqModule/Filter@583<!T>::f
ldarg.1
call class [mscorlib]System.Collections.Generic.IEnumerator`1<!!0> Microsoft.FSharp.Collections.Internal/IEnumerator::'filter'<!T>(class Microsoft.FSharp.Core.FSharpFunc`2<!!0,bool>, class [mscorlib]System.Collections.Generic.IEnumerator`1<!!0>)
ret
}
}
.class auto ansi serializable sealed nested assembly beforefieldinit revamp@574<b,a>
extends class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!b>>
{
.field public class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!a>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!b>> f
.field public class [mscorlib]System.Collections.Generic.IEnumerable`1<!a> ie
.method assembly specialname rtspecialname instance void .ctor(class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!a>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!b>> f, class [mscorlib]System.Collections.Generic.IEnumerable`1<!a> ie) cil managed
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!b>>::.ctor()
ldarg.0
ldarg.1
stfld class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!1>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>> class Microsoft.FSharp.Collections.SeqModule/revamp@574<!b,!a>::f
ldarg.0
ldarg.2
stfld class [mscorlib]System.Collections.Generic.IEnumerable`1<!1> class Microsoft.FSharp.Collections.SeqModule/revamp@574<!b,!a>::ie
ret
}
.method public strict virtual instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!b> Invoke(class Microsoft.FSharp.Core.Unit unitVar0) cil managed
{
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!1>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>> class Microsoft.FSharp.Collections.SeqModule/revamp@574<!b,!a>::f
ldarg.0
ldfld class [mscorlib]System.Collections.Generic.IEnumerable`1<!1> class Microsoft.FSharp.Collections.SeqModule/revamp@574<!b,!a>::ie
callvirt instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<!a>::GetEnumerator()
tail.
callvirt instance !1 class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!a>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!b>>::Invoke(!0)
ret
}
}
.method public static class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T> Filter<T>(class Microsoft.FSharp.Core.FSharpFunc`2<!!T,bool> predicate, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T> source) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationSourceNameAttribute::.ctor(string) = ( 01 00 06 66 69 6C 74 65 72 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
ldarg.1
box class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T>
brfalse.s IL_000b
br.s IL_0016
IL_000b:
ldstr "source"
newobj instance void [mscorlib]System.ArgumentNullException::.ctor(string)
throw
IL_0016:
ldarg.0
newobj instance void class Microsoft.FSharp.Collections.SeqModule/Filter@583<!!T>::.ctor(class Microsoft.FSharp.Core.FSharpFunc`2<!0,bool>)
ldarg.1
call class [mscorlib]System.Collections.Generic.IEnumerable`1<!!1> Microsoft.FSharp.Collections.SeqModule::revamp<!!0,!!0>(class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!!0>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!!1>>, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
ret
}
.method public static int32 Length<T>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T> source) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationSourceNameAttribute::.ctor(string) = ( 01 00 06 6C 65 6E 67 74 68 00 00 )
.locals init (!!T[] V_0, !!T[] V_1, class Microsoft.FSharp.Collections.FSharpList`1<!!T> V_2, class Microsoft.FSharp.Collections.FSharpList`1<!!T> V_3, class [mscorlib]System.Collections.Generic.ICollection`1<!!T> V_4, class [mscorlib]System.Collections.Generic.ICollection`1<!!T> V_5, class [mscorlib]System.Collections.Generic.IEnumerator`1<!!T> V_6, int32 V_7, int32 V_8, class [mscorlib]System.IDisposable V_9)
ldarg.0
box class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T>
brfalse.s IL_000b
br.s IL_0016
IL_000b:
ldstr "source"
newobj instance void [mscorlib]System.ArgumentNullException::.ctor(string)
throw
IL_0016:
ldarg.0
isinst !!T[]
stloc.0
ldloc.0
brfalse.s IL_0027
ldloc.0
stloc.1
ldloc.1
ldlen
conv.i4
ret
IL_0027:
ldarg.0
isinst class Microsoft.FSharp.Collections.FSharpList`1<!!T>
stloc.2
ldloc.2
brfalse.s IL_003a
ldloc.2
stloc.3
ldloc.3
callvirt instance int32 class Microsoft.FSharp.Collections.FSharpList`1<!!T>::get_Length()
ret
IL_003a:
ldarg.0
isinst class [mscorlib]System.Collections.Generic.ICollection`1<!!T>
stloc.s V_4
ldloc.s V_4
brfalse.s IL_0054
ldloc.s V_4
stloc.s V_5
ldloc.s V_5
tail.
callvirt instance int32 class [mscorlib]System.Collections.Generic.ICollection`1<!!T>::get_Count()
ret
IL_0054:
ldarg.0
callvirt instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<!!T>::GetEnumerator()
stloc.s V_6
.try
{
ldc.i4.0
stloc.s V_8
IL_005f:
ldloc.s V_6
callvirt instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
brfalse.s IL_0071
ldloc.s V_8
ldc.i4.1
add
stloc.s V_8
br.s IL_005f
IL_0071:
ldloc.s V_8
stloc.s V_7
leave.s IL_0091
}
finally
{
IL_0077: ldloc.s V_6
IL_0079: isinst [mscorlib]System.IDisposable
IL_007e: stloc.s V_9
IL_0080: ldloc.s V_9
IL_0082: brfalse.s IL_008e
IL_0084: ldloc.s V_9
IL_0086: callvirt instance void [mscorlib]System.IDisposable::Dispose()
IL_008b: ldnull
IL_008c: pop
IL_008d: endfinally
IL_008e: ldnull
IL_008f: pop
IL_0090: endfinally
}
IL_0091: ldloc.s V_7
IL_0093: ret
}
.method assembly static class [mscorlib]System.Collections.Generic.IEnumerable`1<!!b> revamp<a,b>(class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!!a>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!!b>> f, class [mscorlib]System.Collections.Generic.IEnumerable`1<!!a> ie) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
ldarg.0
ldarg.1
newobj instance void class Microsoft.FSharp.Collections.SeqModule/revamp@574<!!b,!!a>::.ctor(class Microsoft.FSharp.Core.FSharpFunc`2<class [mscorlib]System.Collections.Generic.IEnumerator`1<!1>,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>>,
class [mscorlib]System.Collections.Generic.IEnumerable`1<!1>)
call class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0> Microsoft.FSharp.Collections.IEnumerator::mkSeq<!!1>(class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!!0>>)
ret
}
}
.class private abstract auto ansi sealed Microsoft.FSharp.Collections.PrivateListHelpers
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto ansi serializable nested assembly beforefieldinit ListEnumerator`1<T>
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>,
[mscorlib]System.Collections.IEnumerator,
[mscorlib]System.IDisposable
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly class Microsoft.FSharp.Collections.FSharpList`1<!T> s
.field assembly class Microsoft.FSharp.Collections.FSharpList`1<!T> curr
.field assembly bool started
.method public specialname rtspecialname instance void .ctor(class Microsoft.FSharp.Collections.FSharpList`1<!T> s) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::s
ldarg.0
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::s
stfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
ldarg.0
ldc.i4.0
stfld bool class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::started
ret
}
.method assembly hidebysig instance !T GetCurrent() cil managed
{
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0)
ldarg.0
ldfld bool class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::started
brfalse.s IL_0025
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
stloc.0
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_001f
ldloc.0
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
ret
IL_001f:
call !!0 Microsoft.FSharp.Collections.PrivateListHelpers::alreadyFinished<!T>()
ret
IL_0025:
call !!0 Microsoft.FSharp.Collections.PrivateListHelpers::notStarted<!T>()
ret
}
.method private hidebysig newslot specialname virtual instance !T 'System-Collections-Generic-IEnumerator`1-get_Current'() cil managed
{
.override method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<!T>::get_Current()
ldarg.0
callvirt instance !0 class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::GetCurrent()
ret
}
.method private hidebysig newslot virtual instance bool 'System-Collections-IEnumerator-MoveNext'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::MoveNext
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_1, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_2)
ldarg.0
ldfld bool class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::started
brfalse.s IL_003c
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
stloc.0
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_003a
ldloc.0
stloc.1
ldloc.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.2
ldarg.0
ldloc.2
stfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
ceq
ldc.i4.0
ceq
ret
IL_003a:
ldc.i4.0
ret
IL_003c:
ldarg.0
ldc.i4.1
stfld bool class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::started
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
ceq
ldc.i4.0
ceq
ret
}
.method private hidebysig newslot specialname virtual instance object 'System-Collections-IEnumerator-get_Current'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::get_Current
ldarg.0
callvirt instance !0 class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::GetCurrent()
box !T
ret
}
.method private hidebysig newslot virtual instance void 'System-Collections-IEnumerator-Reset'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::Reset
ldarg.0
ldc.i4.0
stfld bool class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::started
ldarg.0
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::s
stfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::curr
ret
}
.method private hidebysig newslot virtual instance void 'System-IDisposable-Dispose'() cil managed
{
.override [mscorlib]System.IDisposable::Dispose
ret
}
}
.method assembly static !!a notStarted<a>() cil managed
{
ldstr "enumerationNotStarted"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
.method assembly static !!a alreadyFinished<a>() cil managed
{
ldstr "enumerationAlreadyFinished"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
.method assembly static int32 lengthAcc<a>(int32 acc, class Microsoft.FSharp.Collections.FSharpList`1<!!a> xs) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 02 00 00 00 01 00 00 00 01 00 00 00 00 00 )
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!!a> V_0)
IL_0000:
ldarg.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!!a>::tail
brfalse.s IL_001a
ldarg.1
stloc.0
ldarg.0
ldc.i4.1
add
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!!a>::tail
starg.s xs
starg.s acc
br.s IL_0000
IL_001a:
ldarg.0
ret
}
}
.class public auto autochar serializable sealed beforefieldinit Microsoft.FSharp.Collections.FSharpList`1<T>
extends [mscorlib]System.Object
implements class [mscorlib]System.IEquatable`1<class Microsoft.FSharp.Collections.FSharpList`1<!T>>,
[mscorlib]System.Collections.IStructuralEquatable,
[mscorlib]System.IComparable,
class [mscorlib]System.IComparable`1<class Microsoft.FSharp.Collections.FSharpList`1<!T>>,
class [mscorlib]System.Collections.Generic.IReadOnlyCollection`1<!T>,
[mscorlib]System.Collections.IStructuralComparable,
[mscorlib]System.Collections.IEnumerable,
class [mscorlib]System.Collections.Generic.IEnumerable`1<!T>
{
.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = ( 01 00 04 49 74 65 6D 00 00 )
.custom instance void Microsoft.FSharp.Core.StructuralEqualityAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.StructuralComparisonAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompiledNameAttribute::.ctor(string) = ( 01 00 0C 46 53 68 61 72 70 4C 69 73 74 60 31 00
00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerTypeProxyAttribute::.ctor(class [mscorlib]System.Type) = ( 01 00 2C 4D 69 63 72 6F 73 6F 66 74 2E 46 53 68
61 72 70 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E
4C 69 73 74 44 65 62 75 67 56 69 65 77 60 31 00
00 )
.custom instance void Microsoft.FSharp.Core.DefaultAugmentationAttribute::.ctor(bool) = ( 01 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 01 00 00 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 11 7B 44 65 62 75 67 44 69 73 70 6C 61 79
2C 6E 71 7D 00 00 )
.field assembly !T head
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field assembly class Microsoft.FSharp.Collections.FSharpList`1<!T> tail
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.field static assembly initonly class Microsoft.FSharp.Collections.FSharpList`1<!T> _unique_Empty
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.method private specialname rtspecialname static void .cctor() cil managed
{
newobj instance void class Microsoft.FSharp.Collections.FSharpList`1<!T>::.ctor()
stsfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::_unique_Empty
ret
}
.method assembly specialname rtspecialname instance void .ctor() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call instance void [mscorlib]System.Object::.ctor()
ret
}
.method public hidebysig virtual final instance int32 CompareTo(class Microsoft.FSharp.Collections.FSharpList`1<!T> obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (int32 V_0, int32 V_1, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_2, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_3, int32 V_4, class [mscorlib]System.Collections.IComparer V_5, !T V_6, !T V_7, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_8, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_9)
ldarg.0
ldnull
cgt.un
brfalse IL_0096
ldarg.1
ldnull
cgt.un
brfalse IL_0094
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.0
ldarg.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.1
ldloc.0
ldloc.1
bne.un.s IL_0090
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_008e
ldarg.0
stloc.2
ldarg.1
stloc.3
call class [mscorlib]System.Collections.IComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericComparer()
stloc.s V_5
ldloc.2
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_6
ldloc.3
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_7
ldloc.s V_5
ldloc.s V_6
ldloc.s V_7
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IComparer, !!0, !!0)
stloc.s V_4
ldloc.s V_4
ldc.i4.0
bge.s IL_0063
ldloc.s V_4
ret
IL_0063:
ldloc.s V_4
ldc.i4.0
ble.s IL_006b
ldloc.s V_4
ret
IL_006b:
call class [mscorlib]System.Collections.IComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericComparer()
stloc.s V_5
ldloc.2
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_8
ldloc.3
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_9
ldloc.s V_8
ldloc.s V_9
ldloc.s V_5
callvirt instance int32 class Microsoft.FSharp.Collections.FSharpList`1<!T>::CompareTo(object, class [mscorlib]System.Collections.IComparer)
ret
IL_008e:
ldc.i4.0
ret
IL_0090:
ldloc.0
ldloc.1
sub
ret
IL_0094:
ldc.i4.1
ret
IL_0096:
ldarg.1
ldnull
cgt.un
brfalse.s IL_009e
ldc.i4.m1
ret
IL_009e:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 CompareTo(object obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
ldarg.1
unbox.any class Microsoft.FSharp.Collections.FSharpList`1<!T>
callvirt instance int32 class Microsoft.FSharp.Collections.FSharpList`1<!T>::CompareTo(class Microsoft.FSharp.Collections.FSharpList`1<!0>)
ret
}
.method public hidebysig virtual final instance int32 CompareTo(object obj, class [mscorlib]System.Collections.IComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0, int32 V_1, int32 V_2, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_3, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_4, int32 V_5, !T V_6, !T V_7, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_8, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_9)
IL_0000:
ldarg.1
unbox.any class Microsoft.FSharp.Collections.FSharpList`1<!T>
stloc.0
ldarg.0
ldnull
cgt.un
brfalse IL_009a
ldarg.1
unbox.any class Microsoft.FSharp.Collections.FSharpList`1<!T>
ldnull
cgt.un
brfalse IL_0098
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.1
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.2
ldloc.1
ldloc.2
bne.un.s IL_0094
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_0092
ldarg.0
stloc.3
ldloc.0
stloc.s V_4
ldloc.3
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_6
ldloc.s V_4
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_7
ldarg.2
ldloc.s V_6
ldloc.s V_7
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IComparer, !!0, !!0)
stloc.s V_5
ldloc.s V_5
ldc.i4.0
bge.s IL_0069
ldloc.s V_5
ret
IL_0069:
ldloc.s V_5
ldc.i4.0
ble.s IL_0071
ldloc.s V_5
ret
IL_0071:
ldloc.3
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_8
ldloc.s V_4
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_9
ldloc.s V_8
ldloc.s V_9
ldarg.2
starg.s comp
starg.s obj
starg.s 0
br IL_0000
IL_0092:
ldc.i4.0
ret
IL_0094:
ldloc.1
ldloc.2
sub
ret
IL_0098:
ldc.i4.1
ret
IL_009a:
ldarg.1
unbox.any class Microsoft.FSharp.Collections.FSharpList`1<!T>
ldnull
cgt.un
brfalse.s IL_00a7
ldc.i4.m1
ret
IL_00a7:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 GetHashCode(class [mscorlib]System.Collections.IEqualityComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (int32 V_0, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_1, !T V_2)
ldarg.0
ldnull
cgt.un
brfalse.s IL_005e
ldc.i4.0
stloc.0
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_0054
ldarg.0
stloc.1
ldc.i4.1
stloc.0
ldc.i4 0x9e3779b9
ldloc.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldarg.1
callvirt instance int32 class Microsoft.FSharp.Collections.FSharpList`1<!T>::GetHashCode(class [mscorlib]System.Collections.IEqualityComparer)
ldloc.0
ldc.i4.6
shl
ldloc.0
ldc.i4.2
shr
add
add
add
stloc.0
ldc.i4 0x9e3779b9
ldloc.1
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.2
ldarg.1
ldloc.2
box !T
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer, object)
ldloc.0
ldc.i4.6
shl
ldloc.0
ldc.i4.2
shr
add
add
add
stloc.0
ldloc.0
ret
IL_0054:
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
ret
IL_005e:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 GetHashCode() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericEqualityComparer()
callvirt instance int32 class Microsoft.FSharp.Collections.FSharpList`1<!T>::GetHashCode(class [mscorlib]System.Collections.IEqualityComparer)
ret
}
.method public hidebysig virtual final instance bool Equals(object obj, class [mscorlib]System.Collections.IEqualityComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0, int32 V_1, int32 V_2, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_3, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_4, !T V_5, !T V_6, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_7, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_8)
IL_0001:
ldarg.0
ldnull
cgt.un
brfalse IL_007f
ldarg.1
isinst class Microsoft.FSharp.Collections.FSharpList`1<!T>
stloc.0
ldloc.0
brfalse.s IL_007d
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.1
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.2
ldloc.1
ldloc.2
bne.un.s IL_007b
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_0079
ldarg.0
stloc.3
ldloc.0
stloc.s V_4
ldloc.3
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_5
ldloc.s V_4
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_6
ldarg.2
ldloc.s V_5
ldloc.s V_6
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IEqualityComparer, !!0, !!0)
brfalse.s IL_0077
ldloc.3
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_7
ldloc.s V_4
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.s V_8
ldloc.s V_7
ldloc.s V_8
ldarg.2
starg.s comp
starg.s obj
starg.s 0
br IL_0001
IL_0077:
ldc.i4.0
ret
IL_0079:
ldc.i4.1
ret
IL_007b:
ldc.i4.0
ret
IL_007d:
ldc.i4.0
ret
IL_007f:
ldarg.1
ldnull
cgt.un
ldc.i4.0
ceq
ret
}
.method public hidebysig virtual final instance bool Equals(class Microsoft.FSharp.Collections.FSharpList`1<!T> obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (int32 V_0, int32 V_1, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_2, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_3, !T V_4, !T V_5)
IL_0001:
ldarg.0
ldnull
cgt.un
brfalse.s IL_0066
ldarg.1
ldnull
cgt.un
brfalse.s IL_0064
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.0
ldarg.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldnull
cgt.un
stloc.1
ldloc.0
ldloc.1
bne.un.s IL_0062
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse.s IL_0060
ldarg.0
stloc.2
ldarg.1
stloc.3
ldloc.2
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_4
ldloc.3
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_5
ldloc.s V_4
ldloc.s V_5
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityERIntrinsic<!T>(!!0, !!0)
brfalse.s IL_005e
ldloc.2
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldloc.3
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
starg.s obj
starg.s 0
br.s IL_0001
IL_005e:
ldc.i4.0
ret
IL_0060:
ldc.i4.1
ret
IL_0062:
ldc.i4.0
ret
IL_0064:
ldc.i4.0
ret
IL_0066:
ldarg.1
ldnull
cgt.un
ldc.i4.0
ceq
ret
}
.method public hidebysig virtual final instance bool Equals(object obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0)
ldarg.1
isinst class Microsoft.FSharp.Collections.FSharpList`1<!T>
stloc.0
ldloc.0
brfalse.s IL_0013
ldarg.0
ldloc.0
callvirt instance bool class Microsoft.FSharp.Collections.FSharpList`1<!T>::Equals(class Microsoft.FSharp.Collections.FSharpList`1<!0>)
ret
IL_0013:
ldc.i4.0
ret
}
.method public hidebysig specialname instance int32 get_Length() cil managed
{
ldc.i4.0
ldarg.0
call int32 Microsoft.FSharp.Collections.PrivateListHelpers::lengthAcc<!T>(int32, class Microsoft.FSharp.Collections.FSharpList`1<!!0>)
ret
}
.method public hidebysig virtual instance string ToString() cil managed
{
.locals init (class Microsoft.FSharp.Collections.FSharpList`1<!T> V_0, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_1, class Microsoft.FSharp.Collections.FSharpList`1<!T> V_2, !T V_3, !T V_4, !T V_5)
ldarg.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse IL_01ab
ldarg.0
stloc.0
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse IL_0178
ldloc.0
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.1
ldloc.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brfalse IL_0127
ldloc.1
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
stloc.2
ldloc.2
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
ldfld class Microsoft.FSharp.Collections.FSharpList`1<!0> class Microsoft.FSharp.Collections.FSharpList`1<!T>::tail
brtrue.s IL_00b8
ldloc.2
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.3
ldloc.1
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_4
ldloc.0
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_5
newobj instance void [mscorlib]System.Text.StringBuilder::.ctor()
ldstr "["
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.s V_5
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; "
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.s V_4
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; "
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.3
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "]"
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
tail.
callvirt instance string [mscorlib]System.Object::ToString()
ret
IL_00b8:
ldloc.2
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.3
ldloc.1
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_4
ldloc.0
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_5
newobj instance void [mscorlib]System.Text.StringBuilder::.ctor()
ldstr "["
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.s V_5
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; "
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.s V_4
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; "
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.3
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; ... ]"
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
tail.
callvirt instance string [mscorlib]System.Object::ToString()
ret
IL_0127:
ldloc.1
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.3
ldloc.0
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.s V_4
newobj instance void [mscorlib]System.Text.StringBuilder::.ctor()
ldstr "["
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.s V_4
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "; "
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.3
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "]"
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
tail.
callvirt instance string [mscorlib]System.Object::ToString()
ret
IL_0178:
ldloc.0
ldfld !0 class Microsoft.FSharp.Collections.FSharpList`1<!T>::head
stloc.3
newobj instance void [mscorlib]System.Text.StringBuilder::.ctor()
ldstr "["
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldloc.3
call string Microsoft.FSharp.Core.LanguagePrimitives::anyToStringShowingNull<!T>(!!0)
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
ldstr "]"
callvirt instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
tail.
callvirt instance string [mscorlib]System.Object::ToString()
ret
IL_01ab:
ldstr "[]"
ret
}
.method private hidebysig newslot virtual instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!T> 'System-Collections-Generic-IEnumerable`1-GetEnumerator'() cil managed
{
.override method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<!T>::GetEnumerator()
ldarg.0
newobj instance void class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::.ctor(class Microsoft.FSharp.Collections.FSharpList`1<!0>)
ret
}
.method private hidebysig newslot virtual instance class [mscorlib]System.Collections.IEnumerator 'System-Collections-IEnumerable-GetEnumerator'() cil managed
{
.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
ldarg.0
newobj instance void class Microsoft.FSharp.Collections.PrivateListHelpers/ListEnumerator`1<!T>::.ctor(class Microsoft.FSharp.Collections.FSharpList`1<!0>)
ret
}
.method private hidebysig newslot specialname virtual instance int32 'System-Collections-Generic-IReadOnlyCollection`1-get_Count'() cil managed
{
.override method instance int32 class [mscorlib]System.Collections.Generic.IReadOnlyCollection`1<!T>::get_Count()
ldc.i4.0
ldarg.0
call int32 Microsoft.FSharp.Collections.PrivateListHelpers::lengthAcc<!T>(int32, class Microsoft.FSharp.Collections.FSharpList`1<!!0>)
ret
}
.property instance int32 Length()
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.get instance int32 Microsoft.FSharp.Collections.FSharpList`1::get_Length()
}
}
.class private abstract auto ansi sealed Microsoft.FSharp.Collections.IEnumerator
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto autochar serializable sealed nested assembly beforefieldinit specialname mkSeq@133<TResult>
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerable`1<!TResult>,
[mscorlib]System.Collections.IEnumerable
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!TResult>> f
.method public specialname rtspecialname instance void .ctor(class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!TResult>> f) cil managed
{
ldarg.0
ldarg.1
stfld class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>> class Microsoft.FSharp.Collections.IEnumerator/mkSeq@133<!TResult>::f
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!TResult> 'System-Collections-Generic-IEnumerable`1-GetEnumerator'() cil managed
{
.override method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<!TResult>::GetEnumerator()
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>> class Microsoft.FSharp.Collections.IEnumerator/mkSeq@133<!TResult>::f
ldnull
tail.
callvirt instance !1 class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!TResult>>::Invoke(!0)
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.IEnumerator 'System-Collections-IEnumerable-GetEnumerator'() cil managed
{
.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>> class Microsoft.FSharp.Collections.IEnumerator/mkSeq@133<!TResult>::f
ldnull
callvirt instance !1 class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!TResult>>::Invoke(!0)
ret
}
}
.method assembly static !!a notStarted<a>() cil managed
{
ldstr "enumerationNotStarted"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
.method assembly static class [mscorlib]System.Collections.Generic.IEnumerable`1<!!TResult> mkSeq<TResult>(class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!!TResult>> f) cil managed
{
ldarg.0
newobj instance void class Microsoft.FSharp.Collections.IEnumerator/mkSeq@133<!!TResult>::.ctor(class Microsoft.FSharp.Core.FSharpFunc`2<class Microsoft.FSharp.Core.Unit,class [mscorlib]System.Collections.Generic.IEnumerator`1<!0>>)
ret
}
}
.class private auto ansi serializable beforefieldinit Microsoft.FSharp.Collections.ListDebugView`1<T>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.AbstractClassAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.AllowNullLiteralAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly bool 'value'
.method public specialname rtspecialname instance void .ctor(bool 'value') cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld bool Microsoft.FSharp.Core.AllowNullLiteralAttribute::'value'
ret
}
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
ldc.i4.1
callvirt instance void Microsoft.FSharp.Core.AllowNullLiteralAttribute::.ctor(bool)
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.AutoOpenAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 05 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 01 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly string path
.method public specialname rtspecialname instance void .ctor(string path) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld string Microsoft.FSharp.Core.AutoOpenAttribute::path
ret
}
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
ldstr ""
callvirt instance void Microsoft.FSharp.Core.AutoOpenAttribute::.ctor(string)
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 40 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.field assembly int32[] counts
.method public specialname rtspecialname instance void .ctor(int32[] counts) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld int32[] Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::counts
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilationMappingAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 FF 7F 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.field assembly int32 variantNumber
.field assembly class [mscorlib]System.Type[] typeDefinitions
.field assembly valuetype Microsoft.FSharp.Core.SourceConstructFlags sourceConstructFlags
.field assembly int32 sequenceNumber
.field assembly string resourceName
.method public specialname rtspecialname instance void .ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags sourceConstructFlags) cil managed
{
ldarg.0
ldarg.1
ldc.i4.0
ldc.i4.0
callvirt instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags, int32, int32)
ret
}
.method assembly specialname rtspecialname instance void .ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags sourceConstructFlags, int32 variantNumber, int32 sequenceNumber, string resourceName, class [mscorlib]System.Type[] typeDefinitions) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld valuetype Microsoft.FSharp.Core.SourceConstructFlags Microsoft.FSharp.Core.CompilationMappingAttribute::sourceConstructFlags
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.CompilationMappingAttribute::variantNumber
ldarg.0
ldarg.3
stfld int32 Microsoft.FSharp.Core.CompilationMappingAttribute::sequenceNumber
ldarg.0
ldarg.s resourceName
stfld string Microsoft.FSharp.Core.CompilationMappingAttribute::resourceName
ldarg.0
ldarg.s typeDefinitions
stfld class [mscorlib]System.Type[] Microsoft.FSharp.Core.CompilationMappingAttribute::typeDefinitions
ret
}
.method public specialname rtspecialname instance void .ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags sourceConstructFlags, int32 variantNumber, int32 sequenceNumber) cil managed
{
ldarg.0
ldarg.1
ldarg.2
ldarg.3
ldnull
ldnull
callvirt instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags, int32, int32, string, class [mscorlib]System.Type[])
ret
}
.method public specialname rtspecialname instance void .ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags sourceConstructFlags, int32 sequenceNumber) cil managed
{
ldarg.0
ldarg.1
ldc.i4.0
ldarg.2
callvirt instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags, int32, int32)
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilationRepresentationAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 FF 7F 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.field assembly valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags 'flags'
.method public specialname rtspecialname instance void .ctor(valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags 'flags') cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags Microsoft.FSharp.Core.CompilationRepresentationAttribute::'flags'
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilationRepresentationFlags
extends [mscorlib]System.Enum
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 )
.field public specialname rtspecialname int32 value__
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags None = int32(0x00000000)
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags Static = int32(0x00000001)
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags Instance = int32(0x00000002)
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags ModuleSuffix = int32(0x00000004)
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags UseNullAsTrueValue = int32(0x00000008)
.field public static literal valuetype Microsoft.FSharp.Core.CompilationRepresentationFlags Event = int32(0x00000010)
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilationSourceNameAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 FF 7F 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.field assembly string sourceName
.method public specialname rtspecialname instance void .ctor(string sourceName) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld string Microsoft.FSharp.Core.CompilationSourceNameAttribute::sourceName
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompiledNameAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 DC 15 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.field assembly string compiledName
.method public specialname rtspecialname instance void .ctor(string compiledName) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld string Microsoft.FSharp.Core.CompiledNameAttribute::compiledName
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.CompilerMessageAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 FF 7F 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly int32 messageNumber
.field assembly string message
.field assembly bool isError
.field assembly bool isHidden
.method public specialname rtspecialname instance void .ctor(string message, int32 messageNumber) cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld string Microsoft.FSharp.Core.CompilerMessageAttribute::message
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.CompilerMessageAttribute::messageNumber
ldarg.0
ldc.i4.0
stfld bool Microsoft.FSharp.Core.CompilerMessageAttribute::isError
ldarg.0
ldc.i4.0
stfld bool Microsoft.FSharp.Core.CompilerMessageAttribute::isHidden
ret
}
.method public hidebysig specialname instance void set_IsHidden(bool v) cil managed
{
ldarg.0
ldarg.1
stfld bool Microsoft.FSharp.Core.CompilerMessageAttribute::isHidden
ret
}
.property instance bool IsHidden()
{
.set instance void Microsoft.FSharp.Core.CompilerMessageAttribute::set_IsHidden(bool)
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.DefaultAugmentationAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.field assembly bool 'value'
.method public specialname rtspecialname instance void .ctor(bool 'value') cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld bool Microsoft.FSharp.Core.DefaultAugmentationAttribute::'value'
ret
}
}
.class public auto ansi serializable sealed beforefieldinit Microsoft.FSharp.Core.FSharpRef`1<T>
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IStructuralComparable,
[mscorlib]System.IComparable,
class [mscorlib]System.IComparable`1<class Microsoft.FSharp.Core.FSharpRef`1<!T>>,
[mscorlib]System.Collections.IStructuralEquatable,
class [mscorlib]System.IEquatable`1<class Microsoft.FSharp.Core.FSharpRef`1<!T>>
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerDisplayAttribute::.ctor(string) = ( 01 00 0A 7B 63 6F 6E 74 65 6E 74 73 7D 00 00 )
.custom instance void Microsoft.FSharp.Core.StructuralComparisonAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.StructuralEqualityAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompiledNameAttribute::.ctor(string) = ( 01 00 0B 46 53 68 61 72 70 52 65 66 60 31 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 02 00 00 00 00 00 )
.field public !T contents@
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.method public hidebysig specialname instance void set_contents(!T 'value') cil managed
{
ldarg.0
ldarg.1
stfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
ret
}
.method public specialname rtspecialname instance void .ctor(!T contents) cil managed
{
ldarg.0
call instance void [mscorlib]System.Object::.ctor()
ldarg.0
ldarg.1
stfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
ret
}
.method public hidebysig virtual final instance int32 CompareTo(class Microsoft.FSharp.Core.FSharpRef`1<!T> obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class [mscorlib]System.Collections.IComparer V_0, !T V_1, !T V_2)
ldarg.0
ldnull
cgt.un
brfalse.s IL_002e
ldarg.1
ldnull
cgt.un
brfalse.s IL_002c
call class [mscorlib]System.Collections.IComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericComparer()
stloc.0
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.1
ldarg.1
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.2
ldloc.0
ldloc.1
ldloc.2
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IComparer, !!0, !!0)
ret
IL_002c:
ldc.i4.1
ret
IL_002e:
ldarg.1
ldnull
cgt.un
brfalse.s IL_0036
ldc.i4.m1
ret
IL_0036:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 CompareTo(object obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
ldarg.1
unbox.any class Microsoft.FSharp.Core.FSharpRef`1<!T>
tail.
callvirt instance int32 class Microsoft.FSharp.Core.FSharpRef`1<!T>::CompareTo(class Microsoft.FSharp.Core.FSharpRef`1<!0>)
ret
}
.method public hidebysig virtual final instance int32 CompareTo(object obj, class [mscorlib]System.Collections.IComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Core.FSharpRef`1<!T> V_0, !T V_1, !T V_2)
ldarg.1
unbox.any class Microsoft.FSharp.Core.FSharpRef`1<!T>
stloc.0
ldarg.0
ldnull
cgt.un
brfalse.s IL_0034
ldarg.1
unbox.any class Microsoft.FSharp.Core.FSharpRef`1<!T>
ldnull
cgt.un
brfalse.s IL_0032
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.1
ldloc.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.2
ldarg.2
ldloc.1
ldloc.2
tail.
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericComparisonWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IComparer, !!0, !!0)
ret
IL_0032:
ldc.i4.1
ret
IL_0034:
ldarg.1
unbox.any class Microsoft.FSharp.Core.FSharpRef`1<!T>
ldnull
cgt.un
brfalse.s IL_0041
ldc.i4.m1
ret
IL_0041:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 GetHashCode(class [mscorlib]System.Collections.IEqualityComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (int32 V_0, !T V_1)
ldarg.0
ldnull
cgt.un
brfalse.s IL_002d
ldc.i4.0
stloc.0
ldc.i4 0x9e3779b9
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.1
ldarg.1
ldloc.1
box !T
call int32 Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericHashParamObj(class [mscorlib]System.Collections.IEqualityComparer, object)
ldloc.0
ldc.i4.6
shl
ldloc.0
ldc.i4.2
shr
add
add
add
stloc.0
ldloc.0
ret
IL_002d:
ldc.i4.0
ret
}
.method public hidebysig virtual final instance int32 GetHashCode() cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
call class [mscorlib]System.Collections.IEqualityComparer Microsoft.FSharp.Core.LanguagePrimitives::get_GenericEqualityComparer()
callvirt instance int32 class Microsoft.FSharp.Core.FSharpRef`1<!T>::GetHashCode(class [mscorlib]System.Collections.IEqualityComparer)
ret
}
.method public hidebysig virtual final instance bool Equals(object obj, class [mscorlib]System.Collections.IEqualityComparer comp) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Core.FSharpRef`1<!T> V_0, !T V_1, !T V_2)
ldarg.0
ldnull
cgt.un
brfalse.s IL_002c
ldarg.1
isinst class Microsoft.FSharp.Core.FSharpRef`1<!T>
stloc.0
ldloc.0
brfalse.s IL_002a
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.1
ldloc.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.2
ldarg.2
ldloc.1
ldloc.2
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityWithComparerIntrinsic<!T>(class [mscorlib]System.Collections.IEqualityComparer, !!0, !!0)
ret
IL_002a:
ldc.i4.0
ret
IL_002c:
ldarg.1
ldnull
cgt.un
ldc.i4.0
ceq
ret
}
.method public hidebysig virtual final instance bool Equals(class Microsoft.FSharp.Core.FSharpRef`1<!T> obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (!T V_0, !T V_1)
ldarg.0
ldnull
cgt.un
brfalse.s IL_0027
ldarg.1
ldnull
cgt.un
brfalse.s IL_0025
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.0
ldarg.1
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<!T>::contents@
stloc.1
ldloc.0
ldloc.1
tail.
call bool Microsoft.FSharp.Core.LanguagePrimitives/HashCompare::GenericEqualityERIntrinsic<!T>(!!0, !!0)
ret
IL_0025:
ldc.i4.0
ret
IL_0027:
ldarg.1
ldnull
cgt.un
ldc.i4.0
ceq
ret
}
.method public hidebysig virtual final instance bool Equals(object obj) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Core.FSharpRef`1<!T> V_0)
ldarg.1
isinst class Microsoft.FSharp.Core.FSharpRef`1<!T>
stloc.0
ldloc.0
brfalse.s IL_0015
ldarg.0
ldloc.0
tail.
callvirt instance bool class Microsoft.FSharp.Core.FSharpRef`1<!T>::Equals(class Microsoft.FSharp.Core.FSharpRef`1<!0>)
ret
IL_0015:
ldc.i4.0
ret
}
.property instance !T contents()
{
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags,
int32) = ( 01 00 04 00 00 00 00 00 00 00 00 00 )
.set instance void Microsoft.FSharp.Core.FSharpRef`1::set_contents(!T)
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.NoComparisonAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 1C 14 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.NoEqualityAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 1C 14 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public abstract auto ansi sealed Microsoft.FSharp.Core.Operators
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.AutoOpenAttribute::.ctor() = ( 01 00 00 00 )
.class abstract auto ansi sealed nested public OperatorIntrinsics
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 07 00 00 00 00 00 )
.class auto autochar serializable sealed nested assembly beforefieldinit specialname RangeInt32@5421
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerator`1<int32>,
[mscorlib]System.Collections.IEnumerator
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public int32 n
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.field public int32 step
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.field public int32 m
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field public class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> state
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.method public specialname rtspecialname instance void .ctor(int32 n, int32 step, int32 m, class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> state) cil managed
{
ldarg.0
ldarg.1
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::n
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
ldarg.0
ldarg.3
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::m
ldarg.0
ldarg.s state
stfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance void 'System-IDisposable-Dispose'() cil managed
{
.override [mscorlib]System.IDisposable::Dispose
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEnumerator`1-get_Current'() cil managed
{
.override method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<int32>::get_Current()
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldnull
call int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::current@5249(class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>, class Microsoft.FSharp.Core.Unit)
ret
}
.method private hidebysig newslot virtual final instance object 'System-Collections-IEnumerator-get_Current'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::get_Current
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldnull
call int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::current@5249(class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>, class Microsoft.FSharp.Core.Unit)
box [mscorlib]System.Int32
ret
}
.method private hidebysig newslot virtual final instance void 'System-Collections-IEnumerator-Reset'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::Reset
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldc.i4.0
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Started(bool)
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldc.i4.0
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Complete(bool)
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldc.i4.0
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Current(!0)
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-IEnumerator-MoveNext'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::MoveNext
.locals init (int32 V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Started@
brtrue IL_0086
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldc.i4.1
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Started(bool)
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::n
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Current(!0)
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
ldc.i4.0
ble.s IL_0052
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::m
cgt
br.s IL_0054
IL_0052:
ldc.i4.0
IL_0054:
brfalse.s IL_005a
ldc.i4.1
br.s IL_007b
IL_005a:
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
ldc.i4.0
bge.s IL_0079
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::m
clt
br.s IL_007b
IL_0079:
ldc.i4.0
IL_007b:
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Complete(bool)
br IL_011b
IL_0086:
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
add
stloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
ldc.i4.0
ble.s IL_00b3
ldloc.0
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
cgt
br.s IL_00b5
IL_00b3:
ldc.i4.0
IL_00b5:
brfalse.s IL_00c6
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::m
cgt
ldc.i4.0
ceq
br.s IL_00c8
IL_00c6:
ldc.i4.0
IL_00c8:
brfalse.s IL_00ce
ldc.i4.1
br.s IL_00fd
IL_00ce:
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::step
ldc.i4.0
bge.s IL_00e8
ldloc.0
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
clt
br.s IL_00ea
IL_00e8:
ldc.i4.0
IL_00ea:
brfalse.s IL_00fb
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::m
clt
ldc.i4.0
ceq
br.s IL_00fd
IL_00fb:
ldc.i4.0
IL_00fd:
brfalse.s IL_010e
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldloc.0
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Current(!0)
br.s IL_011b
IL_010e:
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldc.i4.1
call instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::set_Complete(bool)
IL_011b:
ldarg.0
ldfld class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::state
ldfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Complete@
ldc.i4.0
ceq
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname 'RangeInt32@5421-1'
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerable`1<int32>,
[mscorlib]System.Collections.IEnumerable
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public int32 n
.field public int32 step
.field public int32 m
.method public specialname rtspecialname instance void .ctor(int32 n, int32 step, int32 m) cil managed
{
ldarg.0
ldarg.1
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::n
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::step
ldarg.0
ldarg.3
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::m
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> 'System-Collections-Generic-IEnumerable`1-GetEnumerator'() cil managed
{
.override method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<int32>::GetEnumerator()
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::n
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::step
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::m
ldnull
call class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::variableStepRangeEnumerator@5242(int32, int32, int32, class Microsoft.FSharp.Core.Unit)
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.IEnumerator 'System-Collections-IEnumerable-GetEnumerator'() cil managed
{
.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::n
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::step
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::m
ldnull
call class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::variableStepRangeEnumerator@5242(int32, int32, int32, class Microsoft.FSharp.Core.Unit)
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname 'RangeInt32@5421-2'
extends [mscorlib]System.Object
implements [mscorlib]System.Collections.IEnumerator,
class [mscorlib]System.Collections.Generic.IEnumerator`1<int32>
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public int32 n
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.field public int32 m
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field public class Microsoft.FSharp.Core.FSharpRef`1<int32> 'value'
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.method public specialname rtspecialname instance void .ctor(int32 n, int32 m, class Microsoft.FSharp.Core.FSharpRef`1<int32> 'value') cil managed
{
ldarg.0
ldarg.1
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::n
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::m
ldarg.0
ldarg.3
stfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance void 'System-IDisposable-Dispose'() cil managed
{
.override [mscorlib]System.IDisposable::Dispose
ret
}
.method private hidebysig newslot virtual final instance int32 'System-Collections-Generic-IEnumerator`1-get_Current'() cil managed
{
.override method instance !0 class [mscorlib]System.Collections.Generic.IEnumerator`1<int32>::get_Current()
.locals init (int32 V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<int32>::contents@
stloc.0
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::n
bge.s IL_001c
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::notStarted<int32>()
ret
IL_001c:
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::m
ble.s IL_002b
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::alreadyFinished<int32>()
ret
IL_002b:
ldloc.0
ret
}
.method private hidebysig newslot virtual final instance object 'System-Collections-IEnumerator-get_Current'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::get_Current
.locals init (int32 V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<int32>::contents@
stloc.0
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::n
bge.s IL_001e
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::notStarted<int32>()
br.s IL_0031
IL_001e:
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::m
ble.s IL_002f
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::alreadyFinished<int32>()
br.s IL_0031
IL_002f:
ldloc.0
IL_0031:
box [mscorlib]System.Int32
ret
}
.method private hidebysig newslot virtual final instance void 'System-Collections-IEnumerator-Reset'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::Reset
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::n
ldc.i4.1
sub
call instance void class Microsoft.FSharp.Core.FSharpRef`1<int32>::set_contents(!0)
ret
}
.method private hidebysig newslot virtual final instance bool 'System-Collections-IEnumerator-MoveNext'() cil managed
{
.override [mscorlib]System.Collections.IEnumerator::MoveNext
.locals init (int32 V_0)
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldfld !0 class Microsoft.FSharp.Core.FSharpRef`1<int32>::contents@
stloc.0
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::m
bge.s IL_0026
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldloc.0
ldc.i4.1
add
call instance void class Microsoft.FSharp.Core.FSharpRef`1<int32>::set_contents(!0)
ldc.i4.1
ret
IL_0026:
ldloc.0
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::m
bne.un.s IL_003f
ldarg.0
ldfld class Microsoft.FSharp.Core.FSharpRef`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::'value'
ldloc.0
ldc.i4.1
add
call instance void class Microsoft.FSharp.Core.FSharpRef`1<int32>::set_contents(!0)
ldc.i4.0
ret
IL_003f:
ldc.i4.0
ret
}
}
.class auto autochar serializable sealed nested assembly beforefieldinit specialname 'RangeInt32@5421-3'
extends [mscorlib]System.Object
implements class [mscorlib]System.Collections.Generic.IEnumerable`1<int32>,
[mscorlib]System.Collections.IEnumerable
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 06 00 00 00 00 00 )
.field public int32 n
.field public int32 m
.method public specialname rtspecialname instance void .ctor(int32 n, int32 m) cil managed
{
ldarg.0
ldarg.1
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::n
ldarg.0
ldarg.2
stfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::m
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> 'System-Collections-Generic-IEnumerable`1-GetEnumerator'() cil managed
{
.override method instance class [mscorlib]System.Collections.Generic.IEnumerator`1<!0> class [mscorlib]System.Collections.Generic.IEnumerable`1<int32>::GetEnumerator()
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::n
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::m
ldnull
call class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::singleStepRangeEnumerator@5303(int32, int32, class Microsoft.FSharp.Core.Unit)
ret
}
.method private hidebysig newslot virtual final instance class [mscorlib]System.Collections.IEnumerator 'System-Collections-IEnumerable-GetEnumerator'() cil managed
{
.override [mscorlib]System.Collections.IEnumerable::GetEnumerator
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::n
ldarg.0
ldfld int32 Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::m
ldnull
call class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> Microsoft.FSharp.Core.Operators/OperatorIntrinsics::singleStepRangeEnumerator@5303(int32, int32, class Microsoft.FSharp.Core.Unit)
ret
}
}
.class auto ansi serializable sealed nested assembly beforefieldinit VariableStepIntegralRangeState`1<T>
extends [mscorlib]System.Object
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 22 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.NoEqualityAttribute::.ctor() = ( 01 00 00 00 )
.custom instance void Microsoft.FSharp.Core.NoComparisonAttribute::.ctor() = ( 01 00 00 00 )
.field assembly bool Started@
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field assembly bool Complete@
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.field assembly !T Current@
.custom instance void [mscorlib]System.Diagnostics.DebuggerBrowsableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggerBrowsableState) = ( 01 00 00 00 00 00 00 00 )
.method assembly hidebysig specialname instance void set_Started(bool 'value') cil managed
{
ldarg.0
ldarg.1
stfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Started@
ret
}
.method assembly hidebysig specialname instance void set_Complete(bool 'value') cil managed
{
ldarg.0
ldarg.1
stfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Complete@
ret
}
.method assembly hidebysig specialname instance void set_Current(!T 'value') cil managed
{
ldarg.0
ldarg.1
stfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Current@
ret
}
.method assembly specialname rtspecialname instance void .ctor(bool started, bool complete, !T current) cil managed
{
ldarg.0
call instance void [mscorlib]System.Object::.ctor()
ldarg.0
ldarg.1
stfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Started@
ldarg.0
ldarg.2
stfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Complete@
ldarg.0
ldarg.3
stfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<!T>::Current@
ret
}
.property instance bool Started()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags,
int32) = ( 01 00 04 00 00 00 00 00 00 00 00 00 )
.set instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1::set_Started(bool)
}
.property instance bool Complete()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags,
int32) = ( 01 00 04 00 00 00 01 00 00 00 00 00 )
.set instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1::set_Complete(bool)
}
.property instance !T Current()
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags,
int32) = ( 01 00 04 00 00 00 02 00 00 00 00 00 )
.set instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1::set_Current(!T)
}
}
.method public static class [mscorlib]System.Collections.Generic.IEnumerable`1<int32> RangeInt32(int32 start, int32 step, int32 stop) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilerMessageAttribute::.ctor(string,
int32) = ( 01 00 4C 54 68 69 73 20 66 75 6E 63 74 69 6F 6E
20 69 73 20 66 6F 72 20 75 73 65 20 62 79 20 63
6F 6D 70 69 6C 65 64 20 46 23 20 63 6F 64 65 20
61 6E 64 20 73 68 6F 75 6C 64 20 6E 6F 74 20 62
65 20 75 73 65 64 20 64 69 72 65 63 74 6C 79 B4
04 00 00 01 00 54 02 08 49 73 48 69 64 64 65 6E
01 )
.custom instance void Microsoft.FSharp.Core.CompilationArgumentCountsAttribute::.ctor(int32[]) = ( 01 00 03 00 00 00 01 00 00 00 01 00 00 00 01 00
00 00 00 00 )
.locals init (string V_0)
ldarg.1
ldc.i4.1
beq.s IL_0009
ldc.i4.1
br.s IL_000e
IL_0009:
ldarg.0
ldarg.2
cgt
IL_000e:
brfalse.s IL_0014
ldc.i4.1
br.s IL_001d
IL_0014:
ldarg.0
ldc.i4 0x80000000
ceq
IL_001d:
brfalse.s IL_0023
ldc.i4.1
br.s IL_002c
IL_0023:
ldarg.2
ldc.i4 0x7fffffff
ceq
IL_002c:
brfalse.s IL_004d
ldarg.1
brtrue.s IL_0043
ldstr "stepCannotBeZero"
stloc.0
ldloc.0
ldstr "step"
newobj instance void [mscorlib]System.ArgumentException::.ctor(string,
string)
throw
IL_0043:
ldarg.0
ldarg.1
ldarg.2
newobj instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-1'::.ctor(int32,
int32,
int32)
ret
IL_004d:
ldarg.0
ldarg.2
newobj instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-3'::.ctor(int32,
int32)
ret
}
.method assembly static !!a notStarted<a>() cil managed
{
ldstr "enumerationNotStarted"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
.method assembly static !!a alreadyFinished<a>() cil managed
{
ldstr "enumerationAlreadyFinished"
newobj instance void [mscorlib]System.InvalidOperationException::.ctor(string)
throw
}
.method assembly static int32 current@5249(class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> state, class Microsoft.FSharp.Core.Unit unitVar0) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
ldarg.0
ldfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Started@
brtrue.s IL_000f
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::notStarted<int32>()
ret
IL_000f:
ldarg.0
ldfld bool class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Complete@
brfalse.s IL_001d
call !!0 Microsoft.FSharp.Core.Operators/OperatorIntrinsics::alreadyFinished<int32>()
ret
IL_001d:
ldarg.0
ldfld !0 class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::Current@
ret
}
.method assembly static class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> variableStepRangeEnumerator@5242(int32 n, int32 step, int32 m, class Microsoft.FSharp.Core.Unit unitVar0) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32> V_0)
ldc.i4.0
ldc.i4.0
ldc.i4.0
newobj instance void class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>::.ctor(bool, bool, !0)
stloc.0
ldarg.0
ldarg.1
ldarg.2
ldloc.0
newobj instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/RangeInt32@5421::.ctor(int32,
int32,
int32,
class Microsoft.FSharp.Core.Operators/OperatorIntrinsics/VariableStepIntegralRangeState`1<int32>)
ret
}
.method assembly static class [mscorlib]System.Collections.Generic.IEnumerator`1<int32> singleStepRangeEnumerator@5303(int32 n, int32 m, class Microsoft.FSharp.Core.Unit unitVar0) cil managed
{
.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 )
.locals init (class Microsoft.FSharp.Core.FSharpRef`1<int32> V_0)
ldarg.0
ldc.i4.1
sub
newobj instance void class Microsoft.FSharp.Core.FSharpRef`1<int32>::.ctor(!0)
stloc.0
ldarg.0
ldarg.1
ldloc.0
newobj instance void Microsoft.FSharp.Core.Operators/OperatorIntrinsics/'RangeInt32@5421-2'::.ctor(int32,
int32,
class Microsoft.FSharp.Core.FSharpRef`1<int32>)
ret
}
}
.method public static !!T Exit<T>(int32 exitcode) cil managed
{
.custom instance void Microsoft.FSharp.Core.CompilationSourceNameAttribute::.ctor(string) = ( 01 00 04 65 78 69 74 00 00 )
ldarg.0
call void [mscorlib]System.Environment::Exit(int32)
ldstr "System.Environment.Exit did not exit!"
newobj instance void [mscorlib]System.Exception::.ctor(string)
throw
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.RequireQualifiedAccessAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.SealedAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field assembly bool 'value'
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
ldc.i4.1
callvirt instance void Microsoft.FSharp.Core.SealedAttribute::.ctor(bool)
ret
}
.method public specialname rtspecialname instance void .ctor(bool 'value') cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ldarg.0
ldarg.1
stfld bool Microsoft.FSharp.Core.SealedAttribute::'value'
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.SourceConstructFlags
extends [mscorlib]System.Enum
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.field public specialname rtspecialname int32 value__
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags None = int32(0x00000000)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags SumType = int32(0x00000001)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags RecordType = int32(0x00000002)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags ObjectType = int32(0x00000003)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags Field = int32(0x00000004)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags Exception = int32(0x00000005)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags Closure = int32(0x00000006)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags Module = int32(0x00000007)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags UnionCase = int32(0x00000008)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags Value = int32(0x00000009)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags KindMask = int32(0x0000001F)
.field public static literal valuetype Microsoft.FSharp.Core.SourceConstructFlags NonPublicRepresentation = int32(0x00000020)
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.StructuralComparisonAttribute
extends [mscorlib]System.Attribute
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.StructuralEqualityAttribute
extends [mscorlib]System.Attribute
{
.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 04 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77
4D 75 6C 74 69 70 6C 65 00 )
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.custom instance void Microsoft.FSharp.Core.SealedAttribute::.ctor() = ( 01 00 00 00 )
.method public specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Attribute::.ctor()
ldarg.0
pop
ret
}
}
.class public auto ansi serializable sealed Microsoft.FSharp.Core.Unit
extends [mscorlib]System.Object
implements [mscorlib]System.IComparable
{
.custom instance void Microsoft.FSharp.Core.CompilationMappingAttribute::.ctor(valuetype Microsoft.FSharp.Core.SourceConstructFlags) = ( 01 00 03 00 00 00 00 00 )
.method assembly specialname rtspecialname instance void .ctor() cil managed
{
ldarg.0
callvirt instance void [mscorlib]System.Object::.ctor()
ldarg.0
pop
ret
}
.method public hidebysig virtual instance int32 GetHashCode() cil managed
{
ldc.i4.0
ret
}
.method public hidebysig virtual instance bool Equals(object obj) cil managed
{
ldarg.1
brfalse.s IL_0010
ldarg.1
call bool Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions::TypeTestGeneric<class Microsoft.FSharp.Core.Unit>(object)
brtrue.s IL_000e
ldc.i4.0
ret
IL_000e:
ldc.i4.1
ret
IL_0010:
ldc.i4.1
ret
}
.method private hidebysig newslot virtual instance int32 'System-IComparable-CompareTo'(object _obj) cil managed
{
.override [mscorlib]System.IComparable::CompareTo
ldc.i4.0
ret
}
}
