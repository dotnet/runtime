<Project Sdk="Microsoft.Build.NoTargets">

  <UsingTask TaskName="Microsoft.WebAssembly.Build.Tasks.RunWithEmSdkEnv" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />

  <PropertyGroup>
    <!-- FIXME: clean up the duplication with libraries Directory.Build.props -->
    <PackageRID>browser-wasm</PackageRID>
    <NativeBinDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'native', '$(NetCoreAppCurrent)-$(TargetOS)-$(Configuration)-$(TargetArchitecture)'))</NativeBinDir>
    <ICULibDir>$([MSBuild]::NormalizeDirectory('$(PkgMicrosoft_NETCore_Runtime_ICU_Transport)', 'runtimes', 'browser-wasm', 'native', 'lib'))</ICULibDir>
    <MicrosoftNetCoreAppRuntimePackDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'microsoft.netcore.app.runtime.$(PackageRID)', '$(Configuration)'))</MicrosoftNetCoreAppRuntimePackDir>
    <MicrosoftNetCoreAppRuntimePackRidDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRuntimePackDir)', 'runtimes', '$(PackageRID)'))</MicrosoftNetCoreAppRuntimePackRidDir>
    <MicrosoftNetCoreAppRuntimePackNativeDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRuntimePackRidDir)', 'native'))</MicrosoftNetCoreAppRuntimePackNativeDir>
    <WasmEnableES6 Condition="'$(WasmEnableES6)' == ''">false</WasmEnableES6>
    <FilterSystemTimeZones Condition="'$(FilterSystemTimeZones)' == ''">false</FilterSystemTimeZones>
    <EmccCmd>emcc</EmccCmd>
    <WasmObjDir>$(ArtifactsObjDir)wasm</WasmObjDir>
    <_EmccDefaultsRspPath>$(NativeBinDir)src\emcc-default.rsp</_EmccDefaultsRspPath>
  </PropertyGroup>

  <Target Name="CheckEnv">
    <Error Condition="'$(TargetArchitecture)' != 'wasm'" Text="Expected TargetArchitecture==wasm, got '$(TargetArchitecture)'"/>
    <Error Condition="'$(TargetOS)' != 'Browser'" Text="Expected TargetOS==Browser, got '$(TargetOS)'"/>
    <Error Condition="'$(EMSDK_PATH)' == ''" Text="The EMSDK_PATH environment variable should be set pointing to the emscripten SDK root dir."/>
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.NETCore.Runtime.ICU.Transport" PrivateAssets="all" Version="$(MicrosoftNETCoreRuntimeICUTransportVersion)" GeneratePathProperty="true" />
    <PackageReference Include="System.Runtime.TimeZoneData" PrivateAssets="all" Version="$(SystemRuntimeTimeZoneDataVersion)" GeneratePathProperty="true" />
  </ItemGroup>

  <UsingTask TaskName="PInvokeTableGenerator" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)"/>
  <Target Name="BuildPInvokeTable" DependsOnTargets="CheckEnv;ResolveLibrariesFromLocalBuild">
    <PropertyGroup>
      <WasmPInvokeTablePath>$(ArtifactsObjDir)wasm\pinvoke-table.h</WasmPInvokeTablePath>
    </PropertyGroup>

    <ItemGroup>
      <WasmPInvokeModule Include="libSystem.Native" />
      <WasmPInvokeModule Include="libSystem.IO.Compression.Native" />
      <WasmPInvokeModule Include="libSystem.Globalization.Native" />
      <WasmPInvokeAssembly Include="@(LibrariesRuntimeFiles)" Condition="'%(Extension)' == '.dll' and '%(IsNative)' != 'true'" />
    </ItemGroup>

    <!-- Retrieve CoreLib's targetpath via GetTargetPath as it isn't binplaced yet. -->
    <MSBuild Projects="$(CoreLibProject)"
             Targets="GetTargetPath">
      <Output TaskParameter="TargetOutputs" ItemName="WasmPInvokeAssembly" />
    </MSBuild>

    <MakeDir Directories="$(ArtifactsObjDir)wasm" />
    <PInvokeTableGenerator Modules="@(WasmPInvokeModule)"
                           Assemblies="@(WasmPInvokeAssembly)"
                           OutputPath="$(WasmPInvokeTablePath)" />
  </Target>

  <UsingTask TaskName="GenerateWasmBundle"
    AssemblyFile="$(WasmBuildTasksAssemblyPath)"/>
  <Target Name="BundleTimeZones">
    <PropertyGroup>
      <TimeZonesDataPath>$(NativeBinDir)dotnet.timezones.blat</TimeZonesDataPath>
    </PropertyGroup>
    <GenerateWasmBundle
      InputDirectory="$([MSBuild]::NormalizePath('$(PkgSystem_Runtime_TimeZoneData)', 'contentFiles', 'any', 'any', 'data'))"
      OutputFileName="$(TimeZonesDataPath)" />
  </Target>

  <Target Name="GenerateEmccPropsAndRspFiles">
    <ItemGroup>
      <_EmccCommonFlags Include="-s ALLOW_MEMORY_GROWTH=1" />
      <_EmccCommonFlags Include="-s NO_EXIT_RUNTIME=1" />
      <_EmccCommonFlags Include="-s FORCE_FILESYSTEM=1" />
      <_EmccCommonFlags Include="-s &quot;EXPORTED_RUNTIME_METHODS=['ccall', 'FS_createPath', 'FS_createDataFile', 'cwrap', 'setValue', 'getValue', 'UTF8ToString', 'UTF8ArrayToString', 'addFunction']&quot;" />
      <_EmccCommonFlags Include="-s &quot;EXPORTED_FUNCTIONS=['_putchar']&quot;" />
      <_EmccCommonFlags Include="--source-map-base http://example.com" />
      <_EmccCommonFlags Include="-emit-llvm" />

      <_EmccCommonFlags Include="-s MODULARIZE=1" Condition="'$(WasmEnableES6)' != 'false'" />
      <_EmccCommonFlags Include="-s EXPORT_ES6=1" Condition="'$(WasmEnableES6)' != 'false'" />
    </ItemGroup>

    <ItemGroup Condition="'$(OS)' != 'Windows_NT'">
      <_EmccFlags Include="--profiling-funcs" />
      <_EmccFlags Include="@(_EmccCommonFlags)" />
    </ItemGroup>

    <ItemGroup Condition="'$(OS)' == 'Windows_NT'">
      <_EmccFlags Include="@(_EmccCommonFlags)" />
      <_EmccFlags Include="-s USE_ZLIB=1" />
    </ItemGroup>

    <WriteLinesToFile File="$(_EmccDefaultsRspPath)"
                      Lines="@(_EmccFlags)"
                      WriteOnlyWhenDifferent="true"
                      Overwrite="true" />

    <!-- Generate Emcc.props -->

    <RunWithEmSdkEnv Command="$(EmccCmd) --version"
          ConsoleToMsBuild="true"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true">
      <Output TaskParameter="ConsoleOutput" ItemName="_VersionLines" />
    </RunWithEmSdkEnv>

    <!-- we want to get the first line from the output, which has the version.
         Rest of the lines are the license -->
    <ItemGroup>
      <_ReversedVersionLines Include="@(_VersionLines->Reverse())" />
    </ItemGroup>
    <PropertyGroup>
      <_EmccVersionRaw>%(_ReversedVersionLines.Identity)</_EmccVersionRaw>

      <_EmccVersionRegexPattern>^ *emcc \([^\)]+\) *([^ \(]+) *\(([^\)]+)\)$</_EmccVersionRegexPattern>
      <_EmccVersion>$([System.Text.RegularExpressions.Regex]::Match($(_EmccVersionRaw), $(_EmccVersionRegexPattern)).Groups[1].Value)</_EmccVersion>
      <_EmccVersionHash>$([System.Text.RegularExpressions.Regex]::Match($(_EmccVersionRaw), $(_EmccVersionRegexPattern)).Groups[2].Value)</_EmccVersionHash>

      <_EmccPropsContent>
<![CDATA[
<Project>
  <PropertyGroup>
    <RuntimeEmccVersionRaw>$(_EmccVersionRaw)</RuntimeEmccVersionRaw>
    <RuntimeEmccVersion>$(_EmccVersion)</RuntimeEmccVersion>
    <RuntimeEmccVersionHash>$(_EmccVersionHash)</RuntimeEmccVersionHash>
  </PropertyGroup>
</Project>
]]>
      </_EmccPropsContent>
    </PropertyGroup>

    <Error Text="Failed to parse emcc version, and hash from the full version string: '$(_EmccVersionRaw)'"
           Condition="'$(_EmccVersion)' == '' or '$(_EmccVersionHash)' == ''" />

    <WriteLinesToFile File="$(NativeBinDir)src\Emcc.props"
                      Lines="$(_EmccPropsContent)"
                      Overwrite="true"
                      WriteOnlyWhenDifferent="true" />
  </Target>

  <!-- This is a documented target that is invoked by developers in their innerloop work. -->
  <Target Name="BuildWasmRuntimes"
          Condition="'$(OS)' != 'Windows_NT'"
          AfterTargets="Build"
          DependsOnTargets="GenerateEmccPropsAndRspFiles;BuildPInvokeTable;BundleTimeZones">

    <Exec Command="make -C $(MonoProjectRoot)wasm all SHELL=/bin/bash BINDIR=$(ArtifactsBinDir) MONO_BIN_DIR=$(MonoArtifactsPath) OBJDIR=$(ArtifactsObjDir) NATIVE_BIN_DIR=$(NativeBinDir) CONFIG=$(Configuration) PINVOKE_TABLE=$(WasmPInvokeTablePath) ICU_LIBDIR=$(ICULibDir)"
          IgnoreStandardErrorWarningFormat="true" />

    <ItemGroup>
      <IcuDataFiles Include="$(NativeBinDir)*.dat" />
      <WasmSrcFiles Include="$(NativeBinDir)src\*.c;
                             $(NativeBinDir)src\*.js;
                             $(_EmccDefaultsRspPath);
                             $(NativeBinDir)src\Emcc.props" />
      <WasmHeaderFiles Include="$(NativeBinDir)include\wasm\*.h" />
    </ItemGroup>

    <Copy SourceFiles="$(NativeBinDir)dotnet.js;
                       $(NativeBinDir)dotnet.wasm;
                       $(NativeBinDir)dotnet.timezones.blat;
                       $(NativeBinDir)libicuuc.a;
                       $(NativeBinDir)libicui18n.a"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(IcuDataFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(WasmSrcFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)src"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(WasmHeaderFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)include\wasm"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="BuildWinWasmRuntimes"
          Condition="'$(OS)' == 'Windows_NT'"
          AfterTargets="Build"
          DependsOnTargets="GenerateEmccPropsAndRspFiles;BuildPInvokeTable;BundleTimezones">

    <PropertyGroup>
      <EmccConfigurationFlags Condition="'$(Configuration)' == 'Debug'">-g -Os -s ASSERTIONS=1 -DENABLE_NETCORE=1 -DDEBUG=1</EmccConfigurationFlags>
      <EmccConfigurationFlags Condition="'$(Configuration)' == 'Release'">-Oz -DENABLE_NETCORE=1</EmccConfigurationFlags>
      <StripCmd>&quot;$(EMSDK_PATH)/upstream/bin/wasm-opt&quot; --strip-dwarf &quot;$(NativeBinDir)dotnet.wasm&quot; -o &quot;$(NativeBinDir)dotnet.wasm&quot;</StripCmd>
      <WasmObjDir>$(ArtifactsObjDir)wasm</WasmObjDir>
      <WasmVersionFile>$(WasmObjDir)\emcc-version.txt</WasmVersionFile>
      <MonoIncludeDir>$(MonoArtifactsPath)include/mono-2.0</MonoIncludeDir>
      <SystemNativeDir>$(RepoRoot)src\libraries\Native\Unix\System.Native</SystemNativeDir>
    </PropertyGroup>
    <ItemGroup>
      <ICULibNativeFiles Include="$(ICULibDir)/libicuuc.a;
                                  $(ICULibDir)/libicui18n.a" />
      <MonoLibFiles Include="$(MonoArtifactsPath)libmono-ee-interp.a;
                             $(MonoArtifactsPath)libmonosgen-2.0.a;
                             $(MonoArtifactsPath)libmono-ilgen.a;
                             $(MonoArtifactsPath)libmono-icall-table.a;
                             $(NativeBinDir)libSystem.Native.a;
                             $(NativeBinDir)libSystem.IO.Compression.Native.a" />
      <MonoLibFiles Include="@(ICULibNativeFiles)" />
      <PInvokeTableFile Include="$(WasmObjDir)\pinvoke-table.h" />
      <ICULibFiles Include="$(ICULibDir)/*.dat" />
    </ItemGroup>

    <RunWithEmSdkEnv Command="$(EmccCmd) @$(_EmccDefaultsRspPath) $(EmccConfigurationFlags) -Oz -I&quot;$(MonoIncludeDir)&quot; runtime/corebindings.c -c -o &quot;$(MonoObjDir)corebindings.o&quot;"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true" />

    <RunWithEmSdkEnv Command="$(EmccCmd) @$(_EmccDefaultsRspPath) $(EmccConfigurationFlags) -Oz -DCORE_BINDINGS -I&quot;$(MonoObjDir.TrimEnd('\/'))&quot; -I&quot;$(MonoIncludeDir)&quot; runtime/driver.c -c -o &quot;$(MonoObjDir)driver.o&quot;"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true" />

    <Copy SourceFiles="@(PInvokeTableFile)"
          DestinationFolder="$(MonoObjDir)"
          SkipUnchangedFiles="true" />

    <RunWithEmSdkEnv Command="$(EmccCmd) @$(_EmccDefaultsRspPath) $(EmccConfigurationFlags) -Oz -DGEN_PINVOKE=1 -I&quot;$(MonoObjDir.TrimEnd('\/'))&quot; -I&quot;$(MonoIncludeDir)&quot; runtime/pinvoke.c -c -o &quot;$(MonoObjDir)pinvoke.o&quot;"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true" />

    <RunWithEmSdkEnv Command="$(EmccCmd) @$(_EmccDefaultsRspPath) $(EmccConfigurationFlags) --js-library runtime/library_mono.js --js-library runtime/binding_support.js --js-library runtime/dotnet_support.js --js-library &quot;$(SystemNativeDir)\pal_random.js&quot; &quot;$(MonoObjDir)driver.o&quot; &quot;$(MonoObjDir)pinvoke.o&quot; &quot;$(MonoObjDir)corebindings.o&quot; &quot;@(MonoLibFiles->'%(FullPath)', '&quot; &quot;')&quot; -o &quot;$(NativeBinDir)dotnet.js&quot; &amp;&amp; $(StripCmd)"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true" />

    <RunWithEmSdkEnv Command="$(EmccCmd) --version"
          ConsoleToMsBuild="true"
          EmSdkPath="$(EMSDK_PATH)"
          IgnoreStandardErrorWarningFormat="true">
      <Output TaskParameter="ConsoleOutput" ItemName="_VersionLines" />
    </RunWithEmSdkEnv>

    <Copy SourceFiles="runtime\pinvoke.h"
          DestinationFolder="$(NativeBinDir)include\wasm"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="runtime/driver.c;
                       runtime/pinvoke.c;
                       runtime/corebindings.c;
                       runtime/binding_support.js;
                       runtime/dotnet_support.js;
                       runtime/library_mono.js;
                       $(SystemNativeDir)\pal_random.js;"
          DestinationFolder="$(NativeBinDir)src"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(ICULibFiles);@(ICULibNativeFiles)"
          DestinationFolder="$(NativeBinDir)"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="$(NativeBinDir)dotnet.js;
                       $(NativeBinDir)dotnet.wasm;
                       $(NativeBinDir)dotnet.timezones.blat"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)"
          SkipUnchangedFiles="true" />

    <ItemGroup>
      <WasmHeaderFiles Include="$(NativeBinDir)include\wasm\*.h" />
      <WasmSrcFiles Include="$(NativeBinDir)src\*.c;
                             $(NativeBinDir)src\*.js;
                             $(_EmccDefaultsRspPath);
                             $(NativeBinDir)src\Emcc.props" />
      <IcuDataFiles Include="$(NativeBinDir)*.dat" />
    </ItemGroup>

    <Copy SourceFiles="@(WasmHeaderFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)include\wasm"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(WasmSrcFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)src"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="@(IcuDataFiles);@(ICULibNativeFiles)"
          DestinationFolder="$(MicrosoftNetCoreAppRuntimePackNativeDir)"
          SkipUnchangedFiles="true" />
  </Target>

</Project>
