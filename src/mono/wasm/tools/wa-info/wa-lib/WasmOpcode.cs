using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WebAssemblyInfo
{
    public enum Opcode : byte
    {
        // control
        Unreachable = 0x00,
        Nop = 0x01,
        Block = 0x02,
        Loop = 0x03,
        If = 0x04,
        Else = 0x05,
        Try = 0x06,
        Catch = 0x07,
        Throw = 0x08,
        Rethrow = 0x09,
        End = 0x0b,
        Br = 0x0c,
        Br_If = 0x0d,
        Br_Table = 0x0e,
        Return = 0x0f,
        Call = 0x10,
        Call_Indirect = 0x11,
        Delegate = 0x18,
        Catch_All = 0x19,
        // reference
        Ref_Null = 0xd0,
        Ref_Is_Null = 0xd1,
        Ref_Func = 0xd2,
        // parametric
        Drop = 0x1a,
        Select = 0x1b,
        Select_Vec = 0x1c,
        // variable
        Local_Get = 0x20,
        Local_Set = 0x21,
        Local_Tee = 0x22,
        Global_Get = 0x23,
        Global_Set = 0x24,
        // table
        Table_Get = 0x25,
        Table_Set = 0x26,
        // memory
        I32_Load = 0x28,
        I64_Load = 0x29,
        F32_Load = 0x2a,
        F64_Load = 0x2b,
        I32_Load8_S = 0x2c,
        I32_Load8_U = 0x2d,
        I32_Load16_S = 0x2e,
        I32_Load16_U = 0x2f,
        I64_Load8_S = 0x30,
        I64_Load8_U = 0x31,
        I64_Load16_S = 0x32,
        I64_Load16_U = 0x33,
        I64_Load32_S = 0x34,
        I64_Load32_U = 0x35,
        I32_Store = 0x36,
        I64_Store = 0x37,
        F32_Store = 0x38,
        F64_Store = 0x39,
        I32_Store8 = 0x3a,
        I32_Store16 = 0x3b,
        I64_Store8 = 0x3c,
        I64_Store16 = 0x3d,
        I64_Store32 = 0x3e,
        Memory_Size = 0x3f,
        Memory_Grow = 0x40,
        // numeric
        I32_Const = 0x41,
        I64_Const = 0x42,
        F32_Const = 0x43,
        F64_Const = 0x44,
        I32_Eqz = 0x45,
        I32_Eq = 0x46,
        I32_Ne = 0x47,
        I32_Lt_S = 0x48,
        I32_Lt_U = 0x49,
        I32_Gt_S = 0x4a,
        I32_Gt_U = 0x4b,
        I32_Le_S = 0x4c,
        I32_Le_U = 0x4d,
        I32_Ge_S = 0x4e,
        I32_Ge_U = 0x4f,
        I64_Eqz = 0x50,
        I64_Eq = 0x51,
        I64_Ne = 0x52,
        I64_Lt_S = 0x53,
        I64_Lt_U = 0x54,
        I64_Gt_S = 0x55,
        I64_Gt_U = 0x56,
        I64_Le_S = 0x57,
        I64_Le_U = 0x58,
        I64_Ge_S = 0x59,
        I64_Ge_U = 0x5a,
        F32_Eq = 0x5b,
        F32_Ne = 0x5c,
        F32_Lt = 0x5d,
        F32_Gt = 0x5e,
        F32_Le = 0x5f,
        F32_Ge = 0x60,
        F64_Eq = 0x61,
        F64_Ne = 0x62,
        F64_Lt = 0x63,
        F64_Gt = 0x64,
        F64_Le = 0x65,
        F64_Ge = 0x66,
        I32_Clz = 0x67,
        I32_Ctz = 0x68,
        I32_Popcnt = 0x69,
        I32_Add = 0x6a,
        I32_Sub = 0x6b,
        I32_Mul = 0x6c,
        I32_Div_S = 0x6d,
        I32_Div_U = 0x6e,
        I32_Rem_S = 0x6f,
        I32_Rem_U = 0x70,
        I32_And = 0x71,
        I32_Or = 0x72,
        I32_Xor = 0x73,
        I32_Shl = 0x74,
        I32_Shr_S = 0x75,
        I32_Shr_U = 0x76,
        I32_Rotl = 0x77,
        I32_Rotr = 0x78,
        I64_Clz = 0x79,
        I64_Ctz = 0x7a,
        I64_Popcnt = 0x7b,
        I64_Add = 0x7c,
        I64_Sub = 0x7d,
        I64_Mul = 0x7e,
        I64_Div_S = 0x7f,
        I64_Div_U = 0x80,
        I64_Rem_S = 0x81,
        I64_Rem_U = 0x82,
        I64_And = 0x83,
        I64_Or = 0x84,
        I64_Xor = 0x85,
        I64_Shl = 0x86,
        I64_Shr_S = 0x87,
        I64_Shr_U = 0x88,
        I64_Rotl = 0x89,
        I64_Rotr = 0x8a,
        F32_Abs = 0x8b,
        F32_Neg = 0x8c,
        F32_Ceil = 0x8d,
        F32_Floor = 0x8e,
        F32_Trunc = 0x8f,
        F32_Nearest = 0x90,
        F32_Sqrt = 0x91,
        F32_Add = 0x92,
        F32_Sub = 0x93,
        F32_Mul = 0x94,
        F32_Div = 0x95,
        F32_Min = 0x96,
        F32_Max = 0x97,
        F32_Copysign = 0x98,
        F64_Abs = 0x99,
        F64_Neg = 0x9a,
        F64_Ceil = 0x9b,
        F64_Floor = 0x9c,
        F64_Trunc = 0x9d,
        F64_Nearest = 0x9e,
        F64_Sqrt = 0x9f,
        F64_Add = 0xa0,
        F64_Sub = 0xa1,
        F64_Mul = 0xa2,
        F64_Div = 0xa3,
        F64_Min = 0xa4,
        F64_Max = 0xa5,
        F64_Copysign = 0xa6,
        I32_Wrap_I64 = 0xa7,
        I32_Trunc_F32_S = 0xa8,
        I32_Trunc_F32_U = 0xa9,
        I32_Trunc_F64_S = 0xaa,
        I32_Trunc_F64_U = 0xab,
        I64_Extend_I32_S = 0xac,
        I64_Extend_I32_U = 0xad,
        I64_Trunc_F32_S = 0xae,
        I64_Trunc_F32_U = 0xaf,
        I64_Trunc_F64_S = 0xb0,
        I64_Trunc_F64_U = 0xb1,
        F32_Convert_I32_S = 0xb2,
        F32_Convert_I32_U = 0xb3,
        F32_Convert_I64_S = 0xb4,
        F32_Convert_I64_U = 0xb5,
        F32_Demote_F64 = 0xb6,
        F64_Convert_I32_S = 0xb7,
        F64_Convert_I32_U = 0xb8,
        F64_Convert_I64_S = 0xb9,
        F64_Convert_I64_U = 0xba,
        F64_Promote_F32 = 0xbb,
        I32_Reinterpret_F32 = 0xbc,
        I64_Reinterpret_F64 = 0xbd,
        F32_Reinterpret_I32 = 0xbe,
        F64_Reinterpret_I64 = 0xbf,
        I32_Extend8_S = 0xc0,
        I32_Extend16_S = 0xc1,
        I64_Extend8_S = 0xc2,
        I64_Extend16_S = 0xc3,
        I64_Extend32_S = 0xc4,
        // special
        Prefix = 0xfc,
        SIMDPrefix = 0xfd,
        MTPrefix = 0xfe,
    }

    public enum PrefixOpcode : byte
    {
        // saturating
        I32_Trunc_Sat_F32_S = 0,
        I32_Trunc_Sat_F32_U = 1,
        I32_Trunc_Sat_F64_S = 2,
        I32_Trunc_Sat_F64_U = 3,
        I64_Trunc_Sat_F32_S = 4,
        I64_Trunc_Sat_F32_U = 5,
        I64_Trunc_Sat_F64_S = 6,
        I64_Trunc_Sat_F64_U = 7,
        // memory
        Memory_Init = 8,
        Data_Drop = 9,
        Memory_Copy = 10,
        Memory_Fill = 11,
        // table
        Table_Init = 12,
        Elem_Drop = 13,
        Table_Copy = 14,
        Table_Grow = 15,
        Table_Size = 16,
        Table_Fill = 17,
    }
}
