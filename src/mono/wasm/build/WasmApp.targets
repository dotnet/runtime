<Project>
  <UsingTask TaskName="MonoAOTCompiler" AssemblyFile="$(MonoAOTCompilerTasksAssemblyPath)" />
  <UsingTask TaskName="WasmAppBuilder" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />
  <UsingTask TaskName="WasmAOT" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />
  <UsingTask TaskName="WasmLoadAssembliesAndReferences" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />
  <UsingTask TaskName="PInvokeTableGenerator" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />

  <!--
      Public properties:
      - WasmBuildDir    - Directory where build artifacts are stored.
      - WasmBuildNative - Whenever to build the native executable. Defaults to false.
      - WasmNativeStrip - Whenever to strip the native executable. Defaults to true.
  -->

  <PropertyGroup>
    <WasmBuildNative Condition="'$(WasmBuildNative)' == ''">false</WasmBuildNative>
    <WasmBuildNative Condition="'$(RunAOTCompilation)' == ''">true</WasmBuildNative>
    <WasmNativeStrip>true</WasmNativeStrip>
  </PropertyGroup>

  <PropertyGroup>
      <WasmBuildAppDependsOn>_BeforeWasmBuildApp;_WasmResolveReferences;_WasmBuildNative</WasmBuildAppDependsOn>
  </PropertyGroup>

  <Target Name="WasmBuildApp" AfterTargets="Publish" />

  <Target Name="_WasmAotCompileApp" Condition="'$(RunAOTCompilation)' == 'true'">
    <ItemGroup>
      <MonoAOTCompilerDefaultAotArguments Include="no-opt" />
      <MonoAOTCompilerDefaultAotArguments Include="static" />
      <MonoAOTCompilerDefaultAotArguments Include="direct-icalls" />
      <MonoAOTCompilerDefaultAotArguments Include="deterministic" />
    </ItemGroup>
    <ItemGroup>
      <AotInputAssemblies Include="@(_WasmAssemblies->Distinct())">
        <AotArguments>@(MonoAOTCompilerDefaultAotArguments, ';')</AotArguments>
        <ProcessArguments>@(MonoAOTCompilerDefaultProcessArguments, ';')</ProcessArguments>
      </AotInputAssemblies>

      <_WasmAssemblies Remove="@(_WasmAssemblies)" />
    </ItemGroup>

    <MonoAOTCompiler
      CompilerBinaryPath="$(MicrosoftNetCoreAppRuntimePackRidDir)native\cross\mono-aot-cross"
      Mode="LLVMOnly"
      OutputType="AsmOnly"
      Assemblies="@(AotInputAssemblies)"
      UseAotDataFile="false"
      AotModulesTablePath="$(WasmBuildDir)driver-gen.c"
      UseLLVM="true"
        DisableParallelAot="true"
      LLVMPath="$(EMSDK_PATH)\upstream\bin">
      <Output TaskParameter="CompiledAssemblies" ItemName="_WasmAssemblies" />
    </MonoAOTCompiler>
    <Message Text="_WasmAssemblies: @(_WasmAssemblies)" />
  </Target>

  <Target Name="_WasmResolveReferences" Condition="'$(WasmResolveAssembliesBeforeBuild)' == 'true'">
    <WasmLoadAssembliesAndReferences
      Assemblies="@(_WasmAssemblies)"
      AssemblySearchPaths="@(WasmAssemblySearchPaths)"
      SkipMissingAssemblies="$(WasmSkipMissingAssemblies)">
      <Output TaskParameter="ReferencedAssemblies" ItemName="_TmpWasmAssemblies" />
    </WasmLoadAssembliesAndReferences>

    <ItemGroup>
      <_WasmAssemblies Remove="@(_WasmAssemblies)" />
      <_WasmAssemblies Include="@(_TmpWasmAssemblies)" />
    </ItemGroup>
  </Target>

  <Target Name="_BeforeWasmBuildApp">
      <Error Condition="'$(WasmMainAssemblyPath)' == ''" Text="%24(WasmMainAssemblyPath) property needs to be set" />
      <Error Condition="'$(WasmAppDir)' == ''" Text="%24(WasmAppDir) property needs to be set" />
      <Error Condition="'$(WasmBuildNative)' == 'true' and '$(WasmBuildDir)' == ''" Text="%24(WasmBuildDir) property needs to be set" />
      <Error Condition="!Exists('$(MicrosoftNetCoreAppRuntimePackRidDir)')" Text="MicrosoftNetCoreAppRuntimePackRidDir=$(MicrosoftNetCoreAppRuntimePackRidDir) doesn't exist" />
      <Error Condition="'$(WasmMainJSPath)' == ''" Text="%24(WasmMainJSPath) property needs to be set" />
      <ItemGroup>
          <_WasmAssemblies Include="$(WasmMainAssemblyPath);@(WasmAssembliesToBundle)" />
      </ItemGroup>
  </Target>

  <Target Name="_WasmBuildApp" BeforeTargets="WasmBuildApp" DependsOnTargets="$(WasmBuildAppDependsOn)">
    <WasmAppBuilder
      AppDir="$(WasmAppDir)"
      MicrosoftNetCoreAppRuntimePackDir="$(MicrosoftNetCoreAppRuntimePackRidDir)"
      MainAssembly="$(WasmMainAssemblyPath)"
      MainJS="$(WasmMainJSPath)"
      Assemblies="@(_WasmAssemblies)"
      InvariantGlobalization="$(WasmInvariantGlobalization)"
      SatelliteAssemblies="@(WasmSatelliteAssemblies)"
      FilesToIncludeInFileSystem="@(WasmFilesToIncludeInFileSystem)"
      IcuDataFileName="$(WasmIcuDataFileName)"
      RemoteSources="@(WasmRemoteSources)"
      DebugLevel="$(WasmDebugLevel)">
      <Output TaskParameter="FileWrites" ItemName="FileWrites" />
    </WasmAppBuilder>

    <CallTarget Targets="_GenerateRunV8Script" Condition="'$(WasmGenerateRunV8Script)' == 'true'" />
  </Target>

  <Target Name="_AfterWasmBuildApp" AfterTargets="_WasmBuildApp">
    <!-- Run mono-cil-strip on the assemblies -->
    <!-- TODO: replace this with a linker task -->
    <ItemGroup>
      <_managedAppAssemblies Include="$(WasmAppDir)managed\*.dll"/>
    </ItemGroup>
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="mono-cil-strip %(_managedAppAssemblies.Identity)" />
  </Target>

  <Target Name="_WasmBuildNative" DependsOnTargets="_WasmAotCompileApp" Condition="'$(WasmBuildNative)' == 'true'">
    <PropertyGroup>
      <EmccFlagsFile>$(MicrosoftNetCoreAppRuntimePackRidDir)native\src\emcc-flags.txt</EmccFlagsFile>
      <RuntimeEmccVersionFile>$(MicrosoftNetCoreAppRuntimePackRidDir)native\src\emcc-version.txt</RuntimeEmccVersionFile>
      <EmccPublishVersionFile>$(WasmBuildDir)emcc-version.txt</EmccPublishVersionFile>
    </PropertyGroup>
    <ReadLinesFromFile File="$(EmccFlagsFile)">
        <Output TaskParameter="Lines" PropertyName="EmccFlags" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <EmccFlags>$(EmccFlags) -s DISABLE_EXCEPTION_CATCHING=0</EmccFlags>
      <EmccFlags Condition="'$(RunAOTCompilation)'">$(EmccFlags) -DENABLE_AOT=1 -DDRIVER_GEN=1</EmccFlags>
    </PropertyGroup>

    <ReadLinesFromFile File="$(RuntimeEmccVersionFile)">
        <Output TaskParameter="Lines" PropertyName="RuntimeEmccVersion" />
    </ReadLinesFromFile>

    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc --version | head -1 > emcc-version.txt" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" />
    <ReadLinesFromFile File="$(EmccPublishVersionFile)">
        <Output TaskParameter="Lines" PropertyName="EmccVersion" />
    </ReadLinesFromFile>
    <Error Condition="'$(RuntimeEmccVersion)' != '$(EmccVersion)'" Text="Emscripten version mismatch, expected '$(RuntimeEmccVersion)', got '$(EmccVersion)'"/>

    <!-- Either created by MonoAOTCompiler or here -->
    <WriteLinesToFile File="$(WasmBuildDir)driver-gen.c" Overwrite="true" Condition="'$(RunAOTCompilation)' == 'false'"
                      Lines=""
                      />

    <ItemGroup>
      <_WasmPInvokeModules Include="libSystem.Native" />
      <_WasmPInvokeModules Include="libSystem.IO.Compression.Native" />
      <_WasmPInvokeModules Include="libSystem.Globalization.Native" />
      <_WasmPInvokeAssemblies Include="$(WasmBuildDir)\*.dll" />
   </ItemGroup>
   <PInvokeTableGenerator
     Modules="@(_WasmPInvokeModules)"
     Assemblies="@(_WasmPInvokeAssemblies)"
     OutputPath="$(WasmBuildDir)pinvoke-table.h" />

    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DCORE_BINDINGS -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/mono-2.0 -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/wasm -I$(WasmBuildDir) $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/driver.c -c -o driver.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" StandardOutputImportance="Low" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/mono-2.0 $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/corebindings.c -c -o corebindings.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" StandardOutputImportance="Low" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DGEN_PINVOKE=1 -I$(WasmBuildDir) -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/wasm $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/pinvoke.c -c -o pinvoke.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" StandardOutputImportance="Low" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -s TOTAL_MEMORY=536870912 --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/library_mono.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/binding_support.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/dotnet_support.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/pal_random.js driver.o pinvoke.o corebindings.o @(_WasmAssemblies->'%(LlvmBitcodeFile)', ' ') libmono-ee-interp.a libmonosgen-2.0.a libmono-ilgen.a libmono-icall-table.a libSystem.Native.a libSystem.IO.Compression.Native.a libicuuc.a libicui18n.a -o dotnet.js" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" StandardOutputImportance="Low" />
    <Exec Condition="'$(WasmNativeStrip)' == 'true'" Command="$(EMSDK_PATH)/upstream/bin/wasm-opt --strip-dwarf dotnet.wasm -o dotnet.wasm" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmBuildDir)" />
  </Target>

  <Target Name="_GenerateRunV8Script">
    <PropertyGroup>
      <WasmRunV8ScriptPath Condition="'$(WasmRunV8ScriptPath)' == ''">$(WasmAppDir)run-v8.sh</WasmRunV8ScriptPath>
    </PropertyGroup>

    <WriteLinesToFile
      File="$(WasmRunV8ScriptPath)"
      Lines="v8 --expose_wasm runtime.js -- --run $([System.IO.Path]::GetFileName('$(WasmMainAssemblyPath)')) $*"
      Overwrite="true">
    </WriteLinesToFile>

    <ItemGroup>
      <FileWrites Include="$(WasmRunV8ScriptPath)" />
    </ItemGroup>

    <Exec Command="chmod a+x $(WasmRunV8ScriptPath)" />
  </Target>

  <Target Name="RebuildWasmAppBuilder">
    <ItemGroup>
      <WasmAppBuildProject Include="$(RepoTasksDir)WasmAppBuilder\WasmAppBuilder.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(WasmAppBuildProject)"
         Properties="Configuration=Debug;MSBuildRestoreSessionId=$([System.Guid]::NewGuid())"
         Targets="Restore"/>

    <MSBuild Projects="@(WasmAppBuildProject)"
         Properties="Configuration=Debug"
         Targets="Build;Publish"/>
  </Target>
</Project>
