<Project>
  <UsingTask TaskName="MonoAOTCompiler" AssemblyFile="$(MonoAOTCompilerTasksAssemblyPath)" />
  <UsingTask TaskName="WasmAppBuilder" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />
  <UsingTask TaskName="WasmAOT" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />
  <UsingTask TaskName="WasmLoadAssembliesAndReferences" AssemblyFile="$(WasmAppBuilderTasksAssemblyPath)" />

  <Target Name="WasmBuildApp" AfterTargets="Publish">
    <Error Condition="'$(WasmMainAssemblyPath)' == ''" Text="%24(WasmMainAssemblyPath) property needs to be set" />
    <Error Condition="'$(WasmAppDir)' == ''" Text="%24(WasmAppDir) property needs to be set" />
    <Error Condition="'$(RunAOTCompilation)' == 'true' and '$(WasmAOTDir)' == ''" Text="%24(WasmAOTDir) property needs to be set" />
    <Error Condition="!Exists('$(MicrosoftNetCoreAppRuntimePackRidDir)')" Text="MicrosoftNetCoreAppRuntimePackRidDir=$(MicrosoftNetCoreAppRuntimePackRidDir) doesn't exist" />
    <Error Condition="'$(WasmMainJSPath)' == ''" Text="%24(WasmMainJSPath) property needs to be set" />
  </Target>

  <Target Condition="'$(RunAOTCompilation)' == 'true'" Name="_WasmAotCompileApp" AfterTargets="WasmBuildApp">
    <PropertyGroup>
      <EmccFlagsFile>$(MicrosoftNetCoreAppRuntimePackRidDir)native\src\emcc-flags.txt</EmccFlagsFile>
      <RuntimeEmccVersionFile>$(MicrosoftNetCoreAppRuntimePackRidDir)native\src\emcc-version.txt</RuntimeEmccVersionFile>
      <EmccPublishVersionFile>$(WasmAOTDir)emcc-version.txt</EmccPublishVersionFile>
    </PropertyGroup>
    <ItemGroup>
      <MonoAOTCompilerDefaultAotArguments Include="no-opt" />
      <MonoAOTCompilerDefaultAotArguments Include="static" />
      <MonoAOTCompilerDefaultAotArguments Include="direct-icalls" />
      <MonoAOTCompilerDefaultAotArguments Include="deterministic" />
    </ItemGroup>
    <ItemGroup>
      <AotInputAssemblies Include="@(WasmAssembliesToBundle)">
        <AotArguments>@(MonoAOTCompilerDefaultAotArguments, ';')</AotArguments>
        <ProcessArguments>@(MonoAOTCompilerDefaultProcessArguments, ';')</ProcessArguments>
      </AotInputAssemblies>
      <WasmAssembliesToBundle Remove="@(WasmAssembliesToBundle)" />
    </ItemGroup>

    <MonoAOTCompiler
      CompilerBinaryPath="$(MicrosoftNetCoreAppRuntimePackRidDir)native\cross\mono-aot-cross"
      Mode="LLVMOnly"
      OutputType="AsmOnly"
      Assemblies="@(AotInputAssemblies)"
      UseAotDataFile="false"
      AotModulesTablePath="$(WasmAOTDir)driver-gen.c"
      UseLLVM="true"
      LLVMPath="$(EMSDK_PATH)\upstream\bin">
      <Output TaskParameter="CompiledAssemblies" ItemName="WasmAssembliesToBundle" />
    </MonoAOTCompiler>
  </Target>

  <Target Name="_WasmResolveReferences" AfterTargets="_WasmAotCompileApp">
    <WasmLoadAssembliesAndReferences
      Condition="'$(WasmResolveAssembliesBeforeBuild)' == 'true'"
      Assemblies="$(WasmMainAssemblyPath);@(WasmAssembliesToBundle)"
      AssemblySearchPaths="@(WasmAssemblySearchPaths)"
      SkipMissingAssemblies="$(WasmSkipMissingAssemblies)">
      <Output TaskParameter="ReferencedAssemblies" ItemName="_WasmAssembliesFullSet" />
    </WasmLoadAssembliesAndReferences>

    <ItemGroup>
      <_WasmAssembliesFullSet Condition="'$(WasmResolveAssembliesBeforeBuild)' != 'true'" Include="@(WasmAssembliesToBundle)" />
    </ItemGroup>
  </Target>

  <Target Name="_WasmBuildApp" AfterTargets="_WasmResolveReferences">

    <CallTarget Targets="_WasmAOT" Condition="'$(RunAOTCompilation)' == 'true'" />

    <WasmAppBuilder
      AppDir="$(WasmAppDir)"
      MicrosoftNetCoreAppRuntimePackDir="$(MicrosoftNetCoreAppRuntimePackRidDir)"
      MainAssembly="$(WasmMainAssemblyPath)"
      MainJS="$(WasmMainJSPath)"
      Assemblies="@(_WasmAssembliesFullSet)"
      InvariantGlobalization="$(WasmInvariantGlobalization)"
      SatelliteAssemblies="@(WasmSatelliteAssemblies)"
      FilesToIncludeInFileSystem="@(WasmFilesToIncludeInFileSystem)"
      IcuDataFileName="$(WasmIcuDataFileName)"
      RemoteSources="@(WasmRemoteSources)"
      DebugLevel="$(WasmDebugLevel)">
      <Output TaskParameter="FileWrites" ItemName="FileWrites" />
    </WasmAppBuilder>

    <CallTarget Targets="_GenerateRunV8Script" Condition="'$(WasmGenerateRunV8Script)' == 'true'" />
  </Target>

  <Target Name="_AfterWasmBuildApp" AfterTargets="_WasmBuildApp">
    <!-- Run mono-cil-strip on the assemblies -->
    <!-- TODO: replace this with a linker task -->
    <ItemGroup>
      <_managedAppAssemblies Include="$(WasmAppDir)managed\*.dll"/>
    </ItemGroup>
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="mono-cil-strip %(_managedAppAssemblies.Identity)" />
  </Target>

  <Target Name="_WasmAOT">
    <ReadLinesFromFile File="$(EmccFlagsFile)">
        <Output TaskParameter="Lines" PropertyName="EmccFlags" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <EmccFlags>$(EmccFlags) -s DISABLE_EXCEPTION_CATCHING=0</EmccFlags>
    </PropertyGroup>

    <ReadLinesFromFile File="$(RuntimeEmccVersionFile)">
        <Output TaskParameter="Lines" PropertyName="RuntimeEmccVersion" />
    </ReadLinesFromFile>

    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc --version | head -1 > emcc-version.txt" ConsoleToMsBuild="true" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmAOTDir)" />
    <ReadLinesFromFile File="$(EmccPublishVersionFile)">
        <Output TaskParameter="Lines" PropertyName="EmccVersion" />
    </ReadLinesFromFile>
    <Error Condition="'$(RuntimeEmccVersion)' != '$(EmccVersion)'" Text="Emscripten version mismatch, expected '$(RuntimeEmccVersion)', got '$(EmccVersion)'"/>

    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DCORE_BINDINGS -DENABLE_AOT=1 -DDRIVER_GEN=1 -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/mono-2.0 -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/wasm -I$(WasmAOTDir) $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/driver.c -c -o driver.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmAOTDir)" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/mono-2.0 $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/corebindings.c -c -o corebindings.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmAOTDir)" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DGEN_PINVOKE=1 -I$(MicrosoftNetCoreAppRuntimePackRidDir)native/include/wasm $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/pinvoke.c -c -o pinvoke.o" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmAOTDir)" />
    <Exec Command="source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -s TOTAL_MEMORY=536870912 --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/library_mono.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/binding_support.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/dotnet_support.js --js-library $(MicrosoftNetCoreAppRuntimePackRidDir)native/src/pal_random.js driver.o pinvoke.o corebindings.o @(_WasmAssembliesFullSet->'%(LlvmBitcodeFile)', ' ') libmono-ee-interp.a libmonosgen-2.0.a libmono-ilgen.a libmono-icall-table.a libSystem.Native.a libSystem.IO.Compression.Native.a libicuuc.a libicui18n.a -o dotnet.js" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(WasmAOTDir)" />
  </Target>

  <Target Name="_GenerateRunV8Script">
    <PropertyGroup>
      <WasmRunV8ScriptPath Condition="'$(WasmRunV8ScriptPath)' == ''">$(WasmAppDir)run-v8.sh</WasmRunV8ScriptPath>
    </PropertyGroup>

    <WriteLinesToFile
      File="$(WasmRunV8ScriptPath)"
      Lines="v8 --expose_wasm runtime.js -- --run $([System.IO.Path]::GetFileName('$(WasmMainAssemblyPath)')) $*"
      Overwrite="true">
    </WriteLinesToFile>

    <ItemGroup>
      <FileWrites Include="$(WasmRunV8ScriptPath)" />
    </ItemGroup>

    <Exec Command="chmod a+x $(WasmRunV8ScriptPath)" />
  </Target>

  <Target Name="RebuildWasmAppBuilder">
    <ItemGroup>
      <WasmAppBuildProject Include="$(RepoTasksDir)WasmAppBuilder\WasmAppBuilder.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(WasmAppBuildProject)"
         Properties="Configuration=Debug;MSBuildRestoreSessionId=$([System.Guid]::NewGuid())"
         Targets="Restore"/>

    <MSBuild Projects="@(WasmAppBuildProject)"
         Properties="Configuration=Debug"
         Targets="Build;Publish"/>
  </Target>
</Project>
