<Project>
  <PropertyGroup>
    <SkipImportArcadeSdkFromRoot>true</SkipImportArcadeSdkFromRoot>
  </PropertyGroup>
  <Import Project="..\..\Directory.Build.props" />
  
  <!-- Set default Platform -->
  <PropertyGroup>
    <ArchGroup Condition="'$(ArchGroup)' == ''">x64</ArchGroup>
    <Platform>$(ArchGroup)</Platform>
    <TargetArchitecture>$(ArchGroup)</TargetArchitecture>

    <PlatformConfigPathPart>$(TargetOS).$(Platform).$(Configuration)</PlatformConfigPathPart>
  </PropertyGroup>

  <!-- Common properties -->
  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>
    <SourceDir>$(ProjectDir)src\</SourceDir>
    <BinDir>$(ArtifactsBinDir)mono\$(PlatformConfigPathPart)\</BinDir>

    <BaseIntermediateOutputPath>$(ArtifactsObjDir)mono\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Central place to set the versions of all nuget packages produced in the repo -->
    <PackageVersion Condition="'$(PackageVersion)' == ''">5.0.0</PackageVersion>

    <!-- Set the boolean below to true to generate packages with stabilized versions -->
    <StabilizePackageVersion Condition="'$(StabilizePackageVersion)' == ''">false</StabilizePackageVersion>
    <StableVersion Condition="'$(StabilizePackageVersion)' == 'true' and '$(StableVersion)' == ''">$(PackageVersion)</StableVersion>

    <PreReleaseLabel>preview8</PreReleaseLabel>
  </PropertyGroup>

  <!-- Set up common target properties that we use to conditionally include sources -->
  <PropertyGroup>
    <TargetsFreeBSD Condition="'$(TargetOS)' == 'FreeBSD'">true</TargetsFreeBSD>
    <TargetsLinux Condition="'$(TargetOS)' == 'Linux'">true</TargetsLinux>
    <TargetsNetBSD Condition="'$(TargetOS)' == 'NetBSD'">true</TargetsNetBSD>
    <TargetsOSX Condition="'$(TargetOS)' == 'OSX'">true</TargetsOSX>
    <TargetsiOS Condition="'$(TargetOS)' == 'iOS'">true</TargetsiOS>
    <TargetsiOSSimulator Condition="'$(TargetsiOS)' == 'true' and '$(Platform)' == 'x64'">true</TargetsiOSSimulator>
    <TargetsWindows Condition="'$(TargetOS)' == 'Windows_NT'">true</TargetsWindows>
    <TargetsUnix Condition="'$(TargetsFreeBSD)' == 'true' or '$(TargetsLinux)' == 'true' or '$(TargetsNetBSD)' == 'true' or '$(TargetsOSX)' == 'true' or '$(TargetsiOS)' == 'true'">true</TargetsUnix>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Minimum target OS version, keep in sync with src/libraries/Native/build-native.sh -->
    <iOSVersionMin Condition="'$(TargetOS)' == 'iOS' and '$(TargetsiOSSimulator)' != 'true'">7.0</iOSVersionMin>
    <iOSVersionMin Condition="'$(TargetOS)' == 'iOS' and '$(TargetsiOSSimulator)' == 'true'">8.0</iOSVersionMin>
    <tvOSVersionMin>9.0</tvOSVersionMin>
    <watchOSVersionMin>2.0</watchOSVersionMin>
    <watchOS64_32VersionMin>5.1</watchOS64_32VersionMin>
    <macOSVersionMin>10.13</macOSVersionMin>

    <!-- Version of the OS SDK we target -->
    <iOSVersion></iOSVersion>
    <tvOSVersion></tvOSVersion>
    <watchOSVersion></watchOSVersion>
    <watchOS64_32Version></watchOS64_32Version>
    <macOSVersion></macOSVersion>
  </PropertyGroup>

  <PropertyGroup>
    <LangVersion>8.0</LangVersion>
    <UseSharedCompilation>true</UseSharedCompilation>
  </PropertyGroup>

  <!-- Set the kind of PDB to Portable -->
  <PropertyGroup>
    <DebugType Condition="'$(DebugType)' == ''">Portable</DebugType>
  </PropertyGroup>

  <!-- Output paths -->
  <PropertyGroup>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <!-- Ensure our properties are set before Arcade defines defaults -->
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup Condition="'$(CopyrightNetFoundation)' != ''">
    <Copyright>$(CopyrightNetFoundation)</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>

  <PropertyGroup>
    <SignAssembly Condition="'$(UsingMicrosoftNETSdk)'!='true'">false</SignAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <CL_MPCount>$(NumberOfCores)</CL_MPCount>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Enables Strict mode for Roslyn compiler -->
    <Features>strict;nullablePublicOnly</Features>
  </PropertyGroup>
</Project>
