<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <OutputPath>bin</OutputPath>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <EnableTargetingPackDownload>false</EnableTargetingPackDownload>
    <TargetFramework>$(NetCoreAppToolCurrent)</TargetFramework>
    <RuntimeIdentifier>browser-wasm</RuntimeIdentifier>
    <TargetArchitecture>wasm</TargetArchitecture>
    <TargetOS>Browser</TargetOS>
    <PublishTrimmed>true</PublishTrimmed>
    <TrimMode>link</TrimMode>
    <MicrosoftNetCoreAppRuntimePackRidDir>$(ArtifactsBinDir)microsoft.netcore.app.runtime.browser-wasm\$(Configuration)\runtimes\browser-wasm\</MicrosoftNetCoreAppRuntimePackRidDir>
    <BuildDir>$(MSBuildThisFileDirectory)obj\$(Configuration)\wasm</BuildDir>
    <AppDir>$(MSBuildProjectDirectory)\bin\$(Configuration)\AppBundle\</AppDir>
    <RunAOTCompilation Condition="'$(RunAOTCompilation)' == ''">false</RunAOTCompilation>
    <RunAnalyzers>false</RunAnalyzers>
    <OSPlatformConfig>$(TargetOS).AnyCPU.$(Configuration)</OSPlatformConfig>
    <HelixArchiveRoot>$(ArtifactsDir)helix/</HelixArchiveRoot>
    <HelixArchiveRunOnlyRoot>$(HelixArchiveRoot)runonly/</HelixArchiveRunOnlyRoot>
    <HelixArchiveRunOnlyAppsDir>$(HelixArchiveRunOnlyRoot)$(OSPlatformConfig)\browser\</HelixArchiveRunOnlyAppsDir>
    <TestArchiveTestsDir>$(HelixArchiveRunOnlyAppsDir)</TestArchiveTestsDir>
    <TestProjectName>$(AssemblyName)</TestProjectName>
    <OutDir>$(MSBuildProjectDirectory)\bin\browser-wasm\</OutDir> 
    <MobileTestsSkipLinkImport>true</MobileTestsSkipLinkImport>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <!-- Runtime feature defaults to trim unnecessary code -->
    <EventSourceSupport>false</EventSourceSupport>
    <UseSystemResourceKeys>true</UseSystemResourceKeys>
    <EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
    <HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
    <DebuggerSupport>false</DebuggerSupport>
  </PropertyGroup>

  <!-- Redirect 'dotnet publish' to in-tree runtime pack -->
  <Target Name="TrickRuntimePackLocation" AfterTargets="ProcessFrameworkReferences">
    <ItemGroup>
      <RuntimePack>
        <PackageDirectory>$(ArtifactsBinDir)microsoft.netcore.app.runtime.browser-wasm\$(Configuration)</PackageDirectory>
      </RuntimePack>
    </ItemGroup>
    <Message Text="Packaged ID: %(RuntimePack.PackageDirectory)" Importance="high" />
  </Target>

  <Import Condition="'$(ArchiveTests)' == 'true'" Project="$(RepoRoot)eng\testing\tests.targets" />

  <Target Name="PrepareForWasmBuildApp" BeforeTargets="WasmBuildApp">
    <PropertyGroup>
        <WasmAppDir>$(OutDir)\AppBundle\</WasmAppDir>
        <WasmBuildDir>$(MSBuildProjectDirectory)\$(PublishDir)\</WasmBuildDir>
        <WasmMainJSPath>runtime.js</WasmMainJSPath>
        <WasmMainAssemblyPath>$(WasmBuildDir)$(AssemblyName).dll</WasmMainAssemblyPath>
    </PropertyGroup>
    <ItemGroup>
      <WasmAssembliesToBundle Include="$(TargetDir)publish\*.dll" />
    </ItemGroup>
  </Target>

  <Target Name="AfterWasmBuildApp" AfterTargets="WasmBuildApp">
    <Copy SourceFiles="$(OutDir)\index.html" DestinationFolder="$(OutDir)\AppBundle" />
  </Target>

  <ItemGroup>
    <Compile Include="Program.cs" />
    <Content Include="index.html">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <Import Condition="'$(ArchiveTests)' != 'true'" Project="$(MonoProjectRoot)\wasm\build\WasmApp.targets" />
</Project>
