// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

/*****************************************************************************/
#ifndef SIMD_AS_HWINTRINSIC
#error Define SIMD_AS_HWINTRINSIC before including this file
#endif
/*****************************************************************************/

// clang-format off

#ifdef FEATURE_HW_INTRINSICS

/* Note
    * Each intrinsic has a unique Intrinsic ID with type of `enum NamedIntrinsic`
    * Each intrinsic has a `NumArg` for number of parameters
    * Each intrinsic has 10 `NamedIntrinsic` fields that list the HWIntrinsic that should be generated based-on the base type
        * NI_Illegal is used to represent an unsupported type
        * Using the same Intrinsic ID as the represented entry is used to indicate special handling is required
    * Each intrinsic has one or more flags with type of `enum SimdAsHWIntrinsicFlag`
*/


//                  ISA          Function name               NumArg                                                                                                                                                                                                                      Instructions                                                                                                                                                                                                                                                                   Flags
//                                                                      {TYP_BYTE,                                      TYP_UBYTE,                                      TYP_SHORT,                                      TYP_USHORT,                                     TYP_INT,                                        TYP_UINT,                                       TYP_LONG,                                       TYP_ULONG,                                      TYP_FLOAT,                                      TYP_DOUBLE}

//  Vector2 Intrinsics
SIMD_AS_HWINTRINSIC(Vector2,     Abs,                        1,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Abs,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     Max,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Max,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     Min,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Min,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     op_Addition,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Add,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     op_Division,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Arm64_Divide,                        NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     op_Multiply,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Multiply,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector2,     op_Subtraction,             2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Subtract,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)


//                  ISA          Function name               NumArg                                                                                                                                                                                                                      Instructions                                                                                                                                                                                                                                                                   Flags
//                                                                      {TYP_BYTE,                                      TYP_UBYTE,                                      TYP_SHORT,                                      TYP_USHORT,                                     TYP_INT,                                        TYP_UINT,                                       TYP_LONG,                                       TYP_ULONG,                                      TYP_FLOAT,                                      TYP_DOUBLE}

//  Vector3 Intrinsics
SIMD_AS_HWINTRINSIC(Vector3,     Abs,                        1,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Abs,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     Max,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Max,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     Min,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Min,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     op_Addition,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Add,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     op_Division,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Arm64_Divide,                        NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     op_Multiply,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Multiply,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector3,     op_Subtraction,             2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Subtract,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)


//                  ISA          Function name               NumArg                                                                                                                                                                                                                      Instructions                                                                                                                                                                                                                                                                   Flags
//                                                                      {TYP_BYTE,                                      TYP_UBYTE,                                      TYP_SHORT,                                      TYP_USHORT,                                     TYP_INT,                                        TYP_UINT,                                       TYP_LONG,                                       TYP_ULONG,                                      TYP_FLOAT,                                      TYP_DOUBLE}

//  Vector4 Intrinsics
SIMD_AS_HWINTRINSIC(Vector4,     Abs,                        1,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Abs,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     Max,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Max,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     Min,                        2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Min,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     op_Addition,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Add,                                 NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     op_Division,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Arm64_Divide,                        NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     op_Multiply,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Multiply,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(Vector4,     op_Subtraction,             2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Subtract,                            NI_Illegal},                                    SimdAsHWIntrinsicFlag::None)

// *************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
//                  ISA          Function name               NumArg                                                                                                                                                                                                                      Instructions                                                                                                                                                                                                                                                                   Flags
//                                                                      {TYP_BYTE,                                      TYP_UBYTE,                                      TYP_SHORT,                                      TYP_USHORT,                                     TYP_INT,                                        TYP_UINT,                                       TYP_LONG,                                       TYP_ULONG,                                      TYP_FLOAT,                                      TYP_DOUBLE}

//  Vector<T> Intrinsics
SIMD_AS_HWINTRINSIC(VectorT128,  Abs,                        1,         {NI_AdvSimd_Abs,                                NI_VectorT128_Abs,                              NI_AdvSimd_Abs,                                 NI_VectorT128_Abs,                              NI_AdvSimd_Abs,                                 NI_VectorT128_Abs,                              NI_AdvSimd_Arm64_Abs,                           NI_VectorT128_Abs,                              NI_AdvSimd_Abs,                                 NI_AdvSimd_Arm64_Abs},                          SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  AndNot,                     2,         {NI_AdvSimd_BitwiseClear,                       NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear,                        NI_AdvSimd_BitwiseClear},                       SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  Equals,                     2,         {NI_AdvSimd_CompareEqual,                       NI_AdvSimd_CompareEqual,                        NI_AdvSimd_CompareEqual,                        NI_AdvSimd_CompareEqual,                        NI_AdvSimd_CompareEqual,                        NI_AdvSimd_CompareEqual,                        NI_AdvSimd_Arm64_CompareEqual,                  NI_AdvSimd_Arm64_CompareEqual,                  NI_AdvSimd_CompareEqual,                        NI_AdvSimd_Arm64_CompareEqual},                 SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  GreaterThan,                2,         {NI_AdvSimd_CompareGreaterThan,                 NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_Arm64_CompareGreaterThan,            NI_AdvSimd_Arm64_CompareGreaterThan,            NI_AdvSimd_CompareGreaterThan,                  NI_AdvSimd_Arm64_CompareGreaterThan},           SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  GreaterThanOrEqual,         2,         {NI_AdvSimd_CompareGreaterThanOrEqual,          NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_Arm64_CompareGreaterThanOrEqual,     NI_AdvSimd_Arm64_CompareGreaterThanOrEqual,     NI_AdvSimd_CompareGreaterThanOrEqual,           NI_AdvSimd_Arm64_CompareGreaterThanOrEqual},    SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  LessThan,                   2,         {NI_AdvSimd_CompareLessThan,                    NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_Arm64_CompareLessThan,               NI_AdvSimd_Arm64_CompareLessThan,               NI_AdvSimd_CompareLessThan,                     NI_AdvSimd_Arm64_CompareLessThan},              SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  LessThanOrEqual,            2,         {NI_AdvSimd_CompareLessThanOrEqual,             NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_Arm64_CompareLessThanOrEqual,        NI_AdvSimd_Arm64_CompareLessThanOrEqual,        NI_AdvSimd_CompareLessThanOrEqual,              NI_AdvSimd_Arm64_CompareLessThanOrEqual},       SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  Max,                        2,         {NI_AdvSimd_Max,                                NI_AdvSimd_Max,                                 NI_AdvSimd_Max,                                 NI_AdvSimd_Max,                                 NI_AdvSimd_Max,                                 NI_AdvSimd_Max,                                 NI_VectorT128_Max,                              NI_VectorT128_Max,                              NI_AdvSimd_Max,                                 NI_AdvSimd_Arm64_Max},                          SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  Min,                        2,         {NI_AdvSimd_Min,                                NI_AdvSimd_Min,                                 NI_AdvSimd_Min,                                 NI_AdvSimd_Min,                                 NI_AdvSimd_Min,                                 NI_AdvSimd_Min,                                 NI_VectorT128_Min,                              NI_VectorT128_Min,                              NI_AdvSimd_Min,                                 NI_AdvSimd_Arm64_Min},                          SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_Addition,                2,         {NI_AdvSimd_Add,                                NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Add,                                 NI_AdvSimd_Arm64_Add},                          SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_BitwiseAnd,              2,         {NI_AdvSimd_And,                                NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And,                                 NI_AdvSimd_And},                                SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_BitwiseOr,               2,         {NI_AdvSimd_Or,                                 NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or,                                  NI_AdvSimd_Or},                                 SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_Division,                2,         {NI_Illegal,                                    NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Arm64_Divide,                        NI_AdvSimd_Arm64_Divide},                       SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_ExclusiveOr,             2,         {NI_AdvSimd_Xor,                                NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor,                                 NI_AdvSimd_Xor},                                SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_Multiply,                2,         {NI_AdvSimd_Multiply,                           NI_AdvSimd_Multiply,                            NI_AdvSimd_Multiply,                            NI_AdvSimd_Multiply,                            NI_AdvSimd_Multiply,                            NI_AdvSimd_Multiply,                            NI_Illegal,                                     NI_Illegal,                                     NI_AdvSimd_Multiply,                            NI_AdvSimd_Arm64_Multiply},                     SimdAsHWIntrinsicFlag::None)
SIMD_AS_HWINTRINSIC(VectorT128,  op_Subtraction,             2,         {NI_AdvSimd_Subtract,                           NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Subtract,                            NI_AdvSimd_Arm64_Subtract},                     SimdAsHWIntrinsicFlag::None)

#endif // FEATURE_HW_INTRINSICS

#undef SIMD_AS_HWINTRINSIC

// clang-format on
