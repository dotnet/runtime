project(protononjit)

add_definitions(-DALT_JIT)
add_definitions(-DFEATURE_NO_HOST)
add_definitions(-DSELF_NO_HOST)
remove_definitions(-DFEATURE_MERGE_JIT_AND_ENGINE)

if(FEATURE_READYTORUN)
  add_definitions(-DFEATURE_READYTORUN_COMPILER)
endif(FEATURE_READYTORUN)

if (CLR_CMAKE_PLATFORM_ARCH_I386)
    remove_definitions(-D_TARGET_X86_)
    remove_definitions(-DFEATURE_SIMD)
    remove_definitions(-DFEATURE_HW_INTRINSICS)
    add_definitions(-D_TARGET_ARM_)
    add_definitions(-DFEATURE_EH_FUNCLETS)
    set(JIT_ARCH_SOURCES ${JIT_ARM_SOURCES})
    set(JIT_ARCH_LINK_LIBRARIES gcinfo_arm)
elseif(CLR_CMAKE_PLATFORM_ARCH_AMD64)
    remove_definitions(-D_TARGET_AMD64_)
    add_definitions(-D_TARGET_ARM64_)
    set(JIT_ARCH_SOURCES ${JIT_ARM64_SOURCES})
    set(JIT_ARCH_LINK_LIBRARIES gcinfo_arm64)
else()
    clr_unknown_arch()
endif()

if (NOT WIN32)
    if (CLR_CMAKE_PLATFORM_ARCH_I386)
        remove_definitions(-DUNIX_X86_ABI)
    elseif(CLR_CMAKE_PLATFORM_ARCH_AMD64)
        remove_definitions(-DUNIX_AMD64_ABI)
    else()
        clr_unknown_arch()
    endif()
endif(NOT WIN32)

add_jit(protononjit)
