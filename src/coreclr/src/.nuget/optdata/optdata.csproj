<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(NetCoreAppCurrent)</TargetFramework>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <OptimizationDataSupported Condition="'$(TargetOS)' == 'windows' And ('$(TargetArchitecture)' == 'x64' Or '$(TargetArchitecture)' == 'x86')">True</OptimizationDataSupported>
    <OptimizationDataSupported Condition="'$(TargetOS)' == 'Linux' And '$(TargetArchitecture)' == 'x64'">True</OptimizationDataSupported>
    <RuntimeIdentifiers>win7-x64;win7-x86;linux-x64</RuntimeIdentifiers>
    <ExcludeFromSourceBuild>true</ExcludeFromSourceBuild>
    <_TargetOSArchLowercase>$(TargetOS.ToLower())-$(TargetArchitecture.ToLower())</_TargetOSArchLowercase>
    <_TargetOSArchLowercase Condition="'$(TargetOS)' == 'windows'">windows_nt-$(TargetArchitecture.ToLower())</_TargetOSArchLowercase>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="optimization.PGO.CoreCLR"
      Version="$(optimizationPGOCoreCLRVersion)"
      Condition="'$(optimizationPGOCoreCLRVersion)'!='' And '$(OptimizationDataSupported)'!=''"
      GeneratePathProperty="true" />
  </ItemGroup>

  <!--                                                                       -->
  <!-- Task: DumpPgoDataPackagePath                                          -->
  <!--                                                                       -->
  <!-- Notes:                                                                -->
  <!--                                                                       -->
  <!-- DumpPgoDataPackagePath is used by build.sh and build.cmd to pass      -->
  <!-- the path information to cmake. The task will write a file to be       -->
  <!-- read back by build.cmd/sh. The path for the file is:                  -->
  <!-- $(PgoDataPackagePathOutputFile)                                       -->
  <!--                                                                       -->

  <Target Name="DumpPgoDataPackagePath">
    <!-- Error if PgoDataPackagePathOutputFile is not set. -->
    <Error Condition="'$(PgoDataPackagePathOutputFile)'==''" Text="PgoDataPackagePathOutputFile must be passed as a property." />

    <PropertyGroup>
      <PgoPackagePath>$([MSBuild]::NormalizePath($(Pkgoptimization_PGO_CoreCLR),../../,optimization.$(_TargetOSArchLowercase).pgo.coreclr,$(optimizationPGOCoreCLRVersion)))</PgoPackagePath>
    </PropertyGroup>

    <Error Condition="!Exists('$(PgoPackagePath)') And '$(OptimizationDataSupported)' == 'True'" Text="Unable to locate restored PGO package. Maybe the platform-specific package naming changed?" />

    <!-- Cleanup old version file -->
    <Delete Files="$(PgoDataPackagePathOutputFile)" Condition="Exists('$(PgoDataPackagePathOutputFile)')" />

    <WriteLinesToFile File="$(PgoDataPackagePathOutputFile)" Lines="$(PgoPackagePath)" Condition="'$(OptimizationDataSupported)' == 'True'" Overwrite="true"/>
    <WriteLinesToFile File="$(PgoDataPackagePathOutputFile)" Lines="" Condition="'$(OptimizationDataSupported)' != 'True'" Overwrite="true"/>
    <Message Text="optimizationPGOCoreCLR Package path: $(PgoPackagePath) written to: $(PgoDataPackagePathOutputFile)" Importance="High" />
  </Target>
</Project>
