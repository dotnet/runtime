Disabled Test Cases
~~~~~~~~~~~~~~~~~~~

Below is a list of all disabled test cases currently listed in
testconfig.dat and an explanation as to why they are disabled.

debug_api/debugbreak/test1
debug_api/outputdebugstringa/test1
debug_api/outputdebugstringw/test1
debug_api/writeprocessmemory/test1
debug_api/writeprocessmemory/test2
debug_api/writeprocessmemory/test3
debug_api/writeprocessmemory/test4
=======================================
The above testcases were disabled in the palsuite, because they depend heavily on
WaitForDebugEvent,DebugActiveProcess and ContinueDebugEvent, where these api's have been removed from the PAL and listed in the rotor_pal.doc (6.0)


file_io/gettempfilenamea/test2 :
=======================================
This test takes longer than 60 seconds to run. The test creates
about 65000 files and then deletes them. The test that takes longer
than 60 seconds will be flagged as an error and so in such a case
the test will have to be run manually.

file_io/gettempfilenamew/test2 :
=======================================
This test takes longer than 60 seconds to run. The test creates
about 65000 files and then deletes them. The test that takes longer
than 60 seconds will be flagged as an error and so in such a case
the test will have to be run manually.

locale_info/getcpinfo/test2:
=======================================
This test will be useful in future versions for testing various
languages (code pages).  Currently only U.S. English (tested by -
test1) is supported.

locale_info/getcpinfo/test3:
=======================================
This test will be useful in future versions for testing various
languages (code pages).  Currently only U.S. English (tested by -
test1) is supported.

locale_info/isvalidcodepage/test2:
=======================================
This test will be useful in future versions for testing various
languages (code pages).  Currently only U.S. English (tested by -
test1) is supported.

miscellaneous/getcalendarinfow/test2:
=======================================
Currently the only calendars that are supported are CAL_GREGORIAN
and CAL_GREGORIAN_US, which are tested by test1.  This test will
be useful when full calendar support is implemented.

miscellaneous/getdateformatw/test1:
===================================
Currently the only calendars that are supported are CAL_GREGORIAN
and CAL_GREGORIAN_US.  The GetDateFormatW function will only be 
called when the calendar is CAL_TAIWAN. Since this calendar is not
currently supported in this release of the PAL, the GetDateFormatW
function is not implemented except to return an error. This test
will be useful when full calendar support is implemented.

miscellaneous/getdateformatw/getdateformatw_neg1:
================================================
Currently the only calendars that are supported are CAL_GREGORIAN
and CAL_GREGORIAN_US.  The GetDateFormatW function will only be 
called when the calendar is CAL_TAIWAN. Since this calendar is not
currently supported in this release of the PAL, the GetDateFormatW
function is not implemented except to return an error. This test
will be useful when full calendar support is implemented.

miscellaneous/getdateformatw/getdateformatw_neg2:
================================================
Currently the only calendars that are supported are CAL_GREGORIAN
and CAL_GREGORIAN_US.  The GetDateFormatW function will only be 
called when the calendar is CAL_TAIWAN. Since this calendar is not
currently supported in this release of the PAL, the GetDateFormatW
function is not implemented except to return an error. This test
will be useful when full calendar support is implemented.


pal_specific/pal_get_stdin/test1 :
=======================================
This test case should be run manually.  Requires user input.


threading/setconsolectrlhandler/test1
threading/setconsolectrlhandler/test2
threading/setconsolectrlhandler/test3
threading/setconsolectrlhandler/test4
=======================================
These tests cases should be run manually.  Requires user input.

threading/getprocesstimes/test1
=======================================
According to rotor_pal.doc, GetProcessTimes() should be supported for the current 
process only. I've removed this test because it tests GetProcessTimes() with 
invalid process handle value.

threading/getthreadcontext/test1,1
=======================================
According to rotor_pal.doc, when GetThreadContext is call for a thread within 
the same process, it could only be called for te current thread. I've removed
this test, because it tests GetThreadContext() with a non current thread handle 
belong the current procees.

loader/loadlibrarya/test4
loader/loadlibraryw/test4
=======================================
PAL BSD should not append the .so extension in LoadLibrary if the extension is 
omitted.
file_io/deletefilea/test3
file_io/deletefilew/test3
=======================================
No code in Rotor depends on DeleteFile[A/W] failing on readonly files so we 
don't need to exactly emulate this feature of the Win32 filesystems on FreeBSD.
