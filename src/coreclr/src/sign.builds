<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="SignFiles" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- must set the default before importing targets -->
  <PropertyGroup>
    <SignType Condition="'$(SignType)' == ''">test</SignType>
    <StrongNameSig>Silverlight</StrongNameSig>
  </PropertyGroup>

  <Import Project="..\dir.props"/>
  <Import Project="..\dir.targets" />

  <!-- OutDir is used by the MicroBuild signing target -->
  <PropertyGroup>
    <OutDir>$(BinDir)</OutDir>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(BuildToolsTaskDir)Microsoft.DotNet.Build.Tasks.dll" TaskName="ReadSigningRequired" />

  <!-- apply the default signing certificates (defined in sign.targets) -->
  <ItemDefinitionGroup>
    <FilesToSign>
      <Authenticode>$(AuthenticodeSig)</Authenticode>
      <StrongName>$(StrongNameSig)</StrongName>
    </FilesToSign>
  </ItemDefinitionGroup>

  <!-- gather the list of binaries to sign with the default certificates -->
  <ItemGroup>
    <FilesToSign Include="$(BinDir)*.dll" Exclude="$(BinDir)*.ni.dll" />
    <FilesToSign Include="$(BinDir)*.exe" />
  </ItemGroup>

  <!--
    for some reason the signing task incorrectly attemps to strong-name sign
    native images which causes the signing step to fail for obvious reasons.
  -->
  <ItemGroup>
    <FilesToSign Include="$(BinDir)*.ni.dll">
      <StrongName>None</StrongName>
    </FilesToSign>
  </ItemGroup>

  <!-- populates item group FilesToSign with the list of files to sign -->
  <Target Name="GetFilesToSignItems" BeforeTargets="SignFiles">
    <!-- read all of the marker files and populate the FilesToSign item group -->
    <ItemGroup>
      <SignMarkerFile Include="$(OutDir)**\*.requires_signing" />
    </ItemGroup>
    <ReadSigningRequired MarkerFiles="@(SignMarkerFile)">
      <Output TaskParameter="SigningMetadata" ItemName="FilesToSign" />
    </ReadSigningRequired>
  </Target>

  <!-- now that signing is done clean up any marker files -->
  <Target Name="CleanUpMarkerFiles" AfterTargets="SignFiles">
    <!-- now that the files have been signed delete the marker files -->
    <Delete Files="@(SignMarkerFile)" />
  </Target>

</Project>