<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="dogfood">

    <Import Project="$(_NTDRIVE)$(_NTROOT)\ndp\clr\xplat\SetCrossGen.props" />
    <PropertyGroup>
        <BuildSysBinaries>true</BuildSysBinaries>
        <OutputName>cee_crossgen</OutputName>
    </PropertyGroup>

    <Import Project="$(_NTDRIVE)$(_NTROOT)\ndp\clr\src\vm\vm.settings" />

    <PropertyGroup>
        <UserIncludes>
          $(UserIncludes);
          $(Clrbase)\src\binder\inc
        </UserIncludes>
    <ClAdditionalOptions>$(ClAdditionalOptions) -wd4702</ClAdditionalOptions>
    </PropertyGroup>
    
    <ItemGroup>
        <CppCompile Include="$(VmSourcesDir)\class.cpp" />
        <CppCompile Include="$(VmSourcesDir)\AppDomain.cpp" />
        <CppCompile Include="$(VmSourcesDir)\aptca.cpp" Condition="'$(FeatureAptca)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\array.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Assembly.cpp" />
        <CppCompile Include="$(VmSourcesDir)\AssemblySpec.cpp" />
        <CppCompile Include="$(VmSourcesDir)\binder.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ceeload.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ceemain.cpp" />
        <CppCompile Include="$(VmSourcesDir)\classhash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\clrex.cpp" />
        <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderUtil.cpp" />
        <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderWinRT.cpp" Condition="'$(FeatureCominterop)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\CLRPrivTypeCacheWinRT.cpp" Condition="'$(FeatureCominterop)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\clsload.cpp" />
        <CppCompile Include="$(VmSourcesDir)\comdelegate.cpp" />
        <CppCompile Include="$(VmSourcesDir)\codeman.cpp" />
        <CppCompile Include="$(VmSourcesDir)\CompactLayoutWriter.cpp" Condition="'$(MDILGenerator)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\compile.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ConstrainedExecutionRegion.cpp" />
        <CppCompile Include="$(VmSourcesDir)\CustomMarshalerInfo.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Domainfile.cpp" />
        <CppCompile Include="$(VmSourcesDir)\BaseAssemblySpec.cpp" />
        <CppCompile Include="$(VmSourcesDir)\corebindresult.cpp" />
        <CppCompile Include="$(VmSourcesDir)\coreassemblyspec.cpp" />
        <CppCompile Include="$(VmSourcesDir)\crossdomaincalls.cpp" />
        <CppCompile Include="$(VmSourcesDir)\dataimage.cpp" />
        <CppCompile Include="$(VmSourcesDir)\decodeMD.cpp" />
        <CppCompile Include="$(VmSourcesDir)\DebugInfoStore.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ecall.cpp" />
        <CppCompile Include="$(VmSourcesDir)\eeconfig.cpp" />
        <CppCompile Include="$(VmSourcesDir)\eehash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\eetwain.cpp" />
        <CppCompile Include="$(VmSourcesDir)\excep.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Field.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Fieldmarshaler.cpp" />
        <CppCompile Include="$(VmSourcesDir)\formattype.cpp" />
        <CppCompile Include="$(VmSourcesDir)\TypeEquivalenceHash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\GCDecode.cpp" />
        <CppCompile Include="$(VmSourcesDir)\genericdict.cpp" />
        <CppCompile Include="$(VmSourcesDir)\generics.cpp" />
        <CppCompile Include="$(VmSourcesDir)\genmeth.cpp" />
        <CppCompile Include="$(VmSourcesDir)\hash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ILMarshalers.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ILStubCache.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ILStubResolver.cpp" />
        <CppCompile Include="$(VmSourcesDir)\instmethhash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\interoputil.cpp" />
        <CppCompile Include="$(VmSourcesDir)\invokeutil.cpp" />
        <CppCompile Include="$(VmSourcesDir)\inlinetracking.cpp" />
        <CppCompile Include="$(VmSourcesDir)\contractImpl.cpp" />
        <CppCompile Include="$(VmSourcesDir)\JITInterface.cpp" />
        <CppCompile Include="$(VmSourcesDir)\LoaderAllocator.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ListLock.cpp" />
        <CppCompile Include="$(VmSourcesDir)\memberload.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Method.cpp" />
        <CppCompile Include="$(VmSourcesDir)\MethodImpl.cpp" />
        <CppCompile Include="$(VmSourcesDir)\MethodTable.cpp" />
        <CppCompile Include="$(VmSourcesDir)\methodtablebuilder.cpp" />
        <CppCompile Include="$(VmSourcesDir)\mscorlib.cpp">
            <DisablePrecompiledHeaders>true</DisablePrecompiledHeaders>
        </CppCompile>
        <CppCompile Include="$(VmSourcesDir)\stubcache.cpp" />
        <CppCompile Include="$(VmSourcesDir)\mlinfo.cpp" />
        <CppCompile Include="$(VmSourcesDir)\DllImport.cpp" />
        <CppCompile Include="$(VmSourcesDir)\DllImportCallback.cpp" />
        <CppCompile Include="$(VmSourcesDir)\PEFile.cpp" />
        <CppCompile Include="$(VmSourcesDir)\PEFingerprint.cpp" />
        <CppCompile Include="$(VmSourcesDir)\PEImage.cpp" />
        <CppCompile Include="$(VmSourcesDir)\PEImageLayout.cpp" />
        <CppCompile Include="$(VmSourcesDir)\pendingload.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Precode.cpp" />
        <CppCompile Include="$(VmSourcesDir)\olevariant.cpp" />
        <CppCompile Include="$(VmSourcesDir)\ReadyToRunInfo.cpp" Condition="'$(FeatureReadyToRun)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\security.cpp" />
        <CppCompile Include="$(VmSourcesDir)\securitypolicy.cpp" />
        <CppCompile Include="$(VmSourcesDir)\securityAttributes.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityDeclarative.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityDeclarativeCache.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityDescriptor.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityDescriptorAppdomain.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityDescriptorAssembly.cpp" />
        <CppCompile Include="$(VmSourcesDir)\securitymeta.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SecurityTransparentAssembly.cpp" />
        <CppCompile Include="$(VmSourcesDir)\siginfo.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SigFormat.cpp" />
        <CppCompile Include="$(VmSourcesDir)\SimpleRWLock.cpp" />
        <CppCompile Include="$(VmSourcesDir)\spinlock.cpp" />
        <CppCompile Include="$(VmSourcesDir)\StackingAllocator.cpp" />
        <CppCompile Include="$(VmSourcesDir)\stubgen.cpp" />
        <CppCompile Include="$(VmSourcesDir)\stublink.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typectxt.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typedesc.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typehandle.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typehash.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typeparse.cpp" />
        <CppCompile Include="$(VmSourcesDir)\typestring.cpp" />
        <CppCompile Include="$(VmSourcesDir)\util.cpp" />
        <CppCompile Include="$(VmSourcesDir)\vars.cpp" />
        <CppCompile Include="$(VmSourcesDir)\zapsig.cpp" />
    </ItemGroup>

    <ItemGroup Condition="'$(FeatureCominterop)' == 'true'">
      <CppCompile Include="$(VmSourcesDir)\classcompat.cpp" />
      <CppCompile Include="$(VmSourcesDir)\COMtoCLRCall.cpp" />
      <CppCompile Include="$(VmSourcesDir)\CLRtoCOMCall.cpp" />
      <CppCompile Include="$(VmSourcesDir)\RuntimeCallableWrapper.cpp" />
      <CppCompile Include="$(VmSourcesDir)\WinRTHelpers.cpp" />
      <CppCompile Include="$(VmSourcesDir)\WinRTTypeNameConverter.cpp" />
    </ItemGroup>
  
    <!-- SOURCES_NONPAL -->
    <ItemGroup>
        <CppCompile Include="$(VmSourcesDir)\DbgGcInfoDecoder.cpp" />
        <CppCompile Include="$(VmSourcesDir)\GcInfoDecoder.cpp" />
        <CppCompile Include="$(VmSourcesDir)\Crypto\SHA1.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\SHA1.cpp" Condition="'$(FeatureCoreclr)' == 'true'"/>
    </ItemGroup>

    <ItemGroup Condition="'$(TargetArch)' == 'i386'">
        <CppCompile  Include="$(I386SourcesDir)\stublinkerx86.cpp" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetArch)' == 'amd64'">
        <CppCompile Include="$(Amd64SourcesDir)\StubLinkerAMD64.cpp" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetArch)' == 'arm'">
        <CppCompile  Include="$(ArmSourcesDir)\stubs.cpp" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetArch)' == 'arm64'">
        <CppCompile  Include="$(Arm64SourcesDir)\stubs.cpp" />
    </ItemGroup>

    <ItemGroup>
        <CppCompile Include="$(VmSourcesDir)\crossgencompile.cpp" />
        <CppCompile Include="$(VmSourcesDir)\CrossgenRoParseTypeName.cpp"  Condition="'$(FeatureCominterop)' == 'true'"/>
        <CppCompile Include="$(VmSourcesDir)\CrossgenRoResolveNamespace.cpp"  Condition="'$(FeatureCominterop)' == 'true'"/>
    </ItemGroup>

    <Import Project="$(_NTDRIVE)$(_NTROOT)\ndp\clr\src\vm\vm.targets" />

</Project>
