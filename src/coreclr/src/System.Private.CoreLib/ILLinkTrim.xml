<linker>
  <assembly fullname="System.Private.CoreLib">
    <type fullname="Interop/Globalization">
      <!-- Internal API used by tests only. -->
      <method name="GetICUVersion" />
    </type>
    <type fullname="System.GC">
      <!-- Methods are used to register and unregister frozen segments. They are private and experimental. -->
      <method name="_RegisterFrozenSegment" />
      <method name="_UnregisterFrozenSegment" />
    </type>
    <!-- Properties and methods used by a debugger. -->
    <type fullname="System.Threading.Tasks.Task">
      <property name="ParentForDebugger" />
      <property name="StateFlagsForDebugger" />
      <method name="GetDelegateContinuationsForDebugger" />
      <method name="SetNotificationForWaitCompletion" />
    </type>
    <type fullname="System.Threading.ThreadPool">
      <method name="GetQueuedWorkItemsForDebugger" />
      <method name="GetGloballyQueuedWorkItemsForDebugger" />
      <method name="GetLocallyQueuedWorkItemsForDebugger" />
    </type>
    <type fullname="System.Threading.Tasks.TaskScheduler">
      <method name="GetScheduledTasksForDebugger" />
      <method name="GetTaskSchedulersForDebugger" />
    </type>
    <type fullname="System.Runtime.CompilerServices.AsyncMethodBuilderCore">
      <method name="TryGetStateMachineForDebugger" />
    </type>
    <type fullname="System.Runtime.CompilerServices.AsyncIteratorMethodBuilder">
      <property name="ObjectIdForDebugger" />
    </type>
    <type fullname="System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
      <property name="ObjectIdForDebugger" />
    </type>
    <type fullname="System.Runtime.CompilerServices.AsyncTaskMethodBuilder*">
      <property name="ObjectIdForDebugger" />
      <method name="SetNotificationForWaitCompletion" />
    </type>
    <type fullname="System.Threading.Tasks.Task">
      <!-- Methods is used by VS Tasks Window. -->
      <method name="GetActiveTaskFromId" />
    </type>
    <type fullname="System.Collections.Generic.GenericArraySortHelper`1">
      <!-- Instantiated via reflection -->
      <method name=".ctor" />
    </type>
    <type fullname="System.Collections.Generic.GenericArraySortHelper`2">
      <!-- Instantiated via reflection -->
      <method name=".ctor" />
    </type>
    <!-- Accessed via private reflection by tracing controller. -->
    <type fullname="System.Diagnostics.Tracing.EventPipe*" />
    <!-- Accessed via private reflection and by native code. -->
    <type fullname="System.Diagnostics.Tracing.RuntimeEventSource" />
    <type fullname="System.Diagnostics.Tracing.NativeRuntimeEventSource" />
    <!-- Accessed via reflection in TraceLogging-style EventSource events. -->
    <type fullname="*f__AnonymousType*" />
    <type fullname="System.Diagnostics.Tracing.PropertyValue/ReferenceTypeHelper`1">
      <!-- Instantiated via reflection -->
      <method name=".ctor" />
    </type>
    <!-- Accessed via native code. -->
    <type fullname="System.Runtime.InteropServices.ComTypes.IEnumerable" />
    <type fullname="System.Runtime.InteropServices.CustomMarshalers.*" />
    <!-- Accessed by the WinRT Host -->
    <type fullname="Internal.Runtime.InteropServices.WindowsRuntime.ActivationFactoryLoader" />
    <!-- Workaround for https://github.com/mono/linker/issues/378 -->
    <type fullname="System.Runtime.InteropServices.IDispatch" />
    <type fullname="Internal.Runtime.InteropServices.IClassFactory2" />
    <type fullname="Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs" />
    <type fullname="System.Threading.ThreadPoolBoundHandle">
        <!-- Workaround to keep .interfaceimpl even though this type
             is not instantiated on unix:
             https://github.com/mono/linker/pull/649 -->
      <method name=".ctor" />
    </type>
  </assembly>
</linker>
