<?xml version="1.0" encoding="utf-8"?>
<ThinModel>
  <Assembly Status="ApiRoot" Name="mscorlib">
    <Type Name="System.AccessViolationException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member MemberType="Field" Name="_accessType" />
      <Member MemberType="Field" Name="_ip" />
      <Member MemberType="Field" Name="_target" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke" />
    </Type>
    <Type Name="System.Action&lt;T&gt;">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(T,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(T)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3,T4&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3,T4,T5&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3,T4,T5,T6&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,T7,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6,T7)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6,T7,T8)" />
    </Type>
    <Type Name="System.Activator">
      <Member Name="CreateInstance(System.Type)" />
      <Member Name="CreateInstance(System.Type,System.Object[])" />
      <Member Name="CreateInstance&lt;T&gt;" />
    </Type>
    <Type Name="System.AppDomain">
      <Member Name="get_CurrentDomain" />
      <Member Name="get_FriendlyName" />
      <Member Name="get_DomainManager" />
      <Member Name="get_IsFullyTrusted" />
      <Member Name="get_SetupInformation" />
      <Member Name="get_PauseManager" Condition="FEATURE_LEGACYNETCFFAS"/>
      <Member Status="ApiFxInternal" Name="get_MonitoringIsEnabled" />
      <Member Status="ApiFxInternal" Name="set_MonitoringIsEnabled(System.Boolean)" />
      <Member Status="ApiFxInternal" Name="get_MonitoringTotalProcessorTime" />
      <Member Status="ApiFxInternal" Name="get_MonitoringTotalAllocatedMemorySize" />
      <Member Status="ApiFxInternal" Name="get_MonitoringSurvivedMemorySize" />
      <Member Status="ApiFxInternal" Name="get_MonitoringSurvivedProcessMemorySize" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="MonitoringIsEnabled" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="MonitoringTotalProcessorTime" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="MonitoringTotalAllocatedMemorySize" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="MonitoringSurvivedMemorySize" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="MonitoringSurvivedProcessMemorySize" />
      <Member MemberType="Property" Name="IsFullyTrusted" />
      <Member Status="ApiFxInternal" Name="GetData(System.String)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="GetData(System.String)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="GetAssemblies" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="ToString" />
      <Member Name="DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <Member Name="ExecuteAssemblyByName(System.String)" />  <!-- smosier: REVIEW: added for sandboxhelper.dll -->
      <Member Status="ImplRoot" Name="SetupDomainSecurity(System.Security.Policy.Evidence,System.IntPtr,System.Boolean)" />
      <Member Status="ImplRoot" Name="SetupDomainSecurity(System.AppDomainHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr,System.Boolean)" />
      <Member MemberType="Property" Name="CurrentDomain" />
      <Member MemberType="Property" Name="FriendlyName" />
      <Member MemberType="Property" Name="DomainManager" />
      <Member MemberType="Event" Name="AssemblyResolve" />
      <Member Status="ApiFxInternal" Name="OnAssemblyResolveEvent(System.Reflection.RuntimeAssembly,System.String)" />
      <Member Status="ImplRoot" MemberType="Event" Name="AssemblyLoad" />
      <Member Status="ImplRoot" MemberType="Event" Name="ResourceResolve" />
      <Member Status="ImplRoot" MemberType="Event" Name="TypeResolve" />
      <Member Status="ImplRoot" MemberType="Event" Name="DomainUnload" />
      <Member Status="ImplRoot" MemberType="Field" Name="_applicationTrust" />
      <Member Status="ImplRoot" MemberType="Field" Name="_FusionStore" />
      <Member Status="ImplRoot" MemberType="Field" Name="_HasSetPolicy" />
      <Member Status="ImplRoot" MemberType="Field" Name="_LocalStore" />
      <Member Status="ImplRoot" MemberType="Field" Name="_processExit" />
      <Member Status="ImplRoot" MemberType="Field" Name="_SecurityIdentity" />
      <Member Status="ImplRoot" MemberType="Field" Name="_unhandledException" />
      <Member Status="ImplRoot" Name="OnAssemblyLoadEvent(System.Reflection.RuntimeAssembly)" />
      <Member Status="ImplRoot" Name="OnResourceResolveEvent(System.Reflection.RuntimeAssembly,System.String)" />
      <Member Status="ImplRoot" Name="OnTypeResolveEvent(System.Reflection.RuntimeAssembly,System.String)" />
      <Member Status="ImplRoot" Name="PrepareDataForSetup(System.String,System.AppDomainSetup,System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.IntPtr,System.String,System.String[],System.String[])" />
      <Member Status="ImplRoot" Name="Setup(System.Object)" />
      <Member Status="ApiFxInternal" Name="SetData(System.String,System.Object)" />
      <Member Name="IsCompatibilitySwitchSet(System.String)" />
      <Member Status="ImplRoot" Name="SetupDomain(System.Boolean,System.String,System.String,System.String[],System.String[])" />
      <Member MemberType="Event" Name="UnhandledException" />
      <Member Status="ImplRoot" Name="nCreateContext" />
      <Member Name="OnDesignerNamespaceResolveEvent(System.String)" Condition="FEATURE_COMINTEROP" />
      <Member MemberType="Property" Name="BaseDirectory" />
      <Member Name="get_BaseDirectory" />
    </Type>
    <Type Name="System.AppDomainManager">
      <Member Name="#ctor" />
      <Member Name="InitializeNewDomain(System.AppDomainSetup)" />
      <Member Name="CheckSecuritySettings(System.Security.SecurityState)" />
    </Type>
    <Type Name="System.IAppDomainPauseManager" Condition="FEATURE_LEGACYNETCFFAS">
      <Member Name="Pausing" />
      <Member Name="Paused" />
      <Member Name="Resuming" />
      <Member Name="Resumed" />
    </Type>
    <Type Name="System.AppDomainPauseManager" Condition="FEATURE_LEGACYNETCFFAS">
      <Member Name="Pausing" />
      <Member Name="Paused" />
      <Member Name="Resuming" />
      <Member Name="Resumed" />
    </Type>
    <Type Name="System.AppDomainSetup">
      <Member Name="#ctor" />
      <Member Status="ApiFxInternal" Name="get_ApplicationBase" />
      <Member Name="get_ApplicationName" />
      <Member Name="get_TargetFrameworkName" />
      <Member Name="get_LoaderOptimization" />
      <Member Status="ApiFxInternal" Name="set_ApplicationBase(System.String)" />
      <Member Name="set_ApplicationName(System.String)" />
      <Member Name="SetCompatibilitySwitches(System.Collections.Generic.IEnumerable&lt;System.String&gt;)" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="ApplicationBase" />
      <Member MemberType="Property" Name="ApplicationName" />
    </Type>
    <Type Name="System.AppDomainUnloadedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.AppContext">
      <Member Name="get_BaseDirectory" />
      <Member MemberType="Property" Name="BaseDirectory" />
      <Member Name="get_TargetFrameworkName" />
      <Member MemberType="Property" Name="TargetFrameworkName" />
      <Member Name="DefineSwitchDefault(System.String,System.Boolean)" />
      <Member Name="SetSwitch(System.String,System.Boolean)" />
      <Member Name="TryGetSwitch(System.String,System.Boolean@)" />
    </Type>
    <Type Name="System.ApplicationException" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Collections.ArrayList">
      <Member Name="ReadOnly(System.Collections.IList)" />
    </Type>
    <Type Name="System.ArgumentException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.String,System.Exception)" />
      <Member Name="get_ParamName" />
      <Member MemberType="Property" Name="ParamName" />
    </Type>
    <Type Name="System.ArgumentNullException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.ArgumentOutOfRangeException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Object,System.String)" />
      <Member Name="get_ActualValue" />
      <Member MemberType="Property" Name="ActualValue" />
    </Type>
    <Type Name="System.ArithmeticException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Array">
      <Member Name="AsReadOnly&lt;T&gt;(T[])" />
      <Member Name="BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <Member Name="BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <Member Name="BinarySearch(System.Array,System.Object)" />
      <Member Name="BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <Member Name="BinarySearch&lt;T&gt;(T[],System.Int32,System.Int32,T)" />
      <Member Name="BinarySearch&lt;T&gt;(T[],System.Int32,System.Int32,T,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="BinarySearch&lt;T&gt;(T[],T)" />
      <Member Name="BinarySearch&lt;T&gt;(T[],T,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="Clear(System.Array,System.Int32,System.Int32)" />
      <Member Name="Clone" />
      <Member Name="ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <Member Name="Copy(System.Array,System.Array,System.Int32)" />
      <Member Name="Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <Member Status="ApiFxInternal" Name="Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" Condition="FEATURE_COMINTEROP"/>
      <Member Name="CopyTo(System.Array,System.Int32)" />
      <Member Name="CreateInstance(System.Type,System.Int32)" />
      <Member Name="CreateInstance(System.Type,System.Int32[])" />
      <Member Name="CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <Member Name="ForEach&lt;T&gt;(T[],System.Action&lt;T&gt;)" />
      <Member Name="Empty&lt;T&gt;" />
      <Member Name="Exists&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="Find&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="FindAll&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex&lt;T&gt;(T[],System.Int32,System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex&lt;T&gt;(T[],System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="FindLast&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex&lt;T&gt;(T[],System.Int32,System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex&lt;T&gt;(T[],System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member Name="get_IsFixedSize" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_IsSynchronized" />
      <Member Name="get_Length" />
      <Member Name="get_Rank" />
      <Member Name="get_SyncRoot" />
      <Member Name="GetEnumerator" />
      <Member Name="GetLength(System.Int32)" />
      <Member Name="GetLowerBound(System.Int32)" />
      <Member Name="GetUpperBound(System.Int32)" />
      <Member Name="GetValue(System.Int32)" />
      <Member Name="GetValue(System.Int32[])" />
      <Member Name="IndexOf(System.Array,System.Object)" />
      <Member Name="IndexOf(System.Array,System.Object,System.Int32)" />
      <Member Name="IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <Member Name="IndexOf&lt;T&gt;(T[],T)" />
      <Member Name="IndexOf&lt;T&gt;(T[],T,System.Int32)" />
      <Member Name="IndexOf&lt;T&gt;(T[],T,System.Int32,System.Int32)" />
      <Member Name="Initialize" />
      <Member Name="LastIndexOf(System.Array,System.Object)" />
      <Member Name="LastIndexOf(System.Array,System.Object,System.Int32)" />
      <Member Name="LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <Member Name="LastIndexOf&lt;T&gt;(T[],T)" />
      <Member Name="LastIndexOf&lt;T&gt;(T[],T,System.Int32)" />
      <Member Name="LastIndexOf&lt;T&gt;(T[],T,System.Int32,System.Int32)" />
      <Member Name="Resize&lt;T&gt;(T[]@,System.Int32)" />
      <Member Name="Reverse(System.Array)" />
      <Member Name="Reverse(System.Array,System.Int32,System.Int32)" />
      <Member Name="SetValue(System.Object,System.Int32)" />
      <Member Name="SetValue(System.Object,System.Int32[])" />
      <Member Name="Sort(System.Array)" />
      <Member Name="Sort(System.Array,System.Array)" />
      <Member Name="Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <Member Name="Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <Member Name="Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <Member Name="Sort(System.Array,System.Collections.IComparer)" />
      <Member Name="Sort(System.Array,System.Int32,System.Int32)" />
      <Member Name="Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <Member Name="Sort&lt;T&gt;(T[])" />
      <Member Name="Sort&lt;T&gt;(T[],System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="Sort&lt;T&gt;(T[],System.Comparison&lt;T&gt;)" />
      <Member Name="Sort&lt;T&gt;(T[],System.Int32,System.Int32)" />
      <Member Name="Sort&lt;T&gt;(T[],System.Int32,System.Int32,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="Sort&lt;TKey,TValue&gt;(TKey[],TValue[])" />
      <Member Name="Sort&lt;TKey,TValue&gt;(TKey[],TValue[],System.Collections.Generic.IComparer&lt;TKey&gt;)" />
      <Member Name="Sort&lt;TKey,TValue&gt;(TKey[],TValue[],System.Int32,System.Int32)" />
      <Member Name="Sort&lt;TKey,TValue&gt;(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer&lt;TKey&gt;)" />
      <Member Name="TrueForAll&lt;T&gt;(T[],System.Predicate&lt;T&gt;)" />
      <Member MemberType="Property" Name="IsFixedSize" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="IsSynchronized" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Rank" />
      <Member MemberType="Property" Name="SyncRoot" />
      <Member Status="ImplRoot" Name="GetDataPtrOffsetInternal" /> <!-- EE -->
    </Type>
    <Type Name="System.ArraySegment&lt;T&gt;">
        <Member Name="#ctor(T[])" />
        <Member Name="#ctor(T[],System.Int32,System.Int32)" />
        <Member Name="Equals(System.ArraySegment&lt;T&gt;)" />
        <Member Name="Equals(System.Object)" />
        <Member Name="get_Array" />
        <Member Name="get_Count" />
        <Member Name="get_Offset" />
        <Member Name="GetHashCode" />
        <Member Name="op_Equality(System.ArraySegment&lt;T&gt;,System.ArraySegment&lt;T&gt;)" />
        <Member Name="op_Inequality(System.ArraySegment&lt;T&gt;,System.ArraySegment&lt;T&gt;)" />
        <Member MemberType="Property" Name="Array" />
        <Member MemberType="Property" Name="Count" />
        <Member MemberType="Property" Name="Offset" />
    </Type>
    <Type Name="System.ArrayTypeMismatchException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.AsyncCallback">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.IAsyncResult)" />
    </Type>
    <Type Name="System.Attribute">
      <Member Name="#ctor" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <Member Name="GetHashCode" />
      <Member Name="IsDefined(System.Reflection.Assembly,System.Type)" />
      <Member Name="IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Reflection.Module,System.Type)" />
      <Member Name="IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <Member Name="Match(System.Object)" />
    </Type>
    <Type Name="System.AttributeTargets">
      <Member MemberType="Field" Name="All" />
      <Member MemberType="Field" Name="Assembly" />
      <Member MemberType="Field" Name="Class" />
      <Member MemberType="Field" Name="Constructor" />
      <Member MemberType="Field" Name="Delegate" />
      <Member MemberType="Field" Name="Enum" />
      <Member MemberType="Field" Name="Event" />
      <Member MemberType="Field" Name="Field" />
      <Member MemberType="Field" Name="GenericParameter" />
      <Member MemberType="Field" Name="Interface" />
      <Member MemberType="Field" Name="Method" />
      <Member MemberType="Field" Name="Module" />
      <Member MemberType="Field" Name="Parameter" />
      <Member MemberType="Field" Name="Property" />
      <Member MemberType="Field" Name="ReturnValue" />
      <Member MemberType="Field" Name="Struct" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.AttributeUsageAttribute">
      <Member Name="#ctor(System.AttributeTargets)" />
      <Member Name="get_AllowMultiple" />
      <Member Name="get_Inherited" />
      <Member Name="get_ValidOn" />
      <Member Name="set_AllowMultiple(System.Boolean)" />
      <Member Name="set_Inherited(System.Boolean)" />
      <Member MemberType="Property" Name="AllowMultiple" />
      <Member MemberType="Property" Name="Inherited" />
      <Member MemberType="Property" Name="ValidOn" />
    </Type>
    <Type Name="System.BitConverter">
      <Member Name="DoubleToInt64Bits(System.Double)" />
      <Member Name="Int64BitsToDouble(System.Int64)" />
      <Member MemberType="Field" Name="IsLittleEndian" />
      <Member Name="GetBytes(System.Boolean)" />
      <Member Name="GetBytes(System.Char)" />
      <Member Name="GetBytes(System.Double)" />
      <Member Name="GetBytes(System.Single)" />
      <Member Name="GetBytes(System.Int32)" />
      <Member Name="GetBytes(System.Int64)" />
      <Member Name="GetBytes(System.Int16)" />
      <Member Name="GetBytes(System.UInt32)" />
      <Member Name="GetBytes(System.UInt64)" />
      <Member Name="GetBytes(System.UInt16)" />
      <Member Name="ToBoolean(System.Byte[],System.Int32)" />
      <Member Name="ToChar(System.Byte[],System.Int32)" />
      <Member Name="ToDouble(System.Byte[],System.Int32)" />
      <Member Name="ToInt16(System.Byte[],System.Int32)" />
      <Member Name="ToInt32(System.Byte[],System.Int32)" />
      <Member Name="ToInt64(System.Byte[],System.Int32)" />
      <Member Name="ToSingle(System.Byte[],System.Int32)" />
      <Member Name="ToString(System.Byte[])" />
      <Member Name="ToString(System.Byte[],System.Int32)" />
      <Member Name="ToString(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ToUInt16(System.Byte[],System.Int32)" />
      <Member Name="ToUInt32(System.Byte[],System.Int32)" />
      <Member Name="ToUInt64(System.Byte[],System.Int32)" />
    </Type>
    <Type Name="System.BadImageFormatException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Status="ImplRoot" Name="#ctor(System.String,System.String,System.Int32)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.String,System.Exception)" />
      <Member Name="get_FileName" />
      <Member MemberType="Property" Name="FileName" />
    </Type>
    <Type Name="System.Boolean">
      <Member MemberType="Field" Name="FalseString" />
      <Member MemberType="Field" Name="TrueString" />
      <Member Name="CompareTo(System.Boolean)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="TryParse(System.String,System.Boolean@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
    </Type>
    <Type Name="System.Buffer">
      <Member Name="BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <Member Name="ByteLength(System.Array)" />
      <Member Name="GetByte(System.Array,System.Int32)" />
      <Member Name="SetByte(System.Array,System.Int32,System.Byte)" />
      <Member Name="MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)" />
      <Member Name="MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)" />
    </Type>
    <Type Name="System.Byte">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Byte)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Byte)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Byte@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.CannotUnloadAppDomainException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Char">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Char)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="ConvertFromUtf32(System.Int32)" />
      <Member Name="ConvertToUtf32(System.Char,System.Char)" />
      <Member Name="ConvertToUtf32(System.String,System.Int32)" />
      <Member Name="Equals(System.Char)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetNumericValue(System.Char)" />
      <Member Name="GetNumericValue(System.String,System.Int32)" />
      <Member Name="GetTypeCode" />
      <Member Name="GetUnicodeCategory(System.Char)" />
      <Member Name="GetUnicodeCategory(System.String,System.Int32)" />
      <Member Name="IsControl(System.Char)" />
      <Member Name="IsControl(System.String,System.Int32)" />
      <Member Name="IsDigit(System.Char)" />
      <Member Name="IsDigit(System.String,System.Int32)" />
      <Member Name="IsHighSurrogate(System.Char)" />
      <Member Name="IsHighSurrogate(System.String,System.Int32)" />
      <Member Name="IsLetter(System.Char)" />
      <Member Name="IsLetter(System.String,System.Int32)" />
      <Member Name="IsLetterOrDigit(System.Char)" />
      <Member Name="IsLetterOrDigit(System.String,System.Int32)" />
      <Member Name="IsLower(System.Char)" />
      <Member Name="IsLower(System.String,System.Int32)" />
      <Member Name="IsLowSurrogate(System.Char)" />
      <Member Name="IsLowSurrogate(System.String,System.Int32)" />
      <Member Name="IsNumber(System.Char)" />
      <Member Name="IsNumber(System.String,System.Int32)" />
      <Member Name="IsPunctuation(System.Char)" />
      <Member Name="IsPunctuation(System.String,System.Int32)" />
      <Member Name="IsSeparator(System.Char)" />
      <Member Name="IsSeparator(System.String,System.Int32)" />
      <Member Name="IsSurrogate(System.Char)" />
      <Member Name="IsSurrogate(System.String,System.Int32)" />
      <Member Name="IsSurrogatePair(System.Char,System.Char)" />
      <Member Name="IsSurrogatePair(System.String,System.Int32)" />
      <Member Name="IsSymbol(System.Char)" />
      <Member Name="IsSymbol(System.String,System.Int32)" />
      <Member Name="IsUpper(System.Char)" />
      <Member Name="IsUpper(System.String,System.Int32)" />
      <Member Name="IsWhiteSpace(System.Char)" />
      <Member Name="IsWhiteSpace(System.String,System.Int32)" />
      <Member Name="Parse(System.String)" />
      <Member Name="ToLower(System.Char)" />
      <Member Name="ToLower(System.Char,System.Globalization.CultureInfo)" />
      <Member Name="ToLowerInvariant(System.Char)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.Char)" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToUpper(System.Char)" />
      <Member Name="ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <Member Name="ToUpperInvariant(System.Char)" />
      <Member Name="TryParse(System.String,System.Char@)" />
    </Type>
    <Type Name="System.CLSCompliantAttribute">
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="get_IsCompliant" />
      <Member MemberType="Property" Name="IsCompliant" />
    </Type>
    <!--<Type Name="System.Collections.Comparer">
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="DefaultInvariant" />
      <Member Name="#ctor(System.Globalization.CultureInfo)" />
      <Member Name="Compare(System.Object,System.Object)" />
    </Type>-->
    <Type Name="System.Collections.BitArray">
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Boolean)" />
      <Member Name="#ctor(System.Byte[])" />
      <Member Name="#ctor(System.Boolean[])" />
      <Member Name="#ctor(System.Int32[])" />
      <Member Name="#ctor(System.Collections.BitArray)" />
      <Member Name="Get(System.Int32)" />
      <Member Name="Set(System.Int32,System.Boolean)" />
      <Member Name="SetAll(System.Boolean)" />
      <Member Name="And(System.Collections.BitArray)" />
      <Member Name="Or(System.Collections.BitArray)" />
      <Member Name="Xor(System.Collections.BitArray)" />
      <Member Name="Not" />
      <Member Name="set_Item(System.Int32,System.Boolean)" />
      <Member Name="get_Item(System.Int32)" /> 
      <Member MemberType="Property" Name="Item(System.Int32)" />
      <Member Name="get_Length" />
      <Member Name="set_Length(System.Int32)" />
      <Member MemberType="Property" Name="Length" />
      <Member Name="CopyTo(System.Array,System.Int32)" />
      <Member Name="get_Count" />
      <Member MemberType="Property" Name="Count" />
      <Member Name="get_IsReadOnly" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member Name="get_IsSynchronized" />
      <Member MemberType="Property" Name="IsSynchronized" />
      <Member Name="get_SyncRoot" />
      <Member MemberType="Property" Name="SyncRoot" />
      <Member Name="Clone" />
      <Member Name="GetEnumerator" />
    </Type>
    <Type Name="System.Collections.CollectionBase">
      <Member Name="#ctor" />
      <Member Name="get_List" />
      <Member MemberType="Property" Name="List" />
    </Type>
    <Type Name="System.Collections.DictionaryEntry">
      <Member Name="#ctor(System.Object,System.Object)" />
      <Member Name="get_Key" />
      <Member Name="get_Value" />
      <Member Name="set_Key(System.Object)" />
      <Member Name="set_Value(System.Object)" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Collections.Generic.Comparer&lt;T&gt;">
      <Member Name="#ctor" />
      <Member Name="Compare(T,T)" />
      <Member Name="Create(System.Comparison&lt;T&gt;)"  />
      <Member Name="get_Default" />
      <Member MemberType="Property" Name="Default" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;)" />
      <Member Name="#ctor(System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;,System.Collections.Generic.IEqualityComparer&lt;TKey&gt;)" />
      <Member Name="#ctor(System.Collections.Generic.IEqualityComparer&lt;TKey&gt;)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Collections.Generic.IEqualityComparer&lt;TKey&gt;)" />
      <Member Name="Add(TKey,TValue)" />
      <Member Name="Clear" />
      <Member Name="ContainsKey(TKey)" />
      <Member Name="ContainsValue(TValue)" />
      <Member Name="get_Comparer" />
      <Member Name="get_Count" />
      <Member Name="get_Item(TKey)" />
      <Member Name="get_Keys" />
      <Member Name="get_Values" />
      <Member Name="GetEnumerator" />
      <Member Name="Remove(TKey)" />
      <Member Name="set_Item(TKey,TValue)" />
      <Member Name="TryGetValue(TKey,TValue@)" />
      <Member MemberType="Property" Name="Comparer" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="Item(TKey)" />
      <Member MemberType="Property" Name="Keys" />
      <Member MemberType="Property" Name="Values" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+Enumerator">
      <Member Name="Dispose" />
      <Member Name="get_Current" />
      <Member Name="MoveNext" />
      <Member MemberType="Property" Name="Current" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+KeyCollection">
      <Member Name="#ctor(System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;)" />
      <Member Name="CopyTo(TKey[],System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="GetEnumerator" />
      <Member MemberType="Property" Name="Count" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+KeyCollection+Enumerator">
      <Member Name="Dispose" />
      <Member Name="get_Current" />
      <Member Name="MoveNext" />
      <Member MemberType="Property" Name="Current" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection">
      <Member Name="#ctor(System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;)" />
      <Member Name="CopyTo(TValue[],System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="GetEnumerator" />
      <Member MemberType="Property" Name="Count" />
    </Type>
    <Type Name="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator">
      <Member Name="Dispose" />
      <Member Name="get_Current" />
      <Member Name="MoveNext" />
      <Member MemberType="Property" Name="Current" />
    </Type>
    <Type Name="System.Collections.Generic.EqualityComparer&lt;T&gt;">
      <Member Name="#ctor" />
      <Member Name="Equals(T,T)" />
      <Member Name="get_Default" />
      <Member Name="GetHashCode(T)" />
      <Member MemberType="Property" Name="Default" />
    </Type>
    <Type Name="System.Collections.Generic.ICollection&lt;T&gt;">
      <Member Name="Add(T)" />
      <Member Name="Clear" />
      <Member Name="Contains(T)" />
      <Member Name="CopyTo(T[],System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="get_IsReadOnly" />
      <Member Name="Remove(T)" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="IsReadOnly" />
    </Type>
    <Type Name="System.Collections.Generic.IComparer&lt;T&gt;">
      <Member Name="Compare(T,T)" />
    </Type>
    <Type Name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;">
      <Member Name="Add(TKey,TValue)" />
      <Member Name="ContainsKey(TKey)" />
      <Member Name="get_Item(TKey)" />
      <Member Name="get_Keys" />
      <Member Name="get_Values" />
      <Member Name="Remove(TKey)" />
      <Member Name="set_Item(TKey,TValue)" />
      <Member Name="TryGetValue(TKey,TValue@)" />
      <Member MemberType="Property" Name="Item(TKey)" />
      <Member MemberType="Property" Name="Keys" />
      <Member MemberType="Property" Name="Values" />
    </Type>
    <Type Name="System.Collections.Generic.IEnumerable&lt;T&gt;">
      <Member Name="GetEnumerator" />
    </Type>
    <Type Name="System.Collections.Generic.IEnumerator&lt;T&gt;">
      <Member Name="get_Current" />
      <Member MemberType="Property" Name="Current" />
    </Type>
    <Type Name="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
      <Member Name="Equals(T,T)" />
      <Member Name="GetHashCode(T)" />
    </Type>
    <Type Name="System.Collections.Generic.IList&lt;T&gt;">
      <Member Name="get_Item(System.Int32)" />
      <Member Name="IndexOf(T)" />
      <Member Name="Insert(System.Int32,T)" />
      <Member Name="RemoveAt(System.Int32)" />
      <Member Name="set_Item(System.Int32,T)" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
    </Type>
    <Type Name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;">
      <Member Name="ContainsKey(TKey)" />
      <Member Name="get_Item(TKey)" />
      <Member Name="get_Keys" />
      <Member Name="get_Values" />
      <Member Name="TryGetValue(TKey,TValue@)" />
      <Member MemberType="Property" Name="Item(TKey)" />
      <Member MemberType="Property" Name="Keys" />
      <Member MemberType="Property" Name="Values" />
    </Type>
    <Type Name="System.Collections.Generic.IReadOnlyList&lt;T&gt;">
      <Member Name="get_Item(System.Int32)" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
    </Type>
    <Type Name="System.Collections.Generic.IReadOnlyCollection&lt;T&gt;">
      <Member MemberType="Property" Name="Count" />
    </Type>
    <Type Name="System.Collections.Generic.KeyNotFoundException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;">
      <Member Name="#ctor(TKey,TValue)" />
      <Member Name="get_Key" />
      <Member Name="get_Value" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Collections.Generic.List&lt;T&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Collections.Generic.IEnumerable&lt;T&gt;)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="Add(T)" />
      <Member Name="AddRange(System.Collections.Generic.IEnumerable&lt;T&gt;)" />
      <Member Name="AsReadOnly" />
      <Member Name="BinarySearch(System.Int32,System.Int32,T,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="BinarySearch(T)" />
      <Member Name="BinarySearch(T,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="Clear" />
      <Member Name="Contains(T)" />
      <Member Name="CopyTo(System.Int32,T[],System.Int32,System.Int32)" />
      <Member Name="CopyTo(T[])" />
      <Member Name="CopyTo(T[],System.Int32)" />
      <Member Name="Exists(System.Predicate&lt;T&gt;)" />
      <Member Name="Find(System.Predicate&lt;T&gt;)" />
      <Member Name="FindAll(System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex(System.Int32,System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex(System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindIndex(System.Predicate&lt;T&gt;)" />
      <Member Name="FindLast(System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex(System.Int32,System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex(System.Int32,System.Predicate&lt;T&gt;)" />
      <Member Name="FindLastIndex(System.Predicate&lt;T&gt;)" />
      <Member Name="ForEach(System.Action&lt;T&gt;)" />
      <Member Name="get_Capacity" />
      <Member Name="get_Count" />
      <Member Name="get_Item(System.Int32)" />
      <Member Name="GetEnumerator" />
      <Member Name="GetRange(System.Int32,System.Int32)" />
      <Member Name="IndexOf(T)" />
      <Member Name="IndexOf(T,System.Int32)" />
      <Member Name="IndexOf(T,System.Int32,System.Int32)" />
      <Member Name="Insert(System.Int32,T)" />
      <Member Name="InsertRange(System.Int32,System.Collections.Generic.IEnumerable&lt;T&gt;)" />
      <Member Name="LastIndexOf(T)" />
      <Member Name="LastIndexOf(T,System.Int32)" />
      <Member Name="LastIndexOf(T,System.Int32,System.Int32)" />
      <Member Name="Remove(T)" />
      <Member Name="RemoveAll(System.Predicate&lt;T&gt;)" />
      <Member Name="RemoveAt(System.Int32)" />
      <Member Name="RemoveRange(System.Int32,System.Int32)" />
      <Member Name="Reverse" />
      <Member Name="Reverse(System.Int32,System.Int32)" />
      <Member Name="set_Capacity(System.Int32)" />
      <Member Name="set_Item(System.Int32,T)" />
      <Member Name="Sort" />
      <Member Name="Sort(System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="Sort(System.Comparison&lt;T&gt;)" />
      <Member Name="Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer&lt;T&gt;)" />
      <Member Name="ToArray" />
      <Member Name="TrimExcess" />
      <Member MemberType="Property" Name="Capacity" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
      <Member Name="TrueForAll(System.Predicate&lt;T&gt;)" />
    </Type>
    <Type Name="System.Collections.Generic.List&lt;T&gt;+Enumerator">
      <Member Name="Dispose" />
      <Member Name="get_Current" />
      <Member Name="MoveNext" />
      <Member MemberType="Property" Name="Current" />
      <Member Name="System.Collections.IEnumerator.Reset" />
    </Type>
    <Type Status="ImplRoot" Name="System.Collections.Generic.Mscorlib_CollectionDebugView&lt;T&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Collections.Generic.ICollection&lt;T&gt;)" />
      <Member Status="ImplRoot" Name="get_Items" />
      <Member Status="ImplRoot" MemberType="Property" Name="Items" />
    </Type>
    <Type Status="ImplRoot" Name="System.Collections.Generic.Mscorlib_DictionaryKeyCollectionDebugView&lt;TKey,TValue&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Collections.Generic.ICollection&lt;TKey&gt;)" />
      <Member Status="ImplRoot" Name="get_Items" />
      <Member Status="ImplRoot" MemberType="Property" Name="Items" />
    </Type>
    <Type Status="ImplRoot" Name="System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView&lt;TKey,TValue&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Collections.Generic.ICollection&lt;TValue&gt;)" />
      <Member Status="ImplRoot" Name="get_Items" />
      <Member Status="ImplRoot" MemberType="Property" Name="Items" />
    </Type>
    <Type Status="ImplRoot" Name="System.Collections.Generic.Mscorlib_DictionaryDebugView&lt;K,V&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Collections.Generic.IDictionary&lt;K,V&gt;)" />
      <Member Status="ImplRoot" Name="get_Items" />
      <Member Status="ImplRoot" MemberType="Property" Name="Items" />
    </Type>    
    <Type Status="ImplRoot" Name="System.Collections.Generic.Mscorlib_KeyedCollectionDebugView&lt;K,T&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Collections.ObjectModel.KeyedCollection&lt;K,T&gt;)" />
      <Member Status="ImplRoot" Name="get_Items" />
      <Member Status="ImplRoot" MemberType="Property" Name="Items" />
    </Type>   
    <Type Status="ApiFxInternal" Name="System.Collections.HashHelpers">
      <Member Status="ApiFxInternal" Name="ExpandPrime(System.Int32)" />
      <Member Status="ApiFxInternal" Name="GetMinPrime" />
      <Member Status="ApiFxInternal" Name="GetPrime(System.Int32)" />
      <Member Status="ApiFxInternal" Name="IsPrime(System.Int32)" />
    </Type> 
    <Type Name="System.Collections.ICollection">
      <Member Name="CopyTo(System.Array,System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="get_IsSynchronized" />
      <Member Name="get_SyncRoot" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="IsSynchronized" />
      <Member MemberType="Property" Name="SyncRoot" />
    </Type>
    <Type Name="System.Collections.IComparer">
      <Member Name="Compare(System.Object,System.Object)" />
    </Type>
    <Type Name="System.Collections.IDictionary">
      <Member Name="Add(System.Object,System.Object)" />
      <Member Name="Clear" />
      <Member Name="Contains(System.Object)" />
      <Member Name="get_IsFixedSize" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_Item(System.Object)" />
      <Member Name="get_Keys" />
      <Member Name="get_Values" />
      <Member Name="GetEnumerator" />
      <Member Name="Remove(System.Object)" />
      <Member Name="set_Item(System.Object,System.Object)" />
      <Member MemberType="Property" Name="IsFixedSize" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="Item(System.Object)" />
      <Member MemberType="Property" Name="Keys" />
      <Member MemberType="Property" Name="Values" />
    </Type>
    <Type Name="System.Collections.IDictionaryEnumerator">
      <Member Name="get_Entry" />
      <Member Name="get_Key" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Entry" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Collections.IEnumerable">
      <Member Name="GetEnumerator" />
    </Type>
    <Type Name="System.Collections.IEnumerator">
      <Member Name="get_Current" />
      <Member Name="MoveNext" />
      <Member Name="Reset" />
      <Member MemberType="Property" Name="Current" />
    </Type>
    <Type Name="System.Collections.IEqualityComparer">
      <Member Name="Equals(System.Object,System.Object)" />
      <Member Name="GetHashCode(System.Object)" />
    </Type>
    <Type Name="System.Collections.IList">
      <Member Name="Add(System.Object)" />
      <Member Name="Clear" />
      <Member Name="Contains(System.Object)" />
      <Member Name="get_IsFixedSize" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_Item(System.Int32)" />
      <Member Name="IndexOf(System.Object)" />
      <Member Name="Insert(System.Int32,System.Object)" />
      <Member Name="Remove(System.Object)" />
      <Member Name="RemoveAt(System.Int32)" />
      <Member Name="set_Item(System.Int32,System.Object)" />
      <Member MemberType="Property" Name="IsFixedSize" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
    </Type>
    <Type Name="System.Collections.IStructuralComparable">
      <Member Name="CompareTo(System.Object,System.Collections.IComparer)" />
    </Type>
    <Type Name="System.Collections.IStructuralEquatable">
      <Member Name="Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Name="GetHashCode(System.Collections.IEqualityComparer)" />
    </Type>
    <Type Name="System.Collections.ObjectModel.Collection&lt;T&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Collections.Generic.IList&lt;T&gt;)" />
      <Member Name="Add(T)" />
      <Member Name="Clear" />
      <Member Name="ClearItems" />
      <Member Name="Contains(T)" />
      <Member Name="CopyTo(T[],System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="get_Item(System.Int32)" />
      <Member Name="get_Items" />
      <Member Name="GetEnumerator" />
      <Member Name="IndexOf(T)" />
      <Member Name="Insert(System.Int32,T)" />
      <Member Name="InsertItem(System.Int32,T)" />
      <Member Name="Remove(T)" />
      <Member Name="RemoveAt(System.Int32)" />
      <Member Name="RemoveItem(System.Int32)" />
      <Member Name="set_Item(System.Int32,T)" />
      <Member Name="SetItem(System.Int32,T)" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
      <Member MemberType="Property" Name="Items" />
    </Type>
    <Type Name="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Collections.Generic.IEqualityComparer&lt;TKey&gt;)" />
      <Member Name="#ctor(System.Collections.Generic.IEqualityComparer&lt;TKey&gt;,System.Int32)" />
      <Member Name="ChangeItemKey(TItem,TKey)" />
      <Member Name="ClearItems" />
      <Member Name="Contains(TKey)" />
      <Member Name="get_Comparer" />
      <Member Name="get_Dictionary" />
      <Member Name="get_Item(TKey)" />
      <Member Name="GetKeyForItem(TItem)" />
      <Member Name="InsertItem(System.Int32,TItem)" />
      <Member Name="Remove(TKey)" />
      <Member Name="RemoveItem(System.Int32)" />
      <Member Name="SetItem(System.Int32,TItem)" />
      <Member MemberType="Property" Name="Comparer" />
      <Member MemberType="Property" Name="Dictionary" />
      <Member MemberType="Property" Name="Item(TKey)" />
    </Type>
    <Type Name="System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;">
      <Member Name="#ctor(System.Collections.Generic.IList&lt;T&gt;)" />
      <Member Name="Contains(T)" />
      <Member Name="CopyTo(T[],System.Int32)" />
      <Member Name="get_Count" />
      <Member Name="get_Item(System.Int32)" />
      <Member Name="get_Items" />
      <Member Name="GetEnumerator" />
      <Member Name="IndexOf(T)" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
      <Member MemberType="Property" Name="Items" />
    </Type>
    
    <Type Name="System.Collections.ObjectModel.ReadOnlyDictionary&lt;TKey,TValue&gt;">
      <Member Name="#ctor(System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;)" />
      <Member Name="ContainsKey(TKey)" />
      <Member Name="get_Count" />
      <Member Name="get_Item(TKey)" />
      <Member Name="GetEnumerator" />
      <Member Name="TryGetValue(TKey,TValue@)" />
      <Member MemberType="Property" Name="Count" />
      <Member MemberType="Property" Name="Keys" />
      <Member MemberType="Property" Name="Values" />
      <Member MemberType="Property" Name="Dictionary" />
      <Member MemberType="Property" Name="Item(TKey)" />
    </Type>

    <Type Name="System.GCCollectionMode">
        <Member MemberType="Field" Name="Default" />
        <Member MemberType="Field" Name="Optimized" />
        <Member MemberType="Field" Name="Forced" />
    </Type>
    
    <Type Name="System.Comparison&lt;T&gt;">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(T,T,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(T,T)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.CompatibilitySwitches">
      <Member MemberType="Property" Name="IsAppEarlierThanSilverlight4" />
      <Member MemberType="Property" Name="IsAppEarlierThanWindowsPhone8" />
      <Member MemberType="Property" Name="IsAppEarlierThanWindowsPhoneMango" />
      <Member MemberType="Property" Name="IsNetFx40TimeSpanLegacyFormatMode" />
      <Member MemberType="Property" Name="IsNetFx40LegacySecurityPolicy" />
      <Member MemberType="Property" Name="IsNetFx45LegacyManagedDeflateStream" />
      <Member MemberType="Property" Name="IsCompatibilityBehaviorDefined" />
      <Member Name="get_IsAppEarlierThanSilverlight4" />
      <Member Name="get_IsAppEarlierThanWindowsPhone8" />
      <Member Name="get_IsAppEarlierThanWindowsPhoneMango" />
      <Member Name="get_IsNetFx40TimeSpanLegacyFormatMode" />
      <Member Name="get_IsNetFx40LegacySecurityPolicy" />
      <Member Name="get_IsNetFx45LegacyManagedDeflateStream" />
      <Member Name="get_IsCompatibilityBehaviorDefined" />
    </Type>
    <Type Name="System.Runtime.Loader.AssemblyLoadContext" condition="FEATURE_HOST_ASSEMBLY_RESOLVER">
    <Member Name="#ctor" />
    <Member MemberType="Property" Name="Default" />
    <Member Name="GetAssemblyName(System.String)" />
    <Member Name="GetLoadContext(System.Reflection.Assembly)" />
    <Member Name="InitializeDefaultContext(System.Runtime.Loader.AssemblyLoadContext)" />
    <Member Name="LoadFromAssemblyName(System.Reflection.AssemblyName)" />
    <Member Name="Load(System.Reflection.AssemblyName)" />
    <Member Name="LoadFromAssemblyPath(System.String)" />
    <Member Name="LoadFromNativeImagePath(System.String,System.String)" />
    <Member Name="LoadFromStream(System.IO.Stream)" />
    <Member Name="LoadFromStream(System.IO.Stream,System.IO.Stream)" />
    <Member Name="Resolve(System.IntPtr,System.Reflection.AssemblyName)" />
    <Member Name="ResolveUnmanagedDll(System.String,System.IntPtr)" />
    <Member Name="LoadUnmanagedDll(System.String)" />
    <Member Name="LoadUnmanagedDllFromPath(System.String)" />
    <Member Name="get_Default" />
    <Member Name="SetProfileOptimizationRoot(System.String)" />
    <Member Name="StartProfileOptimization(System.String)" />
    </Type>
    <Type Name="System.Reflection.Metadata.AssemblyExtensions">
      <Member Name="TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)"/>
    </Type>
    <Type Status="ApiFxInternal" Name="System.Runtime.Versioning.BinaryCompatibility">
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Phone_V7_1" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Phone_V8_0" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V4_5" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V4_5_1" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V4_5_2" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V4_5_3" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V4_5_4" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Desktop_V5_0" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Silverlight_V4" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Silverlight_V5" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="TargetsAtLeast_Silverlight_V6" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Phone_V7_1" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Phone_V8_0" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V4_5" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V4_5_1" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V4_5_2" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V4_5_3" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V4_5_4" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Desktop_V5_0" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Silverlight_V4" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Silverlight_V5" />
      <Member Status="ApiFxInternal" Name="get_TargetsAtLeast_Silverlight_V6" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Runtime.Versioning.CompatibilitySwitch">
      <Member Status="ApiFxInternal" Name="GetValue(System.String)" />
      <Member Status="ApiFxInternal" Name="IsEnabled(System.String)" />
      <Member Status="ApiFxInternal" Name="GetValueInternal(System.String)" />
      <Member Status="ApiFxInternal" Name="IsEnabledInternal(System.String)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Runtime.Versioning.TargetFrameworkId">
      <Member Status="ApiFxInternal" MemberType="Field" Name="NotYetChecked" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="Unrecognized" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="Unspecified" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="NetFramework" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="Portable" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="NetCore" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="Silverlight" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="Phone" />
      <Member Status="ApiFxInternal" MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Console" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="get_Error" />
      <Member Name="get_In" />
      <Member Name="get_Out" />
      <Member Name="Read" />
      <Member Name="ReadLine" />
      <Member Name="SetError(System.IO.TextWriter)" />
      <Member Name="SetIn(System.IO.TextReader)" />
      <Member Name="SetOut(System.IO.TextWriter)" />
      <Member Name="Write(System.Char)" />
      <Member Name="Write(System.Char[])" />
      <Member Name="Write(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Write(System.Int32)" />
      <Member Name="Write(System.Object)" />
      <Member Name="Write(System.String)" />
      <Member Name="Write(System.String,System.Object)" />
      <Member Name="Write(System.String,System.Object,System.Object)" />
      <Member Name="Write(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="Write(System.String,System.Object[])" />
      <Member Name="WriteLine" />
      <Member Name="WriteLine(System.Char)" />
      <Member Name="WriteLine(System.Char[])" />
      <Member Name="WriteLine(System.Int32)" />
      <Member Name="WriteLine(System.Object)" />
      <Member Name="WriteLine(System.String)" />
      <Member Name="WriteLine(System.String,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object[])" />
      <Member MemberType="Property" Name="Error" />
      <Member MemberType="Property" Name="In" />
      <Member MemberType="Property" Name="Out" />
    </Type>
    <Type Name="System.ContextMarshalException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.ContextStaticAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Name="System.Convert">
      <Member MemberType="Field" Name="DBNull" />
      <Member Name="ChangeType(System.Object,System.Type)"  />
      <Member Name="ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <Member Name="ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <Member Name="FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <Member Name="FromBase64String(System.String)" />
      <Member Name="GetTypeCode(System.Object)" />
      <Member Name="IsDBNull(System.Object)" />
      <Member Name="ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="ToBase64String(System.Byte[])" />
      <Member Name="ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ToBoolean(System.Boolean)" />
      <Member Name="ToBoolean(System.Byte)" />
      <Member Name="ToBoolean(System.Char)" />
      <Member Name="ToBoolean(System.Decimal)" />
      <Member Name="ToBoolean(System.Double)" />
      <Member Name="ToBoolean(System.Int16)" />
      <Member Name="ToBoolean(System.Int32)" />
      <Member Name="ToBoolean(System.Int64)" />
      <Member Name="ToBoolean(System.Object)" />
      <Member Name="ToBoolean(System.Object,System.IFormatProvider)" />
      <Member Name="ToBoolean(System.SByte)" />
      <Member Name="ToBoolean(System.Single)" />
      <Member Name="ToBoolean(System.String)" />
      <Member Name="ToBoolean(System.String,System.IFormatProvider)" />
      <Member Name="ToBoolean(System.UInt16)" />
      <Member Name="ToBoolean(System.UInt32)" />
      <Member Name="ToBoolean(System.UInt64)" />
      <Member Name="ToByte(System.Boolean)" />
      <Member Name="ToByte(System.Byte)" />
      <Member Name="ToByte(System.Char)" />
      <Member Name="ToByte(System.Decimal)" />
      <Member Name="ToByte(System.Double)" />
      <Member Name="ToByte(System.Int16)" />
      <Member Name="ToByte(System.Int32)" />
      <Member Name="ToByte(System.Int64)" />
      <Member Name="ToByte(System.Object)" />
      <Member Name="ToByte(System.Object,System.IFormatProvider)" />
      <Member Name="ToByte(System.SByte)" />
      <Member Name="ToByte(System.Single)" />
      <Member Name="ToByte(System.String)" />
      <Member Name="ToByte(System.String,System.IFormatProvider)" />
      <Member Name="ToByte(System.String,System.Int32)" />
      <Member Name="ToByte(System.UInt16)" />
      <Member Name="ToByte(System.UInt32)" />
      <Member Name="ToByte(System.UInt64)" />
      <Member Name="ToChar(System.Byte)" />
      <Member Name="ToChar(System.Char)" />
      <Member Name="ToChar(System.Decimal)" />
      <Member Name="ToChar(System.Double)" />
      <Member Name="ToChar(System.Int16)" />
      <Member Name="ToChar(System.Int32)" />
      <Member Name="ToChar(System.Int64)" />
      <Member Name="ToChar(System.Object)" />
      <Member Name="ToChar(System.Object,System.IFormatProvider)" />
      <Member Name="ToChar(System.SByte)" />
      <Member Name="ToChar(System.Single)" />
      <Member Name="ToChar(System.String)" />
      <Member Name="ToChar(System.String,System.IFormatProvider)" />
      <Member Name="ToChar(System.UInt16)" />
      <Member Name="ToChar(System.UInt32)" />
      <Member Name="ToChar(System.UInt64)" />
      <Member Name="ToDateTime(System.Object)" />
      <Member Name="ToDateTime(System.Object,System.IFormatProvider)" />
      <Member Name="ToDateTime(System.String)" />
      <Member Name="ToDateTime(System.String,System.IFormatProvider)" />
      <Member Name="ToDecimal(System.Boolean)" />
      <Member Name="ToDecimal(System.Byte)" />
      <Member Name="ToDecimal(System.Char)" />
      <Member Name="ToDecimal(System.DateTime)" />
      <Member Name="ToDecimal(System.Decimal)" />
      <Member Name="ToDecimal(System.Double)" />
      <Member Name="ToDecimal(System.Int16)" />
      <Member Name="ToDecimal(System.Int32)" />
      <Member Name="ToDecimal(System.Int64)" />
      <Member Name="ToDecimal(System.Object)" />
      <Member Name="ToDecimal(System.Object,System.IFormatProvider)" />
      <Member Name="ToDecimal(System.SByte)" />
      <Member Name="ToDecimal(System.Single)" />
      <Member Name="ToDecimal(System.String)" />
      <Member Name="ToDecimal(System.String,System.IFormatProvider)" />
      <Member Name="ToDecimal(System.UInt16)" />
      <Member Name="ToDecimal(System.UInt32)" />
      <Member Name="ToDecimal(System.UInt64)" />
      <Member Name="ToDouble(System.Boolean)" />
      <Member Name="ToDouble(System.Byte)" />
      <Member Name="ToDouble(System.Char)" />
      <Member Name="ToDouble(System.Decimal)" />
      <Member Name="ToDouble(System.Double)" />
      <Member Name="ToDouble(System.Int16)" />
      <Member Name="ToDouble(System.Int32)" />
      <Member Name="ToDouble(System.Int64)" />
      <Member Name="ToDouble(System.Object)" />
      <Member Name="ToDouble(System.Object,System.IFormatProvider)" />
      <Member Name="ToDouble(System.SByte)" />
      <Member Name="ToDouble(System.Single)" />
      <Member Name="ToDouble(System.String)" />
      <Member Name="ToDouble(System.String,System.IFormatProvider)" />
      <Member Name="ToDouble(System.UInt16)" />
      <Member Name="ToDouble(System.UInt32)" />
      <Member Name="ToDouble(System.UInt64)" />
      <Member Name="ToInt16(System.Boolean)" />
      <Member Name="ToInt16(System.Byte)" />
      <Member Name="ToInt16(System.Char)" />
      <Member Name="ToInt16(System.Decimal)" />
      <Member Name="ToInt16(System.Double)" />
      <Member Name="ToInt16(System.Int16)" />
      <Member Name="ToInt16(System.Int32)" />
      <Member Name="ToInt16(System.Int64)" />
      <Member Name="ToInt16(System.Object)" />
      <Member Name="ToInt16(System.Object,System.IFormatProvider)" />
      <Member Name="ToInt16(System.SByte)" />
      <Member Name="ToInt16(System.Single)" />
      <Member Name="ToInt16(System.String)" />
      <Member Name="ToInt16(System.String,System.IFormatProvider)" />
      <Member Name="ToInt16(System.String,System.Int32)" />
      <Member Name="ToInt16(System.UInt16)" />
      <Member Name="ToInt16(System.UInt32)" />
      <Member Name="ToInt16(System.UInt64)" />
      <Member Name="ToInt32(System.Boolean)" />
      <Member Name="ToInt32(System.Byte)" />
      <Member Name="ToInt32(System.Char)" />
      <Member Name="ToInt32(System.Decimal)" />
      <Member Name="ToInt32(System.Double)" />
      <Member Name="ToInt32(System.Int16)" />
      <Member Name="ToInt32(System.Int32)" />
      <Member Name="ToInt32(System.Int64)" />
      <Member Name="ToInt32(System.Object)" />
      <Member Name="ToInt32(System.Object,System.IFormatProvider)" />
      <Member Name="ToInt32(System.SByte)" />
      <Member Name="ToInt32(System.Single)" />
      <Member Name="ToInt32(System.String)" />
      <Member Name="ToInt32(System.String,System.IFormatProvider)" />
      <Member Name="ToInt32(System.String,System.Int32)" />
      <Member Name="ToInt32(System.UInt16)" />
      <Member Name="ToInt32(System.UInt32)" />
      <Member Name="ToInt32(System.UInt64)" />
      <Member Name="ToInt64(System.Boolean)" />
      <Member Name="ToInt64(System.Byte)" />
      <Member Name="ToInt64(System.Char)" />
      <Member Name="ToInt64(System.Decimal)" />
      <Member Name="ToInt64(System.Double)" />
      <Member Name="ToInt64(System.Int16)" />
      <Member Name="ToInt64(System.Int32)" />
      <Member Name="ToInt64(System.Int64)" />
      <Member Name="ToInt64(System.Object)" />
      <Member Name="ToInt64(System.Object,System.IFormatProvider)" />
      <Member Name="ToInt64(System.SByte)" />
      <Member Name="ToInt64(System.Single)" />
      <Member Name="ToInt64(System.String)" />
      <Member Name="ToInt64(System.String,System.IFormatProvider)" />
      <Member Name="ToInt64(System.String,System.Int32)" />
      <Member Name="ToInt64(System.UInt16)" />
      <Member Name="ToInt64(System.UInt32)" />
      <Member Name="ToInt64(System.UInt64)" />
      <Member Name="ToSByte(System.Boolean)" />
      <Member Name="ToSByte(System.Byte)" />
      <Member Name="ToSByte(System.Char)" />
      <Member Name="ToSByte(System.Decimal)" />
      <Member Name="ToSByte(System.Double)" />
      <Member Name="ToSByte(System.Int16)" />
      <Member Name="ToSByte(System.Int32)" />
      <Member Name="ToSByte(System.Int64)" />
      <Member Name="ToSByte(System.Object)" />
      <Member Name="ToSByte(System.Object,System.IFormatProvider)" />
      <Member Name="ToSByte(System.SByte)" />
      <Member Name="ToSByte(System.Single)" />
      <Member Name="ToSByte(System.String)" />
      <Member Name="ToSByte(System.String,System.IFormatProvider)" />
      <Member Name="ToSByte(System.String,System.Int32)" />
      <Member Name="ToSByte(System.UInt16)" />
      <Member Name="ToSByte(System.UInt32)" />
      <Member Name="ToSByte(System.UInt64)" />
      <Member Name="ToSingle(System.Boolean)" />
      <Member Name="ToSingle(System.Byte)" />
      <Member Name="ToSingle(System.Char)" />
      <Member Name="ToSingle(System.Decimal)" />
      <Member Name="ToSingle(System.Double)" />
      <Member Name="ToSingle(System.Int16)" />
      <Member Name="ToSingle(System.Int32)" />
      <Member Name="ToSingle(System.Int64)" />
      <Member Name="ToSingle(System.Object)" />
      <Member Name="ToSingle(System.Object,System.IFormatProvider)" />
      <Member Name="ToSingle(System.SByte)" />
      <Member Name="ToSingle(System.Single)" />
      <Member Name="ToSingle(System.String)" />
      <Member Name="ToSingle(System.String,System.IFormatProvider)" />
      <Member Name="ToSingle(System.UInt16)" />
      <Member Name="ToSingle(System.UInt32)" />
      <Member Name="ToSingle(System.UInt64)" />
      <Member Name="ToString(System.Boolean)" />
      <Member Name="ToString(System.Boolean,System.IFormatProvider)" />
      <Member Name="ToString(System.Byte)" />
      <Member Name="ToString(System.Byte,System.IFormatProvider)" />
      <Member Name="ToString(System.Byte,System.Int32)" />
      <Member Name="ToString(System.Char)" />
      <Member Name="ToString(System.Char,System.IFormatProvider)" />
      <Member Name="ToString(System.DateTime)" />
      <Member Name="ToString(System.DateTime,System.IFormatProvider)" />
      <Member Name="ToString(System.Decimal)" />
      <Member Name="ToString(System.Decimal,System.IFormatProvider)" />
      <Member Name="ToString(System.Double)" />
      <Member Name="ToString(System.Double,System.IFormatProvider)" />
      <Member Name="ToString(System.Int16)" />
      <Member Name="ToString(System.Int16,System.IFormatProvider)" />
      <Member Name="ToString(System.Int16,System.Int32)" />
      <Member Name="ToString(System.Int32)" />
      <Member Name="ToString(System.Int32,System.IFormatProvider)" />
      <Member Name="ToString(System.Int32,System.Int32)" />
      <Member Name="ToString(System.Int64)" />
      <Member Name="ToString(System.Int64,System.IFormatProvider)" />
      <Member Name="ToString(System.Int64,System.Int32)" />
      <Member Name="ToString(System.Object)" />
      <Member Name="ToString(System.Object,System.IFormatProvider)" />
      <Member Name="ToString(System.SByte)" />
      <Member Name="ToString(System.SByte,System.IFormatProvider)" />
      <Member Name="ToString(System.Single)" />
      <Member Name="ToString(System.Single,System.IFormatProvider)" />
      <Member Name="ToString(System.UInt16)" />
      <Member Name="ToString(System.UInt16,System.IFormatProvider)" />
      <Member Name="ToString(System.UInt32)" />
      <Member Name="ToString(System.UInt32,System.IFormatProvider)" />
      <Member Name="ToString(System.UInt64)" />
      <Member Name="ToString(System.UInt64,System.IFormatProvider)" />
      <Member Name="ToUInt16(System.Boolean)" />
      <Member Name="ToUInt16(System.Byte)" />
      <Member Name="ToUInt16(System.Char)" />
      <Member Name="ToUInt16(System.Decimal)" />
      <Member Name="ToUInt16(System.Double)" />
      <Member Name="ToUInt16(System.Int16)" />
      <Member Name="ToUInt16(System.Int32)" />
      <Member Name="ToUInt16(System.Int64)" />
      <Member Name="ToUInt16(System.Object)" />
      <Member Name="ToUInt16(System.Object,System.IFormatProvider)" />
      <Member Name="ToUInt16(System.SByte)" />
      <Member Name="ToUInt16(System.Single)" />
      <Member Name="ToUInt16(System.String)" />
      <Member Name="ToUInt16(System.String,System.IFormatProvider)" />
      <Member Name="ToUInt16(System.String,System.Int32)" />
      <Member Name="ToUInt16(System.UInt16)" />
      <Member Name="ToUInt16(System.UInt32)" />
      <Member Name="ToUInt16(System.UInt64)" />
      <Member Name="ToUInt32(System.Boolean)" />
      <Member Name="ToUInt32(System.Byte)" />
      <Member Name="ToUInt32(System.Char)" />
      <Member Name="ToUInt32(System.Decimal)" />
      <Member Name="ToUInt32(System.Double)" />
      <Member Name="ToUInt32(System.Int16)" />
      <Member Name="ToUInt32(System.Int32)" />
      <Member Name="ToUInt32(System.Int64)" />
      <Member Name="ToUInt32(System.Object)" />
      <Member Name="ToUInt32(System.Object,System.IFormatProvider)" />
      <Member Name="ToUInt32(System.SByte)" />
      <Member Name="ToUInt32(System.Single)" />
      <Member Name="ToUInt32(System.String)" />
      <Member Name="ToUInt32(System.String,System.IFormatProvider)" />
      <Member Name="ToUInt32(System.String,System.Int32)" />
      <Member Name="ToUInt32(System.UInt16)" />
      <Member Name="ToUInt32(System.UInt32)" />
      <Member Name="ToUInt32(System.UInt64)" />
      <Member Name="ToUInt64(System.Boolean)" />
      <Member Name="ToUInt64(System.Byte)" />
      <Member Name="ToUInt64(System.Char)" />
      <Member Name="ToUInt64(System.Decimal)" />
      <Member Name="ToUInt64(System.Double)" />
      <Member Name="ToUInt64(System.Int16)" />
      <Member Name="ToUInt64(System.Int32)" />
      <Member Name="ToUInt64(System.Int64)" />
      <Member Name="ToUInt64(System.Object)" />
      <Member Name="ToUInt64(System.Object,System.IFormatProvider)" />
      <Member Name="ToUInt64(System.SByte)" />
      <Member Name="ToUInt64(System.Single)" />
      <Member Name="ToUInt64(System.String)" />
      <Member Name="ToUInt64(System.String,System.IFormatProvider)" />
      <Member Name="ToUInt64(System.String,System.Int32)" />
      <Member Name="ToUInt64(System.UInt16)" />
      <Member Name="ToUInt64(System.UInt32)" />
      <Member Name="ToUInt64(System.UInt64)" />
    </Type>
    <Type Name="System.Converter&lt;TInput,TOutput&gt;">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(TInput,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(TInput)" />
    </Type>
    <Type Name="System.DataMisalignedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.DateTime">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <Member Name="#ctor(System.Int64)" />
      <Member Name="#ctor(System.Int64,System.DateTimeKind)" />
      <Member Name="Add(System.TimeSpan)" />
      <Member Name="AddDays(System.Double)" />
      <Member Name="AddHours(System.Double)" />
      <Member Name="AddMilliseconds(System.Double)" />
      <Member Name="AddMinutes(System.Double)" />
      <Member Name="AddMonths(System.Int32)" />
      <Member Name="AddSeconds(System.Double)" />
      <Member Name="AddTicks(System.Int64)" />
      <Member Name="AddYears(System.Int32)" />
      <Member Name="Compare(System.DateTime,System.DateTime)" />
      <Member Name="CompareTo(System.DateTime)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="DaysInMonth(System.Int32,System.Int32)" />
      <Member Name="Equals(System.DateTime)" />
      <Member Name="Equals(System.DateTime,System.DateTime)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="FromBinary(System.Int64)" />
      <Member Name="FromFileTime(System.Int64)" />
      <Member Name="FromFileTimeUtc(System.Int64)" />
      <Member Name="FromOADate(System.Double)" />
      <Member Name="get_Date" />
      <Member Name="get_Day" />
      <Member Name="get_DayOfWeek" />
      <Member Name="get_DayOfYear" />
      <Member Name="get_Hour" />
      <Member Name="get_Kind" />
      <Member Name="get_Millisecond" />
      <Member Name="get_Minute" />
      <Member Name="get_Month" />
      <Member Name="get_Now" />
      <Member Name="get_Second" />
      <Member Name="get_Ticks" />
      <Member Name="get_TimeOfDay" />
      <Member Name="get_Today" />
      <Member Name="get_UtcNow" />
      <Member Name="get_Year" />
      <Member Name="GetDateTimeFormats" />
      <Member Name="GetDateTimeFormats(System.Char)" />
      <Member Name="GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <Member Name="GetDateTimeFormats(System.IFormatProvider)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="IsDaylightSavingTime" />
      <Member Name="IsLeapYear(System.Int32)" />
      <Member Name="op_Addition(System.DateTime,System.TimeSpan)" />
      <Member Name="op_Equality(System.DateTime,System.DateTime)" />
      <Member Name="op_GreaterThan(System.DateTime,System.DateTime)" />
      <Member Name="op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <Member Name="op_Inequality(System.DateTime,System.DateTime)" />
      <Member Name="op_LessThan(System.DateTime,System.DateTime)" />
      <Member Name="op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <Member Name="op_Subtraction(System.DateTime,System.DateTime)" />
      <Member Name="op_Subtraction(System.DateTime,System.TimeSpan)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="TryParse(System.String,System.DateTime@)" />
      <Member Name="TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <Member Name="TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <Member Name="TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <Member Name="SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <Member Name="Subtract(System.DateTime)" />
      <Member Name="Subtract(System.TimeSpan)" />
      <Member Name="ToBinary" />
      <Member Name="ToFileTime" />
      <Member Name="ToFileTimeUtc" />
      <Member Name="ToLocalTime" />
      <Member Name="ToLongDateString" />
      <Member Name="ToLongTimeString" />
      <Member Name="ToOADate" />
      <Member Name="ToShortDateString" />
      <Member Name="ToShortTimeString" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
      <Member Name="ToUniversalTime" />
      <Member MemberType="Property" Name="Date" />
      <Member MemberType="Property" Name="Day" />
      <Member MemberType="Property" Name="DayOfWeek" />
      <Member MemberType="Property" Name="DayOfYear" />
      <Member MemberType="Property" Name="Hour" />
      <Member MemberType="Property" Name="Kind" />
      <Member MemberType="Property" Name="Millisecond" />
      <Member MemberType="Property" Name="Minute" />
      <Member MemberType="Property" Name="Month" />
      <Member MemberType="Property" Name="Now" />
      <Member MemberType="Property" Name="Second" />
      <Member MemberType="Property" Name="Ticks" />
      <Member MemberType="Property" Name="TimeOfDay" />
      <Member MemberType="Property" Name="Today" />
      <Member MemberType="Property" Name="UtcNow" />
      <Member MemberType="Property" Name="Year" />
    </Type>
    <Type Name="System.DateTimeOffset">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="#ctor(System.DateTime)" />
      <Member Name="#ctor(System.DateTime,System.TimeSpan)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <Member Name="#ctor(System.Int64,System.TimeSpan)" />
      <Member Name="Add(System.TimeSpan)" />
      <Member Name="AddDays(System.Double)" />
      <Member Name="AddHours(System.Double)" />
      <Member Name="AddMilliseconds(System.Double)" />
      <Member Name="AddMinutes(System.Double)" />
      <Member Name="AddMonths(System.Int32)" />
      <Member Name="AddSeconds(System.Double)" />
      <Member Name="AddTicks(System.Int64)" />
      <Member Name="AddYears(System.Int32)" />
      <Member Name="Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="CompareTo(System.DateTimeOffset)" />
      <Member Name="Equals(System.DateTimeOffset)" />
      <Member Name="Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="EqualsExact(System.DateTimeOffset)" />
      <Member Name="FromFileTime(System.Int64)" />
      <Member Name="FromUnixTimeSeconds(System.Int64)" />
      <Member Name="FromUnixTimeMilliseconds(System.Int64)" />
      <Member Name="get_DateTime" />
      <Member Name="get_UtcDateTime" />
      <Member Name="get_LocalDateTime" />
      <Member Name="get_UtcTicks" />
      <Member Name="get_Offset" />
      <Member Name="get_Date" />
      <Member Name="get_Day" />
      <Member Name="get_DayOfWeek" />
      <Member Name="get_DayOfYear" />
      <Member Name="get_Hour" />
      <Member Name="get_Millisecond" />
      <Member Name="get_Minute" />
      <Member Name="get_Month" />
      <Member Name="get_Now" />
      <Member Name="get_Second" />
      <Member Name="get_Ticks" />
      <Member Name="get_TimeOfDay" />
      <Member Name="get_UtcNow" />
      <Member Name="get_Year" />
      <Member Name="GetHashCode" />
      <Member Name="op_Addition(System.DateTimeOffset,System.TimeSpan)" />
      <Member Name="op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <Member Name="op_Subtraction(System.DateTimeOffset,System.TimeSpan)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <Member Name="TryParse(System.String,System.DateTimeOffset@)" />
      <Member Name="TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <Member Name="TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <Member Name="TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <Member Name="Subtract(System.DateTimeOffset)" />
      <Member Name="Subtract(System.TimeSpan)" />
      <Member Name="ToFileTime" />
      <Member Name="ToUnixTimeSeconds" />
      <Member Name="ToUnixTimeMilliseconds" />
      <Member Name="ToLocalTime" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
      <Member Name="ToUniversalTime" />
      <Member Name="ToOffset(System.TimeSpan)" />
      <Member Name="op_Implicit(System.DateTime)" ReturnType="System.DateTimeOffset" />
      <Member MemberType="Property" Name="DateTime" />
      <Member MemberType="Property" Name="UtcDateTime" />
      <Member MemberType="Property" Name="LocalDateTime" />
      <Member MemberType="Property" Name="UtcTicks" />
      <Member MemberType="Property" Name="Offset" />
      <Member MemberType="Property" Name="Date" />
      <Member MemberType="Property" Name="Day" />
      <Member MemberType="Property" Name="DayOfWeek" />
      <Member MemberType="Property" Name="DayOfYear" />
      <Member MemberType="Property" Name="Hour" />
      <Member MemberType="Property" Name="Millisecond" />
      <Member MemberType="Property" Name="Minute" />
      <Member MemberType="Property" Name="Month" />
      <Member MemberType="Property" Name="Now" />
      <Member MemberType="Property" Name="Second" />
      <Member MemberType="Property" Name="Ticks" />
      <Member MemberType="Property" Name="TimeOfDay" />
      <Member MemberType="Property" Name="UtcNow" />
      <Member MemberType="Property" Name="Year" />
    </Type>
    <Type Name="System.DateTimeKind">
      <Member MemberType="Field" Name="Local" />
      <Member MemberType="Field" Name="Unspecified" />
      <Member MemberType="Field" Name="Utc" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.DayOfWeek">
      <Member MemberType="Field" Name="Friday" />
      <Member MemberType="Field" Name="Monday" />
      <Member MemberType="Field" Name="Saturday" />
      <Member MemberType="Field" Name="Sunday" />
      <Member MemberType="Field" Name="Thursday" />
      <Member MemberType="Field" Name="Tuesday" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Wednesday" />
    </Type>
    <Type Name="System.DBNull" >
        <Member MemberType="Field" Name="Value" />
        <Member Name="GetTypeCode" />
        <Member Name="ToString" />
        <Member Name="ToString(System.IFormatProvider)" />
    </Type>
    <Type Name="System.Diagnostics.StackFrame">
      <Member MemberType="Field" Name="OFFSET_UNKNOWN" />
      <Member Name="#ctor" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Int32)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String,System.Int32)" />
      <Member Name="#ctor(System.String,System.Int32,System.Int32)" />
      <Member Name="GetFileColumnNumber" />
      <Member Name="GetFileLineNumber" />
      <Member Status="ApiFxInternal" Name="GetFileName" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetFileName" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetILOffset" />
      <Member Name="GetMethod" />
      <Member Name="GetNativeOffset" />
      <Member Name="ToString" />
    </Type>
    <Type Name="System.Diagnostics.StackTrace">
      <Member MemberType="Field" Name="METHODS_TO_SKIP" />
      <Member Name="#ctor" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Boolean)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.Diagnostics.StackFrame)" />
      <Member Name="#ctor(System.Exception)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Exception,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Exception,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Exception,System.Int32)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Exception,System.Int32)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Exception,System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Exception,System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Int32)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Int32)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Threading.Thread,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />      
      <Member Name="#ctor(System.Threading.Thread,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />      
      <Member Name="get_FrameCount" />
      <Member Name="GetFrame(System.Int32)" />
      <Member Name="GetFrames" />
      <Member Name="GetManagedStackTraceStringHelper(System.Boolean)"/>
      <Member Name="ToString" />
      <Member MemberType="Property" Name="FrameCount" />
    </Type>
    <Type Name="System.Decimal">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinusOne" />
      <Member MemberType="Field" Name="MinValue" />
      <Member MemberType="Field" Name="One" />
      <Member MemberType="Field" Name="Zero" />
      <Member Name="#ctor(System.Double)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <Member Name="#ctor(System.Int32[])" />
      <Member Name="#ctor(System.Int64)" />
      <Member Name="#ctor(System.Single)" />
      <Member Name="#ctor(System.UInt32)" />
      <Member Name="#ctor(System.UInt64)" />
      <Member Status="ImplRoot" Name="#ctor(System.Currency)" /> <!-- EE - il stubs -->
      <Member Name="Add(System.Decimal,System.Decimal)" />
      <Member Name="Ceiling(System.Decimal)" />
      <Member Name="Compare(System.Decimal,System.Decimal)" />
      <Member Name="CompareTo(System.Decimal)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Divide(System.Decimal,System.Decimal)" />
      <Member Name="Equals(System.Decimal)" />
      <Member Name="Equals(System.Decimal,System.Decimal)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Floor(System.Decimal)" />
      <Member Name="GetBits(System.Decimal)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Multiply(System.Decimal,System.Decimal)" />
      <Member Name="Negate(System.Decimal)" />
      <Member Name="op_Addition(System.Decimal,System.Decimal)" />
      <Member Name="op_Decrement(System.Decimal)" />
      <Member Name="op_Division(System.Decimal,System.Decimal)" />
      <Member Name="op_Equality(System.Decimal,System.Decimal)" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Byte" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Char" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Double" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Int16" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Int32" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Int64" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.SByte" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.Single" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.UInt16" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.UInt32" />
      <Member Name="op_Explicit(System.Decimal)" ReturnType="System.UInt64" />
      <Member Name="op_Explicit(System.Double)" ReturnType="System.Decimal" />
      <Member Name="op_Explicit(System.Single)" ReturnType="System.Decimal" />
      <Member Name="op_GreaterThan(System.Decimal,System.Decimal)" />
      <Member Name="op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <Member Name="op_Implicit(System.Byte)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.Char)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.Int16)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.Int32)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.Int64)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.SByte)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.UInt16)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.UInt32)" ReturnType="System.Decimal" />
      <Member Name="op_Implicit(System.UInt64)" ReturnType="System.Decimal" />
      <Member Name="op_Increment(System.Decimal)" />
      <Member Name="op_Inequality(System.Decimal,System.Decimal)" />
      <Member Name="op_LessThan(System.Decimal,System.Decimal)" />
      <Member Name="op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <Member Name="op_Modulus(System.Decimal,System.Decimal)" />
      <Member Name="op_Multiply(System.Decimal,System.Decimal)" />
      <Member Name="op_Subtraction(System.Decimal,System.Decimal)" />
      <Member Name="op_UnaryNegation(System.Decimal)" />
      <Member Name="op_UnaryPlus(System.Decimal)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Decimal@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <Member Name="Remainder(System.Decimal,System.Decimal)" />
      <Member Name="Round(System.Decimal,System.Int32)" />
      <Member Name="Subtract(System.Decimal,System.Decimal)" />
      <Member Name="ToByte(System.Decimal)" />
      <Member Name="ToDouble(System.Decimal)" />
      <Member Name="ToInt16(System.Decimal)" />
      <Member Name="ToInt32(System.Decimal)" />
      <Member Name="ToInt64(System.Decimal)" />
      <Member Name="ToSByte(System.Decimal)" />
      <Member Name="ToSingle(System.Decimal)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
      <Member Name="ToUInt16(System.Decimal)" />
      <Member Name="ToUInt32(System.Decimal)" />
      <Member Name="ToUInt64(System.Decimal)" />
      <Member Name="Truncate(System.Decimal)" />
    </Type>
    <Type Name="System.Delegate">
      <Member Name="Combine(System.Delegate,System.Delegate)" />
      <Member Name="Combine(System.Delegate[])" />
      <Member Name="CombineImpl(System.Delegate)" />
      <Member Name="CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
      <Member Name="CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
      <Member Name="CreateDelegate(System.Type,System.Object,System.String)" />
      <Member Name="CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
      <Member Name="CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
      <Member Name="CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
      <Member Name="CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
      <Member Name="CreateDelegate(System.Type,System.Type,System.String)" />
      <Member Name="CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
      <Member Name="CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
      <Member Name="DynamicInvoke(System.Object[])" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetInvocationList" />
      <Member Name="op_Equality(System.Delegate,System.Delegate)" />
      <Member Name="op_Inequality(System.Delegate,System.Delegate)" />
      <Member Name="Remove(System.Delegate,System.Delegate)" />
      <Member Name="RemoveAll(System.Delegate,System.Delegate)" />
      <Member Name="RemoveImpl(System.Delegate)" />
      <Member Name="#ctor(System.Object,System.String)" />
      <Member Name="#ctor(System.Type,System.String)" />
      <Member Name="get_Target" />
      <Member Name="get_Method" />
      <Member MemberType="Property" Name="Target" />
      <Member MemberType="Property" Name="Method" />
      <Member Status="ImplRoot" Name="DelegateConstruct(System.Object,System.IntPtr)" /> <!-- EE -->
    </Type>
    <Type Name="System.Diagnostics.ConditionalAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_ConditionString" />
      <Member MemberType="Property" Name="ConditionString" />
    </Type>    
    <Type Name="System.Diagnostics.DebuggableAttribute">
      <Member Name="#ctor(System.Boolean,System.Boolean)" />
      <Member Name="#ctor(System.Diagnostics.DebuggableAttribute+DebuggingModes)" />
    </Type>
    <Type Name="System.Diagnostics.DebuggableAttribute+DebuggingModes">
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="DisableOptimizations" />
      <Member MemberType="Field" Name="EnableEditAndContinue" />
      <Member MemberType="Field" Name="IgnoreSymbolStoreSequencePoints" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Diagnostics.Debugger">
      <Member Name="#ctor" />
      <Member Name="Break" />
      <Member Name="get_IsAttached" />
      <Member Name="Launch" />
      <Member Name="IsLogging" />
      <Member Name="Log(System.Int32,System.String,System.String)" />
      <Member MemberType="Property" Name="IsAttached" />
      <Member Status="ImplRoot" Name="BreakCanThrow" /> <!-- EE -->
    </Type>
    <Type Name="System.Diagnostics.DebuggerBrowsableAttribute">
      <Member Name="#ctor(System.Diagnostics.DebuggerBrowsableState)" />
      <Member Name="get_State" />
      <Member MemberType="Property" Name="State" />
    </Type>
    <Type Name="System.Diagnostics.DebuggerHiddenAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Diagnostics.DebuggerNonUserCodeAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Diagnostics.DebuggerStepThroughAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Diagnostics.DebuggerDisplayAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Name" />
      <Member Name="get_Target" />
      <Member Name="get_TargetTypeName" />
      <Member Name="get_Type" />
      <Member Name="get_Value" />
      <Member Name="set_Name(System.String)" />
      <Member Name="set_Target(System.Type)" />
      <Member Name="set_TargetTypeName(System.String)" />
      <Member Name="set_Type(System.String)" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Target" />
      <Member MemberType="Property" Name="TargetTypeName" />
      <Member MemberType="Property" Name="Type" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Diagnostics.DebuggerTypeProxyAttribute">
      <Member Name="#ctor(System.Type)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="get_ProxyTypeName" />
      <Member Name="get_Target" />
      <Member Name="get_TargetTypeName" />
      <Member Name="set_Target(System.Type)" />
      <Member Name="set_TargetTypeName(System.String)" />
      <Member MemberType="Property" Name="ProxyTypeName" />
      <Member MemberType="Property" Name="Target" />
      <Member MemberType="Property" Name="TargetTypeName" />
    </Type>
    <Type Name="System.DivideByZeroException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.DllNotFoundException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Double">
      <Member MemberType="Field" Name="Epsilon" />
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member MemberType="Field" Name="NaN" />
      <Member MemberType="Field" Name="NegativeInfinity" />
      <Member MemberType="Field" Name="PositiveInfinity" />
      <Member Name="CompareTo(System.Double)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Double)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="IsInfinity(System.Double)" />
      <Member Name="IsNaN(System.Double)" />
      <Member Name="IsNegativeInfinity(System.Double)" />
      <Member Name="IsPositiveInfinity(System.Double)" />
      <Member Name="op_Equality(System.Double,System.Double)" />
      <Member Name="op_GreaterThan(System.Double,System.Double)" />
      <Member Name="op_GreaterThanOrEqual(System.Double,System.Double)" />
      <Member Name="op_Inequality(System.Double,System.Double)" />
      <Member Name="op_LessThan(System.Double,System.Double)" />
      <Member Name="op_LessThanOrEqual(System.Double,System.Double)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Double@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.IO.DriveInfo" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_AvailableFreeSpace" />
      <Member Name="get_DriveFormat" />
      <Member Name="get_DriveType" />
      <Member Name="get_IsReady" />
      <Member Name="get_Name" />
      <Member Name="get_RootDirectory" />
      <Member Name="get_TotalFreeSpace" />
      <Member Name="get_TotalSize" />
      <Member Name="get_VolumeLabel" />
      <Member Name="set_VolumeLabel(System.String)" />
      <Member Name="GetDrives" />
    </Type>
    <Type Name="System.IO.DriveType" Condition="FEATURE_LEGACYSURFACE">
    </Type>
    <Type Name="System.EntryPointNotFoundException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Enum">
      <Member Name="#ctor" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Format(System.Type,System.Object,System.String)" />
      <Member Name="GetHashCode" />
      <Member Name="GetName(System.Type,System.Object)" />
      <Member Name="GetNames(System.Type)" />      
      <Member Name="GetTypeCode" />
      <Member Name="GetValues(System.Type)" />
      <Member Name="GetUnderlyingType(System.Type)" />
      <Member Name="HasFlag(System.Enum)" />
      <Member Name="IsDefined(System.Type,System.Object)" />
      <Member Name="Parse(System.Type,System.String)" />
      <Member Name="Parse(System.Type,System.String,System.Boolean)" />
      <Member Name="ToObject(System.Type,System.Object)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.String)" />
      <Member Name="TryParse&lt;TEnum&gt;(System.String,TEnum@)" />
      <Member Name="TryParse&lt;TEnum&gt;(System.String,System.Boolean,TEnum@)" />
    </Type>
    <Type Name="System.Environment">
      <Member Name="get_CurrentManagedThreadId"  />
      <Member Name="get_MachineName"  />
      <Member Name="get_OSVersion" />
      <Member Name="get_ProcessorCount" />      
      <Member Name="get_StackTrace" />
      <Member Name="GetFolderPath(System.Environment+SpecialFolder)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="GetEnvironmentVariable(System.String)" />
      <Member Name="GetEnvironmentVariables" />
      <Member Name="GetCommandLineArgs" />
      <Member Name="SetEnvironmentVariable(System.String,System.String)" />
      <Member Name="ExpandEnvironmentVariables(System.String)" />
      <Member MemberType="Property" Name="OSVersion" />
      <Member MemberType="Property" Name="ProcessorCount" />
      <Member Name="get_CurrentDirectory" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="set_CurrentDirectory(System.String)" Condition="FEATURE_LEGACYSURFACE" /> <!-- FEATURE_LEGACYNETCF -->
      <Member MemberType="Property" Name="CurrentManagedThreadId"  />
      <Member MemberType="Property" Name="CurrentDirectory" Condition="FEATURE_LEGACYSURFACE" />
      <Member MemberType="Property" Name="HasShutdownStarted" />
      <Member MemberType="Property" Name="NewLine" />
      <Member MemberType="Property" Name="StackTrace" />
      <Member MemberType="Property" Name="TickCount" />
      <Member MemberType="Property" Name="Version" />
      <Member MemberType="Property" Name="ExitCode" />
      <Member Status="ImplRoot" Name="GetResourceStringLocal(System.String)" />
      <Member Status="ImplRoot" Name="SetCommandLineArgs(System.String[])" />
      <Member Name="FailFast(System.String)"  />
      <Member Name="FailFast(System.String,System.Exception)"  />
      <Member Name="Exit(System.Int32)" />
      <Member Status="ApiFxInternal" Name="UnsafeGetFolderPath(System.Environment+SpecialFolder)"  Condition="FEATURE_LEGACYSURFACE" />
    </Type>
    <Type Name="System.Environment+SpecialFolder" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="ApplicationData" />
      <Member MemberType="Field" Name="Favorites" />
      <Member MemberType="Field" Name="Personal" />
      <Member MemberType="Field" Name="Programs" />
      <Member MemberType="Field" Name="StartMenu" />
      <Member MemberType="Field" Name="Startup" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.EventArgs">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.EventHandler">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object,System.EventArgs)" />
    </Type>
    <Type Name="System.EventHandler&lt;TEventArgs&gt;">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,TEventArgs,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object,TEventArgs)" />
    </Type>
    <Type Name="System.Exception">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="get_Data" />
      <Member Name="get_HelpLink" />
      <Member Name="get_HResult" />
      <Member Name="get_InnerException" />
      <Member Name="get_Message" />
      <Member Name="get_StackTrace" />
      <Member Name="get_Source" />
      <Member Name="GetBaseException" />
      <Member Name="set_HelpLink(System.String)" />
      <Member Name="set_HResult(System.Int32)" />
      <Member Name="set_Source(System.String)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Data" />
      <Member MemberType="Property" Name="HelpLink" />
      <Member MemberType="Property" Name="HResult" />
      <Member MemberType="Property" Name="InnerException" />
      <Member MemberType="Property" Name="Message" />
      <Member MemberType="Property" Name="Source" />
      <Member MemberType="Property" Name="StackTrace" />
      <Member Status="ImplRoot" Name="InternalToString" />
      <Member Status="ImplRoot" Name="InternalPreserveStackTrace" />
      <Member Status="ImplRoot" MemberType="Field" Name="_remoteStackIndex" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_exceptionMethod" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_exceptionMethodString" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_source" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_xptrs" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_xcode" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="_HResult" /> <!-- EE -->
      <Member Status="ImplRoot" Name="AddExceptionDataForRestrictedErrorInfo(System.String,System.String,System.String,System.Object,System.Boolean)" Condition="FEATURE_COMINTEROP" />
      <Member Status="ImplRoot" Name="TryGetRestrictedLanguageErrorObject(System.Object@)" Condition="FEATURE_COMINTEROP" />

    </Type>
    <Type Name="System.ExecutionEngineException" />
    <Type Name="System.FieldAccessException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.FlagsAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.FormatException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.FormattableString">
      <Member Name="#ctor" />
      <Member Name="get_Format" />
      <Member MemberType="Property" Name="Format" />
      <Member Name="GetArguments" />
      <Member Name="get_ArgumentCount" />
      <Member MemberType="Property" Name="ArgumentCount" />
      <Member Name="GetArgument(System.Int32)" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="Invariant(System.FormattableString)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,T4,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,T7,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6,T7)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <Member Status="ApiRoot" Name="#ctor(System.Object,System.IntPtr)" />
      <Member Status="ApiRoot" Name="BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,System.AsyncCallback,System.Object)" />
      <Member Status="ApiRoot" Name="EndInvoke(System.IAsyncResult)" />
      <Member Status="ApiRoot" Name="Invoke(T1,T2,T3,T4,T5,T6,T7,T8)" />
    </Type>
    <Type Name="System.GC">
      <Member Name="AddMemoryPressure(System.Int64)" />
      <Member Name="Collect" />
      <Member Name="Collect(System.Int32)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="Collect(System.Int32,System.GCCollectionMode)" />
      <Member Name="Collect(System.Int32,System.GCCollectionMode,System.Boolean)" />
      <Member Name="Collect(System.Int32,System.GCCollectionMode,System.Boolean,System.Boolean)" />
      <Member Name="CollectionCount(System.Int32)" />
      <Member Name="GetGeneration(System.Object)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="get_MaxGeneration" />
      <Member Name="GetTotalMemory(System.Boolean)" />
      <Member Name="KeepAlive(System.Object)" />
      <Member Name="RemoveMemoryPressure(System.Int64)" />
      <Member Name="ReRegisterForFinalize(System.Object)" />
      <Member Name="SuppressFinalize(System.Object)" />
      <Member Name="WaitForPendingFinalizers" />
      <Member MemberType="Property" Name="MaxGeneration" />
    </Type>
    <Type Name="System.Globalization.Calendar">
      <Member MemberType="Field" Name="CurrentEra" />
      <Member Name="#ctor" />
      <Member Name="AddDays(System.DateTime,System.Int32)" />
      <Member Name="AddHours(System.DateTime,System.Int32)" />
      <Member Name="AddMilliseconds(System.DateTime,System.Double)" />
      <Member Name="AddMinutes(System.DateTime,System.Int32)" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddSeconds(System.DateTime,System.Int32)" />
      <Member Name="AddWeeks(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetHour(System.DateTime)" />
      <Member Name="GetMilliseconds(System.DateTime)" />
      <Member Name="GetMinute(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetSecond(System.DateTime)" />
      <Member Name="GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN_ARABIC" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN_ME_FRENCH" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN_US" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN_XLIT_ENGLISH" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="CAL_GREGORIAN_XLIT_FRENCH" Condition="not FEATURE_COREFX_GLOBALIZATION" />
    </Type>
    <Type Name="System.Globalization.CalendarWeekRule">
      <Member MemberType="Field" Name="FirstDay" />
      <Member MemberType="Field" Name="FirstFourDayWeek" />
      <Member MemberType="Field" Name="FirstFullWeek" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Globalization.CharUnicodeInfo">
      <Member Name="GetNumericValue(System.Char)" />
      <Member Name="GetNumericValue(System.String,System.Int32)" />
      <Member Name="GetUnicodeCategory(System.Char)" />
      <Member Name="GetUnicodeCategory(System.String,System.Int32)" />
    </Type>
    <Type Name="System.Globalization.ChineseLunisolarCalendar">
      <Member MemberType="Field" Name="ChineseEra" />
      <Member Name="#ctor" />
      <Member Name="get_DaysInYearBeforeMinSupportedYear" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="GetEra(System.DateTime)" />
      <Member MemberType="Property" Name="DaysInYearBeforeMinSupportedYear" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
    </Type>
    <Type Name="System.Globalization.CompareInfo">
      <Member Name="Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <Member Name="Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="Compare(System.String,System.Int32,System.String,System.Int32)" />
      <Member Name="Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="Compare(System.String,System.String)" />
      <Member Name="Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Name" />
      <Member Name="GetCompareInfo(System.String)" />
      <Member Name="GetHashCode" />
      <Member Name="GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.Char)" />
      <Member Name="IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <Member Name="IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.String)" />
      <Member Name="IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <Member Name="IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="IsPrefix(System.String,System.String)" />
      <Member Name="IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <Member Name="IsSuffix(System.String,System.String)" />
      <Member Name="IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.Char)" />
      <Member Name="LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <Member Name="LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.String)" />
      <Member Name="LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <Member Name="LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Name" />
    </Type>
    <Type Name="System.Globalization.CompareOptions">
      <Member MemberType="Field" Name="IgnoreCase" />
      <Member MemberType="Field" Name="IgnoreKanaType" />
      <Member MemberType="Field" Name="IgnoreNonSpace" />
      <Member MemberType="Field" Name="IgnoreSymbols" />
      <Member MemberType="Field" Name="IgnoreWidth" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Ordinal" />
      <Member MemberType="Field" Name="OrdinalIgnoreCase" />
      <Member MemberType="Field" Name="StringSort" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Globalization.CultureInfo">
      <Member Name="#ctor(System.String)" />
      <Member Name="Clone" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Calendar" />
      <Member Name="get_CompareInfo" />
      <Member Name="get_CurrentCulture" />
      <Member Name="get_CurrentUICulture" />
      <Member Name="get_DefaultThreadCurrentCulture" />
      <Member Name="get_DefaultThreadCurrentUICulture" />
      <Member Name="get_DateTimeFormat" />
      <Member Name="get_DisplayName" />
      <Member Name="get_EnglishName" />
      <Member Name="get_InvariantCulture" />
      <Member Name="get_IsNeutralCulture" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_Name" />
      <Member Name="get_NativeName" />
      <Member Name="get_NumberFormat" />
      <Member Name="get_OptionalCalendars" />
      <Member Name="get_Parent" />
      <Member Name="get_TextInfo" />
      <Member Name="get_TwoLetterISOLanguageName" />
      <Member Name="GetFormat(System.Type)" />
      <Member Name="GetHashCode" />
      <Member Name="ReadOnly(System.Globalization.CultureInfo)" />
      <Member Name="set_CurrentCulture(System.Globalization.CultureInfo)" />
      <Member Name="set_CurrentUICulture(System.Globalization.CultureInfo)" />
      <Member Name="set_DateTimeFormat(System.Globalization.DateTimeFormatInfo)" />
      <Member Name="set_DefaultThreadCurrentCulture(System.Globalization.CultureInfo)" />
      <Member Name="set_DefaultThreadCurrentUICulture(System.Globalization.CultureInfo)" />
      <Member Name="set_NumberFormat(System.Globalization.NumberFormatInfo)" />
      <Member Name="ToString" />
      <Member Status="ImplRoot" Name="get_SortName" />
      <Member MemberType="Property" Name="Calendar" />
      <Member MemberType="Property" Name="CompareInfo" />
      <Member MemberType="Property" Name="CurrentCulture" />
      <Member MemberType="Property" Name="CurrentUICulture" />
      <Member MemberType="Property" Name="DateTimeFormat" />
      <Member MemberType="Property" Name="DefaultThreadCurrentCulture" />
      <Member MemberType="Property" Name="DefaultThreadCurrentUICulture"/>
      <Member MemberType="Property" Name="DisplayName" />
      <Member MemberType="Property" Name="EnglishName" />
      <Member MemberType="Property" Name="InvariantCulture" />
      <Member MemberType="Property" Name="IsNeutralCulture" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="NativeName" />
      <Member MemberType="Property" Name="NumberFormat" />
      <Member MemberType="Property" Name="OptionalCalendars" />
      <Member MemberType="Property" Name="Parent" />
      <Member MemberType="Property" Name="TextInfo" />
      <Member MemberType="Property" Name="TwoLetterISOLanguageName" />
      <Member Status="ImplRoot" MemberType="Property" Name="SortName" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_parent" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_useUserOverride" Condition="not FEATURE_COREFX_GLOBALIZATION" />
    </Type>
    <Type Name="System.Globalization.CultureNotFoundException">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.String,System.String)" />
      <Member Name="#ctor(System.String,System.String,System.Exception)" />
      <Member Name="get_InvalidCultureName" />
      <Member Name="get_Message" />
      <Member MemberType="Property" Name="InvalidCultureName" />
      <Member MemberType="Property" Name="Message" />
    </Type>
    <Type Name="System.Globalization.DateTimeFormatInfo">
      <Member Name="#ctor" />
      <Member Name="Clone" />
      <Member Name="get_AbbreviatedDayNames" />
      <Member Name="get_AbbreviatedMonthGenitiveNames" />
      <Member Name="get_AbbreviatedMonthNames" />
      <Member Name="get_AMDesignator" />
      <Member Name="get_Calendar" />
      <Member Name="get_CalendarWeekRule" />
      <Member Name="get_CurrentInfo" />
      <Member Name="get_DayNames" />
      <Member Name="get_FirstDayOfWeek" />
      <Member Name="get_FullDateTimePattern" />
      <Member Name="get_InvariantInfo" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_LongDatePattern" />
      <Member Name="get_LongTimePattern" />
      <Member Name="get_MonthDayPattern" />
      <Member Name="get_MonthGenitiveNames" />
      <Member Name="get_MonthNames" />
      <Member Name="get_PMDesignator" />
      <Member Name="get_RFC1123Pattern" />
      <Member Name="get_ShortDatePattern" />
      <Member Name="get_ShortestDayNames" />
      <Member Name="get_ShortTimePattern" />
      <Member Name="get_SortableDateTimePattern" />
      <Member Name="get_UniversalSortableDateTimePattern" />
      <Member Name="get_YearMonthPattern" />
      <Member Name="GetAbbreviatedDayName(System.DayOfWeek)" />
      <Member Name="GetAbbreviatedEraName(System.Int32)" />
      <Member Name="GetAbbreviatedMonthName(System.Int32)" />
      <Member Name="GetDayName(System.DayOfWeek)" />
      <Member Name="GetEra(System.String)" />
      <Member Name="GetEraName(System.Int32)" />
      <Member Name="GetFormat(System.Type)" />
      <Member Name="GetInstance(System.IFormatProvider)" />
      <Member Name="GetMonthName(System.Int32)" />
      <Member Name="ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <Member Name="set_AbbreviatedDayNames(System.String[])" />
      <Member Name="set_AbbreviatedMonthGenitiveNames(System.String[])" />
      <Member Name="set_AbbreviatedMonthNames(System.String[])" />
      <Member Name="set_AMDesignator(System.String)" />
      <Member Name="set_Calendar(System.Globalization.Calendar)" />
      <Member Name="set_CalendarWeekRule(System.Globalization.CalendarWeekRule)" />
      <Member Name="set_DayNames(System.String[])" />
      <Member Name="set_FirstDayOfWeek(System.DayOfWeek)" />
      <Member Name="set_FullDateTimePattern(System.String)" />
      <Member Name="set_LongDatePattern(System.String)" />
      <Member Name="set_LongTimePattern(System.String)" />
      <Member Name="set_MonthDayPattern(System.String)" />
      <Member Name="set_MonthGenitiveNames(System.String[])" />
      <Member Name="set_MonthNames(System.String[])" />
      <Member Name="set_PMDesignator(System.String)" />
      <Member Name="set_ShortDatePattern(System.String)" />
      <Member Name="set_ShortestDayNames(System.String[])" />
      <Member Name="set_ShortTimePattern(System.String)" />
      <Member Name="set_YearMonthPattern(System.String)" />
      <Member MemberType="Property" Name="AbbreviatedDayNames" />
      <Member MemberType="Property" Name="AbbreviatedMonthGenitiveNames" />
      <Member MemberType="Property" Name="AbbreviatedMonthNames" />
      <Member MemberType="Property" Name="AMDesignator" />
      <Member MemberType="Property" Name="Calendar" />
      <Member MemberType="Property" Name="CalendarWeekRule" />
      <Member MemberType="Property" Name="CurrentInfo" />
      <Member MemberType="Property" Name="DayNames" />
      <Member MemberType="Property" Name="FirstDayOfWeek" />
      <Member MemberType="Property" Name="FullDateTimePattern" />
      <Member MemberType="Property" Name="InvariantInfo" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="LongDatePattern" />
      <Member MemberType="Property" Name="LongTimePattern" />
      <Member MemberType="Property" Name="MonthDayPattern" />
      <Member MemberType="Property" Name="MonthGenitiveNames" />
      <Member MemberType="Property" Name="MonthNames" />
      <Member MemberType="Property" Name="PMDesignator" />
      <Member MemberType="Property" Name="RFC1123Pattern" />
      <Member MemberType="Property" Name="ShortDatePattern" />
      <Member MemberType="Property" Name="ShortestDayNames" />
      <Member MemberType="Property" Name="ShortTimePattern" />
      <Member MemberType="Property" Name="SortableDateTimePattern" />
      <Member MemberType="Property" Name="UniversalSortableDateTimePattern" />
      <Member MemberType="Property" Name="YearMonthPattern" />
    </Type>

    <Type Name="System.Globalization.DateTimeStyles">
      <Member MemberType="Field" Name="AdjustToUniversal" />
      <Member MemberType="Field" Name="AllowInnerWhite" />
      <Member MemberType="Field" Name="AllowLeadingWhite" />
      <Member MemberType="Field" Name="AllowTrailingWhite" />
      <Member MemberType="Field" Name="AllowWhiteSpaces" />
      <Member MemberType="Field" Name="AssumeLocal" />
      <Member MemberType="Field" Name="AssumeUniversal" />
      <Member MemberType="Field" Name="NoCurrentDateDefault" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="RoundtripKind" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    
    <Type Name="System.Globalization.PersianCalendar">
      <Member MemberType="Field" Name="PersianEra" />
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
        
    <Type Name="System.Globalization.TimeSpanStyles">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="AssumeNegative" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Globalization.EastAsianLunisolarCalendar">
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetCelestialStem(System.Int32)" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetSexagenaryYear(System.DateTime)" />
      <Member Name="GetTerrestrialBranch(System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION"/>
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.GregorianCalendar">
      <Member MemberType="Field" Name="ADEra" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Globalization.GregorianCalendarTypes)" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_CalendarType" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_CalendarType(System.Globalization.GregorianCalendarTypes)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="CalendarType" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.GregorianCalendarTypes">
      <Member MemberType="Field" Name="Arabic" />
      <Member MemberType="Field" Name="Localized" />
      <Member MemberType="Field" Name="MiddleEastFrench" />
      <Member MemberType="Field" Name="TransliteratedEnglish" />
      <Member MemberType="Field" Name="TransliteratedFrench" />
      <Member MemberType="Field" Name="USEnglish" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Globalization.JapaneseCalendar">
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.JapaneseLunisolarCalendar">
      <Member MemberType="Field" Name="JapaneseEra" />
      <Member Name="#ctor" />
      <Member Name="get_DaysInYearBeforeMinSupportedYear" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="GetEra(System.DateTime)" />
      <Member MemberType="Property" Name="DaysInYearBeforeMinSupportedYear" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
    </Type>
    <Type Name="System.Globalization.JulianCalendar">
      <Member MemberType="Field" Name="JulianEra" />
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="AlgorithmType" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.HebrewCalendar">
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.HijriCalendar">
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_HijriAdjustment" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_HijriAdjustment(System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="HijriAdjustment" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>    
    <Type Name="System.Globalization.KoreanCalendar">
      <Member MemberType="Field" Name="KoreanEra" />
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.KoreanLunisolarCalendar">
      <Member MemberType="Field" Name="GregorianEra" />
      <Member Name="#ctor" />
      <Member Name="get_DaysInYearBeforeMinSupportedYear" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="GetEra(System.DateTime)" />
      <Member MemberType="Property" Name="DaysInYearBeforeMinSupportedYear" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
    </Type>
    <Type Name="System.Globalization.UmAlQuraCalendar">
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetLeapMonth(System.Int32,System.Int32)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>    
    <Type Name="System.Globalization.NumberFormatInfo">
      <Member Name="#ctor" />
      <Member Name="Clone" />
      <Member Name="get_CurrencyDecimalDigits" />
      <Member Name="get_CurrencyDecimalSeparator" />
      <Member Name="get_CurrencyGroupSeparator" />
      <Member Name="get_CurrencyGroupSizes" />
      <Member Name="get_CurrencyNegativePattern" />
      <Member Name="get_CurrencyPositivePattern" />
      <Member Name="get_CurrencySymbol" />
      <Member Name="get_CurrentInfo" />
      <Member Name="get_InvariantInfo" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_NaNSymbol" />
      <Member Name="get_NegativeInfinitySymbol" />
      <Member Name="get_NegativeSign" />
      <Member Name="get_NumberDecimalDigits" />
      <Member Name="get_NumberDecimalSeparator" />
      <Member Name="get_NumberGroupSeparator" />
      <Member Name="get_NumberGroupSizes" />
      <Member Name="get_NumberNegativePattern" />
      <Member Name="get_PercentDecimalDigits" />
      <Member Name="get_PercentDecimalSeparator" />
      <Member Name="get_PercentGroupSeparator" />
      <Member Name="get_PercentGroupSizes" />
      <Member Name="get_PercentNegativePattern" />
      <Member Name="get_PercentPositivePattern" />
      <Member Name="get_PercentSymbol" />
      <Member Name="get_PerMilleSymbol" />
      <Member Name="get_PositiveInfinitySymbol" />
      <Member Name="get_PositiveSign" />
      <Member Name="GetFormat(System.Type)" />
      <Member Name="GetInstance(System.IFormatProvider)" />
      <Member Name="ReadOnly(System.Globalization.NumberFormatInfo)" />
      <Member Name="set_CurrencyDecimalDigits(System.Int32)" />
      <Member Name="set_CurrencyDecimalSeparator(System.String)" />
      <Member Name="set_CurrencyGroupSeparator(System.String)" />
      <Member Name="set_CurrencyGroupSizes(System.Int32[])" />
      <Member Name="set_CurrencyNegativePattern(System.Int32)" />
      <Member Name="set_CurrencyPositivePattern(System.Int32)" />
      <Member Name="set_CurrencySymbol(System.String)" />
      <Member Name="set_NaNSymbol(System.String)" />
      <Member Name="set_NegativeInfinitySymbol(System.String)" />
      <Member Name="set_NegativeSign(System.String)" />
      <Member Name="set_NumberDecimalDigits(System.Int32)" />
      <Member Name="set_NumberDecimalSeparator(System.String)" />
      <Member Name="set_NumberGroupSeparator(System.String)" />
      <Member Name="set_NumberGroupSizes(System.Int32[])" />
      <Member Name="set_NumberNegativePattern(System.Int32)" />
      <Member Name="set_PercentDecimalDigits(System.Int32)" />
      <Member Name="set_PercentDecimalSeparator(System.String)" />
      <Member Name="set_PercentGroupSeparator(System.String)" />
      <Member Name="set_PercentGroupSizes(System.Int32[])" />
      <Member Name="set_PercentNegativePattern(System.Int32)" />
      <Member Name="set_PercentPositivePattern(System.Int32)" />
      <Member Name="set_PercentSymbol(System.String)" />
      <Member Name="set_PerMilleSymbol(System.String)" />
      <Member Name="set_PositiveInfinitySymbol(System.String)" />
      <Member Name="set_PositiveSign(System.String)" />
      <Member MemberType="Property" Name="CurrencyDecimalDigits" />
      <Member MemberType="Property" Name="CurrencyDecimalSeparator" />
      <Member MemberType="Property" Name="CurrencyGroupSeparator" />
      <Member MemberType="Property" Name="CurrencyGroupSizes" />
      <Member MemberType="Property" Name="CurrencyNegativePattern" />
      <Member MemberType="Property" Name="CurrencyPositivePattern" />
      <Member MemberType="Property" Name="CurrencySymbol" />
      <Member MemberType="Property" Name="CurrentInfo" />
      <Member MemberType="Property" Name="InvariantInfo" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="NaNSymbol" />
      <Member MemberType="Property" Name="NegativeInfinitySymbol" />
      <Member MemberType="Property" Name="NegativeSign" />
      <Member MemberType="Property" Name="NumberDecimalDigits" />
      <Member MemberType="Property" Name="NumberDecimalSeparator" />
      <Member MemberType="Property" Name="NumberGroupSeparator" />
      <Member MemberType="Property" Name="NumberGroupSizes" />
      <Member MemberType="Property" Name="NumberNegativePattern" />
      <Member MemberType="Property" Name="PercentDecimalDigits" />
      <Member MemberType="Property" Name="PercentDecimalSeparator" />
      <Member MemberType="Property" Name="PercentGroupSeparator" />
      <Member MemberType="Property" Name="PercentGroupSizes" />
      <Member MemberType="Property" Name="PercentNegativePattern" />
      <Member MemberType="Property" Name="PercentPositivePattern" />
      <Member MemberType="Property" Name="PercentSymbol" />
      <Member MemberType="Property" Name="PerMilleSymbol" />
      <Member MemberType="Property" Name="PositiveInfinitySymbol" />
      <Member MemberType="Property" Name="PositiveSign" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_dataItem" Condition="not FEATURE_COREFX_GLOBALIZATION" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_useUserOverride" Condition="not FEATURE_COREFX_GLOBALIZATION" />
    </Type>
    <Type Name="System.Globalization.NumberStyles">
      <Member MemberType="Field" Name="AllowCurrencySymbol" />
      <Member MemberType="Field" Name="AllowDecimalPoint" />
      <Member MemberType="Field" Name="AllowExponent" />
      <Member MemberType="Field" Name="AllowHexSpecifier" />
      <Member MemberType="Field" Name="AllowLeadingSign" />
      <Member MemberType="Field" Name="AllowLeadingWhite" />
      <Member MemberType="Field" Name="AllowParentheses" />
      <Member MemberType="Field" Name="AllowThousands" />
      <Member MemberType="Field" Name="AllowTrailingSign" />
      <Member MemberType="Field" Name="AllowTrailingWhite" />
      <Member MemberType="Field" Name="Any" />
      <Member MemberType="Field" Name="Currency" />
      <Member MemberType="Field" Name="Float" />
      <Member MemberType="Field" Name="HexNumber" />
      <Member MemberType="Field" Name="Integer" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Number" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Globalization.RegionInfo">
      <Member Name="#ctor(System.String)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_CurrencySymbol" />
      <Member Name="get_CurrentRegion" />
      <Member Name="get_DisplayName" />
      <Member Name="get_EnglishName" />
      <Member Name="get_IsMetric" />
      <Member Name="get_ISOCurrencySymbol" />
      <Member Name="get_Name" />
      <Member Name="get_NativeName" />
      <Member Name="get_TwoLetterISORegionName" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="CurrencySymbol" />
      <Member MemberType="Property" Name="CurrentRegion" />
      <Member MemberType="Property" Name="DisplayName" />
      <Member MemberType="Property" Name="EnglishName" />
      <Member MemberType="Property" Name="IsMetric" />
      <Member MemberType="Property" Name="ISOCurrencySymbol" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="NativeName" />
      <Member MemberType="Property" Name="TwoLetterISORegionName" />
    </Type>
    <Type Name="System.Globalization.StringInfo">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_LengthInTextElements" />
      <Member Name="get_String" />
      <Member Name="GetHashCode" />
      <Member Name="GetNextTextElement(System.String)" />
      <Member Name="GetNextTextElement(System.String,System.Int32)" />
      <Member Name="GetTextElementEnumerator(System.String)" />
      <Member Name="GetTextElementEnumerator(System.String,System.Int32)" />
      <Member Name="ParseCombiningCharacters(System.String)" />
      <Member Name="set_String(System.String)" />
      <Member MemberType="Property" Name="LengthInTextElements" />
      <Member MemberType="Property" Name="String" />
    </Type>
    <Type Name="System.Globalization.TaiwanCalendar">
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.TaiwanLunisolarCalendar">
      <Member Name="#ctor" />
      <Member Name="get_DaysInYearBeforeMinSupportedYear" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="GetEra(System.DateTime)" />
      <Member MemberType="Property" Name="DaysInYearBeforeMinSupportedYear" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
    </Type>
    <Type Name="System.Globalization.TextElementEnumerator">
      <Member Name="get_Current" />
      <Member Name="get_ElementIndex" />
      <Member Name="GetTextElement" />
      <Member Name="MoveNext" />
      <Member Name="Reset" />
      <Member MemberType="Property" Name="Current" />
      <Member MemberType="Property" Name="ElementIndex" />
    </Type>
    <Type Name="System.Globalization.TextInfo">
      <Member Name="Equals(System.Object)" />
      <Member Name="get_CultureName" />
      <Member Name="get_IsReadOnly" />
      <Member Name="get_IsRightToLeft" />
      <Member Name="get_ListSeparator" />
      <Member Name="GetHashCode" />
      <Member Name="set_ListSeparator(System.String)" />
      <Member Name="ToLower(System.Char)" />
      <Member Name="ToLower(System.String)" />
      <Member Name="ToString" />
      <Member Name="ToUpper(System.Char)" />
      <Member Name="ToUpper(System.String)" />
      <Member MemberType="Property" Name="CultureName" />
      <Member MemberType="Property" Name="IsReadOnly" />
      <Member MemberType="Property" Name="IsRightToLeft" />
      <Member MemberType="Property" Name="ListSeparator" />
    </Type>
    <Type Name="System.Globalization.ThaiBuddhistCalendar">
      <Member MemberType="Field" Name="ThaiBuddhistEra" />
      <Member Name="#ctor" />
      <Member Name="AddMonths(System.DateTime,System.Int32)" />
      <Member Name="AddYears(System.DateTime,System.Int32)" />
      <Member Name="get_Eras" />
      <Member Name="get_MaxSupportedDateTime" />
      <Member Name="get_MinSupportedDateTime" />
      <Member Name="get_TwoDigitYearMax" />
      <Member Name="GetDayOfMonth(System.DateTime)" />
      <Member Name="GetDayOfWeek(System.DateTime)" />
      <Member Name="GetDayOfYear(System.DateTime)" />
      <Member Name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="GetDaysInYear(System.Int32,System.Int32)" />
      <Member Name="GetEra(System.DateTime)" />
      <Member Name="GetMonth(System.DateTime)" />
      <Member Name="GetMonthsInYear(System.Int32,System.Int32)" />
      <Member Name="GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <Member Name="GetYear(System.DateTime)" />
      <Member Name="IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <Member Name="IsLeapYear(System.Int32,System.Int32)" />
      <Member Name="set_TwoDigitYearMax(System.Int32)" />
      <Member Name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="ToFourDigitYear(System.Int32)" />
      <Member MemberType="Property" Name="Eras" />
      <Member MemberType="Property" Name="MaxSupportedDateTime" />
      <Member MemberType="Property" Name="MinSupportedDateTime" />
      <Member MemberType="Property" Name="TwoDigitYearMax" />
    </Type>
    <Type Name="System.Globalization.UnicodeCategory">
      <Member MemberType="Field" Name="ClosePunctuation" />
      <Member MemberType="Field" Name="ConnectorPunctuation" />
      <Member MemberType="Field" Name="Control" />
      <Member MemberType="Field" Name="CurrencySymbol" />
      <Member MemberType="Field" Name="DashPunctuation" />
      <Member MemberType="Field" Name="DecimalDigitNumber" />
      <Member MemberType="Field" Name="EnclosingMark" />
      <Member MemberType="Field" Name="FinalQuotePunctuation" />
      <Member MemberType="Field" Name="Format" />
      <Member MemberType="Field" Name="InitialQuotePunctuation" />
      <Member MemberType="Field" Name="LetterNumber" />
      <Member MemberType="Field" Name="LineSeparator" />
      <Member MemberType="Field" Name="LowercaseLetter" />
      <Member MemberType="Field" Name="MathSymbol" />
      <Member MemberType="Field" Name="ModifierLetter" />
      <Member MemberType="Field" Name="ModifierSymbol" />
      <Member MemberType="Field" Name="NonSpacingMark" />
      <Member MemberType="Field" Name="OpenPunctuation" />
      <Member MemberType="Field" Name="OtherLetter" />
      <Member MemberType="Field" Name="OtherNotAssigned" />
      <Member MemberType="Field" Name="OtherNumber" />
      <Member MemberType="Field" Name="OtherPunctuation" />
      <Member MemberType="Field" Name="OtherSymbol" />
      <Member MemberType="Field" Name="ParagraphSeparator" />
      <Member MemberType="Field" Name="PrivateUse" />
      <Member MemberType="Field" Name="SpaceSeparator" />
      <Member MemberType="Field" Name="SpacingCombiningMark" />
      <Member MemberType="Field" Name="Surrogate" />
      <Member MemberType="Field" Name="TitlecaseLetter" />
      <Member MemberType="Field" Name="UppercaseLetter" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Guid">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="#ctor(System.Byte[])" />
      <Member Name="#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <Member Name="#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <Member Name="#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])" />
      <Member Name="#ctor(System.String)" />
      <Member Name="CompareTo(System.Guid)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Guid)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="NewGuid" />
      <Member Name="op_Equality(System.Guid,System.Guid)" />
      <Member Name="op_Inequality(System.Guid,System.Guid)" />
      <Member Name="Parse(System.String)" />
      <Member Name="ParseExact(System.String,System.String)" />
      <Member Name="ToByteArray" />
      <Member Name="ToString" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Guid@)" />
      <Member Name="TryParseExact(System.String,System.String,System.Guid@)" />
    </Type>
    <Type Name="System.IAsyncResult">
      <Member Name="get_AsyncState" />
      <Member Name="get_AsyncWaitHandle" />
      <Member Name="get_CompletedSynchronously" />
      <Member Name="get_IsCompleted" />
      <Member MemberType="Property" Name="AsyncState" />
      <Member MemberType="Property" Name="AsyncWaitHandle" />
      <Member MemberType="Property" Name="CompletedSynchronously" />
      <Member MemberType="Property" Name="IsCompleted" />
    </Type>
    <Type Name="System.IComparable">
      <Member Name="CompareTo(System.Object)" />
    </Type>
    <Type Name="System.IComparable&lt;T&gt;">
      <Member Name="CompareTo(T)" />
    </Type>
    <Type Name="System.IConvertible">
      <Member Name="GetTypeCode" />
      <Member Name="ToBoolean(System.IFormatProvider)" />
      <Member Name="ToByte(System.IFormatProvider)" />
      <Member Name="ToChar(System.IFormatProvider)" />
      <Member Name="ToDateTime(System.IFormatProvider)" />
      <Member Name="ToDecimal(System.IFormatProvider)" />
      <Member Name="ToDouble(System.IFormatProvider)" />
      <Member Name="ToInt16(System.IFormatProvider)" />
      <Member Name="ToInt32(System.IFormatProvider)" />
      <Member Name="ToInt64(System.IFormatProvider)" />
      <Member Name="ToSByte(System.IFormatProvider)" />
      <Member Name="ToSingle(System.IFormatProvider)" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToType(System.Type,System.IFormatProvider)" />
      <Member Name="ToUInt16(System.IFormatProvider)" />
      <Member Name="ToUInt32(System.IFormatProvider)" />
      <Member Name="ToUInt64(System.IFormatProvider)" />
    </Type>
    <Type Name="System.ICustomFormatter">
      <Member Name="Format(System.String,System.Object,System.IFormatProvider)" />
    </Type>
    <Type Name="System.IDisposable">
      <Member Name="Dispose" />
    </Type>
    <Type Name="System.IEquatable&lt;T&gt;">
      <Member Name="Equals(T)" />
    </Type>
    <Type Name="System.IFormatProvider">
      <Member Name="GetFormat(System.Type)" />
    </Type>
    <Type Name="System.IFormattable">
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.IndexOutOfRangeException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.InsufficientExecutionStackException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Internal">
      <Member Status="ImplRoot" Name="CommonlyUsedGenericInstantiations" />
      <Member Status="ImplRoot" Name="CommonlyUsedWinRTRedirectedInterfaceStubs" Condition="FEATURE_COMINTEROP" />
    </Type>
    <Type Name="System.Int16">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Int16)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Int16)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Int16@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.Int32">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Int32)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Int32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Int32@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.Int64">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Int64)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="Equals(System.Int64)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Int64@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.IntPtr">
      <Member MemberType="Field" Name="Zero" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int64)" />
      <Member Name="#ctor(System.Void*)" />
      <Member Name="Add(System.IntPtr,System.Int32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Size" />
      <Member Name="GetHashCode" />
      <Member Status="ApiFxInternal" Name="IsNull" />
      <Member Name="op_Addition(System.IntPtr,System.Int32)" />
      <Member Name="op_Equality(System.IntPtr,System.IntPtr)" />
      <Member Name="op_Explicit(System.Int32)" ReturnType="System.IntPtr" />
      <Member Name="op_Explicit(System.Int64)" ReturnType="System.IntPtr" />
      <Member Name="op_Explicit(System.IntPtr)" ReturnType="System.Int32" />
      <Member Name="op_Explicit(System.IntPtr)" ReturnType="System.Int64" />
      <Member Name="op_Explicit(System.IntPtr)" ReturnType="System.Void*" />
      <Member Name="op_Explicit(System.Void*)" ReturnType="System.IntPtr" />
      <Member Name="op_Inequality(System.IntPtr,System.IntPtr)" />
      <Member Name="op_Subtraction(System.IntPtr,System.Int32)" />
      <Member Name="Subtract(System.IntPtr,System.Int32)" />
      <Member Name="ToInt32" />
      <Member Name="ToInt64" />
      <Member Name="ToPointer" />
      <Member Name="ToString" />
      <Member Name="ToString(System.String)" />
      <Member MemberType="Property" Name="Size" />
    </Type>
    <Type Name="System.InvalidCastException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Int32)" />
    </Type>
    <Type Name="System.InvalidOperationException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.InvalidProgramException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.InvalidTimeZoneException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.IO.BufferedStream" Condition="FEATURE_LEGACYSURFACE">
    <Member Name="#ctor(System.IO.Stream,System.Int32)" />
    <Member Name="get_UnderlyingStream" />
    <Member Name="get_BufferSize" />
    </Type>
    <Type Name="System.IO.FileLoadException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.String,System.Exception)" />      
      <Member Name="#ctor(System.String,System.String,System.Int32)" /> <!-- Used by EE, do not remove -->
      <Member Name="get_FileName" />
    </Type>
    <Type Name="System.IObservable&lt;T&gt;" Condition="FEATURE_LEGACYNETCF">
      <Member Name="Subscribe(System.IObserver&lt;T&gt;)" Condition="FEATURE_LEGACYNETCF" />
    </Type>
    <Type Name="System.IObserver&lt;T&gt;" Condition="FEATURE_LEGACYNETCF">
      <Member Name="OnCompleted" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="OnError(System.Exception)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="OnNext(T)" Condition="FEATURE_LEGACYNETCF" />
    </Type>
    <Type Name="System.IProgress&lt;T&gt;">
      <Member Name="Report(T)" />
    </Type>
    <Type Name="System.IServiceProvider">
      <Member Name="GetService(System.Type)" />
    </Type>
    <Type Name="System.Lazy&lt;T&gt;">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.Func&lt;T&gt;)"/>
      <Member Name="#ctor(System.Boolean)"/>
      <Member Name="#ctor(System.Threading.LazyThreadSafetyMode)"/>
      <Member Name="#ctor(System.Func&lt;T&gt;,System.Boolean)"/>
      <Member Name="#ctor(System.Func&lt;T&gt;,System.Threading.LazyThreadSafetyMode)"/>
      <Member MemberType="Property" Name="IsValueCreated"/>
      <Member Name="get_IsValueCreated"/>
      <Member MemberType="Property" Name="Value"/>
      <Member Name="get_Value"/>
    </Type>
    <Type Status="ImplRoot" Name="System.System_LazyDebugView&lt;T&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Lazy&lt;T&gt;)"/>
      <Member Status="ImplRoot" MemberType="Property" Name="IsValueCreated"/>
      <Member Status="ImplRoot" Name="get_IsValueCreated"/>
      <Member Status="ImplRoot" MemberType="Property" Name="Value"/>
      <Member Status="ImplRoot" Name="get_Value"/>
      <Member Status="ImplRoot" MemberType="Property" Name="Mode"/>
      <Member Status="ImplRoot" Name="get_Mode"/>
      <Member Status="ImplRoot" MemberType="Property" Name="IsValueFaulted"/>
      <Member Status="ImplRoot" Name="get_IsValueFaulted"/>
    </Type>
    <Type Name="System.Math">
      <Member MemberType="Field" Name="E" />
      <Member MemberType="Field" Name="PI" />
      <Member Name="Abs(System.Decimal)" />
      <Member Name="Abs(System.Double)" />
      <Member Name="Abs(System.Int16)" />
      <Member Name="Abs(System.Int32)" />
      <Member Name="Abs(System.Int64)" />
      <Member Name="Abs(System.SByte)" />
      <Member Name="Abs(System.Single)" />
      <Member Name="Acos(System.Double)" />
      <Member Name="Asin(System.Double)" />
      <Member Name="Atan(System.Double)" />
      <Member Name="Atan2(System.Double,System.Double)" />
      <Member Name="Ceiling(System.Decimal)"  />
      <Member Name="Ceiling(System.Double)"/>
      <Member Name="Cos(System.Double)" />
      <Member Name="Cosh(System.Double)" />
      <Member Name="Exp(System.Double)" />
      <Member Name="Floor(System.Decimal)"  />
      <Member Name="Floor(System.Double)" />
      <Member Name="IEEERemainder(System.Double,System.Double)" />
      <Member Name="Log(System.Double)" />
      <Member Name="Log(System.Double,System.Double)" />
      <Member Name="Log10(System.Double)" />
      <Member Name="Max(System.Byte,System.Byte)" />
      <Member Name="Max(System.Decimal,System.Decimal)" />
      <Member Name="Max(System.Double,System.Double)" />
      <Member Name="Max(System.Int16,System.Int16)" />
      <Member Name="Max(System.Int32,System.Int32)" />
      <Member Name="Max(System.Int64,System.Int64)" />
      <Member Name="Max(System.SByte,System.SByte)" />
      <Member Name="Max(System.Single,System.Single)" />
      <Member Name="Max(System.UInt16,System.UInt16)" />
      <Member Name="Max(System.UInt32,System.UInt32)" />
      <Member Name="Max(System.UInt64,System.UInt64)" />
      <Member Name="Min(System.Byte,System.Byte)" />
      <Member Name="Min(System.Decimal,System.Decimal)" />
      <Member Name="Min(System.Double,System.Double)" />
      <Member Name="Min(System.Int16,System.Int16)" />
      <Member Name="Min(System.Int32,System.Int32)" />
      <Member Name="Min(System.Int64,System.Int64)" />
      <Member Name="Min(System.SByte,System.SByte)" />
      <Member Name="Min(System.Single,System.Single)" />
      <Member Name="Min(System.UInt16,System.UInt16)" />
      <Member Name="Min(System.UInt32,System.UInt32)" />
      <Member Name="Min(System.UInt64,System.UInt64)" />
      <Member Name="Pow(System.Double,System.Double)" />
      <Member Name="Round(System.Decimal)" />
      <Member Name="Round(System.Decimal,System.Int32)" />
      <Member Name="Round(System.Decimal,System.Int32,System.MidpointRounding)"  />
      <Member Name="Round(System.Decimal,System.MidpointRounding)"  />
      <Member Name="Round(System.Double)" />
      <Member Name="Round(System.Double,System.Int32)" />
      <Member Name="Round(System.Double,System.Int32,System.MidpointRounding)"  />
      <Member Name="Round(System.Double,System.MidpointRounding)"  />
      <Member Name="Sign(System.Decimal)" />
      <Member Name="Sign(System.Double)" />
      <Member Name="Sign(System.Int16)" />
      <Member Name="Sign(System.Int32)" />
      <Member Name="Sign(System.Int64)" />
      <Member Name="Sign(System.SByte)" />
      <Member Name="Sign(System.Single)" />
      <Member Name="Sin(System.Double)" />
      <Member Name="Sinh(System.Double)" />
      <Member Name="Sqrt(System.Double)" />
      <Member Name="Tan(System.Double)" />
      <Member Name="Tanh(System.Double)" />
      <Member Name="Truncate(System.Decimal)"  />
      <Member Name="Truncate(System.Double)"  />
    </Type>
    <Type Name="System.MemberAccessException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.MethodAccessException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.MidpointRounding">
      <Member MemberType="Field" Name="AwayFromZero" />
      <Member MemberType="Field" Name="ToEven" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.MissingFieldException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.MissingMemberException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.MissingMethodException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.MTAThreadAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.MulticastDelegate">
      <Member Name="#ctor(System.Object,System.String)" />
      <Member Name="CombineImpl(System.Delegate)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="GetInvocationList" />
      <Member Name="op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
      <Member Name="op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
      <Member Name="RemoveImpl(System.Delegate)" />
      <Member Status="ImplRoot" Name="CtorClosed(System.Object,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorClosedStatic(System.Object,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorRTClosed(System.Object,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorSecureClosed(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorSecureClosedStatic(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorSecureOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorSecureRTClosed(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorSecureVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Status="ImplRoot" Name="CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
    </Type>
    <Type Name="System.MulticastNotSupportedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.NotFiniteNumberException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.NotImplementedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.NotSupportedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Nullable">
      <Member Name="Compare&lt;T&gt;(System.Nullable&lt;T&gt;,System.Nullable&lt;T&gt;)" />
      <Member Name="Equals&lt;T&gt;(System.Nullable&lt;T&gt;,System.Nullable&lt;T&gt;)" />
      <Member Name="GetUnderlyingType(System.Type)" />
    </Type>
    <Type Name="System.Nullable&lt;T&gt;">
      <Member Name="#ctor(T)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_HasValue" />
      <Member Name="get_Value" />
      <Member Name="GetHashCode" />
      <Member Name="GetValueOrDefault" />
      <Member Name="GetValueOrDefault(T)" />
      <Member Name="op_Explicit(System.Nullable&lt;T&gt;)" ReturnType="T" />
      <Member Name="op_Implicit(T)" ReturnType="System.Nullable&lt;T&gt;" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="HasValue" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.NullReferenceException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Object">
      <Member Name="#ctor" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Object,System.Object)" />
      <Member Name="Finalize" />
      <Member Name="GetHashCode" />
      <Member Name="GetType" />
      <Member Name="MemberwiseClone" />
      <Member Name="ReferenceEquals(System.Object,System.Object)" />
      <Member Name="ToString" />
      <Member Status="ImplRoot" Name="FieldSetter(System.String,System.String,System.Object)" /> <!-- EE -->
      <Member Status="ImplRoot" Name="FieldGetter(System.String,System.String,System.Object@)" /> <!-- EE -->
    </Type>
    <Type Name="System.ObjectDisposedException">
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="get_ObjectName" />
      <Member MemberType="Property" Name="ObjectName" />
    </Type>
    <Type Name="System.ObsoleteAttribute">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Boolean)" />
      <Member Name="get_IsError" />
      <Member Name="get_Message" />
      <Member MemberType="Property" Name="IsError" />
      <Member MemberType="Property" Name="Message" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.OleAutBinder" Condition="FEATURE_COMINTEROP" />
    <Type Name="System.OperatingSystem">
      <Member Name="#ctor(System.PlatformID,System.Version)" />
      <Member Name="Clone" />
      <Member Name="get_Platform" />
      <Member Name="get_Version" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Platform" />
      <Member MemberType="Property" Name="Version" />
    </Type>
    <Type Name="System.OutOfMemoryException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.OverflowException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.ParamArrayAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.ParseNumbers">
      <Member Status="ImplRoot" Name="StringToInt(System.String,System.Int32,System.Int32,System.Int32@)"  />
      <Member Status="ImplRoot" Name="StringToInt(System.String,System.Int32,System.Int32,System.Int32*)"  />
      <Member Status="ImplRoot" Name="StringToLong(System.String,System.Int32,System.Int32,System.Int32@)" />
      <Member Status="ImplRoot" Name="StringToLong(System.String,System.Int32,System.Int32,System.Int32*)" />
    </Type>
    <Type Name="System.PlatformNotSupportedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.PlatformID">
      <Member MemberType="Field" Name="MacOSX" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Field" Name="NokiaS60" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Field" Name="Unix" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Win32NT" />
      <Member MemberType="Field" Name="Win32S" />
      <Member MemberType="Field" Name="Win32Windows" />
      <Member MemberType="Field" Name="WinCE" />
      <Member MemberType="Field" Name="Xbox" />
    </Type>
    <Type Name="System.Predicate&lt;T&gt;">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(T,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(T)" />
    </Type>
    <Type Name="System.Progress&lt;T&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Action&lt;T&gt;)" />
      <Member MemberType="Event" Name="ProgressChanged" />
      <Member Name="OnReport(T)" />
    </Type>
    <Type Name="System.Random">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="Next" />
      <Member Name="Next(System.Int32)" />
      <Member Name="Next(System.Int32,System.Int32)" />
      <Member Name="NextBytes(System.Byte[])" />
      <Member Name="NextDouble" />
      <Member Name="Sample" />
    </Type>
    <Type Name="System.RankException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Reflection.AmbiguousMatchException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Reflection.AssemblyContentType">
        <Member MemberType="Field" Name="Default"/>
        <Member MemberType="Field" Name="WindowsRuntime"/>
        <Member MemberType="Field" Name="value__"/>
    </Type>

    <Type Name="System.Reflection.Assembly">
      <Member Name="#ctor" />      
      <Member Name="CreateInstance(System.String)" />      
      <Member Name="get_EntryPoint" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_FullName" />
      <Member Name="get_ImageRuntimeVersion" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_IsDynamic" />
      <Member Name="get_Location" />
      <Member Name="get_ManifestModule" />
      <Member Name="get_CustomAttributes" />
      <Member Name="get_Modules" />
      <Member Name="GetCallingAssembly" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetExecutingAssembly" />
      <Member Name="GetEntryAssembly" />
      <Member Name="GetExportedTypes" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetManifestResourceNames" />
      <Member Name="GetManifestResourceStream(System.String)" />
      <Member Name="GetManifestResourceInfo(System.String)" />
      <Member Name="GetManifestResourceStream(System.Type,System.String)" />
      <Member Name="GetModules" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Status="ApiFxInternal" Name="GetName" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetName" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="GetName(System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetName(System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <Member Name="GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <Member Name="GetType(System.String)" />
      <Member Name="GetType(System.String,System.Boolean)" />
      <Member Name="GetType(System.String,System.Boolean,System.Boolean)" />
      <Member Name="GetTypes" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="IsDynamic" MemberType="Property" />
      <Member Status="ApiFxInternal" Name="Load(System.Reflection.AssemblyName)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="Load(System.Reflection.AssemblyName)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="Load(System.String)" />
      <Member Status="ApiFxInternal" Name="Load(System.Byte[])" />
      <Member Status="ApiFxInternal" Name="Load(System.IO.Stream)" />
      <Member Status="ApiFxInternal" Name="Load(System.IO.Stream,System.IO.Stream)" />
      <Member Status="ApiFxInternal" Name="Load(System.Byte[],System.Byte[])" /> <!-- for debugging -->
      <Member Status="ApiFxInternal" Name="LoadFrom(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="LoadFrom(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="LoadFile(System.String)"/>
      <Member Name="ToString" />
      <Member MemberType="Property" Name="DefinedTypes" />
      <Member MemberType="Property" Name="CustomAttributes" />
      <Member MemberType="Property" Name="Modules" />
      <Member MemberType="Property" Name="ExportedTypes" />
      <Member MemberType="Property" Name="EntryPoint" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="ImageRuntimeVersion" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="Location" />
      <Member MemberType="Property" Name="ManifestModule" />
      <Member Status="ImplRoot" MemberType="Event" Name="ModuleResolve" />
    </Type>
    <Type Name="System.Reflection.IntrospectionExtensions">
      <Member Name="GetTypeInfo(System.Type)" />      
    </Type>
    <Type Name="System.Reflection.IReflectableType">
      <Member Name="GetTypeInfo" />      
    </Type>
    <Type Name="System.Reflection.ProcessorArchitecture">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="MSIL" />
      <Member MemberType="Field" Name="X86" />
      <Member MemberType="Field" Name="IA64" />
      <Member MemberType="Field" Name="Amd64" />
      <Member MemberType="Field" Name="Arm" />
    </Type>
    <Type Name="System.Reflection.ReflectionContext">
      <Member Name="#ctor" />      
      <Member Name="MapAssembly(System.Reflection.Assembly)" />      
      <Member Name="MapType(System.Reflection.TypeInfo)" />      
      <Member Name="GetTypeForObject(System.Object)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Reflection.ResourceLocation">
      <Member MemberType="Field" Name="ContainedInAnotherAssembly" />
      <Member MemberType="Field" Name="ContainedInManifestFile" />
      <Member MemberType="Field" Name="Embedded" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.RuntimeAssembly">
      <Member Status="ImplRoot" MemberType="Event" Name="_ModuleResolve" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_assembly" />
      <Member Status="ImplRoot" Name="OnModuleResolveEvent(System.String)" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Property" Name="DefinedTypes" />
      <!-- On Windows Phone Assembly.LoadFrom throws a NotSupportedException.  Prevent this internal helper from being stripped by the rewriter so that tests may reflect and call it since they need LoadFrom functionality -->
      <Member Status="ImplRoot" Name="InternalLoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)" Condition="FEATURE_WINDOWSPHONE" />
    </Type>
    <Type Name="System.Reflection.TypeInfo">
      <Member Name="#ctor" />      
      <Member Name="AsType" />      
      <Member MemberType="Property" Name="GenericTypeParameters" />      
      <Member Name="IsAssignableFrom(System.Reflection.TypeInfo)" />
      <Member Name="GetDeclaredEvent(System.String)" />
      <Member Name="GetDeclaredField(System.String)" />
      <Member Name="GetDeclaredMethod(System.String)" />
      <Member Name="GetDeclaredMethods(System.String)" />
      <Member Name="GetDeclaredNestedType(System.String)" />
      <Member Name="GetDeclaredProperty(System.String)" />
      <Member MemberType="Property" Name="DeclaredConstructors" />      
      <Member MemberType="Property" Name="DeclaredEvents" />      
      <Member MemberType="Property" Name="DeclaredFields" />      
      <Member MemberType="Property" Name="DeclaredMembers" />      
      <Member MemberType="Property" Name="DeclaredMethods" />      
      <Member MemberType="Property" Name="DeclaredNestedTypes" />      
      <Member MemberType="Property" Name="DeclaredProperties" />      
      <Member MemberType="Property" Name="ImplementedInterfaces" />      
    </Type>
    <Type Name="System.Reflection.AssemblyAlgorithmIdAttribute">
      <Member Name="#ctor(System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <Member Name="#ctor(System.UInt32)" />
      <Member Name="get_AlgorithmId" />
      <Member MemberType="Property" Name="AlgorithmId" />
    </Type>
    <Type Name="System.Reflection.AssemblyCompanyAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Company" />
      <Member MemberType="Property" Name="Company" />
    </Type>
    <Type Name="System.Reflection.AssemblyConfigurationAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Configuration" />
      <Member MemberType="Property" Name="Configuration" />
    </Type>
    <Type Name="System.Reflection.AssemblyCopyrightAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Copyright" />
      <Member MemberType="Property" Name="Copyright" />
    </Type>
    <Type Name="System.Reflection.AssemblyCultureAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Culture" />
      <Member MemberType="Property" Name="Culture" />
    </Type>
    <Type Name="System.Reflection.AssemblyDefaultAliasAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_DefaultAlias" />
      <Member MemberType="Property" Name="DefaultAlias" />
    </Type>
    <Type Name="System.Reflection.AssemblyDelaySignAttribute">
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="get_DelaySign" />
      <Member MemberType="Property" Name="DelaySign" />
    </Type>
    <Type Name="System.Reflection.AssemblyDescriptionAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Description" />
      <Member MemberType="Property" Name="Description" />
    </Type>
    <Type Name="System.Reflection.AssemblyMetadataAttribute">
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="get_Key" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Reflection.AssemblyFlagsAttribute">
      <Member Name="#ctor(System.Reflection.AssemblyNameFlags)" />
      <Member Name="get_AssemblyFlags" />
      <Member MemberType="Property" Name="AssemblyFlags" />
    </Type>
    <Type Name="System.Reflection.AssemblyInformationalVersionAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_InformationalVersion" />
      <Member MemberType="Property" Name="InformationalVersion" />
    </Type>
    <Type Name="System.Reflection.AssemblyKeyFileAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_KeyFile" />
      <Member MemberType="Property" Name="KeyFile" />
    </Type>
    <Type Name="System.Reflection.AssemblyKeyNameAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_KeyName" />
      <Member MemberType="Property" Name="KeyName" />
    </Type>
    <Type Name="System.Reflection.AssemblyName">
      <Member Name="#ctor" />
      <Member Name="Clone" />      
      <Member Status="ApiFxInternal" Name="get_CodeBase" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="get_CodeBase" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_CultureInfo" />
      <Member Name="get_CultureName" />
      <Member Name="get_ContentType" />
      <Member Name="get_Flags" />
      <Member Name="get_FullName" />
      <Member Name="get_HashAlgorithm" />
      <Member Name="get_Name" />
      <Member Name="get_ProcessorArchitecture" />
      <Member Name="get_Version" />
      <Member Name="get_VersionCompatibility" />
      <Member Name="GetPublicKey" />
      <Member Name="GetPublicKeyToken" />      
      <Member Status="ApiFxInternal" Name="set_CodeBase(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="set_CodeBase(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="set_CultureInfo(System.Globalization.CultureInfo)" />
      <Member Name="set_Flags(System.Reflection.AssemblyNameFlags)" />
      <Member Name="set_HashAlgorithm(System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <Member Name="set_Name(System.String)" />
      <Member Name="set_ProcessorArchitecture(System.Reflection.ProcessorArchitecture)" />
      <Member Name="set_Version(System.Version)" />
      <Member Name="set_VersionCompatibility(System.Configuration.Assemblies.AssemblyVersionCompatibility)" />
      <Member Name="SetPublicKey(System.Byte[])" />
      <Member Name="SetPublicKeyToken(System.Byte[])" />
      <Member Name="ToString" />
      <Member Name="#ctor(System.String)" />
      <Member Name="ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="CodeBase" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="CodeBase" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="CultureInfo" />
      <Member MemberType="Property" Name="CultureName" />
      <Member MemberType="Property" Name="ContentType" />      
      <Member MemberType="Property" Name="Flags" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="HashAlgorithm" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ProcessorArchitecture" />
      <Member MemberType="Property" Name="Version" />
      <Member MemberType="Property" Name="VersionCompatibility" />
    </Type>
    <Type Name="System.Reflection.AssemblyNameFlags">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="PublicKey" />
      <Member MemberType="Field" Name="Retargetable" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.AssemblyProductAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Product" />
      <Member MemberType="Property" Name="Product" />
    </Type>
    <Type Name="System.Reflection.AssemblySignatureKeyAttribute">
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="get_Countersignature" />
      <Member Name="get_PublicKey" />
      <Member MemberType="Property" Name="Countersignature" />
      <Member MemberType="Property" Name="PublicKey" />
    </Type>
    <Type Name="System.Reflection.AssemblyTitleAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Title" />
      <Member MemberType="Property" Name="Title" />
    </Type>
    <Type Name="System.Reflection.AssemblyTrademarkAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Trademark" />
      <Member MemberType="Property" Name="Trademark" />
    </Type>
    <Type Name="System.Reflection.AssemblyVersionAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Version" />
      <Member MemberType="Property" Name="Version" />
    </Type>
    <Type Name="System.Reflection.Binder">
      <Member Name="#ctor" />
      <Member Name="BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <Member Name="BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <Member Name="ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <Member Name="ReorderArgumentArray(System.Object[]@,System.Object)" />
      <Member Name="SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
    </Type>
    <Type Name="System.Reflection.BindingFlags">
      <Member MemberType="Field" Name="CreateInstance" />
      <Member MemberType="Field" Name="DeclaredOnly" />
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="ExactBinding" />
      <Member MemberType="Field" Name="FlattenHierarchy" />
      <Member MemberType="Field" Name="GetField" />
      <Member MemberType="Field" Name="GetProperty" />
      <Member MemberType="Field" Name="IgnoreCase" />
      <Member MemberType="Field" Name="IgnoreReturn" />
      <Member MemberType="Field" Name="Instance" />
      <Member MemberType="Field" Name="InvokeMethod" />
      <Member MemberType="Field" Name="NonPublic" />
      <Member MemberType="Field" Name="OptionalParamBinding" />
      <Member MemberType="Field" Name="Public" />
      <Member MemberType="Field" Name="PutDispProperty" />
      <Member MemberType="Field" Name="PutRefDispProperty" />
      <Member MemberType="Field" Name="SetField" />
      <Member MemberType="Field" Name="SetProperty" />
      <Member MemberType="Field" Name="Static" />
      <Member MemberType="Field" Name="SuppressChangeType" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.CallingConventions">
      <Member MemberType="Field" Name="Any" />
      <Member MemberType="Field" Name="ExplicitThis" />
      <Member MemberType="Field" Name="HasThis" />
      <Member MemberType="Field" Name="Standard" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VarArgs" />
    </Type>
    <Type Name="System.Reflection.ConstructorInfo">
      <Member Name="#ctor" />
      <Member MemberType="Field" Name="ConstructorName" />
      <Member MemberType="Field" Name="TypeConstructorName" />
      <Member Name="get_MemberType" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="Invoke(System.Object[])" />
      <Member Name="Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member MemberType="Property" Name="MemberType" />
    </Type>
    <Type Name="System.Reflection.CustomAttributeData">
        <Member Name="get_AttributeType" />
        <Member Name="get_ConstructorArguments" />
        <Member Name="get_NamedArguments" />        
        <Member MemberType="Property" Name="AttributeType" />
        <Member MemberType="Property" Name="ConstructorArguments" />
        <Member MemberType="Property" Name="NamedArguments" />        
    </Type>

   <Type Name="System.Reflection.CustomAttributeExtensions">
      <Member Name="GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.Assembly)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.MemberInfo)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.MemberInfo,System.Boolean)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.Module)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.ParameterInfo)" />
      <Member Name="GetCustomAttribute&lt;T&gt;(System.Reflection.ParameterInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly)" />
      <Member Name="GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module)" />
      <Member Name="GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.Assembly)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.MemberInfo)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.MemberInfo,System.Boolean)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.Module)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.ParameterInfo)" />
      <Member Name="GetCustomAttributes&lt;T&gt;(System.Reflection.ParameterInfo,System.Boolean)" />
      <Member Name="IsDefined(System.Reflection.Assembly,System.Type)" />
      <Member Name="IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <Member Name="IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Reflection.Module,System.Type)" />
      <Member Name="IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <Member Name="IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
    </Type>

    <Type Name="System.Reflection.RuntimeReflectionExtensions">
      <Member Name="GetMethodInfo(System.Delegate)" />
      <Member Name="GetRuntimeBaseDefinition(System.Reflection.MethodInfo)" />
      <Member Name="GetRuntimeEvent(System.Type,System.String)" />
      <Member Name="GetRuntimeEvents(System.Type)" />
      <Member Name="GetRuntimeField(System.Type,System.String)" />
      <Member Name="GetRuntimeFields(System.Type)" />
      <Member Name="GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)" />
      <Member Name="GetRuntimeMethod(System.Type,System.String,System.Type[])" />
      <Member Name="GetRuntimeMethods(System.Type)" />
      <Member Name="GetRuntimeProperties(System.Type)" />
      <Member Name="GetRuntimeProperty(System.Type,System.String)" />
    </Type> 

    <Type Name="System.Reflection.CustomAttributeNamedArgument">
        <Member Name="get_IsField" />
        <Member Name="get_MemberName" />
        <Member Name="get_TypedValue" />        
        <Member MemberType="Property" Name="IsField" />
        <Member MemberType="Property" Name="MemberName" />
        <Member MemberType="Property" Name="TypedValue" />        
    </Type>
    <Type Name="System.Reflection.CustomAttributeTypedArgument">
        <Member Name="get_ArgumentType" />
        <Member Name="get_Value" />
        <Member MemberType="Property" Name="ArgumentType" />
        <Member MemberType="Property" Name="Value" />
    </Type>

    <Type Name="System.Reflection.CustomAttributeFormatException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Reflection.DefaultMemberAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_MemberName" />
      <Member MemberType="Property" Name="MemberName" />
    </Type>
    <Type Name="System.Reflection.Emit.AssemblyBuilder">
      <Member Status="ApiFxInternal" Name="AddResourceFile(System.String,System.String)" />
      <Member Status="ApiFxInternal" Name="AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <Member Name="DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <Member Name="DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="DefineDynamicModule(System.String)" />
      <Member Name="DefineDynamicModule(System.String,System.Boolean)" />
      <Member Status="ApiFxInternal" Name="get_CodeBase" />
      <Member Name="get_EntryPoint" />
      <Member Name="get_ImageRuntimeVersion" />
      <Member Status="ApiFxInternal" Name="get_Location" />
      <Member Name="GetDynamicModule(System.String)" />
      <Member Name="GetExportedTypes" />
      <Member Status="ApiFxInternal" Name="GetFile(System.String)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Status="ApiFxInternal" Name="GetFiles(System.Boolean)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="GetManifestResourceNames" />
      <Member Name="GetManifestResourceStream(System.String)" />
      <Member Name="GetManifestResourceStream(System.Type,System.String)" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Status="ApiFxInternal" Name="SetEntryPoint(System.Reflection.MethodInfo)" />
      <Member Status="ApiFxInternal" Name="SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="CodeBase" />
      <Member MemberType="Property" Name="EntryPoint" />
      <Member MemberType="Property" Name="ImageRuntimeVersion" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="Location" />
    </Type>
    <Type Name="System.Reflection.Emit.AssemblyBuilderAccess">
      <Member MemberType="Field" Name="Run" />
      <Member MemberType="Field" Name="RunAndCollect" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.Emit.ConstructorBuilder">
      <Member Name="DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <Member Name="get_Attributes" />
      <Member Name="get_CallingConvention" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_InitLocals" />
      <Member Name="get_MethodHandle" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_Signature" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetILGenerator" />
      <Member Name="GetILGenerator(System.Int32)" />
      <Member Name="GetMethodImplementationFlags" />
      <Member Name="GetModule" />
      <Member Name="GetParameters" />
      <Member Name="GetToken" />
      <Member Name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="set_InitLocals(System.Boolean)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetImplementationFlags(System.Reflection.MethodImplAttributes)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CallingConvention" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="InitLocals" />
      <Member MemberType="Property" Name="MethodHandle" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="Signature" />
    </Type>
    <Type Name="System.Reflection.Emit.CustomAttributeBuilder">
      <Member Name="#ctor(System.Reflection.ConstructorInfo,System.Object[])" />
      <Member Name="#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
      <Member Name="#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])" />
      <Member Name="#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
    </Type>
    <Type Name="System.RuntimeArgumentHandle"> <!-- MC++ compiler asserts for no particularly good reason if this type is not public -->
    </Type>
    <Type Status="ImplRoot" Name="System.RuntimeFieldInfoStub">
      <Member Status="ImplRoot" MemberType="Field" Name="m_keepalive" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_b" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_c" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_d" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_e" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_fieldHandle" />
    </Type>
    <Type Status="ImplRoot" Name="System.RuntimeMethodInfoStub">
      <Member Status="ImplRoot" MemberType="Field" Name="m_a" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_b" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_c" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_d" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_e" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_f" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_g" />
    </Type>
    <Type Name="System.RuntimeTypeHandle">
      <Member Name="Equals(System.RuntimeTypeHandle)" />
      <Member Name="op_Equality(System.Object,System.RuntimeTypeHandle)" />
      <Member Name="op_Equality(System.RuntimeTypeHandle,System.Object)" />
      <Member Name="op_Inequality(System.Object,System.RuntimeTypeHandle)" />
      <Member Name="op_Inequality(System.RuntimeTypeHandle,System.Object)" />
      <Member Status="ImplRoot" Name="GetTypeHelper(System.Type,System.Type[],System.IntPtr,System.Int32)" /> <!-- EE -->
      <Member Status="ImplRoot" Name="GetValueInternal(System.RuntimeTypeHandle)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
      <!-- EE -->
    </Type>
    <Type Name="System.Reflection.Emit.DynamicMethod">
      <Member Name="#ctor(System.String,System.Type,System.Type[])" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Type,System.Type[],System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String,System.Type,System.Type[],System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Type,System.Type[],System.Type)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Type,System.Type[],System.Type)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)" Condition="not FEATURE_LEGACYNETCF"/>
      <Member Name="#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="CreateDelegate(System.Type)" />
      <Member Name="CreateDelegate(System.Type,System.Object)" />
      <Member Name="DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <Member Name="get_Attributes" />
      <Member Name="get_CallingConvention" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_InitLocals" />
      <Member Name="get_MethodHandle" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_ReturnParameter" />
      <Member Name="get_ReturnType" />
      <Member Name="get_ReturnTypeCustomAttributes" />
      <Member Name="GetBaseDefinition" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetILGenerator" />
      <Member Name="GetILGenerator(System.Int32)" />
      <Member Name="GetMethodImplementationFlags" />
      <Member Name="GetParameters" />
      <Member Name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="set_InitLocals(System.Boolean)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CallingConvention" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="InitLocals" />
      <Member MemberType="Property" Name="MethodHandle" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="ReturnParameter" />
      <Member MemberType="Property" Name="ReturnType" />
      <Member MemberType="Property" Name="ReturnTypeCustomAttributes" />
    </Type>
    <Type Name="System.Reflection.Emit.EnumBuilder">
      <Member Name="CreateType" />
      <Member Name="CreateTypeInfo" />
      <Member Name="DefineLiteral(System.String,System.Object)" />
      <Member Name="get_Assembly" />
      <Member Name="get_AssemblyQualifiedName" />
      <Member Name="get_BaseType" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_FullName" />
      <Member Name="get_GUID" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_Namespace" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_TypeHandle" />
      <Member Name="get_TypeToken" />
      <Member Name="get_UnderlyingField" />
      <Member Name="get_UnderlyingSystemType" />
      <Member Name="GetAttributeFlagsImpl" />
      <Member Name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetConstructors(System.Reflection.BindingFlags)" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetElementType" />
      <Member Name="GetEvent(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetEvents" />
      <Member Name="GetEvents(System.Reflection.BindingFlags)" />
      <Member Name="GetField(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetFields(System.Reflection.BindingFlags)" />
      <Member Name="GetInterface(System.String,System.Boolean)" />
      <Member Name="GetInterfaceMap(System.Type)" />
      <Member Name="GetInterfaces" />
      <Member Name="GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <Member Name="GetMembers(System.Reflection.BindingFlags)" />
      <Member Name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethods(System.Reflection.BindingFlags)" />
      <Member Name="GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetNestedTypes(System.Reflection.BindingFlags)" />
      <Member Name="GetProperties(System.Reflection.BindingFlags)" />
      <Member Name="GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="HasElementTypeImpl" />
      <Member Name="InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <Member Name="IsArrayImpl" />
      <Member Name="IsByRefImpl" />
      <Member Name="IsCOMObjectImpl" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="IsPointerImpl" />
      <Member Name="IsPrimitiveImpl" />
      <Member Name="IsValueTypeImpl" />
      <Member Name="MakeArrayType" />
      <Member Name="MakeArrayType(System.Int32)" />
      <Member Name="MakeByRefType" />
      <Member Name="MakePointerType" />      
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member MemberType="Property" Name="Assembly" />
      <Member MemberType="Property" Name="AssemblyQualifiedName" />
      <Member MemberType="Property" Name="BaseType" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="GUID" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Namespace" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="TypeHandle" />
      <Member MemberType="Property" Name="TypeToken" />
      <Member MemberType="Property" Name="UnderlyingField" />
      <Member MemberType="Property" Name="UnderlyingSystemType" />
    </Type>
    <Type Name="System.Reflection.Emit.EventBuilder">
      <Member Name="AddOtherMethod(System.Reflection.Emit.MethodBuilder)" />
      <Member Name="GetEventToken" />
      <Member Name="SetAddOnMethod(System.Reflection.Emit.MethodBuilder)" />   
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />      
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetRaiseMethod(System.Reflection.Emit.MethodBuilder)" />
      <Member Name="SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)" />
    </Type>
    <Type Name="System.Reflection.Emit.EventToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.EventToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.FieldBuilder">
      <Member Name="get_Attributes" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_FieldHandle" />
      <Member Name="get_FieldType" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_ReflectedType" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetToken" />
      <Member Name="GetValue(System.Object)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="SetConstant(System.Object)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetOffset(System.Int32)" />
      <Member Name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="FieldHandle" />
      <Member MemberType="Property" Name="FieldType" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ReflectedType" />
    </Type>
    <Type Name="System.Reflection.Emit.FieldToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.FieldToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.FlowControl">
      <Member MemberType="Field" Name="Branch" />
      <Member MemberType="Field" Name="Break" />
      <Member MemberType="Field" Name="Call" />
      <Member MemberType="Field" Name="Cond_Branch" />
      <Member MemberType="Field" Name="Meta" />
      <Member MemberType="Field" Name="Next" />
      <Member MemberType="Field" Name="Return" />
      <Member MemberType="Field" Name="Throw" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.Emit.GenericTypeParameterBuilder">
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Assembly" />
      <Member Name="get_AssemblyQualifiedName" />
      <Member Name="get_BaseType" />
      <Member Name="get_ContainsGenericParameters" />
      <Member Name="get_DeclaringMethod" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_FullName" />
      <Member Name="get_GenericParameterPosition" />
      <Member Name="get_GUID" />
      <Member Name="get_IsGenericParameter" />
      <Member Name="get_IsGenericType" />
      <Member Name="get_IsGenericTypeDefinition" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_Namespace" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_TypeHandle" />
      <Member Name="get_UnderlyingSystemType" />
      <Member Name="GetAttributeFlagsImpl" />
      <Member Name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetConstructors(System.Reflection.BindingFlags)" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetElementType" />
      <Member Name="GetEvent(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetEvents" />
      <Member Name="GetEvents(System.Reflection.BindingFlags)" />
      <Member Name="GetField(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetFields(System.Reflection.BindingFlags)" />
      <Member Name="GetGenericArguments" />
      <Member Name="GetGenericTypeDefinition" />
      <Member Name="GetHashCode" />
      <Member Name="GetInterface(System.String,System.Boolean)" />
      <Member Name="GetInterfaceMap(System.Type)" />
      <Member Name="GetInterfaces" />
      <Member Name="GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <Member Name="GetMembers(System.Reflection.BindingFlags)" />
      <Member Name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethods(System.Reflection.BindingFlags)" />
      <Member Name="GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetNestedTypes(System.Reflection.BindingFlags)" />
      <Member Name="GetProperties(System.Reflection.BindingFlags)" />
      <Member Name="GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="HasElementTypeImpl" />
      <Member Name="InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <Member Name="IsArrayImpl" />
      <Member Name="IsAssignableFrom(System.Type)" />
      <Member Name="IsAssignableFrom(System.Reflection.TypeInfo)" />      
      <Member Name="IsByRefImpl" />
      <Member Name="IsCOMObjectImpl" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="IsPointerImpl" />
      <Member Name="IsPrimitiveImpl" />
      <Member Name="IsSubclassOf(System.Type)" />
      <Member Name="IsValueTypeImpl" />
      <Member Name="MakeArrayType" />
      <Member Name="MakeArrayType(System.Int32)" />
      <Member Name="MakeByRefType" />
      <Member Name="MakeGenericType(System.Type[])" />
      <Member Name="MakePointerType" />
      <Member Name="SetBaseTypeConstraint(System.Type)" />      
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)" />
      <Member Name="SetInterfaceConstraints(System.Type[])" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Assembly" />
      <Member MemberType="Property" Name="AssemblyQualifiedName" />
      <Member MemberType="Property" Name="BaseType" />
      <Member MemberType="Property" Name="ContainsGenericParameters" />
      <Member MemberType="Property" Name="DeclaringMethod" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="GenericParameterPosition" />
      <Member MemberType="Property" Name="GUID" />
      <Member MemberType="Property" Name="IsGenericParameter" />
      <Member MemberType="Property" Name="IsGenericType" />
      <Member MemberType="Property" Name="IsGenericTypeDefinition" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Namespace" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="TypeHandle" />
      <Member MemberType="Property" Name="UnderlyingSystemType" />
    </Type>
    <Type Name="System.Reflection.Emit.ILGenerator">
      <Member Name="BeginCatchBlock(System.Type)" />
      <Member Name="BeginExceptFilterBlock" />
      <Member Name="BeginExceptionBlock" />
      <Member Name="BeginFaultBlock" />
      <Member Name="BeginFinallyBlock" />
      <Member Name="BeginScope" />
      <Member Name="DeclareLocal(System.Type)" />
      <Member Name="DeclareLocal(System.Type,System.Boolean)" />
      <Member Name="DefineLabel" />
      <Member Name="Emit(System.Reflection.Emit.OpCode)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Byte)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Double)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Int16)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Int32)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Int64)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.SByte)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Single)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.String)" />
      <Member Name="Emit(System.Reflection.Emit.OpCode,System.Type)" />
      <Member Name="EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])" />
      <Member Name="EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])" />
      <Member Name="EmitWriteLine(System.Reflection.Emit.LocalBuilder)" />
      <Member Name="EmitWriteLine(System.Reflection.FieldInfo)" />
      <Member Name="EmitWriteLine(System.String)" />
      <Member Name="EndExceptionBlock" />
      <Member Name="EndScope" />
      <Member Name="MarkLabel(System.Reflection.Emit.Label)" />
      <Member Name="MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="get_ILOffset" />
      <Member Name="ThrowException(System.Type)" />
      <Member Name="UsingNamespace(System.String)" />
      <Member MemberType="Property" Name="ILOffset" />      
    </Type>
    <Type Name="System.Diagnostics.CodeAnalysis.SuppressMessageAttribute">
      <Member Name="#ctor(System.String,System.String)" />
      <Member MemberType="Property" Name="Category" />
      <Member MemberType="Property" Name="CheckId" />
      <Member MemberType="Property" Name="Scope" />
      <Member MemberType="Property" Name="Target" />
      <Member MemberType="Property" Name="MessageId" />
      <Member MemberType="Property" Name="Justification" />
    </Type>
    <Type Name="System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <Member Name="SetSource(System.Byte[])" />
      <Member Name="SetCheckSum(System.Guid,System.Byte[])" />
    </Type>
    <Type Name="System.Reflection.Emit.Label">
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.Label)" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)" />
      <Member Name="op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)" />
    </Type>
    <Type Name="System.Reflection.Emit.LocalBuilder">
      <Member Name="get_IsPinned" />
      <Member Name="get_LocalIndex" />
      <Member Name="get_LocalType" />
      <Member Name="SetLocalSymInfo(System.String)" />
      <Member Name="SetLocalSymInfo(System.String,System.Int32,System.Int32)" />
      <Member MemberType="Property" Name="IsPinned" />
      <Member MemberType="Property" Name="LocalIndex" />
      <Member MemberType="Property" Name="LocalType" />
    </Type>
    <Type Name="System.Reflection.Emit.MethodBuilder">
      <Member Status="ApiFxInternal" Name="CreateMethodBody(System.Byte[],System.Int32)" />
      <Member Name="DefineGenericParameters(System.String[])" />
      <Member Name="DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Attributes" />
      <Member Name="get_CallingConvention" />
      <Member Name="get_ContainsGenericParameters" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_InitLocals" />
      <Member Name="get_IsGenericMethod" />
      <Member Name="get_IsGenericMethodDefinition" />
      <Member Name="get_MethodHandle" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_ReturnParameter" />
      <Member Name="get_ReturnTypeCustomAttributes" />
      <Member Name="get_Signature" />
      <Member Name="GetBaseDefinition" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetGenericArguments" />
      <Member Name="GetGenericMethodDefinition" />
      <Member Name="GetHashCode" />
      <Member Name="GetILGenerator" />
      <Member Name="GetILGenerator(System.Int32)" />
      <Member Name="GetMethodImplementationFlags" />
      <Member Name="GetModule" />
      <Member Name="GetParameters" />
      <Member Name="GetToken" />
      <Member Name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="MakeGenericMethod(System.Type[])" />
      <Member Name="set_InitLocals(System.Boolean)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetImplementationFlags(System.Reflection.MethodImplAttributes)" />
      <Member Name="SetParameters(System.Type[])" />
      <Member Name="SetReturnType(System.Type)" />
      <Member Name="SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CallingConvention" />
      <Member MemberType="Property" Name="ContainsGenericParameters" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="InitLocals" />
      <Member MemberType="Property" Name="IsGenericMethod" />
      <Member MemberType="Property" Name="IsGenericMethodDefinition" />
      <Member MemberType="Property" Name="MethodHandle" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="ReturnParameter" />
      <Member MemberType="Property" Name="ReturnTypeCustomAttributes" />
      <Member MemberType="Property" Name="Signature" />
    </Type>
    <Type Name="System.Reflection.Emit.MethodToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.MethodToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.ModuleBuilder">
      <Member Name="CreateGlobalFunctions" />
      <Member Name="DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <Member Name="DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <Member Name="DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <Member Name="DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <Member Name="DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />      
      <Member Status="ApiFxInternal" Name="DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      <Member Status="ApiFxInternal" Name="DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <Member Status="ApiFxInternal" Name="DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <Member Name="DefineType(System.String)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <Member Name="DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <Member Name="DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <Member Status="ApiFxInternal" Name="DefineUnmanagedResource(System.Byte[])" />
      <Member Status="ApiFxInternal" Name="DefineUnmanagedResource(System.String)" />
      <Member Name="get_FullyQualifiedName" />
      <Member Name="GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <Member Name="GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <Member Name="GetConstructorToken(System.Reflection.ConstructorInfo)" />
      <Member Name="GetFieldToken(System.Reflection.FieldInfo)" />
      <Member Name="GetMethodToken(System.Reflection.MethodInfo)" />
      <Member Name="GetSignatureToken(System.Byte[],System.Int32)" />
      <Member Name="GetSignatureToken(System.Reflection.Emit.SignatureHelper)" />
      <Member Name="GetStringConstant(System.String)" />
      <Member Name="GetType(System.String)" />
      <Member Name="GetType(System.String,System.Boolean)" />
      <Member Name="GetType(System.String,System.Boolean,System.Boolean)" />
      <Member Name="GetTypes" />
      <Member Name="GetTypeToken(System.String)" />
      <Member Name="GetTypeToken(System.Type)" />
      <Member Name="IsTransient" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Status="ApiFxInternal" Name="SetUserEntryPoint(System.Reflection.MethodInfo)" />
      <Member MemberType="Property" Name="FullyQualifiedName" />      
    </Type>
    <Type Name="System.Reflection.Emit.OpCode">
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.OpCode)" />
      <Member Name="get_FlowControl" />
      <Member Name="get_Name" />
      <Member Name="get_OpCodeType" />
      <Member Name="get_OperandType" />
      <Member Name="get_Size" />
      <Member Name="get_StackBehaviourPop" />
      <Member Name="get_StackBehaviourPush" />
      <Member Name="get_Value" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <Member Name="op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="FlowControl" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="OpCodeType" />
      <Member MemberType="Property" Name="OperandType" />
      <Member MemberType="Property" Name="Size" />
      <Member MemberType="Property" Name="StackBehaviourPop" />
      <Member MemberType="Property" Name="StackBehaviourPush" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Reflection.Emit.OpCodes">
      <Member MemberType="Field" Name="Add" />
      <Member MemberType="Field" Name="Add_Ovf" />
      <Member MemberType="Field" Name="Add_Ovf_Un" />
      <Member MemberType="Field" Name="And" />
      <Member MemberType="Field" Name="Arglist" />
      <Member MemberType="Field" Name="Beq" />
      <Member MemberType="Field" Name="Beq_S" />
      <Member MemberType="Field" Name="Bge" />
      <Member MemberType="Field" Name="Bge_S" />
      <Member MemberType="Field" Name="Bge_Un" />
      <Member MemberType="Field" Name="Bge_Un_S" />
      <Member MemberType="Field" Name="Bgt" />
      <Member MemberType="Field" Name="Bgt_S" />
      <Member MemberType="Field" Name="Bgt_Un" />
      <Member MemberType="Field" Name="Bgt_Un_S" />
      <Member MemberType="Field" Name="Ble" />
      <Member MemberType="Field" Name="Ble_S" />
      <Member MemberType="Field" Name="Ble_Un" />
      <Member MemberType="Field" Name="Ble_Un_S" />
      <Member MemberType="Field" Name="Blt" />
      <Member MemberType="Field" Name="Blt_S" />
      <Member MemberType="Field" Name="Blt_Un" />
      <Member MemberType="Field" Name="Blt_Un_S" />
      <Member MemberType="Field" Name="Bne_Un" />
      <Member MemberType="Field" Name="Bne_Un_S" />
      <Member MemberType="Field" Name="Box" />
      <Member MemberType="Field" Name="Br" />
      <Member MemberType="Field" Name="Br_S" />
      <Member MemberType="Field" Name="Break" />
      <Member MemberType="Field" Name="Brfalse" />
      <Member MemberType="Field" Name="Brfalse_S" />
      <Member MemberType="Field" Name="Brtrue" />
      <Member MemberType="Field" Name="Brtrue_S" />
      <Member MemberType="Field" Name="Call" />
      <Member MemberType="Field" Name="Calli" />
      <Member MemberType="Field" Name="Callvirt" />
      <Member MemberType="Field" Name="Castclass" />
      <Member MemberType="Field" Name="Ceq" />
      <Member MemberType="Field" Name="Cgt" />
      <Member MemberType="Field" Name="Cgt_Un" />
      <Member MemberType="Field" Name="Ckfinite" />
      <Member MemberType="Field" Name="Clt" />
      <Member MemberType="Field" Name="Clt_Un" />
      <Member MemberType="Field" Name="Constrained" />
      <Member MemberType="Field" Name="Conv_I" />
      <Member MemberType="Field" Name="Conv_I1" />
      <Member MemberType="Field" Name="Conv_I2" />
      <Member MemberType="Field" Name="Conv_I4" />
      <Member MemberType="Field" Name="Conv_I8" />
      <Member MemberType="Field" Name="Conv_Ovf_I" />
      <Member MemberType="Field" Name="Conv_Ovf_I_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_I1" />
      <Member MemberType="Field" Name="Conv_Ovf_I1_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_I2" />
      <Member MemberType="Field" Name="Conv_Ovf_I2_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_I4" />
      <Member MemberType="Field" Name="Conv_Ovf_I4_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_I8" />
      <Member MemberType="Field" Name="Conv_Ovf_I8_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_U" />
      <Member MemberType="Field" Name="Conv_Ovf_U_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_U1" />
      <Member MemberType="Field" Name="Conv_Ovf_U1_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_U2" />
      <Member MemberType="Field" Name="Conv_Ovf_U2_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_U4" />
      <Member MemberType="Field" Name="Conv_Ovf_U4_Un" />
      <Member MemberType="Field" Name="Conv_Ovf_U8" />
      <Member MemberType="Field" Name="Conv_Ovf_U8_Un" />
      <Member MemberType="Field" Name="Conv_R_Un" />
      <Member MemberType="Field" Name="Conv_R4" />
      <Member MemberType="Field" Name="Conv_R8" />
      <Member MemberType="Field" Name="Conv_U" />
      <Member MemberType="Field" Name="Conv_U1" />
      <Member MemberType="Field" Name="Conv_U2" />
      <Member MemberType="Field" Name="Conv_U4" />
      <Member MemberType="Field" Name="Conv_U8" />
      <Member MemberType="Field" Name="Cpblk" />
      <Member MemberType="Field" Name="Cpobj" />
      <Member MemberType="Field" Name="Div" />
      <Member MemberType="Field" Name="Div_Un" />
      <Member MemberType="Field" Name="Dup" />
      <Member MemberType="Field" Name="Endfilter" />
      <Member MemberType="Field" Name="Endfinally" />
      <Member MemberType="Field" Name="Initblk" />
      <Member MemberType="Field" Name="Initobj" />
      <Member MemberType="Field" Name="Isinst" />
      <Member MemberType="Field" Name="Jmp" />
      <Member MemberType="Field" Name="Ldarg" />
      <Member MemberType="Field" Name="Ldarg_0" />
      <Member MemberType="Field" Name="Ldarg_1" />
      <Member MemberType="Field" Name="Ldarg_2" />
      <Member MemberType="Field" Name="Ldarg_3" />
      <Member MemberType="Field" Name="Ldarg_S" />
      <Member MemberType="Field" Name="Ldarga" />
      <Member MemberType="Field" Name="Ldarga_S" />
      <Member MemberType="Field" Name="Ldc_I4" />
      <Member MemberType="Field" Name="Ldc_I4_0" />
      <Member MemberType="Field" Name="Ldc_I4_1" />
      <Member MemberType="Field" Name="Ldc_I4_2" />
      <Member MemberType="Field" Name="Ldc_I4_3" />
      <Member MemberType="Field" Name="Ldc_I4_4" />
      <Member MemberType="Field" Name="Ldc_I4_5" />
      <Member MemberType="Field" Name="Ldc_I4_6" />
      <Member MemberType="Field" Name="Ldc_I4_7" />
      <Member MemberType="Field" Name="Ldc_I4_8" />
      <Member MemberType="Field" Name="Ldc_I4_M1" />
      <Member MemberType="Field" Name="Ldc_I4_S" />
      <Member MemberType="Field" Name="Ldc_I8" />
      <Member MemberType="Field" Name="Ldc_R4" />
      <Member MemberType="Field" Name="Ldc_R8" />
      <Member MemberType="Field" Name="Ldelem" />
      <Member MemberType="Field" Name="Ldelem_I" />
      <Member MemberType="Field" Name="Ldelem_I1" />
      <Member MemberType="Field" Name="Ldelem_I2" />
      <Member MemberType="Field" Name="Ldelem_I4" />
      <Member MemberType="Field" Name="Ldelem_I8" />
      <Member MemberType="Field" Name="Ldelem_R4" />
      <Member MemberType="Field" Name="Ldelem_R8" />
      <Member MemberType="Field" Name="Ldelem_Ref" />
      <Member MemberType="Field" Name="Ldelem_U1" />
      <Member MemberType="Field" Name="Ldelem_U2" />
      <Member MemberType="Field" Name="Ldelem_U4" />
      <Member MemberType="Field" Name="Ldelema" />
      <Member MemberType="Field" Name="Ldfld" />
      <Member MemberType="Field" Name="Ldflda" />
      <Member MemberType="Field" Name="Ldftn" />
      <Member MemberType="Field" Name="Ldind_I" />
      <Member MemberType="Field" Name="Ldind_I1" />
      <Member MemberType="Field" Name="Ldind_I2" />
      <Member MemberType="Field" Name="Ldind_I4" />
      <Member MemberType="Field" Name="Ldind_I8" />
      <Member MemberType="Field" Name="Ldind_R4" />
      <Member MemberType="Field" Name="Ldind_R8" />
      <Member MemberType="Field" Name="Ldind_Ref" />
      <Member MemberType="Field" Name="Ldind_U1" />
      <Member MemberType="Field" Name="Ldind_U2" />
      <Member MemberType="Field" Name="Ldind_U4" />
      <Member MemberType="Field" Name="Ldlen" />
      <Member MemberType="Field" Name="Ldloc" />
      <Member MemberType="Field" Name="Ldloc_0" />
      <Member MemberType="Field" Name="Ldloc_1" />
      <Member MemberType="Field" Name="Ldloc_2" />
      <Member MemberType="Field" Name="Ldloc_3" />
      <Member MemberType="Field" Name="Ldloc_S" />
      <Member MemberType="Field" Name="Ldloca" />
      <Member MemberType="Field" Name="Ldloca_S" />
      <Member MemberType="Field" Name="Ldnull" />
      <Member MemberType="Field" Name="Ldobj" />
      <Member MemberType="Field" Name="Ldsfld" />
      <Member MemberType="Field" Name="Ldsflda" />
      <Member MemberType="Field" Name="Ldstr" />
      <Member MemberType="Field" Name="Ldtoken" />
      <Member MemberType="Field" Name="Ldvirtftn" />
      <Member MemberType="Field" Name="Leave" />
      <Member MemberType="Field" Name="Leave_S" />
      <Member MemberType="Field" Name="Localloc" />
      <Member MemberType="Field" Name="Mkrefany" />
      <Member MemberType="Field" Name="Mul" />
      <Member MemberType="Field" Name="Mul_Ovf" />
      <Member MemberType="Field" Name="Mul_Ovf_Un" />
      <Member MemberType="Field" Name="Neg" />
      <Member MemberType="Field" Name="Newarr" />
      <Member MemberType="Field" Name="Newobj" />
      <Member MemberType="Field" Name="Nop" />
      <Member MemberType="Field" Name="Not" />
      <Member MemberType="Field" Name="Or" />
      <Member MemberType="Field" Name="Pop" />
      <Member MemberType="Field" Name="Prefix1" />
      <Member MemberType="Field" Name="Prefix2" />
      <Member MemberType="Field" Name="Prefix3" />
      <Member MemberType="Field" Name="Prefix4" />
      <Member MemberType="Field" Name="Prefix5" />
      <Member MemberType="Field" Name="Prefix6" />
      <Member MemberType="Field" Name="Prefix7" />
      <Member MemberType="Field" Name="Prefixref" />
      <Member MemberType="Field" Name="Readonly" />
      <Member MemberType="Field" Name="Refanytype" />
      <Member MemberType="Field" Name="Refanyval" />
      <Member MemberType="Field" Name="Rem" />
      <Member MemberType="Field" Name="Rem_Un" />
      <Member MemberType="Field" Name="Ret" />
      <Member MemberType="Field" Name="Rethrow" />
      <Member MemberType="Field" Name="Shl" />
      <Member MemberType="Field" Name="Shr" />
      <Member MemberType="Field" Name="Shr_Un" />
      <Member MemberType="Field" Name="Sizeof" />
      <Member MemberType="Field" Name="Starg" />
      <Member MemberType="Field" Name="Starg_S" />
      <Member MemberType="Field" Name="Stelem" />
      <Member MemberType="Field" Name="Stelem_I" />
      <Member MemberType="Field" Name="Stelem_I1" />
      <Member MemberType="Field" Name="Stelem_I2" />
      <Member MemberType="Field" Name="Stelem_I4" />
      <Member MemberType="Field" Name="Stelem_I8" />
      <Member MemberType="Field" Name="Stelem_R4" />
      <Member MemberType="Field" Name="Stelem_R8" />
      <Member MemberType="Field" Name="Stelem_Ref" />
      <Member MemberType="Field" Name="Stfld" />
      <Member MemberType="Field" Name="Stind_I" />
      <Member MemberType="Field" Name="Stind_I1" />
      <Member MemberType="Field" Name="Stind_I2" />
      <Member MemberType="Field" Name="Stind_I4" />
      <Member MemberType="Field" Name="Stind_I8" />
      <Member MemberType="Field" Name="Stind_R4" />
      <Member MemberType="Field" Name="Stind_R8" />
      <Member MemberType="Field" Name="Stind_Ref" />
      <Member MemberType="Field" Name="Stloc" />
      <Member MemberType="Field" Name="Stloc_0" />
      <Member MemberType="Field" Name="Stloc_1" />
      <Member MemberType="Field" Name="Stloc_2" />
      <Member MemberType="Field" Name="Stloc_3" />
      <Member MemberType="Field" Name="Stloc_S" />
      <Member MemberType="Field" Name="Stobj" />
      <Member MemberType="Field" Name="Stsfld" />
      <Member MemberType="Field" Name="Sub" />
      <Member MemberType="Field" Name="Sub_Ovf" />
      <Member MemberType="Field" Name="Sub_Ovf_Un" />
      <Member MemberType="Field" Name="Switch" />
      <Member MemberType="Field" Name="Tailcall" />
      <Member MemberType="Field" Name="Throw" />
      <Member MemberType="Field" Name="Unaligned" />
      <Member MemberType="Field" Name="Unbox" />
      <Member MemberType="Field" Name="Unbox_Any" />
      <Member MemberType="Field" Name="Volatile" />
      <Member MemberType="Field" Name="Xor" />
      <Member Name="TakesSingleByteArgument(System.Reflection.Emit.OpCode)" />
    </Type>
    <Type Name="System.Reflection.Emit.OpCodeType">
      <Member MemberType="Field" Name="Macro" />
      <Member MemberType="Field" Name="Nternal" />
      <Member MemberType="Field" Name="Objmodel" />
      <Member MemberType="Field" Name="Prefix" />
      <Member MemberType="Field" Name="Primitive" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.Emit.OperandType">
      <Member MemberType="Field" Name="InlineBrTarget" />
      <Member MemberType="Field" Name="InlineField" />
      <Member MemberType="Field" Name="InlineI" />
      <Member MemberType="Field" Name="InlineI8" />
      <Member MemberType="Field" Name="InlineMethod" />
      <Member MemberType="Field" Name="InlineNone" />
      <Member MemberType="Field" Name="InlineR" />
      <Member MemberType="Field" Name="InlineSig" />
      <Member MemberType="Field" Name="InlineString" />
      <Member MemberType="Field" Name="InlineSwitch" />
      <Member MemberType="Field" Name="InlineTok" />
      <Member MemberType="Field" Name="InlineType" />
      <Member MemberType="Field" Name="InlineVar" />
      <Member MemberType="Field" Name="ShortInlineBrTarget" />
      <Member MemberType="Field" Name="ShortInlineI" />
      <Member MemberType="Field" Name="ShortInlineR" />
      <Member MemberType="Field" Name="ShortInlineVar" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.Emit.PackingSize">
      <Member MemberType="Field" Name="Size1" />
      <Member MemberType="Field" Name="Size128" />
      <Member MemberType="Field" Name="Size16" />
      <Member MemberType="Field" Name="Size2" />
      <Member MemberType="Field" Name="Size32" />
      <Member MemberType="Field" Name="Size4" />
      <Member MemberType="Field" Name="Size64" />
      <Member MemberType="Field" Name="Size8" />
      <Member MemberType="Field" Name="Unspecified" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.Emit.ParameterBuilder">
      <Member Name="get_Attributes" />
      <Member Name="get_IsIn" />
      <Member Name="get_IsOptional" />
      <Member Name="get_IsOut" />
      <Member Name="get_Name" />
      <Member Name="get_Position" />
      <Member Name="GetToken" />
      <Member Name="SetConstant(System.Object)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="IsIn" />
      <Member MemberType="Property" Name="IsOptional" />
      <Member MemberType="Property" Name="IsOut" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Position" />
    </Type>
    <Type Name="System.Reflection.Emit.ParameterToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.ParameterToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.PEFileKinds">
      <Member MemberType="Field" Name="ConsoleApplication" />
      <Member MemberType="Field" Name="Dll" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="WindowApplication" />
    </Type>
    <Type Name="System.Reflection.Emit.PropertyBuilder">
      <Member Name="AddOtherMethod(System.Reflection.Emit.MethodBuilder)" />
      <Member Name="get_Attributes" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanWrite" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_PropertyToken" />
      <Member Name="get_PropertyType" />
      <Member Name="get_ReflectedType" />
      <Member Name="GetAccessors(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetGetMethod(System.Boolean)" />
      <Member Name="GetIndexParameters" />
      <Member Name="GetSetMethod(System.Boolean)" />
      <Member Name="GetValue(System.Object,System.Object[])" />
      <Member Name="GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="SetConstant(System.Object)" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetGetMethod(System.Reflection.Emit.MethodBuilder)" />
      <Member Name="SetSetMethod(System.Reflection.Emit.MethodBuilder)" />
      <Member Name="SetValue(System.Object,System.Object,System.Object[])" />
      <Member Name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="PropertyToken" />
      <Member MemberType="Property" Name="PropertyType" />
      <Member MemberType="Property" Name="ReflectedType" />
    </Type>
    <Type Name="System.Reflection.Emit.PropertyToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.PropertyToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.SignatureHelper">
      <Member Name="AddArgument(System.Type)" />
      <Member Name="AddArgument(System.Type,System.Boolean)" />
      <Member Name="AddArgument(System.Type,System.Type[],System.Type[])" />
      <Member Name="AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="AddSentinel" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetFieldSigHelper(System.Reflection.Module)" />
      <Member Name="GetHashCode" />
      <Member Name="GetLocalVarSigHelper" />
      <Member Name="GetLocalVarSigHelper(System.Reflection.Module)" />
      <Member Name="GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <Member Name="GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <Member Name="GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <Member Name="GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <Member Name="GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <Member Name="GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <Member Name="GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="GetSignature" />
      <Member Name="ToString" />
    </Type>
    <Type Name="System.Reflection.Emit.SignatureToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.SignatureToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.StackBehaviour">
      <Member MemberType="Field" Name="Pop0" />
      <Member MemberType="Field" Name="Pop1" />
      <Member MemberType="Field" Name="Pop1_pop1" />
      <Member MemberType="Field" Name="Popi" />
      <Member MemberType="Field" Name="Popi_pop1" />
      <Member MemberType="Field" Name="Popi_popi" />
      <Member MemberType="Field" Name="Popi_popi_popi" />
      <Member MemberType="Field" Name="Popi_popi8" />
      <Member MemberType="Field" Name="Popi_popr4" />
      <Member MemberType="Field" Name="Popi_popr8" />
      <Member MemberType="Field" Name="Popref" />
      <Member MemberType="Field" Name="Popref_pop1" />
      <Member MemberType="Field" Name="Popref_popi" />
      <Member MemberType="Field" Name="Popref_popi_pop1" />
      <Member MemberType="Field" Name="Popref_popi_popi" />
      <Member MemberType="Field" Name="Popref_popi_popi8" />
      <Member MemberType="Field" Name="Popref_popi_popr4" />
      <Member MemberType="Field" Name="Popref_popi_popr8" />
      <Member MemberType="Field" Name="Popref_popi_popref" />
      <Member MemberType="Field" Name="Push0" />
      <Member MemberType="Field" Name="Push1" />
      <Member MemberType="Field" Name="Push1_push1" />
      <Member MemberType="Field" Name="Pushi" />
      <Member MemberType="Field" Name="Pushi8" />
      <Member MemberType="Field" Name="Pushr4" />
      <Member MemberType="Field" Name="Pushr8" />
      <Member MemberType="Field" Name="Pushref" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Varpop" />
      <Member MemberType="Field" Name="Varpush" />
    </Type>
    <Type Name="System.Reflection.Emit.StringToken">
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.StringToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.Emit.TypeBuilder">
      <Member MemberType="Field" Name="UnspecifiedTypeSize" />
      <Member Name="AddInterfaceImplementation(System.Type)" />
      <Member Name="CreateType" />
      <Member Name="IsAssignableFrom(System.Reflection.TypeInfo)" />
      <Member Name="CreateTypeInfo" />
      <Member Name="DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])" />
      <Member Name="DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="DefineDefaultConstructor(System.Reflection.MethodAttributes)" />
      <Member Name="DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)" />
      <Member Name="DefineField(System.String,System.Type,System.Reflection.FieldAttributes)" />
      <Member Name="DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)" />
      <Member Name="DefineGenericParameters(System.String[])" />
      <Member Name="DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <Member Name="DefineMethod(System.String,System.Reflection.MethodAttributes)" />
      <Member Name="DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)" />
      <Member Name="DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <Member Name="DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <Member Name="DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" />
      <Member Name="DefineNestedType(System.String)" />
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes)" />
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" /> 
      <Member Name="DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <Member Status="ApiFxInternal" Name="DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <Member Status="ApiFxInternal" Name="DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <Member Status="ApiFxInternal" Name="DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <Member Name="DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])" />
      <Member Name="DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <Member Name="DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <Member Name="DefineTypeInitializer" />
      <Member Name="DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <Member Name="get_Assembly" />
      <Member Name="get_AssemblyQualifiedName" />
      <Member Name="get_BaseType" />
      <Member Name="get_DeclaringMethod" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_FullName" />
      <Member Name="get_GenericParameterAttributes" />
      <Member Name="get_GenericParameterPosition" />
      <Member Name="get_GUID" />
      <Member Name="get_IsGenericParameter" />
      <Member Name="get_IsGenericType" />
      <Member Name="get_IsGenericTypeDefinition" />
      <Member Name="get_Module" />
      <Member Name="get_Name" />
      <Member Name="get_Namespace" />
      <Member Name="get_PackingSize" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_Size" />
      <Member Name="get_TypeHandle" />
      <Member Name="get_TypeToken" />
      <Member Name="get_UnderlyingSystemType" />
      <Member Name="GetAttributeFlagsImpl" />
      <Member Name="GetConstructor(System.Type,System.Reflection.ConstructorInfo)" />
      <Member Name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetConstructors(System.Reflection.BindingFlags)" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetElementType" />
      <Member Name="GetEvent(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetEvents" />
      <Member Name="GetEvents(System.Reflection.BindingFlags)" />
      <Member Name="GetField(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetField(System.Type,System.Reflection.FieldInfo)" />
      <Member Name="GetFields(System.Reflection.BindingFlags)" />
      <Member Name="GetGenericArguments" />
      <Member Name="GetGenericTypeDefinition" />
      <Member Name="GetInterface(System.String,System.Boolean)" />
      <Member Name="GetInterfaceMap(System.Type)" />
      <Member Name="GetInterfaces" />
      <Member Name="GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <Member Name="GetMembers(System.Reflection.BindingFlags)" />
      <Member Name="GetMethod(System.Type,System.Reflection.MethodInfo)" />
      <Member Name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethods(System.Reflection.BindingFlags)" />
      <Member Name="GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetNestedTypes(System.Reflection.BindingFlags)" />
      <Member Name="GetProperties(System.Reflection.BindingFlags)" />
      <Member Name="GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="HasElementTypeImpl" />
      <Member Name="InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <Member Name="IsArrayImpl" />
      <Member Name="IsAssignableFrom(System.Type)" />
      <Member Name="IsByRefImpl" />
      <Member Name="IsCOMObjectImpl" />
      <Member Name="IsCreated" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="IsPointerImpl" />
      <Member Name="IsPrimitiveImpl" />
      <Member Name="IsSubclassOf(System.Type)" />
      <Member Name="MakeArrayType" />
      <Member Name="MakeArrayType(System.Int32)" />
      <Member Name="MakeByRefType" />
      <Member Name="MakeGenericType(System.Type[])" />
      <Member Name="MakePointerType" />
      <Member Name="SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <Member Name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <Member Name="SetParent(System.Type)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Assembly" />
      <Member MemberType="Property" Name="AssemblyQualifiedName" />
      <Member MemberType="Property" Name="BaseType" />
      <Member MemberType="Property" Name="DeclaringMethod" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="GenericParameterAttributes" />
      <Member MemberType="Property" Name="GenericParameterPosition" />
      <Member MemberType="Property" Name="GUID" />
      <Member MemberType="Property" Name="IsGenericParameter" />
      <Member MemberType="Property" Name="IsGenericType" />
      <Member MemberType="Property" Name="IsGenericTypeDefinition" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Namespace" />
      <Member MemberType="Property" Name="PackingSize" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="Size" />
      <Member MemberType="Property" Name="TypeHandle" />
      <Member MemberType="Property" Name="TypeToken" />
      <Member MemberType="Property" Name="UnderlyingSystemType" />
    </Type>
    <Type Name="System.Reflection.Emit.TypeToken">
      <Member MemberType="Field" Name="Empty" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Reflection.Emit.TypeToken)" />
      <Member Name="get_Token" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)" />
      <Member Name="op_Inequality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)" />
      <Member MemberType="Property" Name="Token" />
    </Type>
    <Type Name="System.Reflection.EventAttributes">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="RTSpecialName" />
      <Member MemberType="Field" Name="SpecialName" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.EventInfo">
      <Member Name="#ctor" />
      <Member Name="AddEventHandler(System.Object,System.Delegate)" />
      <Member Name="get_Attributes" />
      <Member Name="get_AddMethod" />
      <Member Name="get_RaiseMethod" />
      <Member Name="get_RemoveMethod" />
      <Member Name="get_EventHandlerType" />
      <Member Name="get_IsMulticast" />
      <Member Name="get_IsSpecialName" />
      <Member Name="get_MemberType" />
      <Member Name="GetAddMethod" />
      <Member Name="GetAddMethod(System.Boolean)" />
      <Member Name="GetRaiseMethod" />
      <Member Name="GetRaiseMethod(System.Boolean)" />
      <Member Name="GetRemoveMethod" />
      <Member Name="GetRemoveMethod(System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="RemoveEventHandler(System.Object,System.Delegate)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="AddMethod" />      
      <Member MemberType="Property" Name="RaiseMethod" />      
      <Member MemberType="Property" Name="RemoveMethod" />            
      <Member MemberType="Property" Name="EventHandlerType" />
      <Member MemberType="Property" Name="IsMulticast" />
      <Member MemberType="Property" Name="IsSpecialName" />
      <Member MemberType="Property" Name="MemberType" />
    </Type>
    <Type Name="System.Reflection.FieldAttributes">
      <Member MemberType="Field" Name="Assembly" />
      <Member MemberType="Field" Name="FamANDAssem" />
      <Member MemberType="Field" Name="Family" />
      <Member MemberType="Field" Name="FamORAssem" />
      <Member MemberType="Field" Name="FieldAccessMask" />
      <Member MemberType="Field" Name="HasDefault" />
      <Member MemberType="Field" Name="HasFieldMarshal" />
      <Member MemberType="Field" Name="HasFieldRVA" />
      <Member MemberType="Field" Name="InitOnly" />
      <Member MemberType="Field" Name="Literal" />
      <Member MemberType="Field" Name="NotSerialized" />
      <Member MemberType="Field" Name="PinvokeImpl" />
      <Member MemberType="Field" Name="Private" />
      <Member MemberType="Field" Name="PrivateScope" />
      <Member MemberType="Field" Name="Public" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="RTSpecialName" />
      <Member MemberType="Field" Name="SpecialName" />
      <Member MemberType="Field" Name="Static" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.FieldInfo">
      <Member Name="#ctor" />
      <Member Name="get_Attributes" />
      <Member Name="get_FieldHandle" />
      <Member Name="get_FieldType" />
      <Member Name="get_IsAssembly" />
      <Member Name="get_IsFamily" />
      <Member Name="get_IsFamilyAndAssembly" />
      <Member Name="get_IsFamilyOrAssembly" />
      <Member Name="get_IsInitOnly" />
      <Member Name="get_IsLiteral" />
      <Member Name="get_IsNotSerialized" />
      <Member Name="get_IsPinvokeImpl" />
      <Member Name="get_IsPrivate" />
      <Member Name="get_IsPublic" />
      <Member Name="get_IsSpecialName" />
      <Member Name="get_IsStatic" />
      <Member Name="get_MemberType" />
      <Member Name="GetFieldFromHandle(System.RuntimeFieldHandle)" />
      <Member Name="GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <Member Name="GetValue(System.Object)" />
      <Member Name="GetRawConstantValue" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="SetValue(System.Object,System.Object)" />
      <Member Name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="FieldHandle" />
      <Member MemberType="Property" Name="FieldType" />
      <Member MemberType="Property" Name="IsAssembly" />
      <Member MemberType="Property" Name="IsFamily" />
      <Member MemberType="Property" Name="IsFamilyAndAssembly" />
      <Member MemberType="Property" Name="IsFamilyOrAssembly" />
      <Member MemberType="Property" Name="IsInitOnly" />
      <Member MemberType="Property" Name="IsLiteral" />
      <Member MemberType="Property" Name="IsNotSerialized" />
      <Member MemberType="Property" Name="IsPinvokeImpl" />
      <Member MemberType="Property" Name="IsPrivate" />
      <Member MemberType="Property" Name="IsPublic" />
      <Member MemberType="Property" Name="IsSpecialName" />
      <Member MemberType="Property" Name="IsStatic" />
      <Member MemberType="Property" Name="MemberType" />
    </Type>
    <Type Name="System.Reflection.ICustomAttributeProvider">
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
    </Type>
    <Type Name="System.Reflection.InterfaceMapping">
      <Member MemberType="Field" Name="InterfaceMethods" />
      <Member MemberType="Field" Name="InterfaceType" />
      <Member MemberType="Field" Name="TargetMethods" />
      <Member MemberType="Field" Name="TargetType" />
    </Type>
    <Type Name="System.Reflection.IReflect" />
    <Type Status="ImplRoot" Name="System.Reflection.LoaderAllocator">
      <Member Status="ImplRoot" Name="#ctor" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_slots" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_slotsUsed" />
    </Type>
    <Type Status="ApiRoot" Name="System.Reflection.ManifestResourceInfo">
      <Member Name="#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)" />
      <Member MemberType="Property" Name="FileName" />
      <Member MemberType="Property" Name="ReferencedAssembly" />
      <Member MemberType="Property" Name="ResourceLocation" />
    </Type>
    <Type Name="System.Reflection.MemberInfo">
      <Member Name="#ctor" />
      <Member Name="get_CustomAttributes" />      
      <Member Name="get_DeclaringType" />
      <Member Name="get_MemberType" />
      <Member Name="get_MetadataToken" />
      <Member Name="get_Name" />
      <Member Name="get_ReflectedType" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member MemberType="Property" Name="CustomAttributes" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="MemberType" />
      <Member MemberType="Property" Name="MetadataToken" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ReflectedType" />
    </Type>
    <Type Name="System.Reflection.MemberTypes">
      <Member MemberType="Field" Name="All" />
      <Member MemberType="Field" Name="Constructor" />
      <Member MemberType="Field" Name="Custom" />
      <Member MemberType="Field" Name="Event" />
      <Member MemberType="Field" Name="Field" />
      <Member MemberType="Field" Name="Method" />
      <Member MemberType="Field" Name="NestedType" />
      <Member MemberType="Field" Name="Property" />
      <Member MemberType="Field" Name="TypeInfo" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.MethodAttributes">
      <Member MemberType="Field" Name="Abstract" />
      <Member MemberType="Field" Name="Assembly" />
      <Member MemberType="Field" Name="FamANDAssem" />
      <Member MemberType="Field" Name="Family" />
      <Member MemberType="Field" Name="FamORAssem" />
      <Member MemberType="Field" Name="Final" />
      <Member MemberType="Field" Name="HasSecurity" />
      <Member MemberType="Field" Name="HideBySig" />
      <Member MemberType="Field" Name="MemberAccessMask" />
      <Member MemberType="Field" Name="NewSlot" />
      <Member MemberType="Field" Name="PinvokeImpl" />
      <Member MemberType="Field" Name="Private" />
      <Member MemberType="Field" Name="PrivateScope" />
      <Member MemberType="Field" Name="Public" />
      <Member MemberType="Field" Name="RequireSecObject" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="ReuseSlot" />
      <Member MemberType="Field" Name="RTSpecialName" />
      <Member MemberType="Field" Name="SpecialName" />
      <Member MemberType="Field" Name="Static" />
      <Member MemberType="Field" Name="UnmanagedExport" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Virtual" />
      <Member MemberType="Field" Name="VtableLayoutMask" />
    </Type>
    <Type Name="System.Reflection.MethodBase">
      <Member Name="#ctor" />
      <Member Name="get_Attributes" />
      <Member Name="get_CallingConvention" />
      <Member Name="get_ContainsGenericParameters" />
      <Member Name="get_IsAbstract" />
      <Member Name="get_IsAssembly" />
      <Member Name="get_IsConstructor" />
      <Member Name="get_IsFamily" />
      <Member Name="get_IsFamilyAndAssembly" />
      <Member Name="get_IsFamilyOrAssembly" />
      <Member Name="get_IsFinal" />
      <Member Name="get_IsGenericMethod" />
      <Member Name="get_IsGenericMethodDefinition" />
      <Member Name="get_IsHideBySig" />
      <Member Name="get_IsPrivate" />
      <Member Name="get_IsPublic" />
      <Member Name="get_IsSpecialName" />
      <Member Name="get_IsStatic" />
      <Member Name="get_IsVirtual" />
      <Member Name="get_MethodHandle" />     
      <Member Name="get_MethodImplementationFlags" />            
      <!--
      <Member Name="get_IsSecurityCritical" />
      <Member Name="get_IsSecuritySafeCritical" />
      <Member Name="get_IsSecurityTransparent" />      
      -->
      <Member Name="GetGenericArguments" />
      <Member Status="ImplRoot" Name="GetMethodDesc" />
      <Member Name="GetMethodFromHandle(System.RuntimeMethodHandle)" />
      <Member Name="GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
      <Member Name="GetMethodImplementationFlags" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetParameters" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="Invoke(System.Object,System.Object[])" />
      <Member Name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CallingConvention" />
      <Member MemberType="Property" Name="ContainsGenericParameters" />
      <Member MemberType="Property" Name="IsAbstract" />
      <Member MemberType="Property" Name="IsAssembly" />
      <Member MemberType="Property" Name="IsConstructor" />
      <Member MemberType="Property" Name="IsFamily" />
      <Member MemberType="Property" Name="IsFamilyAndAssembly" />
      <Member MemberType="Property" Name="IsFamilyOrAssembly" />
      <Member MemberType="Property" Name="IsFinal" />
      <Member MemberType="Property" Name="IsGenericMethod" />
      <Member MemberType="Property" Name="IsGenericMethodDefinition" />
      <Member MemberType="Property" Name="IsHideBySig" />
      <Member MemberType="Property" Name="IsPrivate" />
      <Member MemberType="Property" Name="IsPublic" />
      <Member MemberType="Property" Name="IsSpecialName" />
      <Member MemberType="Property" Name="IsStatic" />
      <Member MemberType="Property" Name="IsVirtual" />
      <Member MemberType="Property" Name="MethodHandle" />
      <Member MemberType="Property" Name="MethodImplementationFlags" />      
      <Member Name="GetCurrentMethod" />
    </Type>
    <Type Name="System.Reflection.MethodImplAttributes">
      <Member MemberType="Field" Name="AggressiveInlining" />
      <Member MemberType="Field" Name="CodeTypeMask" />
      <Member MemberType="Field" Name="ForwardRef" />
      <Member MemberType="Field" Name="IL" />
      <Member MemberType="Field" Name="InternalCall" />
      <Member MemberType="Field" Name="Managed" />
      <Member MemberType="Field" Name="ManagedMask" />
      <Member MemberType="Field" Name="MaxMethodImplVal" />
      <Member MemberType="Field" Name="Native" />
      <Member MemberType="Field" Name="NoInlining" />
      <Member MemberType="Field" Name="OPTIL" />
      <Member MemberType="Field" Name="PreserveSig" />
      <Member MemberType="Field" Name="Runtime" />
      <Member MemberType="Field" Name="Synchronized" />
      <Member MemberType="Field" Name="Unmanaged" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.MethodInfo">
      <Member Name="#ctor" />
      <Member Name="get_MemberType" />
      <Member Name="get_ReturnParameter" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_ReturnType" />
      <Member Name="get_ReturnTypeCustomAttributes" />
      <Member Name="GetBaseDefinition" />
      <Member Name="GetGenericArguments" />
      <Member Name="GetGenericMethodDefinition" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="MakeGenericMethod(System.Type[])" />
      <Member MemberType="Property" Name="MemberType" />
      <Member MemberType="Property" Name="ReturnParameter" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="ReturnType" />
      <Member MemberType="Property" Name="ReturnTypeCustomAttributes" />
    </Type>
    <Type Name="System.Reflection.Missing">
      <Member MemberType="Field" Name="Value" />
    </Type>
    <Type Name="System.Reflection.Module">
      <Member Name="#ctor" />
      <Member Name="get_Assembly" />
      <Member Name="get_CustomAttributes" />      
      <Member Status="ApiFxInternal" Name="get_FullyQualifiedName" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="get_FullyQualifiedName" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_MetadataToken" />
      <Member Name="get_ModuleVersionId" />
      <Member Name="get_Name" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="GetField(System.String)" />
      <Member Name="GetField(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetFields" />
      <Member Name="GetFields(System.Reflection.BindingFlags)" />
      <Member Name="GetMethod(System.String)" />
      <Member Name="GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethod(System.String,System.Type[])" />
      <Member Name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethods" />
      <Member Name="GetMethods(System.Reflection.BindingFlags)" />
      <Member Name="GetType(System.String)" />
      <Member Name="GetType(System.String,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetType(System.String,System.Boolean,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetTypes" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member Name="ResolveMethod(System.Int32)" />
      <Member Name="ResolveMethod(System.Int32,System.Type[],System.Type[])" />
      <Member Name="ResolveField(System.Int32)" />
      <Member Name="ResolveField(System.Int32,System.Type[],System.Type[])" />
      <Member Name="ResolveString(System.Int32)" />
      <Member Name="ResolveType(System.Int32)" />
      <Member Name="ResolveType(System.Int32,System.Type[],System.Type[])" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Assembly" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="FullyQualifiedName" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="CustomAttributes" />            
      <Member MemberType="Property" Name="FullyQualifiedName" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="MetadataToken" />
      <Member MemberType="Property" Name="ModuleVersionId" />
      <Member MemberType="Property" Name="Name" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.RuntimeModule">
      <Member Status="ImplRoot" MemberType="Field" Name="m_pData" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="m_pFields" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="m_pGlobals" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="m_pRefClass" /> <!-- EE -->
      <Member Status="ImplRoot" MemberType="Field" Name="m_runtimeType" /> <!-- EE -->
    </Type>
    <Type Name="System.Reflection.ParameterAttributes">
      <Member MemberType="Field" Name="HasDefault" />
      <Member MemberType="Field" Name="HasFieldMarshal" />
      <Member MemberType="Field" Name="In" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Optional" />
      <Member MemberType="Field" Name="Out" />
      <Member MemberType="Field" Name="Reserved3" />
      <Member MemberType="Field" Name="Reserved4" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="Retval" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.ParameterInfo">
      <Member Name="#ctor" />
      <Member Name="get_Attributes" />
      <Member Name="get_CustomAttributes" />            
      <Member Name="get_DefaultValue" />
      <Member Name="get_HasDefaultValue" />
      <Member Name="get_IsOptional" />
      <Member Name="get_IsOut" />        
      <Member Name="get_IsIn" />        
      <Member Name="get_IsRetval" />              
      <Member Name="get_Member" />
      <Member Name="get_MetadataToken" />
      <Member Name="get_Name" />
      <Member Name="get_ParameterType" />
      <Member Name="get_Position" />
      <Member Name="get_RawDefaultValue" />
      <Member Name="GetCustomAttributes(System.Boolean)" />
      <Member Name="GetCustomAttributes(System.Type,System.Boolean)" />
      <Member Name="IsDefined(System.Type,System.Boolean)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CustomAttributes" />                  
      <Member MemberType="Property" Name="DefaultValue" />
      <Member MemberType="Property" Name="HasDefaultValue" />
      <Member MemberType="Property" Name="IsOptional" />
      <Member MemberType="Property" Name="IsOut" />       
      <Member MemberType="Property" Name="IsIn" />         
      <Member MemberType="Property" Name="IsRetval" />               
      <Member MemberType="Property" Name="Member" />
      <Member MemberType="Property" Name="MetadataToken" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="ParameterType" />
      <Member MemberType="Property" Name="Position" /> 
      <Member MemberType="Property" Name="RawDefaultValue" />
    </Type>
    <Type Name="System.Reflection.ParameterModifier">
      <Member Name="#ctor(System.Int32)" />
      <Member Name="get_Item(System.Int32)" />
      <Member Name="set_Item(System.Int32,System.Boolean)" />
      <Member MemberType="Property" Name="Item(System.Int32)" />
    </Type>
    <Type Name="System.Reflection.PropertyAttributes">
      <Member MemberType="Field" Name="HasDefault" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Reserved2" />
      <Member MemberType="Field" Name="Reserved3" />
      <Member MemberType="Field" Name="Reserved4" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="RTSpecialName" />
      <Member MemberType="Field" Name="SpecialName" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Reflection.PropertyInfo">
      <Member Name="#ctor" />
      <Member Name="get_Attributes" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanWrite" />
      <Member Name="get_GetMethod" />      
      <Member Name="get_IsSpecialName" />
      <Member Name="get_MemberType" />
      <Member Name="get_PropertyType" />
      <Member Name="get_SetMethod" />            
      <Member Name="GetAccessors" />
      <Member Name="GetAccessors(System.Boolean)" />
      <Member Name="GetConstantValue" />
      <Member Name="GetGetMethod" />
      <Member Name="GetGetMethod(System.Boolean)" />
      <Member Name="GetIndexParameters" />
      <Member Name="GetRawConstantValue" />
      <Member Name="GetSetMethod" />
      <Member Name="GetSetMethod(System.Boolean)" />
      <Member Name="GetValue(System.Object)" />
      <Member Name="GetValue(System.Object,System.Object[])" />
      <Member Name="GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />      
      <Member Name="SetValue(System.Object,System.Object)" />      
      <Member Name="SetValue(System.Object,System.Object,System.Object[])" />
      <Member Name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />

      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="GetMethod" />
      <Member MemberType="Property" Name="SetMethod" />      
      <Member MemberType="Property" Name="IsSpecialName" />
      <Member MemberType="Property" Name="MemberType" />
      <Member MemberType="Property" Name="PropertyType" />
    </Type>
    <Type Name="System.Reflection.TargetException" />
    <Type Name="System.Reflection.TargetInvocationException">
      <Member Name="#ctor(System.Exception)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Reflection.TargetParameterCountException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Reflection.TypeAttributes">
      <Member MemberType="Field" Name="Abstract" />
      <Member MemberType="Field" Name="AnsiClass" />
      <Member MemberType="Field" Name="AutoClass" />
      <Member MemberType="Field" Name="AutoLayout" />
      <Member MemberType="Field" Name="BeforeFieldInit" />
      <Member MemberType="Field" Name="Class" />
      <Member MemberType="Field" Name="ClassSemanticsMask" />
      <Member MemberType="Field" Name="ExplicitLayout" />
      <Member MemberType="Field" Name="HasSecurity" />
      <Member MemberType="Field" Name="Import" />
      <Member MemberType="Field" Name="Interface" />
      <Member MemberType="Field" Name="LayoutMask" />
      <Member MemberType="Field" Name="NestedAssembly" />
      <Member MemberType="Field" Name="NestedFamANDAssem" />
      <Member MemberType="Field" Name="NestedFamily" />
      <Member MemberType="Field" Name="NestedFamORAssem" />
      <Member MemberType="Field" Name="NestedPrivate" />
      <Member MemberType="Field" Name="NestedPublic" />
      <Member MemberType="Field" Name="NotPublic" />
      <Member MemberType="Field" Name="Public" />
      <Member MemberType="Field" Name="ReservedMask" />
      <Member MemberType="Field" Name="RTSpecialName" />
      <Member MemberType="Field" Name="Sealed" />
      <Member MemberType="Field" Name="SequentialLayout" />
      <Member MemberType="Field" Name="Serializable" />
      <Member MemberType="Field" Name="SpecialName" />
      <Member MemberType="Field" Name="StringFormatMask" />
      <Member MemberType="Field" Name="UnicodeClass" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VisibilityMask" />
    </Type>
    <Type Name="System.Reflection.TypeDelegator">
        <Member Name="#ctor" />
        <Member Name="#ctor(System.Type)" />
        <Member Name="get_MetadataToken" />
        <Member MemberType="Property" Name="MetadataToken" />
    </Type>
    <Type Name="System.ResolveEventArgs">
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Reflection.Assembly)" />
      <Member Name="get_Name" />
      <Member MemberType="Property" Name="Name" />
      <Member Name="get_RequestingAssembly" />
      <Member MemberType="Property" Name="RequestingAssembly" />
    </Type>
    <Type Name="System.ResolveEventHandler" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,System.ResolveEventArgs,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object,System.ResolveEventArgs)" />
    </Type>
    <Type Name="System.Resources.IResourceReader">
      <Member Name="Close" />
      <Member Name="GetEnumerator" />
    </Type>
    <Type Name="System.Resources.MissingManifestResourceException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Resources.NeutralResourcesLanguageAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Resources.UltimateResourceFallbackLocation)" />
      <Member Name="get_CultureName" />
      <Member MemberType="Property" Name="CultureName" />
      <Member Name="get_Location" />
      <Member MemberType="Property" Name="Location" />
    </Type>
    <Type Name="System.Resources.ResourceManager">
      <Member MemberType="Field" Name="BaseNameField" />
      <Member MemberType="Field" Name="HeaderVersionNumber" />
      <Member MemberType="Field" Name="MagicNumber" />
      <Member MemberType="Field" Name="MainAssembly" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String,System.Reflection.Assembly)" />
      <Member Name="#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <Member Name="#ctor(System.Type)" />
      <Member Name="get_BaseName" />
      <Member Name="get_IgnoreCase" />
      <Member Name="get_ResourceSetType" />
      <Member Name="GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <Member Name="GetObject(System.String)" />
      <Member Name="GetObject(System.String,System.Globalization.CultureInfo)" />
      <Member Name="GetResourceFileName(System.Globalization.CultureInfo)" />
      <Member Name="GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <Member Name="GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <Member Name="GetStream(System.String)" />
      <Member Name="GetStream(System.String,System.Globalization.CultureInfo)" />        
      <Member Name="GetString(System.String)" />
      <Member Name="GetString(System.String,System.Globalization.CultureInfo)" />
      <Member Name="InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <Member Name="ReleaseAllResources" />
      <Member Name="set_IgnoreCase(System.Boolean)" />
      <Member MemberType="Property" Name="BaseName" />
      <Member MemberType="Property" Name="IgnoreCase" />
      <Member MemberType="Property" Name="ResourceSetType" />
    </Type>
    <Type Name="System.Resources.ResourceSet">
      <Member MemberType="Field" Name="Reader" />
      <Member MemberType="Field" Name="Table" />
      <Member Name="#ctor" />
      <Member Status="ApiFxInternal" Name="#ctor(System.IO.Stream)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.IO.Stream)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Resources.IResourceReader)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GetDefaultReader" />
      <Member Name="GetEnumerator" />
      <Member Name="GetObject(System.String)" />
      <Member Name="GetObject(System.String,System.Boolean)" />
      <Member Name="GetString(System.String)" />
      <Member Name="GetString(System.String,System.Boolean)" />
      <Member Name="ReadResources" />
    </Type>
    <Type Name="System.Resources.SatelliteContractVersionAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Version" />
      <Member MemberType="Property" Name="Version" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_PropertyName" />
      <Member MemberType="Property" Name="PropertyName" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CompilationRelaxations">
      <Member MemberType="Field" Name="NoStringInterning" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Runtime.CompilerServices.CompilationRelaxations)" />
      <Member MemberType="Property" Name="CompilationRelaxations" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CallConvCdecl" /> <!-- for MC++ -->
    <Type Name="System.Runtime.CompilerServices.CallConvStdcall" /> <!-- for MC++ -->
    <Type Name="System.Runtime.CompilerServices.CallConvThiscall" /> <!-- for MC++ -->
    <Type Name="System.Runtime.CompilerServices.CallConvFastcall" /> <!-- for MC++ -->
    <Type Name="System.Runtime.CompilerServices.CompilerMarshalOverride" />
    <Type Name="System.Runtime.CompilerServices.CustomConstantAttribute">
      <Member Name="#ctor" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <!-- If we do a Silverlight 6 release, this ContractHelper should be public in Silverlight. Tools may be able to work without it, but it helps if it's there. -->
    <Type Name="System.Runtime.CompilerServices.ContractHelper">
      <Member Name="RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)" />
      <Member Name="TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <Member Name="#ctor(System.Int64)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.DecimalConstantAttribute">
      <Member Name="#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ExtensionAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.FixedBufferAttribute">
      <Member Name="#ctor(System.Type,System.Int32)" />
      <Member Name="get_ElementType" />
      <Member Name="get_Length" />
      <Member MemberType="Property" Name="ElementType" />
      <Member MemberType="Property" Name="Length" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
      <Member Name="#ctor" /> 
    </Type>
    <Type Name="System.Runtime.CompilerServices.FormattableStringFactory">
      <Member Name="Create(System.String,System.Object[])" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.CompilerServices.FriendAccessAllowedAttribute" />
    <Type Name="System.Runtime.CompilerServices.IndexerNameAttribute">
      <Member Name="#ctor(System.String)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_AssemblyName" />
      <Member MemberType="Property" Name="AllInternalsVisible" />
      <Member MemberType="Property" Name="AssemblyName" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.CompilerServices.JitHelpers">
      <Member Status="ImplRoot" Name="UnsafeEnumCastLong&lt;T&gt;(T)" />
      <Member Status="ImplRoot" Name="UnsafeEnumCastLongInternal&lt;T&gt;(T)" Condition="DEBUG" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.SpecialNameAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.UnsafeValueTypeAttribute"> <!-- C# 3.0 compiler requires this type -->
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.SuppressMergeCheckAttribute"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.RequiredAttributeAttribute"> <!-- for MC++ -->
      <Member Name="#ctor(System.Type)" />
      <Member Name="get_RequiredContract" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsBoxed"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsByValue"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsConst"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsCopyConstructed"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.ICastable"> 
      <Member Name="IsInstanceOfInterface(System.RuntimeTypeHandle,System.Exception@)" /> <!-- EE -->
      <Member Name="GetImplType(System.RuntimeTypeHandle)" /> <!-- EE -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsExplicitlyDereferenced"> <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsImplicitlyDereferenced">  <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsLong">  <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsJitIntrinsic">  <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsSignUnspecifiedByte">  <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsUdtReturn">  <!-- for MC++ -->
    </Type>
    <Type Name="System.Runtime.CompilerServices.NativeCppClassAttribute">  <!-- for MC++ -->
      <Member Name="#ctor" /> 
    </Type>
    <Type Name="System.Runtime.CompilerServices.IsVolatile" />  <!-- for MC++ -->
    <Type Name="System.Runtime.CompilerServices.MethodCodeType">
      <Member MemberType="Field" Name="IL" />
      <Member MemberType="Field" Name="Native" />
      <Member MemberType="Field" Name="OPTIL" />
      <Member MemberType="Field" Name="Runtime" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.MethodImplAttribute">
      <Member MemberType="Field" Name="MethodCodeType" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int16)" />
      <Member Name="#ctor(System.Runtime.CompilerServices.MethodImplOptions)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
      <Member Status="ImplRoot" Name="#ctor(System.Reflection.MethodImplAttributes)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.MethodImplOptions">
      <Member MemberType="Field" Name="AggressiveInlining" />
      <Member MemberType="Field" Name="ForwardRef" />
      <Member MemberType="Field" Name="InternalCall" />
      <Member MemberType="Field" Name="NoInlining" />
      <Member MemberType="Field" Name="PreserveSig" />
      <Member MemberType="Field" Name="Synchronized" />
      <Member MemberType="Field" Name="Unmanaged" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.RuntimeHelpers">
      <Member Name="EnsureSufficientExecutionStack" />
      <Member Name="get_OffsetToStringData" />
      <Member Name="GetObjectValue(System.Object)" />
      <Member Name="InitializeArray(System.Array,System.RuntimeFieldHandle)" />
      <Member Name="GetHashCode(System.Object)" />
      <Member Name="RunClassConstructor(System.RuntimeTypeHandle)" />
      <Member MemberType="Property" Name="OffsetToStringData" />
      <Member Status="ImplRoot" Name="ExecuteBackoutCodeHelper(System.Object,System.Object,System.Boolean)" />
      <Member Status="ApiFxInternal" Name="PrepareConstrainedRegionsNoOP" />
      <Member Status="ApiFxInternal" Name="PrepareConstrainedRegions" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
      <Member Name="#ctor" />
      <Member Name="Add(TKey,TValue)" />
      <Member Name="Remove(TKey)" />
      <Member Name="TryGetValue(TKey,TValue@)" />
      <Member Name="GetValue(TKey,System.Runtime.CompilerServices.ConditionalWeakTable+CreateValueCallback)" />
      <Member Name="GetOrCreateValue(TKey)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
    </Type>
    <Type Name="System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="Description" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <Member Name="#ctor(System.Type)" />
      <Member MemberType="Property" Name="Destination" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="AssemblyFullName" />
    </Type>
    <!-- #if FEATURE_CORRUPTING_EXCEPTIONS -->
    <Type Name="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
      <Member Name="#ctor" />
    </Type>
    <!-- #endif FEATURE_CORRUPTING_EXCEPTIONS -->
    <!-- #if FEATURE_EXCEPTIONDISPATCHINFO -->
    <Type Status="ApiRoot" Name="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <Member Status="ApiRoot" Name="Capture(System.Exception)" />
      <Member Status="ApiRoot" Name="Throw" />
      <Member Name="get_SourceException" />
      <Member MemberType="Property" Name="SourceException" />
    </Type>
    <!-- #endif FEATURE_EXCEPTIONDISPATCHINFO -->
    <Type Name="System.Runtime.GCLatencyMode">
      <Member MemberType="Field" Name="Batch" />
      <Member MemberType="Field" Name="Interactive" />
      <Member MemberType="Field" Name="LowLatency" />
      <Member MemberType="Field" Name="SustainedLowLatency" />
    </Type>
    <Type Name="System.Runtime.GCSettings">
      <Member Name="get_IsServerGC" />
      <Member Name="get_LargeObjectHeapCompactionMode" />
      <Member Name="set_LargeObjectHeapCompactionMode(System.Runtime.GCLargeObjectHeapCompactionMode)" />
      <Member Name="get_LatencyMode" />
      <Member Name="set_LatencyMode(System.Runtime.GCLatencyMode)" />
      <Member MemberType="Property" Name="IsServerGC" />
      <Member MemberType="Property" Name="LargeObjectHeapCompactionMode" />
      <Member MemberType="Property" Name="LatencyMode" />
    </Type>
    <Type Name="System.Runtime.GCLargeObjectHeapCompactionMode">
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="CompactOnce" />
    </Type>
    <Type Name="System.Runtime.InteropServices.BStrWrapper">
      <Member Name="#ctor(System.Object)" />
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="WrappedObject" />
      <Member Name="get_WrappedObject" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CurrencyWrapper">
      <Member Name="#ctor(System.Decimal)" />
      <Member Name="#ctor(System.Object)" />
      <Member Name="get_WrappedObject" />
      <Member MemberType="Property" Name="WrappedObject" />  
    </Type>
    <Type Name="System.Runtime.InteropServices.DispatchWrapper">
      <Member Name="#ctor(System.Object)" />
      <Member Name="get_WrappedObject" />
      <Member MemberType="Property" Name="WrappedObject" />
    </Type>
    <Type Name="System.Runtime.InteropServices.UnknownWrapper">
      <Member Name="#ctor(System.Object)" />
      <Member MemberType="Property" Name="WrappedObject" />
      <Member Name="get_WrappedObject" />
    </Type>
    <Type Name="System.Runtime.InteropServices.VariantWrapper">
      <Member Name="#ctor(System.Object)" />
      <Member MemberType="Property" Name="WrappedObject" />
      <Member Name="get_WrappedObject" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ErrorWrapper">
      <Member Name="#ctor(System.Exception)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Object)" />
      <Member MemberType="Property" Name="ErrorCode" />
      <Member Name="get_ErrorCode" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.LCIDConversionAttribute" Condition="FEATURE_COMINTEROP" />
    <Type Name="System.Runtime.InteropServices.CallingConvention">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Winapi" />
      <Member MemberType="Field" Name="Cdecl" />
      <Member MemberType="Field" Name="StdCall" />
      <Member MemberType="Field" Name="ThisCall" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CharSet">
      <Member MemberType="Field" Name="Auto" />
      <Member MemberType="Field" Name="Unicode" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ClassInterfaceAttribute"> <!-- for VB -->
      <Member Name="#ctor(System.Int16)" />
      <Member Name="#ctor(System.Runtime.InteropServices.ClassInterfaceType)" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ClassInterfaceType"> <!-- for VB -->
      <Member MemberType="Field" Name="AutoDispatch" />
      <Member MemberType="Field" Name="AutoDual" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CoClassAttribute"> <!-- MC++ compiler asserts for no particularly good reason if this type is not public -->
      <Member Name="#ctor(System.Type)" />
      <Member MemberType="Property" Name="CoClass" />
      <Member Name="get_CoClass" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
      <Member Name="#ctor(System.Type)" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.COMException">
      <Member Name="#ctor(System.String,System.Int32)" />
      <Member Name="ToString" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComImportAttribute"> <!-- MC++ compiler asserts for no particularly good reason if this type is not public -->
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComInterfaceType">
      <Member MemberType="Field" Name="InterfaceIsDual" />
      <Member MemberType="Field" Name="InterfaceIsIUnknown" />
      <Member MemberType="Field" Name="InterfaceIsIDispatch" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="InterfaceIsIInspectable" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.FILETIME">
      <Member MemberType="Field" Name="dwHighDateTime" />
      <Member MemberType="Field" Name="dwLowDateTime" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.STATSTG">
      <Member MemberType="Field" Name="atime" />
      <Member MemberType="Field" Name="cbSize" />
      <Member MemberType="Field" Name="clsid" />
      <Member MemberType="Field" Name="ctime" />
      <Member MemberType="Field" Name="grfLocksSupported" />
      <Member MemberType="Field" Name="grfMode" />
      <Member MemberType="Field" Name="grfStateBits" />
      <Member MemberType="Field" Name="mtime" />
      <Member MemberType="Field" Name="pwcsName" />
      <Member MemberType="Field" Name="reserved" />
      <Member MemberType="Field" Name="type" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IStream">
      <Member Name="Read(System.Byte[],System.Int32,System.IntPtr)" />
      <Member Name="Write(System.Byte[],System.Int32,System.IntPtr)" />
      <Member Name="Seek(System.Int64,System.Int32,System.IntPtr)" />
      <Member Name="SetSize(System.Int64)" />
      <Member Name="CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)" />
      <Member Name="Commit(System.Int32)" />
      <Member Name="Revert" />
      <Member Name="LockRegion(System.Int64,System.Int64,System.Int32)" />
      <Member Name="UnlockRegion(System.Int64,System.Int64,System.Int32)" />
      <Member Name="Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)" />
      <Member Name="Clone(System.Runtime.InteropServices.ComTypes.IStream@)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.DefaultCharSetAttribute"> <!-- MC++ compiler asserts for no particularly good reason if this type is not public -->
      <Member Name="#ctor(System.Runtime.InteropServices.CharSet)" />
      <Member MemberType="Property" Name="CharSet" />
      <Member Name="get_CharSet" />
    </Type>
    <Type Name="System.Runtime.InteropServices.DispIdAttribute">
      <Member Name="#ctor(System.Int32)" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.DllImportAttribute">
      <Member MemberType="Field" Name="CallingConvention" />
      <Member MemberType="Field" Name="CharSet" />
      <Member MemberType="Field" Name="EntryPoint" />
      <Member MemberType="Field" Name="PreserveSig" />
      <Member MemberType="Field" Name="SetLastError" />
      <Member MemberType="Field" Name="BestFitMapping" />       <!-- forced by desktop implementation -->
      <Member MemberType="Field" Name="ExactSpelling" />        <!-- forced by desktop implementation -->
      <!-- <Member MemberType="Field" Name="ThrowOnUnmappableChar" /><!- - forced by desktop implementation -->
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
      <Member MemberType="Field" Name="ThrowOnUnmappableChar" />
    </Type>
    <Type Name="System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ExternalException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="get_ErrorCode" />
      <Member MemberType="Property" Name="ErrorCode" />
    </Type>
    <Type Name="System.Runtime.InteropServices.FieldOffsetAttribute">
      <Member Name="#ctor(System.Int32)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.GCHandle">
      <Member Name="AddrOfPinnedObject" />
      <Member Name="Alloc(System.Object)" />
      <Member Name="Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)" />
      <Member Name="Free" />
      <Member Name="FromIntPtr(System.IntPtr)" />
      <Member Name="get_IsAllocated" />
      <Member Name="get_Target" />      
      <Member Name="op_Explicit(System.IntPtr)" ReturnType="System.Runtime.InteropServices.GCHandle" />
      <Member Name="op_Explicit(System.Runtime.InteropServices.GCHandle)" ReturnType="System.IntPtr" />
      <Member Name="set_Target(System.Object)" />
      <Member Name="ToIntPtr(System.Runtime.InteropServices.GCHandle)" />
      <Member MemberType="Property" Name="IsAllocated" />
      <Member MemberType="Property" Name="Target" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)" />
      <Member Name="op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.GCHandleType">
      <Member MemberType="Field" Name="Normal" />
      <Member MemberType="Field" Name="Pinned" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Weak" />
      <Member MemberType="Field" Name="WeakTrackResurrection" />
    </Type>
    <Type Name="System.Runtime.InteropServices.GuidAttribute">
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ICustomQueryInterface">
      <Member Name="GetInterface(System.Guid@,System.IntPtr@)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.InAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.InterfaceTypeAttribute">
      <Member Name="#ctor(System.Runtime.InteropServices.ComInterfaceType)" />
      <Member Name="#ctor(System.Int16)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.InvalidComObjectException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.SafeArrayRankMismatchException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.SafeArrayTypeMismatchException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.LayoutKind">
      <Member MemberType="Field" Name="Auto" />
      <Member MemberType="Field" Name="Explicit" />
      <Member MemberType="Field" Name="Sequential" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Runtime.InteropServices.NativeCallableAttribute"> 
      <Member Name="#ctor" />
      <Member MemberType="Field" Name="CallingConvention" /> <!-- EE -->
      <Member MemberType="Field" Name="EntryPoint" /> <!-- EE -->
    </Type>
    <Type Name="System.Runtime.InteropServices.Marshal">
      <Member MemberType="Field" Name="SystemDefaultCharSize" />
      <Member Name="AddRef(System.IntPtr)" />
      <Member Name="AllocHGlobal(System.Int32)" />
      <Member Name="AllocCoTaskMem(System.Int32)" />
      <Member Name="Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="FinalReleaseComObject(System.Object)" />
      <Member Name="FreeHGlobal(System.IntPtr)" />
      <Member Name="FreeCoTaskMem(System.IntPtr)" />
      <Member Name="GetComInterfaceForObject(System.Object,System.Type)" />
      <Member Name="GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <Member Name="GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <Member Name="GetExceptionForHR(System.Int32)" />
      <Member Name="GetExceptionForHR(System.Int32,System.IntPtr)" />
      <Member Name="GetFunctionPointerForDelegate(System.Delegate)" />
      <Member Name="GetHRForException(System.Exception)" />
      <Member Status="ApiFxInternal" Name="GetHRForException_WinRT(System.Exception)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetIUnknownForObject(System.Object)" />
      <Member Name="GetLastWin32Error" />
      <Member Name="GetHRForLastWin32Error" />
      <Member Name="GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <Member Name="GetObjectForIUnknown(System.IntPtr)" />
      <Member Name="GetObjectForNativeVariant(System.IntPtr)" />
      <Member Name="GetUniqueObjectForIUnknown(System.IntPtr)" />
      <Member Name="InitializeManagedWinRTFactoryObject(System.Object,System.RuntimeType)" Condition="FEATURE_COMINTEROP" />
      <Member Name="IsComObject(System.Object)" />
      <Member Name="OffsetOf(System.Type,System.String)" />
      <Member Name="Prelink(System.Reflection.MethodInfo)" />
      <Member Name="PrelinkAll(System.Type)" />
      <Member Name="PtrToStringAnsi(System.IntPtr)" />
      <Member Name="PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <Member Name="PtrToStringUni(System.IntPtr)" />
      <Member Name="PtrToStringUni(System.IntPtr,System.Int32)" />
      <Member Name="PtrToStructure(System.IntPtr,System.Object)" />
      <Member Name="PtrToStructure(System.IntPtr,System.Type)" />
      <Member Name="QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <Member Name="ReadByte(System.IntPtr)" />
      <Member Name="ReadByte(System.IntPtr,System.Int32)" />
      <Member Name="ReadInt16(System.IntPtr)" />
      <Member Name="ReadInt16(System.IntPtr,System.Int32)" />
      <Member Name="ReadInt32(System.IntPtr)" />
      <Member Name="ReadInt32(System.IntPtr,System.Int32)" />
      <Member Name="ReadInt64(System.IntPtr)" />
      <Member Name="ReadInt64(System.IntPtr,System.Int32)" />
      <Member Name="ReadIntPtr(System.IntPtr)" />
      <Member Name="ReadIntPtr(System.IntPtr,System.Int32)" />
      <Member Name="Release(System.IntPtr)" />
      <Member Name="ReleaseComObject(System.Object)" />
      <Member Name="SecureStringToCoTaskMemUnicode(System.Security.SecureString)" Condition="FEATURE_LEGACYSURFACE"/>
      <Member Name="SetLastWin32Error(System.Int32)" />
      <Member Name="SizeOf(System.Object)" />
      <Member Name="SizeOf(System.Type)" />            
      <Member Name="StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <Member Name="ThrowExceptionForHR(System.Int32)" />
      <Member Name="ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <Member Name="UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <Member Name="WriteByte(System.IntPtr,System.Byte)" />
      <Member Name="WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <Member Name="WriteInt16(System.IntPtr,System.Char)" />      
      <Member Name="WriteInt16(System.IntPtr,System.Int16)" />
      <Member Name="WriteInt16(System.IntPtr,System.Int32,System.Char)" />      
      <Member Name="WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <Member Name="WriteInt32(System.IntPtr,System.Int32)" />
      <Member Name="WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <Member Name="WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <Member Name="WriteInt64(System.IntPtr,System.Int64)" />            
      <Member Name="WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <Member Name="WriteIntPtr(System.IntPtr,System.IntPtr)" />      
      <Member Name="ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <Member Status="ImplRoot" Name="InitializeWrapperForWinRT(System.Object,System.IntPtr@)" Condition="FEATURE_COMINTEROP" />
      <Member Status="ImplRoot" Name="LoadLicenseManager" Condition="FEATURE_COMINTEROP" /><Member MemberType="Field" Name="SystemMaxDBCSCharSize" />
      <Member Name="AllocHGlobal(System.IntPtr)" />
      <Member Name="AreComObjectsAvailableForCleanup" />
      <Member Name="Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <Member Name="Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <Member Name="CreateAggregatedObject(System.IntPtr,System.Object)" />
      <Member Name="CreateAggregatedObject&lt;T&gt;(System.IntPtr,T)" />
      <Member Name="CreateWrapperOfType(System.Object,System.Type)" />
      <Member Name="CreateWrapperOfType&lt;T,TWrapper&gt;(T)" />
      <Member Name="DestroyStructure(System.IntPtr,System.Type)" />
      <Member Name="DestroyStructure&lt;T&gt;(System.IntPtr)" />
      <Member Name="FreeBSTR(System.IntPtr)" />
      <Member Name="GetComInterfaceForObject&lt;T,TInterface&gt;(T)" />
      <Member Name="GetDelegateForFunctionPointer&lt;TDelegate&gt;(System.IntPtr)" />
      <Member Name="GetExceptionCode" />
      <Member Name="GetFunctionPointerForDelegate&lt;TDelegate&gt;(TDelegate)" />
      <Member Name="GetNativeVariantForObject&lt;T&gt;(T,System.IntPtr)" />
      <Member Name="GetObjectForNativeVariant&lt;T&gt;(System.IntPtr)" />
      <Member Name="GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <Member Name="GetObjectsForNativeVariants&lt;T&gt;(System.IntPtr,System.Int32)" />
      <Member Name="GetStartComSlot(System.Type)" />
      <Member Name="GetTypeFromCLSID(System.Guid)" />
      <Member Name="GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <Member Name="OffsetOf&lt;T&gt;(System.String)" />
      <Member Name="PtrToStringBSTR(System.IntPtr)" />
      <Member Name="PtrToStructure&lt;T&gt;(System.IntPtr)" />
      <Member Name="PtrToStructure&lt;T&gt;(System.IntPtr,T)" />
      <Member Name="ReadByte(System.Object,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ReadInt16(System.Object,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ReadInt32(System.Object,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ReadInt64(System.Object,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ReadIntPtr(System.Object,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <Member Name="ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <Member Name="SizeOf&lt;T&gt;" />
      <Member Name="SizeOf&lt;T&gt;(T)" />
      <Member Name="StringToBSTR(System.String)" />
      <Member Name="StringToCoTaskMemAnsi(System.String)" />
      <Member Name="StringToCoTaskMemUni(System.String)" />
      <Member Name="StringToHGlobalAnsi(System.String)" />
      <Member Name="StringToHGlobalUni(System.String)" />
      <Member Name="StructureToPtr&lt;T&gt;(T,System.IntPtr,System.Boolean)" />
      <Member Name="UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[],System.Int32)" />
      <Member Name="WriteByte(System.Object,System.Int32,System.Byte)" Condition="FEATURE_LEGACYSURFACE" />      
      <Member Name="WriteInt16(System.Object,System.Int32,System.Char)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="WriteInt16(System.Object,System.Int32,System.Int16)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="WriteInt32(System.Object,System.Int32,System.Int32)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="WriteInt64(System.Object,System.Int32,System.Int64)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="WriteIntPtr(System.Object,System.Int32,System.IntPtr)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="ZeroFreeBSTR(System.IntPtr)" />
      <Member Name="ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <Member Name="ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <Member Name="ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.MarshalAsAttribute">
      <Member MemberType="Field" Name="ArraySubType" />
      <Member MemberType="Field" Name="MarshalCookie" />
      <Member MemberType="Field" Name="MarshalType" />
      <Member MemberType="Field" Name="MarshalTypeRef" />
      <Member MemberType="Field" Name="SizeConst" />
      <Member MemberType="Field" Name="SizeParamIndex" />
      <Member Name="#ctor(System.Int16)" />
      <Member Name="#ctor(System.Runtime.InteropServices.UnmanagedType)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
      <Member MemberType="Field" Name="IidParameterIndex" />
      <Member MemberType="Field" Name="SafeArraySubType" />
      <Member MemberType="Field" Name="SafeArrayUserDefinedSubType" />
    </Type>
    <Type Name="System.Runtime.InteropServices.MarshalDirectiveException" >
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.OptionalAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.OutAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.PreserveSigAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.RuntimeEnvironment">
       <Member Name="GetRuntimeDirectory" /> <!-- For use in the Framework, but not public in Win8P reference assemblies. -->
    </Type>
    <Type Name="System.Runtime.InteropServices.SafeHandle">
      <Member MemberType="Field" Name="handle" />
      <Member Name="#ctor(System.IntPtr,System.Boolean)" />
      <Member Name="#ctor" />
      <Member Name="Close" />
      <Member Name="DangerousAddRef(System.Boolean@)" />
      <Member Name="DangerousGetHandle" />
      <Member Name="DangerousRelease" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Finalize" />
      <Member Name="get_IsClosed" />
      <Member Name="get_IsInvalid" />
      <Member Name="ReleaseHandle" />
      <Member Name="SetHandle(System.IntPtr)" />
      <Member Name="SetHandleAsInvalid" />
      <Member MemberType="Property" Name="IsClosed" />
      <Member MemberType="Property" Name="IsInvalid" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CriticalHandle">
      <Member MemberType="Field" Name="handle" />
      <Member MemberType="Field" Name="_stackTrace" Flavor="chk,dbg" />
      <Member Name="#ctor(System.IntPtr)" />
      <Member Name="#ctor" />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Finalize" />
      <Member Name="get_IsClosed" />
      <Member Name="get_IsInvalid" />
      <Member Name="ReleaseHandle" />
      <Member Name="SetHandle(System.IntPtr)" />
      <Member Name="SetHandleAsInvalid" />
      <Member MemberType="Property" Name="IsClosed" />
      <Member MemberType="Property" Name="IsInvalid" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
      <Member Name="#ctor" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
      <Member Name="#ctor" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type> 
    <Type Status="ApiFxInternal" Name="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" Condition="not FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.Boolean)" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.Boolean)" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type>
    <Type Status="ApiFxInternal" Name="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" Condition="not FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.Boolean)" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.Boolean)" />
      <Member Status="ApiRoot" Name="get_IsInvalid" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.SafeRegistryHandle" Condition="FEATURE_WIN32_REGISTRY">
      <Member Name="#ctor(System.IntPtr,System.Boolean)" />
      <Member Name="ReleaseHandle" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.SafeFileHandle">
      <Member Name="#ctor(System.IntPtr,System.Boolean)" />
      <Member Name="ReleaseHandle" />   
    </Type>  
    <Type Status="ApiFxInternal" Name="Microsoft.Win32.SafeHandles.SafeWaitHandle" Condition="not FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.IntPtr,System.Boolean)" />
      <Member Status="ApiRoot" Name="ReleaseHandle" />
    </Type>
    <Type Name="Microsoft.Win32.SafeHandles.SafeWaitHandle" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor(System.IntPtr,System.Boolean)" />
      <Member Status="ApiRoot" Name="ReleaseHandle" />
    </Type> 
    <Type Name="System.Runtime.InteropServices.SEHException" >
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="CanResume" />
    </Type>
    <Type Name="System.Runtime.InteropServices.StructLayoutAttribute">
      <Member MemberType="Field" Name="CharSet" />
      <Member MemberType="Field" Name="Size" />
      <Member Name="#ctor(System.Runtime.InteropServices.LayoutKind)" />
      <Member MemberType="Field" Name="Pack" /> <!-- forced by desktop implementation -->
      <Member Status="ImplRoot" Name="#ctor(System.Int16)" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
      <Member Name="#ctor(System.Runtime.InteropServices.CallingConvention)" />
      <Member MemberType="Property" Name="CallingConvention" />
      <Member Name="get_CallingConvention" />
      <Member MemberType="Field" Name="BestFitMapping" />
      <Member MemberType="Field" Name="CharSet" />
      <Member MemberType="Field" Name="SetLastError" />
      <Member MemberType="Field" Name="ThrowOnUnmappableChar" />
    </Type>
    <Type Name="System.Runtime.InteropServices.UnmanagedType">
      <Member MemberType="Field" Name="AnsiBStr" />
      <Member MemberType="Field" Name="AsAny" />
      <Member MemberType="Field" Name="Bool" />
      <Member MemberType="Field" Name="BStr" />
      <Member MemberType="Field" Name="ByValArray" />
      <Member MemberType="Field" Name="ByValTStr" />
      <Member MemberType="Field" Name="Currency" />
      <Member MemberType="Field" Name="CustomMarshaler" />
      <Member MemberType="Field" Name="Error" />
      <Member MemberType="Field" Name="FunctionPtr" />
      <Member MemberType="Field" Name="I1" />
      <Member MemberType="Field" Name="I2" />
      <Member MemberType="Field" Name="I4" />
      <Member MemberType="Field" Name="I8" />
      <Member MemberType="Field" Name="IDispatch" />
      <Member MemberType="Field" Name="Interface" />
      <Member MemberType="Field" Name="LPArray" />
      <Member MemberType="Field" Name="LPStr" />
      <Member MemberType="Field" Name="LPStruct" />
      <Member MemberType="Field" Name="LPTStr" />
      <Member MemberType="Field" Name="LPWStr" />
      <Member MemberType="Field" Name="R4" />
      <Member MemberType="Field" Name="R8" />
      <Member MemberType="Field" Name="SafeArray" />
      <Member MemberType="Field" Name="Struct" />
      <Member MemberType="Field" Name="SysInt" />
      <Member MemberType="Field" Name="SysUInt" />
      <Member MemberType="Field" Name="TBStr" />
      <Member MemberType="Field" Name="U1" />
      <Member MemberType="Field" Name="U2" />
      <Member MemberType="Field" Name="U4" />
      <Member MemberType="Field" Name="U8" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VariantBool" />
      <Member MemberType="Field" Name="VBByRefStr" />
      <Member MemberType="Field" Name="HString" />
      <Member MemberType="Field" Name="IInspectable" />
      <Member MemberType="Field" Name="IUnknown" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Versioning.ComponentGuaranteesAttribute">
      <Member Name="#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <Member MemberType="Property" Name="Guarantees" />
    </Type>
    <Type Name="System.Runtime.Versioning.ComponentGuaranteesOptions">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Exchange" />
      <Member MemberType="Field" Name="Stable" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.RuntimeFieldHandle">
      <Member Name="Equals(System.RuntimeFieldHandle)" />      
      <Member Status="ApiFxInternal" Name="get_Value" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="get_Value" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="Value" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="Value" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" />
      <Member Name="op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)" />
    </Type>
    <Type Name="System.RuntimeMethodHandle">
      <Member Name="Equals(System.RuntimeMethodHandle)" />
      <Member Status="ImplRoot" Name="GetValueInternal(System.RuntimeMethodHandle)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" />
      <Member Name="op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)" />
    </Type>
    <Type Name="System.SByte">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.SByte)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.SByte)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.SByte@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.Security.AllowPartiallyTrustedCallersAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Security.Cryptography.Aes" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Create" />
    </Type>
    <Type Name="System.Security.Cryptography.AsymmetricAlgorithm"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="KeySizeValue" />
      <Member MemberType="Field" Name="LegalKeySizesValue" />
      <Member MemberType="Property" Name="KeyExchangeAlgorithm" />
      <Member MemberType="Property" Name="KeySize" />
      <Member MemberType="Property" Name="LegalKeySizes" />
      <Member MemberType="Property" Name="SignatureAlgorithm" />
      <Member Name="#ctor" />
      <Member Name="Clear" />
      <Member Name="Create" />
      <Member Name="Create(System.String)" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="FromXmlString(System.String)" />
      <Member Name="get_KeyExchangeAlgorithm" />
      <Member Name="get_KeySize" />
      <Member Name="set_KeySize(System.Int32)" />
      <Member Name="get_LegalKeySizes" />
      <Member Name="get_SignatureAlgorithm" />
      <Member Name="ToXmlString(System.Boolean)" />
    </Type>
    <Type Name="System.Security.Cryptography.AsymmetricKeyExchangeDeformatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="Parameters" />
      <Member Name="#ctor" />
      <Member Name="DecryptKeyExchange(System.Byte[])" />
      <Member Name="get_Parameters" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="set_Parameters(System.String)" />
    </Type>
    <Type Name="System.Security.Cryptography.AsymmetricKeyExchangeFormatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="Parameters" />
      <Member Name="#ctor" />
      <Member Name="CreateKeyExchange(System.Byte[])" />
      <Member Name="CreateKeyExchange(System.Byte[],System.Type)" />
      <Member Name="get_Parameters" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="System.Security.Cryptography.AsymmetricSignatureDeformatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="SetHashAlgorithm(System.String)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])" />
      <Member Name="VerifySignature(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.AsymmetricSignatureFormatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="CreateSignature(System.Byte[])" />
      <Member Name="CreateSignature(System.Security.Cryptography.HashAlgorithm)" />
      <Member Name="SetHashAlgorithm(System.String)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="System.Security.Cryptography.CipherMode" Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="CBC" />
      <Member MemberType="Field" Name="CTS" />
      <Member MemberType="Field" Name="ECB" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptoConfig" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="CreateFromName(System.String)" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptographicUnexpectedOperationException" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.String)" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptoStream" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)" />
      <Member Name="Clear" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="FlushAsync(System.Threading.CancellationToken)" />
      <Member Name="FlushFinalBlock" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="SetLength(System.Int64)" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="HasFlushedFinalBlock" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Position" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanWrite" />
      <Member Name="get_HasFlushedFinalBlock" />
      <Member Name="get_Length" />
      <Member Name="get_Position" />
      <Member Name="set_Position(System.Int64)" />
    </Type>
    <Type Name="System.Security.Cryptography.CryptoStreamMode" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Read" />
      <Member MemberType="Field" Name="Write" />
    </Type>
    <Type Name="System.Security.Cryptography.CspKeyContainerInfo"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor(System.Security.Cryptography.CspParameters)" />
      <Member MemberType="Property" Name="Accessible" />
      <Member MemberType="Property" Name="Exportable" />
      <Member MemberType="Property" Name="HardwareDevice" />
      <Member MemberType="Property" Name="KeyContainerName" />
      <Member MemberType="Property" Name="KeyNumber" />
      <Member MemberType="Property" Name="MachineKeyStore" />
      <Member MemberType="Property" Name="Protected" />
      <Member MemberType="Property" Name="ProviderName" />
      <Member MemberType="Property" Name="ProviderType" />
      <Member MemberType="Property" Name="RandomlyGenerated" />
      <Member MemberType="Property" Name="Removable" />
      <Member MemberType="Property" Name="UniqueKeyContainerName" />
      <Member Name="get_Accessible" />
      <Member Name="get_Exportable" />
      <Member Name="get_HardwareDevice" />
      <Member Name="get_KeyContainerName" />
      <Member Name="get_KeyNumber" />
      <Member Name="get_MachineKeyStore" />
      <Member Name="get_Protected" />
      <Member Name="get_ProviderName" />
      <Member Name="get_ProviderType" />
      <Member Name="get_RandomlyGenerated" />
      <Member Name="get_Removable" />
      <Member Name="get_UniqueKeyContainerName" />
    </Type>
    <Type Name="System.Security.Cryptography.CspParameters"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="KeyContainerName" />
      <Member MemberType="Field" Name="KeyNumber" />
      <Member MemberType="Field" Name="ProviderName" />
      <Member MemberType="Field" Name="ProviderType" />
      <Member MemberType="Property" Name="Flags" />
      <Member MemberType="Property" Name="KeyPassword" />
      <Member MemberType="Property" Name="ParentWindowHandle" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.String)" />
      <Member Name="#ctor(System.Int32,System.String,System.String)" />
      <Member Name="get_Flags" />
      <Member Name="set_Flags(System.Security.Cryptography.CspProviderFlags)" />
      <Member Name="get_KeyPassword" />
      <Member Name="set_KeyPassword(System.Security.SecureString)" />
      <Member Name="get_ParentWindowHandle" />
      <Member Name="set_ParentWindowHandle(System.IntPtr)" />
    </Type>
    <Type Name="System.Security.Cryptography.CspProviderFlags"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="CreateEphemeralKey" />
      <Member MemberType="Field" Name="NoFlags" />
      <Member MemberType="Field" Name="NoPrompt" />
      <Member MemberType="Field" Name="UseArchivableKey" />
      <Member MemberType="Field" Name="UseDefaultKeyContainer" />
      <Member MemberType="Field" Name="UseExistingKey" />
      <Member MemberType="Field" Name="UseMachineKeyStore" />
      <Member MemberType="Field" Name="UseNonExportableKey" />
      <Member MemberType="Field" Name="UseUserProtectedKey" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Security.Cryptography.ICspAsymmetricAlgorithm"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="CspKeyContainerInfo" />
      <Member Name="ExportCspBlob(System.Boolean)" />
      <Member Name="get_CspKeyContainerInfo" />
      <Member Name="ImportCspBlob(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.DeriveBytes" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GetBytes(System.Int32)" />
      <Member Name="Reset" />
    </Type>
    <Type Name="System.Security.Cryptography.HashAlgorithm" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="HashSizeValue" />
      <Member MemberType="Field" Name="HashValue" />
      <Member MemberType="Field" Name="State" />
      <Member MemberType="Property" Name="CanReuseTransform" />
      <Member MemberType="Property" Name="CanTransformMultipleBlocks" />
      <Member MemberType="Property" Name="Hash" />
      <Member MemberType="Property" Name="HashSize" />
      <Member MemberType="Property" Name="InputBlockSize" />
      <Member MemberType="Property" Name="OutputBlockSize" />
      <Member Name="#ctor" />
      <Member Name="Clear" />
      <Member Name="ComputeHash(System.Byte[])" />
      <Member Name="ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ComputeHash(System.IO.Stream)" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="get_CanReuseTransform" />
      <Member Name="get_CanTransformMultipleBlocks" />
      <Member Name="get_Hash" />
      <Member Name="get_HashSize" />
      <Member Name="get_InputBlockSize" />
      <Member Name="get_OutputBlockSize" />
      <Member Name="HashCore(System.Byte[],System.Int32,System.Int32)"/>
      <Member Name="HashFinal"/>
      <Member Name="Initialize"/>
      <Member Name="TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
    </Type>
    <Type Name="System.Security.Cryptography.HMAC" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Property" Name="BlockSizeValue" />
      <Member MemberType="Property" Name="HashName" />
      <Member MemberType="Property" Name="Key" />
      <Member Name="#ctor" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="HashCore(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="HashFinal" />
      <Member Name="Initialize" />
      <Member Name="get_HashName" />
      <Member Name="set_HashName(System.String)" />
      <Member Name="get_Key" />
      <Member Name="set_Key(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.HMACSHA1" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.HMACSHA256" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.HMACSHA384" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.HMACSHA512" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.ICryptoTransform" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Property" Name="CanReuseTransform" />
      <Member MemberType="Property" Name="CanTransformMultipleBlocks" />
      <Member MemberType="Property" Name="InputBlockSize" />
      <Member MemberType="Property" Name="OutputBlockSize" />
      <Member Name="get_CanReuseTransform" />
      <Member Name="get_CanTransformMultipleBlocks" />
      <Member Name="get_InputBlockSize" />
      <Member Name="get_OutputBlockSize" />
      <Member Name="TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
    </Type>
    <Type Name="System.Security.Cryptography.KeyedHashAlgorithm" Condition="FEATURE_LEGACYSURFACE">
        <Member MemberType="Field" Name="KeyValue" />
        <Member MemberType="Property" Name="Key" />
        <Member Name="#ctor" />
        <Member Name="Dispose(System.Boolean)" />
        <Member Name="get_Key" />
        <Member Name="set_Key(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.KeyNumber" Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="Exchange" />
      <Member MemberType="Field" Name="Signature" />
      <Member MemberType="Field" Name="value__" />
    </Type>      
    <Type Name="System.Security.Cryptography.KeySizes" Condition="FEATURE_LEGACYSURFACE">
        <Member MemberType="Property" Name="MaxSize" />
        <Member MemberType="Property" Name="MinSize" />
        <Member MemberType="Property" Name="SkipSize" />
        <Member Name="#ctor(System.Int32,System.Int32,System.Int32)" />
        <Member Name="get_MaxSize" />
        <Member Name="get_MinSize" />
        <Member Name="get_SkipSize" />
    </Type>
    <Type Name="System.Security.Cryptography.MaskGenerationMethod" Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="GenerateMask(System.Byte[],System.Int32)" />
    </Type>
    <Type Name="System.Security.Cryptography.MD5" Condition="FEATURE_LEGACYSURFACE">
        <Member Name="#ctor" />
        <Member Name="Create" />
        <Member Name="Create(System.String)" />
    </Type>
    <Type Name="System.Security.Cryptography.PaddingMode" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="PKCS7" />
      <Member MemberType="Field" Name="Zeros" />
    </Type> 
    <Type Name="System.Security.Cryptography.PKCS1MaskGenerationMethod" Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="HashName" />
      <Member Name="#ctor" />
      <Member Name="GenerateMask(System.Byte[],System.Int32)" />
      <Member Name="get_HashName" />
    </Type>
    <Type Name="System.Security.Cryptography.Rfc2898DeriveBytes" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Property" Name="IterationCount" />
      <Member MemberType="Property" Name="Salt" />
      <Member Name="#ctor(System.String,System.Byte[])" />
      <Member Name="#ctor(System.String,System.Byte[],System.Int32)" />
      <Member Name="#ctor(System.String,System.Int32)" />
      <Member Name="#ctor(System.String,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <Member Name="CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GetBytes(System.Int32)" />
      <Member Name="Reset" />
      <Member Name="get_IterationCount" />
      <Member Name="set_IterationCount(System.Int32)" />
      <Member Name="get_Salt" />
      <Member Name="set_Salt(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.RandomNumberGenerator" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Create" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GetBytes(System.Byte[])" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Security.Cryptography.Rijndael" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Security.Cryptography.RijndaelManaged" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Status="ApiRoot" Name="GenerateIV" />
      <Member Status="ApiRoot" Name="GenerateKey" />
    </Type>
    <Type Name="System.Security.Cryptography.RNGCryptoServiceProvider" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GetBytes(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.RSA"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="Create" />
      <Member Name="Create(System.String)" />
      <Member Name="DecryptValue(System.Byte[])" />
      <Member Name="EncryptValue(System.Byte[])" />
      <Member Name="FromXmlString(System.String)" />
      <Member Name="ToXmlString(System.Boolean)" />
      <Member Name="ExportParameters(System.Boolean)" />
      <Member Name="ImportParameters(System.Security.Cryptography.RSAParameters)" />
    </Type>
    <Type Name="System.Security.Cryptography.RSACryptoServiceProvider"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="PublicOnly" />
      <Member MemberType="Property" Name="CspKeyContainerInfo" />
      <Member MemberType="Property" Name="KeySize" />
      <Member MemberType="Property" Name="KeyExchangeAlgorithm" />
      <Member MemberType="Property" Name="SignatureAlgorithm" />
      <Member MemberType="Property" Name="UseMachineKeyStore" />
      <Member MemberType="Property" Name="PersistKeyInCsp" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Security.Cryptography.CspParameters)" />
      <Member Name="#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="get_PublicOnly" />
      <Member Name="get_CspKeyContainerInfo" />
      <Member Name="get_KeySize" />
      <Member Name="get_KeyExchangeAlgorithm" />
      <Member Name="get_SignatureAlgorithm" />
      <Member Name="get_UseMachineKeyStore" />
      <Member Name="set_UseMachineKeyStore(System.Boolean)" />
      <Member Name="get_PersistKeyInCsp" />
      <Member Name="set_PersistKeyInCsp(System.Boolean)" />
      <Member Name="ExportParameters(System.Boolean)" />
      <Member Name="ExportCspBlob(System.Boolean)" />
      <Member Name="ImportParameters(System.Security.Cryptography.RSAParameters)" />
      <Member Name="ImportCspBlob(System.Byte[])" />
      <Member Name="SignData(System.IO.Stream,System.Object)" />
      <Member Name="SignData(System.Byte[],System.Object)" />
      <Member Name="SignData(System.Byte[],System.Int32,System.Int32,System.Object)" />
      <Member Name="VerifyData(System.Byte[],System.Object,System.Byte[])" />
      <Member Name="SignHash(System.Byte[],System.String)" />
      <Member Name="VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <Member Name="Encrypt(System.Byte[],System.Boolean)" />
      <Member Name="Decrypt(System.Byte[],System.Boolean)" />
      <Member Name="DecryptValue(System.Byte[])" />
      <Member Name="EncryptValue(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="Parameter" />
      <Member MemberType="Property" Name="Parameters" />
      <Member MemberType="Property" Name="Rng" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="get_Parameter" />
      <Member Name="set_Parameter(System.Byte[])" />
      <Member Name="get_Parameters" />
      <Member Name="get_Rng" />
      <Member Name="set_Rng(System.Security.Cryptography.RandomNumberGenerator)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="CreateKeyExchange(System.Byte[])" />
      <Member Name="CreateKeyExchange(System.Byte[],System.Type)" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="Parameters" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="get_Parameters" />
      <Member Name="set_Parameters(System.String)" />
      <Member Name="DecryptKeyExchange(System.Byte[])" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAParameters"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Field" Name="Exponent" />
      <Member MemberType="Field" Name="Modulus" />
      <Member MemberType="Field" Name="P" />
      <Member MemberType="Field" Name="Q" />
      <Member MemberType="Field" Name="DP" />
      <Member MemberType="Field" Name="DQ" />
      <Member MemberType="Field" Name="InverseQ" />
      <Member MemberType="Field" Name="D" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="RNG" />
      <Member MemberType="Property" Name="Parameters" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="get_RNG" />
      <Member Name="set_RNG(System.Security.Cryptography.RandomNumberGenerator)" />
      <Member Name="get_Parameters" />
      <Member Name="set_Parameters(System.String)" />
      <Member Name="DecryptKeyExchange(System.Byte[])" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member MemberType="Property" Name="Parameters" />
      <Member MemberType="Property" Name="Rng" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="get_Parameters" />
      <Member Name="get_Rng" />
      <Member Name="set_Rng(System.Security.Cryptography.RandomNumberGenerator)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="CreateKeyExchange(System.Byte[])" />
      <Member Name="CreateKeyExchange(System.Byte[],System.Type)" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAPKCS1SignatureDeformatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="SetHashAlgorithm(System.String)" />
      <Member Name="VerifySignature(System.Byte[],System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.RSAPKCS1SignatureFormatter"  Condition="FEATURE_LEGACYNETCFCRYPTO">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <Member Name="SetHashAlgorithm(System.String)" />
      <Member Name="CreateSignature(System.Byte[])" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA1" Condition="FEATURE_LEGACYSURFACE">
        <Member Name="#ctor" />
        <Member Name="Create" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA1Managed" Condition="FEATURE_LEGACYSURFACE">
        <Member Name="#ctor" />
        <Member Name="HashCore(System.Byte[],System.Int32,System.Int32)" />
        <Member Name="HashFinal" />
        <Member Name="Initialize" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA256" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Create" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA384" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Create" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA512" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="Create" />
    </Type>
    <Type Name="System.Security.Cryptography.SHA256Managed" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="HashCore(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="HashFinal" />
      <Member Name="Initialize" />
    </Type>
    <Type Name="System.Security.Cryptography.SymmetricAlgorithm" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="BlockSizeValue" />
      <Member MemberType="Field" Name="FeedbackSizeValue" />
      <Member MemberType="Field" Name="IVValue" />
      <Member MemberType="Field" Name="KeySizeValue" />
      <Member MemberType="Field" Name="KeyValue" />
      <Member MemberType="Field" Name="LegalBlockSizesValue" />
      <Member MemberType="Field" Name="LegalKeySizesValue" />
      <Member MemberType="Field" Name="ModeValue" />
      <Member MemberType="Field" Name="PaddingValue" />
      <Member MemberType="Property" Name="BlockSize" />
      <Member MemberType="Property" Name="IV" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="KeySize" />
      <Member MemberType="Property" Name="LegalBlockSizes" />
      <Member MemberType="Property" Name="LegalKeySizes" />
      <Member MemberType="Property" Name="Mode" />
      <Member MemberType="Property" Name="Padding" />
      <Member Name="#ctor" />
      <Member Name="Clear" />
      <Member Name="CreateDecryptor" />
      <Member Name="CreateDecryptor(System.Byte[],System.Byte[])" />
      <Member Name="CreateEncryptor" />
      <Member Name="CreateEncryptor(System.Byte[],System.Byte[])" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GenerateIV" />
      <Member Name="GenerateKey" />
      <Member Name="ValidKeySize(System.Int32)" />
      <Member Name="get_BlockSize" />
      <Member Name="set_BlockSize(System.Int32)" />
      <Member Name="get_IV" />
      <Member Name="set_IV(System.Byte[])" />
      <Member Name="get_Key" />
      <Member Name="set_Key(System.Byte[])" />
      <Member Name="get_KeySize" />
      <Member Name="set_KeySize(System.Int32)" />
      <Member Name="get_LegalBlockSizes" />
      <Member Name="get_LegalKeySizes" />
      <Member Name="get_Mode" />
      <Member Name="set_Mode(System.Security.Cryptography.CipherMode)" />
      <Member Name="get_Padding" />
      <Member Name="set_Padding(System.Security.Cryptography.PaddingMode)" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.X509Certificate" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
      <Member Name="#ctor(System.Byte[],System.String)" />
      <Member Name="#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String,System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="#ctor(System.IntPtr)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.IntPtr)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <Member Status="ApiFxInternal" Name="CreateFromCertFile(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="CreateFromCertFile(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="CreateHexString(System.Byte[])" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <Member Name="Export(System.Security.Cryptography.X509Certificates.X509ContentType)" />
      <Member Name="Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <!-- SECURESTRING <Member Name="Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)" />-->
      <Member Name="FormatDate(System.DateTime)" />
      <Member Name="GetCertHash" />
      <Member Name="GetCertHashString" />
      <Member Name="GetEffectiveDateString" />
      <Member Name="GetExpirationDateString" />
      <Member Name="GetFormat" />
      <Member Name="GetHashCode" />
      <!--<Member Name="GetIssuerName" /> OBSOLETE -->
      <Member Name="GetKeyAlgorithm" />
      <Member Name="GetKeyAlgorithmParameters" />
      <Member Name="GetKeyAlgorithmParametersString" />
      <!--<Member Name="GetName" /> OBSOLETE -->
      <Member Name="GetPublicKey" />
      <Member Name="GetPublicKeyString" />
      <Member Name="GetRawCertData" />
      <Member Name="GetRawCertDataString" />
      <Member Name="GetSerialNumber" />
      <Member Name="GetSerialNumberString" />
      <Member Name="Import(System.Byte[])" />
      <Member Name="Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <!-- SECURESTRING <Member Name="Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />-->      
      <Member Status="ApiFxInternal" Name="Import(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="Import(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" Condition="FEATURE_LEGACYNETCF" />
      <!-- SECURESTRING <Member Name="Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />-->
      <Member Name="ToString" />
      <Member Name="ToString(System.Boolean)" />
      <Member MemberType="Property" Name="CertContext" />
      <Member Status="ApiFxInternal" Name="get_Handle" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="get_Handle" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="Handle" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="Handle" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="Issuer" />
      <Member MemberType="Property" Name="NotAfter" />
      <Member MemberType="Property" Name="NotBefore" />
      <Member MemberType="Property" Name="RawData" />
      <Member MemberType="Property" Name="SerialNumber" />
      <Member MemberType="Property" Name="Subject" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.X509ContentType" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Unknown" />
      <Member MemberType="Field" Name="Cert" />
      <Member MemberType="Field" Name="SerializedCert" />
      <Member MemberType="Field" Name="Pfx" />
      <Member MemberType="Field" Name="Pkcs12" />
      <Member MemberType="Field" Name="SerializedStore" />
      <Member MemberType="Field" Name="Pkcs7" />
      <Member MemberType="Field" Name="Authenticode" />
    </Type>
    <Type Name="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="DefaultKeySet" />
      <Member MemberType="Field" Name="UserKeySet" />
      <Member MemberType="Field" Name="MachineKeySet" />
      <Member MemberType="Field" Name="Exportable" />
      <Member MemberType="Field" Name="UserProtected" />
      <Member MemberType="Field" Name="PersistKeySet" />
    </Type>
    <Type Name="System.Security.SecureString" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Char*,System.Int32)" />
      <Member Name="get_Length" />
      <Member Name="AppendChar(System.Char)" />
      <Member Name="Clear" />
      <Member Name="Copy" />
      <Member Name="Dispose" />
      <Member Name="IsReadOnly" />
      <Member Name="MakeReadOnly" />
      <Member Name="RemoveAt(System.Int32)" />
      <Member Name="InsertAt(System.Int32,System.Char)" />
      <Member Name="SetAt(System.Int32,System.Char)" />
    </Type>
    <Type Name="System.Security.SecurityException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Security.SecurityState">
      <Member Name="#ctor" />
      <Member Name="IsStateAvailable" />
      <Member Name="EnsureState" />
   </Type>
    <Type Name="System.Single">
      <Member MemberType="Field" Name="Epsilon" />
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member MemberType="Field" Name="NaN" />
      <Member MemberType="Field" Name="NegativeInfinity" />
      <Member MemberType="Field" Name="PositiveInfinity" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.Single)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Single)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="IsInfinity(System.Single)" />
      <Member Name="IsNaN(System.Single)" />
      <Member Name="IsNegativeInfinity(System.Single)" />
      <Member Name="IsPositiveInfinity(System.Single)" />
      <Member Name="op_Equality(System.Single,System.Single)" />
      <Member Name="op_GreaterThan(System.Single,System.Single)" />
      <Member Name="op_GreaterThanOrEqual(System.Single,System.Single)" />
      <Member Name="op_Inequality(System.Single,System.Single)" />
      <Member Name="op_LessThan(System.Single,System.Single)" />
      <Member Name="op_LessThanOrEqual(System.Single,System.Single)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.Single@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.StackOverflowException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.STAThreadAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Name="System.String">
      <Member Status="ImplRoot" MemberType="Field" Name="m_stringLength" />
      <Member MemberType="Field" Name="Empty" />
      <Member Name="#ctor(System.Char*)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Char*,System.Int32,System.Int32)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Char*,System.Int32,System.Int32)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="#ctor(System.Char,System.Int32)" />
      <Member Name="#ctor(System.Char[])" />
      <Member Name="#ctor(System.Char[],System.Int32,System.Int32)" />      
      <Member Name="#ctor(System.SByte*)" />
      <Member Name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <Member Name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <Member Name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
      <Member Name="Compare(System.String,System.String)" />
      <Member Name="Compare(System.String,System.String,System.Boolean)" />
      <Member Name="Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <Member Name="Compare(System.String,System.String,System.StringComparison)" />
      <Member Name="CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <Member Name="CompareOrdinal(System.String,System.String)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.String)" />
      <Member Name="Concat(System.Object)" />
      <Member Name="Concat(System.Object,System.Object)" />
      <Member Name="Concat(System.Object,System.Object,System.Object)" />
      <Member Name="Concat(System.Object[])" />
      <Member Name="Concat&lt;T&gt;(System.Collections.Generic.IEnumerable&lt;T&gt;)" />
      <Member Name="Concat(System.Collections.Generic.IEnumerable&lt;System.String&gt;)" />
      <Member Name="Concat(System.String,System.String)" />
      <Member Name="Concat(System.String,System.String,System.String)" />
      <Member Name="Concat(System.String,System.String,System.String,System.String)" />
      <Member Name="Concat(System.String[])" />
      <Member Name="Contains(System.String)" />
      <Member Name="Copy(System.String)" />
      <Member Name="CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <Member Name="EndsWith(System.String)" />
      <Member Name="EndsWith(System.String,System.StringComparison)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.String)" />
      <Member Name="Equals(System.String,System.String)" />
      <Member Name="Equals(System.String,System.String,System.StringComparison)" />
      <Member Name="Equals(System.String,System.StringComparison)" />
      <Member Name="Format(System.IFormatProvider,System.String,System.Object)" />
      <Member Name="Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <Member Name="Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <Member Name="Format(System.IFormatProvider,System.String,System.Object[])" />
      <Member Name="Format(System.String,System.Object)" />
      <Member Name="Format(System.String,System.Object,System.Object)" />
      <Member Name="Format(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="Format(System.String,System.Object[])" />
      <Member Name="get_Chars(System.Int32)" />
      <Member Name="get_Length" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="IndexOf(System.Char)" />
      <Member Name="IndexOf(System.Char,System.Int32)" />
      <Member Name="IndexOf(System.Char,System.Int32,System.Int32)" />
      <Member Name="IndexOf(System.String)" />
      <Member Name="IndexOf(System.String,System.Int32)" />
      <Member Name="IndexOf(System.String,System.Int32,System.Int32)" />
      <Member Name="IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <Member Name="IndexOf(System.String,System.Int32,System.StringComparison)" />
      <Member Name="IndexOf(System.String,System.StringComparison)" />
      <Member Name="IndexOfAny(System.Char[])" />
      <Member Name="IndexOfAny(System.Char[],System.Int32)" />
      <Member Name="IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Insert(System.Int32,System.String)" />
      <Member Name="Intern(System.String)" />
      <Member Name="IsInterned(System.String)" />
      <Member Name="IsNullOrEmpty(System.String)" />
      <Member Name="IsNullOrWhiteSpace(System.String)" />
      <Member Name="Join(System.String,System.Object[])" />
      <Member Name="Join&lt;T&gt;(System.String,System.Collections.Generic.IEnumerable&lt;T&gt;)" />
      <Member Name="Join(System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;)" />
      <Member Name="Join(System.String,System.String[])" />
      <Member Name="Join(System.String,System.String[],System.Int32,System.Int32)" />
      <Member Name="LastIndexOf(System.Char)" />
      <Member Name="LastIndexOf(System.Char,System.Int32)" />
      <Member Name="LastIndexOf(System.Char,System.Int32,System.Int32)" />
      <Member Name="LastIndexOf(System.String)" />
      <Member Name="LastIndexOf(System.String,System.Int32)" />
      <Member Name="LastIndexOf(System.String,System.Int32,System.Int32)" />
      <Member Name="LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <Member Name="LastIndexOf(System.String,System.Int32,System.StringComparison)" />
      <Member Name="LastIndexOf(System.String,System.StringComparison)" />
      <Member Name="LastIndexOfAny(System.Char[])" />
      <Member Name="LastIndexOfAny(System.Char[],System.Int32)" />
      <Member Name="LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <Member Name="op_Equality(System.String,System.String)" />
      <Member Name="op_Inequality(System.String,System.String)" />
      <Member Name="PadLeft(System.Int32)" />
      <Member Name="PadLeft(System.Int32,System.Char)" />
      <Member Name="PadRight(System.Int32)" />
      <Member Name="PadRight(System.Int32,System.Char)" />
      <Member Name="Remove(System.Int32)" />
      <Member Name="Remove(System.Int32,System.Int32)" />
      <Member Name="Replace(System.Char,System.Char)" />
      <Member Name="Replace(System.String,System.String)" />
      <Member Name="Split(System.Char[])" />
      <Member Name="Split(System.Char[],System.Int32)" />
      <Member Name="Split(System.Char[],System.Int32,System.StringSplitOptions)" />
      <Member Name="Split(System.Char[],System.StringSplitOptions)"/>
      <Member Name="Split(System.String[],System.Int32,System.StringSplitOptions)" />
      <Member Name="Split(System.String[],System.StringSplitOptions)"/>
      <Member Name="StartsWith(System.String)" />
      <Member Name="StartsWith(System.String,System.StringComparison)" />
      <Member Name="Substring(System.Int32)" />
      <Member Name="Substring(System.Int32,System.Int32)" />
      <Member Name="ToCharArray" />
      <Member Name="ToCharArray(System.Int32,System.Int32)" />
      <Member Name="ToLower" />
      <Member Name="ToLower(System.Globalization.CultureInfo)" />
      <Member Name="ToLowerInvariant" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToUpper" />
      <Member Name="ToUpper(System.Globalization.CultureInfo)" />
      <Member Name="ToUpperInvariant" />
      <Member Name="Trim" />
      <Member Name="Trim(System.Char[])" />
      <Member Name="TrimEnd(System.Char[])" />
      <Member Name="TrimStart(System.Char[])" />
      <Member MemberType="Property" Name="Chars(System.Int32)" />
      <Member MemberType="Property" Name="Length" />
      <Member Status="ImplRoot" Name="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator" />
      <Member Status="ImplRoot" Name="CtorCharArray(System.Char[])" />
      <Member Status="ImplRoot" Name="CtorCharArrayStartLength(System.Char[],System.Int32,System.Int32)" />
      <Member Status="ImplRoot" Name="CtorCharCount(System.Char,System.Int32)" />
      <Member Status="ImplRoot" Name="CtorCharPtr(System.Char*)" />
      <Member Status="ImplRoot" Name="CtorCharPtrStartLength(System.Char*,System.Int32,System.Int32)" />
      <Member Status="ImplRoot" Name="CreateString(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" /> <!-- EE -->
      <Member Status="ImplRoot" Name="InternalCopy(System.String,System.IntPtr,System.Int32)" /> <!-- EE -->
    </Type>
    <Type Name="System.Collections.StructuralComparisons">
      <Member Name="get_StructuralComparer" />
      <Member Name="get_StructuralEqualityComparer" />
      <Member MemberType="Property" Name="StructuralComparer" />
      <Member MemberType="Property" Name="StructuralEqualityComparer" />
    </Type>
    <Type Name="System.StringComparer">
      <Member Name="#ctor" />
      <Member Name="Compare(System.Object,System.Object)" />
      <Member Name="Compare(System.String,System.String)" />
      <Member Name="Create(System.Globalization.CultureInfo,System.Boolean)" />
      <Member Name="Equals(System.Object,System.Object)" />
      <Member Name="Equals(System.String,System.String)" />
      <Member Name="get_CurrentCulture" />
      <Member Name="get_CurrentCultureIgnoreCase" />
      <Member Name="get_InvariantCulture" />
      <Member Name="get_InvariantCultureIgnoreCase" />
      <Member Name="get_Ordinal" />
      <Member Name="get_OrdinalIgnoreCase" />
      <Member Name="GetHashCode(System.Object)" />
      <Member Name="GetHashCode(System.String)" />
      <Member MemberType="Property" Name="CurrentCulture" />
      <Member MemberType="Property" Name="CurrentCultureIgnoreCase" />
      <Member MemberType="Property" Name="InvariantCulture" />
      <Member MemberType="Property" Name="InvariantCultureIgnoreCase" />
      <Member MemberType="Property" Name="Ordinal" />
      <Member MemberType="Property" Name="OrdinalIgnoreCase" />
    </Type>
    <Type Name="System.StringComparison">
      <Member MemberType="Field" Name="CurrentCulture" />
      <Member MemberType="Field" Name="CurrentCultureIgnoreCase" />
      <Member MemberType="Field" Name="InvariantCulture" />
      <Member MemberType="Field" Name="InvariantCultureIgnoreCase" />
      <Member MemberType="Field" Name="Ordinal" />
      <Member MemberType="Field" Name="OrdinalIgnoreCase" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.SystemException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Text.ASCIIEncoding">
      <Member Name="#ctor" />
      <Member Name="get_IsSingleByte" />
      <Member Name="GetByteCount(System.Char*,System.Int32)" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetCharCount(System.Byte*,System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetDecoder" />
      <Member Name="GetEncoder" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetString(System.Byte[],System.Int32,System.Int32)" />
      <Member MemberType="Property" Name="IsSingleByte" />
    </Type>
    <Type Name="System.Text.Decoder">
      <Member Name="#ctor" />
      <Member Status="ApiFxInternal" Name="Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />      
      <Member Name="get_Fallback" />
      <Member Name="get_FallbackBuffer" />
      <Member Status="ApiFxInternal" Name="GetCharCount(System.Byte*,System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetCharCount(System.Byte*,System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />      
      <Member Status="ApiFxInternal" Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
      <Member Name="Reset" />
      <Member Name="set_Fallback(System.Text.DecoderFallback)" />
      <Member MemberType="Property" Name="Fallback" />
      <Member MemberType="Property" Name="FallbackBuffer" />
    </Type>
    <Type Name="System.Text.DecoderFallback">
      <Member Name="#ctor" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="get_MaxCharCount" />
      <Member Name="get_ReplacementFallback" />      
      <Member MemberType="Property" Name="MaxCharCount" />
      <Member MemberType="Property" Name="ReplacementFallback" />
      <Member Name="get_ExceptionFallback" />
      <Member MemberType="Property" Name="ExceptionFallback" />  
    </Type>
    <Type Name="System.Text.DecoderFallbackBuffer">
      <Member Name="#ctor" />
      <Member Name="Fallback(System.Byte[],System.Int32)" />
      <Member Name="get_Remaining" />
      <Member Name="GetNextChar" />
      <Member Name="MovePrevious" />
      <Member Name="Reset" />
      <Member MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.DecoderReplacementFallback">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_DefaultString" />
      <Member Name="get_MaxCharCount" />
      <Member Name="GetHashCode" />
      <Member MemberType="Property" Name="DefaultString" />
      <Member MemberType="Property" Name="MaxCharCount" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Text.DecoderReplacementFallbackBuffer">
      <Member Status="ApiRoot" Name="#ctor(System.Text.DecoderReplacementFallback)" />
      <Member Status="ApiRoot" Name="Fallback(System.Byte[],System.Int32)" />
      <Member Status="ApiRoot" Name="get_Remaining" />
      <Member Status="ApiRoot" Name="GetNextChar" />
      <Member Status="ApiRoot" Name="Reset" />
      <Member Status="ApiRoot" MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.DecoderExceptionFallback">
      <Member Name="#ctor" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_MaxCharCount" />
      <Member Name="GetHashCode" />
      <Member MemberType="Property" Name="MaxCharCount" />
    </Type>
    <Type  Status="ApiFxInternal" Name="System.Text.DecoderExceptionFallbackBuffer">
      <Member Status="ApiRoot" Name="#ctor" />
      <Member Status="ApiRoot" Name="Fallback(System.Byte[],System.Int32)" />
      <Member Status="ApiRoot" Name="get_Remaining" />
      <Member Status="ApiRoot" Name="GetNextChar" />
      <Member Status="ApiRoot" Name="Throw(System.Byte[],System.Int32)" />
      <Member Status="ApiRoot" MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.DecoderFallbackException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Byte[],System.Int32)" />
      <Member Name="get_BytesUnknown" />
      <Member Name="get_Index" />
      <Member MemberType="Property" Name="BytesUnknown" />
      <Member MemberType="Property" Name="Index" />
    </Type>  
    <Type Name="System.Text.Encoder">
      <Member Name="#ctor" />      
      <Member Status="ApiFxInternal" Name="Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <Member Name="get_Fallback" />
      <Member Name="get_FallbackBuffer" />
      <Member Status="ApiFxInternal" Name="GetByteCount(System.Char*,System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetByteCount(System.Char*,System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
      <Member Status="ApiFxInternal" Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
      <Member Name="Reset" />
      <Member Name="set_Fallback(System.Text.EncoderFallback)" />
      <Member MemberType="Property" Name="Fallback" />
      <Member MemberType="Property" Name="FallbackBuffer" />
    </Type>
    <Type Name="System.Text.EncoderFallback">
      <Member Name="#ctor" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="get_MaxCharCount" />
      <Member Name="get_ReplacementFallback" />
      <Member MemberType="Property" Name="MaxCharCount" />
      <Member MemberType="Property" Name="ReplacementFallback" />
      <Member Name="get_ExceptionFallback" />
      <Member MemberType="Property" Name="ExceptionFallback" />  
    </Type>
    <Type Name="System.Text.EncoderFallbackBuffer">
      <Member Name="#ctor" />
      <Member Name="Fallback(System.Char,System.Char,System.Int32)" />
      <Member Name="Fallback(System.Char,System.Int32)" />
      <Member Name="get_Remaining" />
      <Member Name="GetNextChar" />
      <Member Name="MovePrevious" />
      <Member Name="Reset" />
      <Member MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.EncoderReplacementFallback">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_DefaultString" />
      <Member Name="get_MaxCharCount" />
      <Member Name="GetHashCode" />
      <Member MemberType="Property" Name="DefaultString" />
      <Member MemberType="Property" Name="MaxCharCount" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Text.EncoderReplacementFallbackBuffer">
      <Member Status="ApiRoot" Name="#ctor(System.Text.EncoderReplacementFallback)" />
      <Member Status="ApiRoot" Name="Fallback(System.Char,System.Char,System.Int32)" />
      <Member Status="ApiRoot" Name="Fallback(System.Char,System.Int32)" />
      <Member Status="ApiRoot" Name="get_Remaining" />
      <Member Status="ApiRoot" Name="GetNextChar" />
      <Member Status="ApiRoot" Name="MovePrevious" />
      <Member Status="ApiRoot" Name="Reset" />
      <Member Status="ApiRoot" MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.EncoderExceptionFallback">
      <Member Name="#ctor" />
      <Member Name="CreateFallbackBuffer" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_MaxCharCount" />
      <Member Name="GetHashCode" />
      <Member MemberType="Property" Name="MaxCharCount" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Text.EncoderExceptionFallbackBuffer">
      <Member Status="ApiRoot" Name="#ctor" />
      <Member Status="ApiRoot" Name="Fallback(System.Char,System.Char,System.Int32)" />
      <Member Status="ApiRoot" Name="Fallback(System.Char,System.Int32)" />
      <Member Status="ApiRoot" Name="get_Remaining" />
      <Member Status="ApiRoot" Name="GetNextChar" />
      <Member Status="ApiRoot" Name="MovePrevious" />
      <Member Status="ApiRoot" MemberType="Property" Name="Remaining" />
    </Type>
    <Type Name="System.Text.EncoderFallbackException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Char,System.Int32)" />
      <Member Name="#ctor(System.String,System.Char,System.Char,System.Int32)" />
      <Member Name="IsUnknownSurrogate" />
      <Member Name="get_CharUnknown" />
      <Member Name="get_CharUnknownHigh" />
      <Member Name="get_CharUnknownLow" />
      <Member Name="get_Index" />
      <Member MemberType="Property" Name="CharUnknown" />
      <Member MemberType="Property" Name="CharUnknownHigh" />    
      <Member MemberType="Property" Name="CharUnknownLow" />
      <Member MemberType="Property" Name="Index" />    
    </Type>    
    <Type Name="System.Text.EncodingProvider">
      <Member Name="#ctor" />
      <Member Name="GetEncoding(System.Int32)" />
      <Member Name="GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <Member Name="GetEncoding(System.String)" />
      <Member Name="GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
    </Type>
    <Type Name="System.Text.Encoding">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <Member Name="Clone" />
      <Member Name="Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <Member Name="Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_ASCII" />
      <Member Name="get_BigEndianUnicode" />
      <Member Name="get_CodePage" />
      <Member Name="get_DecoderFallback" />
      <Member Name="get_EncoderFallback" />
      <Member Name="get_EncodingName" />
      <Member Name="get_IsSingleByte" />
      <Member Name="get_Unicode" />
      <Member Name="get_UTF32" />
      <Member Name="get_UTF7" />
      <Member Name="get_UTF8" />
      <Member Name="get_WebName" />
      <Member Name="GetByteCount(System.Char*,System.Int32)" />
      <Member Name="GetByteCount(System.Char[])" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char[])" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />      
      <Member Name="GetBytes(System.String)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />      
      <Member Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <Member Name="GetCharCount(System.Byte[])" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <Member Name="GetChars(System.Byte[])" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetString(System.Byte*,System.Int32)" /> <!-- New exposed API in ProjectK -->
      <Member Name="GetDecoder" />
      <Member Name="GetEncoder" />
      <Member Name="RegisterProvider(System.Text.EncodingProvider)" />
      <Member Name="GetEncoding(System.Int32)"/> <!-- For use in Framework assemblies, but not public in Win8P reference assemblies. -->
      <Member Name="GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <Member Name="GetEncoding(System.String)" />
      <Member Name="GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <Member Name="GetHashCode" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetPreamble" />
      <Member Name="GetString(System.Byte[])" />
      <Member Name="GetString(System.Byte[],System.Int32,System.Int32)" />
      <Member MemberType="Property" Name="ASCII" />
      <Member MemberType="Property" Name="BigEndianUnicode" />
      <Member MemberType="Property" Name="CodePage" />
      <Member MemberType="Property" Name="DecoderFallback" />
      <Member MemberType="Property" Name="EncoderFallback" />
      <Member MemberType="Property" Name="EncodingName" />
      <Member MemberType="Property" Name="IsSingleByte" />
      <Member MemberType="Property" Name="Unicode" />
      <Member MemberType="Property" Name="UTF32" />
      <Member MemberType="Property" Name="UTF7" />
      <Member MemberType="Property" Name="UTF8" />
      <Member MemberType="Property" Name="WebName" />
    </Type>
    <Type Name="System.Text.StringBuilder">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Int32)" />
      <Member Name="#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
      <Member Name="Append(System.Boolean)" />
      <Member Name="Append(System.Byte)" />
      <Member Name="Append(System.Char)" />
      <Member Name="Append(System.Char,System.Int32)" />
      <Member Name="Append(System.Char[])" />
      <Member Name="Append(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Append(System.Char*,System.Int32)" />
      <Member Name="Append(System.Decimal)" />
      <Member Name="Append(System.Double)" />
      <Member Name="Append(System.Int16)" />
      <Member Name="Append(System.Int32)" />
      <Member Name="Append(System.Int64)" />
      <Member Name="Append(System.Object)" />
      <Member Name="Append(System.SByte)" />
      <Member Name="Append(System.Single)" />
      <Member Name="Append(System.String)" />
      <Member Name="Append(System.String,System.Int32,System.Int32)" />
      <Member Name="Append(System.UInt16)" />
      <Member Name="Append(System.UInt32)" />
      <Member Name="Append(System.UInt64)" />
      <Member Name="AppendFormat(System.IFormatProvider,System.String,System.Object)" />
      <Member Name="AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <Member Name="AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <Member Name="AppendFormat(System.IFormatProvider,System.String,System.Object[])" />
      <Member Name="AppendFormat(System.String,System.Object)" />
      <Member Name="AppendFormat(System.String,System.Object,System.Object)" />
      <Member Name="AppendFormat(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="AppendFormat(System.String,System.Object[])" />
      <Member Name="AppendLine" />
      <Member Name="AppendLine(System.String)" />
      <Member Name="Clear" />
      <Member Name="CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <Member Name="EnsureCapacity(System.Int32)" />
      <Member Name="Equals(System.Text.StringBuilder)" />
      <Member Name="get_Capacity" />
      <Member Name="get_Chars(System.Int32)" />
      <Member Name="get_Length" />
      <Member Name="get_MaxCapacity" />
      <Member Name="Insert(System.Int32,System.Boolean)" />
      <Member Name="Insert(System.Int32,System.Byte)" />
      <Member Name="Insert(System.Int32,System.Char)" />
      <Member Name="Insert(System.Int32,System.Char[])" />
      <Member Name="Insert(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <Member Name="Insert(System.Int32,System.Decimal)" />
      <Member Name="Insert(System.Int32,System.Double)" />
      <Member Name="Insert(System.Int32,System.Int16)" />
      <Member Name="Insert(System.Int32,System.Int32)" />
      <Member Name="Insert(System.Int32,System.Int64)" />
      <Member Name="Insert(System.Int32,System.Object)" />
      <Member Name="Insert(System.Int32,System.SByte)" />
      <Member Name="Insert(System.Int32,System.Single)" />
      <Member Name="Insert(System.Int32,System.String)" />
      <Member Name="Insert(System.Int32,System.String,System.Int32)" />
      <Member Name="Insert(System.Int32,System.UInt16)" />
      <Member Name="Insert(System.Int32,System.UInt32)" />
      <Member Name="Insert(System.Int32,System.UInt64)" />
      <Member Name="Remove(System.Int32,System.Int32)" />
      <Member Name="Replace(System.Char,System.Char)" />
      <Member Name="Replace(System.Char,System.Char,System.Int32,System.Int32)" />
      <Member Name="Replace(System.String,System.String)" />
      <Member Name="Replace(System.String,System.String,System.Int32,System.Int32)" />
      <Member Name="set_Capacity(System.Int32)" />
      <Member Name="set_Chars(System.Int32,System.Char)" />
      <Member Name="set_Length(System.Int32)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.Int32,System.Int32)" />
      <Member MemberType="Property" Name="Capacity" />
      <Member MemberType="Property" Name="Chars(System.Int32)" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="MaxCapacity" />
      <Member Status="ImplRoot" Name="InternalCopy(System.IntPtr,System.Int32)" /> <!-- EE - il stubs -->
      <Member Status="ImplRoot" Name="ReplaceBufferInternal(System.Char*,System.Int32)" /> <!-- EE - il stubs -->
      <Member Status="ImplRoot" Name="ReplaceBufferAnsiInternal(System.SByte*,System.Int32)" /> <!-- EE - il stubs -->
    </Type>
    <Type Name="System.Text.UnicodeEncoding">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean,System.Boolean)" />
      <Member Name="#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetDecoder" />
      <Member Name="GetHashCode" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetPreamble" />
    </Type>
    <Type Name="System.Text.UTF32Encoding">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean,System.Boolean)" />
      <Member Name="#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetByteCount(System.Char*,System.Int32)" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetCharCount(System.Byte*,System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetDecoder" />
      <Member Name="GetEncoder" />
      <Member Name="GetHashCode" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetPreamble" />
      <Member Name="GetString(System.Byte[],System.Int32,System.Int32)" />
    </Type>
    <Type Name="System.Text.UTF7Encoding">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetByteCount(System.Char*,System.Int32)" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetCharCount(System.Byte*,System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetDecoder" />
      <Member Name="GetEncoder" />
      <Member Name="GetHashCode" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetString(System.Byte[],System.Int32,System.Int32)" />
    </Type>
    <Type Name="System.Text.UTF8Encoding">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="#ctor(System.Boolean,System.Boolean)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <Member Name="GetByteCount(System.String)" />
      <Member Name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <Member Name="GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <Member Name="GetDecoder" />
      <Member Name="GetEncoder" />
      <Member Name="GetHashCode" />
      <Member Name="GetMaxByteCount(System.Int32)" />
      <Member Name="GetMaxCharCount(System.Int32)" />
      <Member Name="GetPreamble" />
    </Type>
    <Type Name="System.Threading.AbandonedMutexException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Int32,System.Threading.WaitHandle)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
      <Member Name="#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
      <Member MemberType="Property" Name="Mutex" />
      <Member MemberType="Property" Name="MutexIndex" />
    </Type>
    <Type Name="System.Threading.AutoResetEvent">
      <Member Name="#ctor(System.Boolean)" />
    </Type>
    <Type Name="System.Threading.EventWaitHandle">
      <Member Name="#ctor(System.Boolean,System.Threading.EventResetMode)" />
      <Member Name="#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
      <Member Name="#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
      <Member Name="OpenExisting(System.String)" />
      <Member Name="Reset" />
      <Member Name="Set" />
      <Member Name="TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
    </Type>
    <Type Name="System.Threading.Interlocked">
      <Member Name="Add(System.Int32@,System.Int32)" />
      <Member Name="Add(System.Int64@,System.Int64)" />
      <Member Name="CompareExchange(System.Double@,System.Double,System.Double)" />
      <Member Name="CompareExchange(System.Int32@,System.Int32,System.Int32)" />
      <Member Name="CompareExchange(System.Int64@,System.Int64,System.Int64)" />
      <Member Name="CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
      <Member Name="CompareExchange(System.Object@,System.Object,System.Object)" />
      <Member Name="CompareExchange(System.Single@,System.Single,System.Single)" />
      <Member Name="CompareExchange&lt;T&gt;(T@,T,T)" />
      <Member Name="Decrement(System.Int32@)" />
      <Member Name="Decrement(System.Int64@)" />
      <Member Name="Exchange(System.Double@,System.Double)" />
      <Member Name="Exchange(System.Int32@,System.Int32)" />
      <Member Name="Exchange(System.Int64@,System.Int64)" />
      <Member Name="Exchange(System.IntPtr@,System.IntPtr)" />
      <Member Name="Exchange(System.Object@,System.Object)" />
      <Member Name="Exchange(System.Single@,System.Single)" />
      <Member Name="Exchange&lt;T&gt;(T@,T)" />
      <Member Name="Increment(System.Int32@)" />
      <Member Name="Increment(System.Int64@)" />
      <Member Name="MemoryBarrier" />
      <Member Name="Read(System.Int64@)" />
    </Type>
    <Type Name="System.Threading.LockRecursionException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.Mutex" Condition="FEATURE_LEGACYNETCF">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="#ctor(System.Boolean,System.String)" />
      <Member Name="#ctor(System.Boolean,System.String,System.Boolean@)" />
      <Member Name="OpenExisting(System.String)" />
      <Member Name="ReleaseMutex" />
      <Member Name="TryOpenExisting(System.String,System.Threading.Mutex@)" />
    </Type>
    <Type Name="System.Threading.Volatile">
      <Member Name="Read(System.Boolean@)"/>
      <Member Name="Read(System.SByte@)"/>
      <Member Name="Read(System.Byte@)"/>
      <Member Name="Read(System.Int16@)"/>
      <Member Name="Read(System.UInt16@)"/>
      <Member Name="Read(System.Int32@)"/>
      <Member Name="Read(System.UInt32@)"/>
      <Member Name="Read(System.Int64@)"/>
      <Member Name="Read(System.UInt64@)"/>
      <Member Name="Read(System.IntPtr@)"/>
      <Member Name="Read(System.UIntPtr@)"/>
      <Member Name="Read(System.Single@)"/>
      <Member Name="Read(System.Double@)"/>
      <Member Name="Read&lt;T&gt;(T@)"/>
      <Member Name="Write(System.Boolean@,System.Boolean)"/>
      <Member Name="Write(System.SByte@,System.SByte)"/>
      <Member Name="Write(System.Byte@,System.Byte)"/>
      <Member Name="Write(System.Int16@,System.Int16)"/>
      <Member Name="Write(System.UInt16@,System.UInt16)"/>
      <Member Name="Write(System.Int32@,System.Int32)"/>
      <Member Name="Write(System.UInt32@,System.UInt32)"/>
      <Member Name="Write(System.Int64@,System.Int64)"/>
      <Member Name="Write(System.UInt64@,System.UInt64)"/>
      <Member Name="Write(System.IntPtr@,System.IntPtr)"/>
      <Member Name="Write(System.UIntPtr@,System.UIntPtr)"/>
      <Member Name="Write(System.Single@,System.Single)"/>
      <Member Name="Write(System.Double@,System.Double)"/>
      <Member Name="Write&lt;T&gt;(T@,T)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.IThreadPoolWorkItem">
      <Member Status="ImplRoot" Name="ExecuteWorkItem"/>
    </Type>
    <Type Name="System.Threading.Monitor">
      <Member Name="Enter(System.Object)" />
      <Member Name="Enter(System.Object,System.Boolean@)" />
      <Member Name="IsEntered(System.Object)"  />
      <Member Name="Exit(System.Object)" />
      <Member Name="Pulse(System.Object)" />
      <Member Name="PulseAll(System.Object)" />
      <Member Name="TryEnter(System.Object)" />
      <Member Name="TryEnter(System.Object,System.Int32)" />
      <Member Name="TryEnter(System.Object,System.TimeSpan)" />
      <Member Name="TryEnter(System.Object,System.Boolean@)" />
      <Member Name="TryEnter(System.Object,System.Int32,System.Boolean@)" />
      <Member Name="TryEnter(System.Object,System.TimeSpan,System.Boolean@)" />
      <Member Name="Wait(System.Object)" />
      <Member Name="Wait(System.Object,System.Int32)" />
      <Member Name="Wait(System.Object,System.TimeSpan)" />
    </Type>
    <Type Name="System.Threading.ManualResetEvent">
      <Member Name="#ctor(System.Boolean)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.QueueUserWorkItemCallback">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.WaitCallback,System.Object,System.Threading.ExecutionContext)"/>
    </Type>
    <Type Name="System.Threading.SynchronizationContext">
      <Member Name="#ctor"/>
      <Member Name="Send(System.Threading.SendOrPostCallback,System.Object)"/>
      <Member Name="Post(System.Threading.SendOrPostCallback,System.Object)"/>
      <Member Name="OperationStarted"/>
      <Member Name="OperationCompleted"/>
      <Member Name="SetSynchronizationContext(System.Threading.SynchronizationContext)"/>
      <Member Status="ApiFxInternal" Name="SetThreadStaticContext(System.Threading.SynchronizationContext)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="SetThreadStaticContext(System.Threading.SynchronizationContext)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_Current"/>
      <Member Name="CreateCopy"/>
      <Member MemberType="Property" Name="Current"/>
    </Type>
    <Type Name="System.Threading.SynchronizationLockException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.Thread">
      <Member Name="#ctor(System.Threading.ThreadStart)" />
      <Member Name="#ctor(System.Threading.ParameterizedThreadStart)" />
      <Member Name="MemoryBarrier" />
      <Member Name="Abort" Condition="FEATURE_LEGACYSURFACE" />
      <Member Name="Finalize" />
      <Member Name="get_CurrentCulture" />
      <Member Name="get_CurrentThread" />
      <Member Name="get_CurrentUICulture" />
      <Member Name="GetDomain" />
      <Member Name="get_IsBackground" />
      <Member Name="get_ManagedThreadId" />
      <Member Name="get_Name" />
      <Member Name="get_IsAlive" />
      <Member Name="get_ThreadState" />
      <Member Name="Join" />
      <Member Name="Join(System.Int32)" />
      <Member Name="set_IsBackground(System.Boolean)" />
      <Member Name="set_Name(System.String)" />
      <Member Name="Sleep(System.Int32)" />
      <Member Name="Sleep(System.TimeSpan)" />
      <Member Name="SpinWait(System.Int32)" />
      <Member Name="Start" />
      <Member Name="Start(System.Object)" />
      <Member MemberType="Property" Name="CurrentCulture" />
      <Member MemberType="Property" Name="CurrentThread" />
      <Member MemberType="Property" Name="CurrentUICulture" />
      <Member MemberType="Property" Name="IsBackground" />
      <Member MemberType="Property" Name="ManagedThreadId" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="IsAlive" />
      <Member MemberType="Property" Name="ThreadState" />
      <Member Status="ImplRoot" Name="InternalGetCurrentThread" />
      <Member Status="ImplRoot" MemberType="Field" Name="DONT_USE_InternalThread" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_Priority" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_ThreadStartArg" />
    </Type>
    <Type Name="System.Threading.ThreadAbortException">
    </Type>
    <Type Name="System.Threading.ThreadPool">
      <Member Name="GetMaxThreads(System.Int32@,System.Int32@)" />
      <Member Name="QueueUserWorkItem(System.Threading.WaitCallback)" />
      <Member Name="QueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
      <Member Name="SetMaxThreads(System.Int32,System.Int32)" />
      <Member Name="BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <Member Status="ApiFxInternal" Name="UnsafeQueueNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <Member Name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
      <Member Name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
      <Member Name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
      <Member Name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
      <Member Name="SetMinThreads(System.Int32,System.Int32)" />
      <Member Name="GetMinThreads(System.Int32@,System.Int32@)" />
      <Member Status="ImplRoot" Name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean,System.Threading.StackCrawlMark@,System.Boolean)" />
      <Member Status="ImplRoot" Name="RegisterWaitForSingleObjectNative(System.Threading.WaitHandle,System.Object,System.UInt32,System.Boolean,System.Threading.RegisteredWaitHandle,System.Threading.StackCrawlMark@,System.Boolean)" />
      <Member Status="ImplRoot" Name="UnsafeQueueCustomWorkItem(System.Threading.IThreadPoolWorkItem,System.Boolean)"/>
      <Member Status="ImplRoot" Name="TryPopCustomWorkItem(System.Threading.IThreadPoolWorkItem)"/>
      <Member Status="ImplRoot" Name="GetQueuedWorkItemsForDebugger"/>
      <Member Status="ImplRoot" Name="GetGloballyQueuedWorkItemsForDebugger"/>
      <Member Status="ImplRoot" Name="GetLocallyQueuedWorkItemsForDebugger"/>
      <Member Status="ImplRoot" Name="NotifyWorkItemProgress"/>
    </Type>
    <Type Status="ImplRoot"  Name="System.Threading.StackCrawlMark">
      <Member MemberType="Field" Name="LookForMe" />
      <Member MemberType="Field" Name="LookForMyCaller" />
      <Member MemberType="Field" Name="LookForMyCallersCaller" />
      <Member MemberType="Field" Name="LookForThread" />
    </Type>
    <Type Name="System.Threading.NativeOverlapped">
      <Member MemberType="Field" Name="InternalLow" />
      <Member MemberType="Field" Name="InternalHigh" />
      <Member MemberType="Field" Name="OffsetLow" />
      <Member MemberType="Field" Name="OffsetHigh" />
      <Member MemberType="Field" Name="EventHandle" />
    </Type>
    <Type Name="System.Threading.Overlapped">
      <Member Name="#ctor" />            
      <Member Status="ApiFxInternal" Name="#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" Condition="FEATURE_COMINTEROP" />
      <Member MemberType="Property" Name="AsyncResult" />
      <Member MemberType="Property" Name="OffsetLow" />
      <Member MemberType="Property" Name="OffsetHigh" />
      <Member Name="Free(System.Threading.NativeOverlapped*)" />
      <Member Name="Pack(System.Threading.IOCompletionCallback,System.Object)" />
      <Member Name="Unpack(System.Threading.NativeOverlapped*)" />
      <Member Name="UnsafePack(System.Threading.IOCompletionCallback,System.Object)" Condition="FEATURE_COMINTEROP" />
    </Type>
    <Type Name="System.Threading.IOCompletionCallback">
    </Type>
    <Type Name="System.Threading.RegisteredWaitHandle">
      <Member Name="Unregister(System.Threading.WaitHandle)" />
      <Member Status="ImplRoot" Name="SetHandle(System.IntPtr)" />
      <Member Status="ImplRoot" Name="SetWaitObject(System.Threading.WaitHandle)" />
    </Type>
    <Type Name="System.Threading.ThreadState">
      <Member MemberType="Field" Name="Running" />
      <Member MemberType="Field" Name="StopRequested" />
      <Member MemberType="Field" Name="SuspendRequested" />
      <Member MemberType="Field" Name="Background" />
      <Member MemberType="Field" Name="Unstarted" />
      <Member MemberType="Field" Name="Stopped" />
      <Member MemberType="Field" Name="WaitSleepJoin" />
      <Member MemberType="Field" Name="Suspended" />
      <Member MemberType="Field" Name="AbortRequested" />
      <Member MemberType="Field" Name="Aborted" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Threading.ThreadStart">
    </Type>
    <Type Name="System.Threading.ParameterizedThreadStart">
    </Type>
    <Type Name="System.Threading.SendOrPostCallback">
    </Type>
    <Type Name="System.Threading.ThreadStartException">
      <Member Status="ImplRoot" Name="#ctor(System.Exception)" /><!-- EE -->
    </Type>
    <Type Name="System.Threading.ThreadStateException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.Timeout">
      <Member MemberType="Field" Name="Infinite" />
      <Member MemberType="Field" Name="InfiniteTimeSpan" />
    </Type>
    <Type Name="System.Threading.Timer">
      <Member Name="#ctor(System.Threading.TimerCallback)" />
      <Member Name="#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <Member Name="#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <Member Name="#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <Member Name="Change(System.Int32,System.Int32)" />
      <Member Name="Change(System.Int64,System.Int64)" />
      <Member Name="Change(System.TimeSpan,System.TimeSpan)" />
      <Member Name="Change(System.UInt32,System.UInt32)" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Threading.WaitHandle)" />
    </Type>
    <Type Name="System.Threading.TimerCallback">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object)" />
    </Type>
    <Type Name="System.Threading.WaitCallback">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object)" />
    </Type>
    <Type Name="System.Threading.WaitOrTimerCallback">
    </Type>
    <Type Name="System.Threading.WaitHandle">
      <Member MemberType="Field" Name="InvalidHandle" />
      <Member MemberType="Field" Name="WaitTimeout" />
      <Member Name="#ctor" />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Status="ApiFxInternal" Name="get_SafeWaitHandle" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="get_SafeWaitHandle" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="set_SafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="set_SafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="WaitAny(System.Threading.WaitHandle[])" />
      <Member Name="WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <Member Name="WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <Member Name="WaitAll(System.Threading.WaitHandle[])" />
      <Member Name="WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <Member Name="WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <Member  Status="ApiFxInternal" Name="WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <Member Name="WaitOne" />
      <Member Name="WaitOne(System.Int32)" />
      <Member Name="WaitOne(System.TimeSpan)" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="SafeWaitHandle" Condition="not FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="SafeWaitHandle" Condition="FEATURE_LEGACYNETCF" />
    </Type>
   <Type Name="System.Threading.WaitHandleExtensions">
      <Member Name="GetSafeWaitHandle(System.Threading.WaitHandle)" />
      <Member Name="SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" />
    </Type>    
    <Type Name="System.Threading.WaitHandleCannotBeOpenedException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.TimeoutException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.TimeSpan">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member MemberType="Field" Name="TicksPerDay" />
      <Member MemberType="Field" Name="TicksPerHour" />
      <Member MemberType="Field" Name="TicksPerMillisecond" />
      <Member MemberType="Field" Name="TicksPerMinute" />
      <Member MemberType="Field" Name="TicksPerSecond" />
      <Member MemberType="Field" Name="Zero" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int64)" />
      <Member Name="Add(System.TimeSpan)" />
      <Member Name="Compare(System.TimeSpan,System.TimeSpan)" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.TimeSpan)" />
      <Member Name="Duration" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.TimeSpan)" />
      <Member Name="Equals(System.TimeSpan,System.TimeSpan)" />
      <Member Name="FromDays(System.Double)" />
      <Member Name="FromHours(System.Double)" />
      <Member Name="FromMilliseconds(System.Double)" />
      <Member Name="FromMinutes(System.Double)" />
      <Member Name="FromSeconds(System.Double)" />
      <Member Name="FromTicks(System.Int64)" />
      <Member Name="get_Days" />
      <Member Name="get_Hours" />
      <Member Name="get_Milliseconds" />
      <Member Name="get_Minutes" />
      <Member Name="get_Seconds" />
      <Member Name="get_Ticks" />
      <Member Name="get_TotalDays" />
      <Member Name="get_TotalHours" />
      <Member Name="get_TotalMilliseconds" />
      <Member Name="get_TotalMinutes" />
      <Member Name="get_TotalSeconds" />
      <Member Name="GetHashCode" />
      <Member Name="Negate" />
      <Member Name="op_Addition(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_Equality(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_Inequality(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_LessThan(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_Subtraction(System.TimeSpan,System.TimeSpan)" />
      <Member Name="op_UnaryPlus(System.TimeSpan)" />
      <Member Name="op_UnaryNegation(System.TimeSpan)" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider)" />
      <Member Name="ParseExact(System.String,System.String[],System.IFormatProvider)" />
      <Member Name="ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <Member Name="ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <Member Name="TryParse(System.String,System.TimeSpan@)" />
      <Member Name="TryParse(System.String,System.IFormatProvider,System.TimeSpan@)" />
      <Member Name="TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" />
      <Member Name="TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <Member Name="TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <Member Name="TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <Member Name="Subtract(System.TimeSpan)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.String)" />
      <Member MemberType="Property" Name="Days" />
      <Member MemberType="Property" Name="Hours" />
      <Member MemberType="Property" Name="Milliseconds" />
      <Member MemberType="Property" Name="Minutes" />
      <Member MemberType="Property" Name="Seconds" />
      <Member MemberType="Property" Name="Ticks" />
      <Member MemberType="Property" Name="TotalDays" />
      <Member MemberType="Property" Name="TotalHours" />
      <Member MemberType="Property" Name="TotalMilliseconds" />
      <Member MemberType="Property" Name="TotalMinutes" />
      <Member MemberType="Property" Name="TotalSeconds" />
    </Type>
    <Type Name="System.TimeZoneInfo">
      <Member Name="get_DisplayName" />
      <Member Name="get_StandardName" />
      <Member Name="get_DaylightName" />
      <Member Name="get_Id" />
      <Member Name="get_BaseUtcOffset" />
      <Member Name="get_SupportsDaylightSavingTime" />
      <Member Name="get_Local" />
      <Member Name="get_Utc" />
      <Member Name="GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      <Member Name="GetAmbiguousTimeOffsets(System.DateTime)" />
      <Member Name="GetUtcOffset(System.DateTimeOffset)" />
      <Member Name="GetUtcOffset(System.DateTime)" />
      <Member Name="IsAmbiguousTime(System.DateTimeOffset)" />
      <Member Name="IsAmbiguousTime(System.DateTime)" />
      <Member Name="IsDaylightSavingTime(System.DateTimeOffset)" />
      <Member Name="IsDaylightSavingTime(System.DateTime)" />
      <Member Name="IsInvalidTime(System.DateTime)" />
      <Member Name="ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
      <Member Name="ConvertTime(System.DateTime,System.TimeZoneInfo)" />
      <Member Name="ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      <Member Name="Equals(System.TimeZoneInfo)" />
      <Member Name="FindSystemTimeZoneById(System.String)" />
      <Member Name="GetHashCode" />
      <Member Name="GetSystemTimeZones" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="DisplayName" />
      <Member MemberType="Property" Name="StandardName" />
      <Member MemberType="Property" Name="DaylightName" />
      <Member MemberType="Property" Name="Id" />
      <Member MemberType="Property" Name="BaseUtcOffset" />
      <Member MemberType="Property" Name="SupportsDaylightSavingTime" />
      <Member MemberType="Property" Name="Local" />
      <Member MemberType="Property" Name="Utc" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.TimeZoneInfo+AdjustmentRule">
      <!-- CreateAdjustmentRule doesn't have a public contract, but tests and other callers can use Reflection to invoke it, so ensure it is left in mscorlib. -->
      <Member Status="ApiRoot" Name="CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo+TransitionTime,System.TimeZoneInfo+TransitionTime)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.TimeZoneInfo+TransitionTime">
    </Type>
    <Type Name="System.Tuple">
      <Member Name="Create&lt;T1&gt;(T1)" />
      <Member Name="Create&lt;T1,T2&gt;(T1,T2)" />
      <Member Name="Create&lt;T1,T2,T3&gt;(T1,T2,T3)" />
      <Member Name="Create&lt;T1,T2,T3,T4&gt;(T1,T2,T3,T4)" />
      <Member Name="Create&lt;T1,T2,T3,T4,T5&gt;(T1,T2,T3,T4,T5)" />
      <Member Name="Create&lt;T1,T2,T3,T4,T5,T6&gt;(T1,T2,T3,T4,T5,T6)" />
      <Member Name="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;(T1,T2,T3,T4,T5,T6,T7)" />
      <Member Name="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;(T1,T2,T3,T4,T5,T6,T7,T8)" />
    </Type>
    <Type Name="System.Tuple&lt;T1&gt;">
      <Member Name="#ctor(T1)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2&gt;">
      <Member Name="#ctor(T1,T2)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3&gt;">
      <Member Name="#ctor(T1,T2,T3)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3,T4&gt;">
      <Member Name="#ctor(T1,T2,T3,T4)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="get_Item4" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
      <Member MemberType="Property" Name="Item4" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3,T4,T5&gt;">
      <Member Name="#ctor(T1,T2,T3,T4,T5)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="get_Item4" />
      <Member Name="get_Item5" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
      <Member MemberType="Property" Name="Item4" />
      <Member MemberType="Property" Name="Item5" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <Member Name="#ctor(T1,T2,T3,T4,T5,T6)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="get_Item4" />
      <Member Name="get_Item5" />
      <Member Name="get_Item6" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
      <Member MemberType="Property" Name="Item4" />
      <Member MemberType="Property" Name="Item5" />
      <Member MemberType="Property" Name="Item6" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <Member Name="#ctor(T1,T2,T3,T4,T5,T6,T7)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="get_Item4" />
      <Member Name="get_Item5" />
      <Member Name="get_Item6" />
      <Member Name="get_Item7" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
      <Member MemberType="Property" Name="Item4" />
      <Member MemberType="Property" Name="Item5" />
      <Member MemberType="Property" Name="Item6" />
      <Member MemberType="Property" Name="Item7" />
    </Type>
    <Type Name="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
      <Member Name="#ctor(T1,T2,T3,T4,T5,T6,T7,TRest)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Item1" />
      <Member Name="get_Item2" />
      <Member Name="get_Item3" />
      <Member Name="get_Item4" />
      <Member Name="get_Item5" />
      <Member Name="get_Item6" />
      <Member Name="get_Item7" />
      <Member Name="get_Rest" />
      <Member Name="GetHashCode" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Item1" />
      <Member MemberType="Property" Name="Item2" />
      <Member MemberType="Property" Name="Item3" />
      <Member MemberType="Property" Name="Item4" />
      <Member MemberType="Property" Name="Item5" />
      <Member MemberType="Property" Name="Item6" />
      <Member MemberType="Property" Name="Item7" />
      <Member MemberType="Property" Name="Rest" />
    </Type>
    <Type Name="System.Type">
      <Member Name="#ctor" />
      <Member MemberType="Field" Name="Delimiter" />
      <Member MemberType="Field" Name="EmptyTypes" />
      <Member MemberType="Field" Name="FilterNameIgnoreCase" />
      <Member MemberType="Field" Name="Missing" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Type)" />
      <Member Name="FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
      <!--
      <Member Name="get_IsSecurityCritical" />
      <Member Name="get_IsSecuritySafeCritical" />
      <Member Name="get_IsSecurityTransparent" />
      -->
      <Member Name="get_Assembly" />
      <Member Name="get_AssemblyQualifiedName" />
      <Member Name="get_Attributes" />
      <Member Name="get_BaseType" />
      <Member Name="get_ContainsGenericParameters" />
      <Member Name="get_DeclaringType" />
      <Member Name="get_DeclaringMethod" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_DefaultBinder" />
      <Member Name="get_FullName" />
      <Member Name="get_GenericParameterAttributes" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_GenericParameterPosition" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_GenericTypeArguments" />
      <Member Name="get_GUID" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_HasElementType" />
      <Member Name="get_IsAbstract" />
      <Member Name="get_IsAnsiClass" />
      <Member Name="get_IsArray" />
      <Member Name="get_IsAutoClass" />
      <Member Name="get_IsAutoLayout" />
      <Member Name="get_IsByRef" />
      <Member Name="get_IsConstructedGenericType" />
      <Member Name="get_IsClass" />
      <Member Name="get_IsCOMObject" />
      <Member Name="get_IsEnum" />
      <Member Name="get_IsExplicitLayout" />
      <Member Name="get_IsGenericParameter" />
      <Member Name="get_IsGenericType" />
      <Member Name="get_IsGenericTypeDefinition" />
      <Member Name="get_IsImport" />
      <Member Name="get_IsInterface" />
      <Member Name="get_IsLayoutSequential" />
      <Member Name="get_IsMarshalByRef" />
      <Member Name="get_IsNested" />
      <Member Name="get_IsNestedAssembly" />
      <Member Name="get_IsNestedFamANDAssem" />
      <Member Name="get_IsNestedFamily" />
      <Member Name="get_IsNestedFamORAssem" />
      <Member Name="get_IsNestedPrivate" />
      <Member Name="get_IsNestedPublic" />
      <Member Name="get_IsNotPublic" />
      <Member Name="get_IsPointer" />
      <Member Name="get_IsPrimitive" />
      <Member Name="get_IsPublic" />
      <Member Name="get_IsSealed" />
      <Member Name="get_IsSerializable" />
      <Member Name="get_IsSpecialName" />
      <Member Name="get_IsUnicodeClass" />
      <Member Name="get_IsValueType" />
      <Member Name="get_IsVisible" />
      <Member Name="get_MemberType" />
      <Member Name="get_Module" />
      <Member Name="get_Namespace" />
      <Member Name="get_ReflectedType" />
      <Member Name="get_TypeHandle" />
      <Member Name="get_UnderlyingSystemType" />
      <Member Name="GetArrayRank" />
      <Member Name="GetAttributeFlagsImpl" />
      <Member Name="GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetConstructor(System.Type[])" />
      <Member Name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetConstructors" />
      <Member Name="GetConstructors(System.Reflection.BindingFlags)" />
      <Member Name="GetDefaultMembers" />
      <Member Name="GetElementType" />
      <Member Name="GetEvent(System.String)" />
      <Member Name="GetEvent(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetEvents" />
      <Member Name="GetEvents(System.Reflection.BindingFlags)" />
      <Member Name="GetField(System.String)" />
      <Member Name="GetField(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetFields" />
      <Member Name="GetFields(System.Reflection.BindingFlags)" />
      <Member Name="GetGenericArguments" />
      <Member Name="GetGenericParameterConstraints" />
      <Member Name="GetGenericTypeDefinition" />
      <Member Name="GetHashCode" />
      <Member Name="GetInterface(System.String,System.Boolean)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetInterfaceMap(System.Type)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetInterfaces" />
      <Member Name="GetMember(System.String)" />
      <Member Name="GetMember(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <Member Name="GetMembers" />
      <Member Name="GetMembers(System.Reflection.BindingFlags)" />
      <Member Name="GetMethod(System.String)" />
      <Member Name="GetMethod(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethod(System.String,System.Type[])" />
      <Member Name="GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetMethods" />
      <Member Name="GetMethods(System.Reflection.BindingFlags)" />
      <Member Name="GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetNestedTypes(System.Reflection.BindingFlags)" />
      <Member Name="GetProperties" />
      <Member Name="GetProperties(System.Reflection.BindingFlags)" />
      <Member Name="GetProperty(System.String)" />
      <Member Name="GetProperty(System.String,System.Reflection.BindingFlags)" />
      <Member Name="GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetProperty(System.String,System.Type)" />
      <Member Name="GetProperty(System.String,System.Type,System.Type[])" />
      <Member Name="GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <Member Name="GetType(System.String)" />
      <Member Name="GetType(System.String,System.Boolean)" />
      <Member Name="GetType(System.String,System.Boolean,System.Boolean)" />
      <Member Name="GetTypeCode(System.Type)" />
      <Member Name="GetTypeFromHandle(System.RuntimeTypeHandle)" />
      <Member Name="GetTypeHandle(System.Object)" />
      <Member Name="HasElementTypeImpl" />
      <Member Name="InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" />
      <Member Name="InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <Member Name="IsArrayImpl" />
      <Member Name="IsAssignableFrom(System.Type)" />
      <Member Name="IsByRefImpl" />
      <Member Name="IsCOMObjectImpl" />
      <Member Name="IsInstanceOfType(System.Object)" />
      <Member Name="IsPointerImpl" />
      <Member Name="IsPrimitiveImpl" />
      <Member Name="IsSubclassOf(System.Type)" />
      <Member Name="IsEquivalentTo(System.Type)" />
      <Member Name="IsValueTypeImpl" />
      <Member Name="MakeArrayType" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="MakeArrayType(System.Int32)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="MakeByRefType" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="MakeGenericType(System.Type[])" />
      <Member Name="MakePointerType" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Assembly" />
      <Member MemberType="Property" Name="AssemblyQualifiedName" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="BaseType" />
      <Member MemberType="Property" Name="ContainsGenericParameters" />
      <Member MemberType="Property" Name="DeclaringType" />
      <Member MemberType="Property" Name="DeclaringMethod" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="DefaultBinder" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="GenericParameterAttributes" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="GenericParameterPosition" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="GenericTypeArguments" />
      <Member MemberType="Property" Name="GUID" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="HasElementType" />
      <Member MemberType="Property" Name="IsAbstract" />
      <Member MemberType="Property" Name="IsAnsiClass" />
      <Member MemberType="Property" Name="IsArray" />
      <Member MemberType="Property" Name="IsAutoClass" />
      <Member MemberType="Property" Name="IsAutoLayout" />
      <Member MemberType="Property" Name="IsByRef" />
      <Member MemberType="Property" Name="IsConstructedGenericType" />
      <Member MemberType="Property" Name="IsClass" />
      <Member MemberType="Property" Name="IsCOMObject" />
      <Member MemberType="Property" Name="IsEnum" />
      <Member MemberType="Property" Name="IsExplicitLayout" />
      <Member MemberType="Property" Name="IsGenericParameter" />
      <Member MemberType="Property" Name="IsGenericType" />
      <Member MemberType="Property" Name="IsGenericTypeDefinition" />
      <Member MemberType="Property" Name="IsImport" />
      <Member MemberType="Property" Name="IsInterface" />
      <Member MemberType="Property" Name="IsLayoutSequential" />
      <Member MemberType="Property" Name="IsMarshalByRef" />
      <Member MemberType="Property" Name="IsNested" />
      <Member MemberType="Property" Name="IsNestedAssembly" />
      <Member MemberType="Property" Name="IsNestedFamANDAssem" />
      <Member MemberType="Property" Name="IsNestedFamily" />
      <Member MemberType="Property" Name="IsNestedFamORAssem" />
      <Member MemberType="Property" Name="IsNestedPrivate" />
      <Member MemberType="Property" Name="IsNestedPublic" />
      <Member MemberType="Property" Name="IsNotPublic" />
      <Member MemberType="Property" Name="IsPointer" />
      <Member MemberType="Property" Name="IsPrimitive" />
      <Member MemberType="Property" Name="IsPublic" />
      <Member MemberType="Property" Name="IsSealed" />
      <Member MemberType="Property" Name="IsSerializable" />
      <Member MemberType="Property" Name="IsSpecialName" />
      <Member MemberType="Property" Name="IsUnicodeClass" />
      <Member MemberType="Property" Name="IsValueType" />
      <Member MemberType="Property" Name="IsVisible" />
      <Member MemberType="Property" Name="MemberType" />
      <Member MemberType="Property" Name="Module" />
      <Member MemberType="Property" Name="Namespace" />
      <Member MemberType="Property" Name="ReflectedType" />
      <Member MemberType="Property" Name="TypeHandle" />
      <Member MemberType="Property" Name="UnderlyingSystemType" />
    </Type>
    <Type Name="System.TypeAccessException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.TypeCode">
      <Member MemberType="Field" Name="Boolean" />
      <Member MemberType="Field" Name="Byte" />
      <Member MemberType="Field" Name="Char" />
      <Member MemberType="Field" Name="DateTime" />
      <Member MemberType="Field" Name="DBNull" />
      <Member MemberType="Field" Name="Decimal" />
      <Member MemberType="Field" Name="Double" />
      <Member MemberType="Field" Name="Empty" />
      <Member MemberType="Field" Name="Int16" />
      <Member MemberType="Field" Name="Int32" />
      <Member MemberType="Field" Name="Int64" />
      <Member MemberType="Field" Name="Object" />
      <Member MemberType="Field" Name="SByte" />
      <Member MemberType="Field" Name="Single" />
      <Member MemberType="Field" Name="String" />
      <Member MemberType="Field" Name="UInt16" />
      <Member MemberType="Field" Name="UInt32" />
      <Member MemberType="Field" Name="UInt64" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.TypeInitializationException" >
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="get_TypeName" />
      <Member MemberType="Property" Name="TypeName" />
    </Type>
    <Type Name="System.TypedReference" />
    <Type Name="System.TypeLoadException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Status="ImplRoot" Name="#ctor(System.String,System.String,System.String,System.Int32)" />
      <Member Name="get_TypeName" />
      <Member MemberType="Property" Name="TypeName" />
    </Type>
    <Type Name="System.UInt16">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.UInt16)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.UInt16)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.UInt16@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.UInt32">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.UInt32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.UInt32)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.UInt32@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.UInt64">
      <Member MemberType="Field" Name="MaxValue" />
      <Member MemberType="Field" Name="MinValue" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.UInt64)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.UInt64)" />
      <Member Name="GetHashCode" />
      <Member Name="GetTypeCode" />
      <Member Name="Parse(System.String)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles)" />
      <Member Name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <Member Name="Parse(System.String,System.IFormatProvider)" />
      <Member Name="TryParse(System.String,System.UInt64@)" />
      <Member Name="TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.IFormatProvider)" />
      <Member Name="ToString(System.String)" />
      <Member Name="ToString(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="System.UIntPtr">
      <Member MemberType="Field" Name="Zero" />
      <Member Name="#ctor(System.UInt32)" />
      <Member Name="#ctor(System.UInt64)" />
      <Member Name="#ctor(System.Void*)" />
      <Member Name="Add(System.UIntPtr,System.Int32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="get_Size" />
      <Member Name="GetHashCode" />
      <Member Name="op_Addition(System.UIntPtr,System.Int32)" />
      <Member Name="op_Equality(System.UIntPtr,System.UIntPtr)" />
      <Member Name="op_Explicit(System.UInt32)" ReturnType="System.UIntPtr" />
      <Member Name="op_Explicit(System.UInt64)" ReturnType="System.UIntPtr" />
      <Member Name="op_Explicit(System.UIntPtr)" ReturnType="System.UInt32" />
      <Member Name="op_Explicit(System.UIntPtr)" ReturnType="System.UInt64" />
      <Member Name="op_Explicit(System.UIntPtr)" ReturnType="System.Void*" />
      <Member Name="op_Explicit(System.Void*)" ReturnType="System.UIntPtr" />
      <Member Name="op_Inequality(System.UIntPtr,System.UIntPtr)" />
      <Member Name="op_Subtraction(System.UIntPtr,System.Int32)" />
      <Member Name="Subtract(System.UIntPtr,System.Int32)" />
      <Member Name="ToPointer" />
      <Member Name="ToString" />
      <Member Name="ToUInt32" />
      <Member Name="ToUInt64" />
      <Member MemberType="Property" Name="Size" />
    </Type>
    <Type Name="System.UnauthorizedAccessException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.UnhandledExceptionEventArgs">
      <Member Name="#ctor(System.Object,System.Boolean)" />
      <Member Name="get_ExceptionObject" />
      <Member Name="get_IsTerminating" />
      <Member MemberType="Property" Name="ExceptionObject" />
      <Member MemberType="Property" Name="IsTerminating" />
    </Type>    
    <Type Name="System.UnhandledExceptionEventHandler">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,System.UnhandledExceptionEventArgs,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object,System.UnhandledExceptionEventArgs)" />
    </Type>
    <Type Name="System.ValueType">
      <Member Name="#ctor" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
    </Type>
    <Type Name="System.Variant" Condition="FEATURE_COMINTEROP">
      <Member Status="ImplRoot" MemberType="Field" Name="m_objref" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_data1" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_data2" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_flags" />
      <Member Status="ImplRoot" Name="MarshalHelperConvertObjectToVariant(System.Object,System.Variant@)" />
      <Member Status="ImplRoot" Name="MarshalHelperCastVariant(System.Object,System.Int32,System.Variant@)" />
      <Member Status="ImplRoot" Name="MarshalHelperConvertVariantToObject(System.Variant@)" />
    </Type>
    <Type Name="System.Version">
      <Member Name="#ctor(System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="Clone" />
      <Member Name="CompareTo(System.Object)" />
      <Member Name="CompareTo(System.Version)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Version)" />
      <Member Name="get_Build" />
      <Member Name="get_Major" />
      <Member Name="get_MajorRevision" />
      <Member Name="get_Minor" />
      <Member Name="get_MinorRevision" />
      <Member Name="get_Revision" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Version,System.Version)" />
      <Member Name="op_GreaterThan(System.Version,System.Version)" />
      <Member Name="op_GreaterThanOrEqual(System.Version,System.Version)" />
      <Member Name="op_Inequality(System.Version,System.Version)" />
      <Member Name="op_LessThan(System.Version,System.Version)" />
      <Member Name="op_LessThanOrEqual(System.Version,System.Version)" />
      <Member Name="Parse(System.String)" />
      <Member Name="ToString" />
      <Member Name="ToString(System.Int32)" />
      <Member Name="TryParse(System.String,System.Version@)" />
      <Member MemberType="Property" Name="Build" />
      <Member MemberType="Property" Name="Major" />
      <Member MemberType="Property" Name="MajorRevision" />
      <Member MemberType="Property" Name="Minor" />
      <Member MemberType="Property" Name="MinorRevision" />
      <Member MemberType="Property" Name="Revision" />
    </Type>
    <Type Name="System.Void" />
    <Type Name="System.WeakReference">
      <Member Name="#ctor(System.Object)" />
      <Member Name="#ctor(System.Object,System.Boolean)" />
      <Member Name="#ctor" />
      <Member Name="get_IsAlive" />
      <Member Name="get_Target" />
      <Member Name="get_TrackResurrection" />
      <Member Name="set_Target(System.Object)" />
      <Member MemberType="Property" Name="IsAlive" />
      <Member MemberType="Property" Name="Target" />
      <Member MemberType="Property" Name="TrackResurrection" />
    </Type>
    <Type Status="ApiRoot" Name="System.WeakReference&lt;T&gt;">
      <Member Name="#ctor(T)" />
      <Member Name="#ctor(T,System.Boolean)" />
      <Member Name="SetTarget(T)" />
      <Member Name="TryGetTarget(T@)" />
      <Member Status="ImplRoot" Name="Finalize" />
    </Type>

<!-- SMOSIER ADDED API ROOTS FOR C# -->
    <Type Name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <Member MemberType="Property" Name="WrapNonExceptionThrows" />
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <Member Name="#ctor(System.Type)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <Member Name="#ctor(System.Type)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.StateMachineAttribute">
      <Member Name="#ctor(System.Type)" />
      <Member Name="get_StateMachineType" />
      <Member MemberType="Property" Name="StateMachineType" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CallerFilePathAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <Member Name="#ctor" />
    </Type>

<!-- SMOSIER ADDED API ROOTS FOR our build process -->
    <Type Name="System.Runtime.InteropServices.ComVisibleAttribute">
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Name="System.Reflection.AssemblyFileVersionAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="get_Version" />
      <Member MemberType="Property" Name="Version" />
    </Type>

<!-- smosier added for security API -->
    <Type Status="ApiFxInternal" Name="System.Security.SecurityManager">
      <Member Status="ImplRoot" Name="GetSpecialFlags(System.Security.PermissionSet,System.Security.PermissionSet)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Security.Permissions.HostProtectionAttribute">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Name="get_ExternalProcessMgmt" />
      <Member Name="get_ExternalThreading" />
      <Member Name="get_MayLeakOnAbort" />
      <Member Name="get_Resources" />
      <Member Name="get_SecurityInfrastructure" />
      <Member Name="get_SelfAffectingProcessMgmt" />
      <Member Name="get_SelfAffectingThreading" />
      <Member Name="get_SharedState" />
      <Member Name="get_Synchronization" />
      <Member Name="get_UI" />
      <Member Name="set_ExternalProcessMgmt(System.Boolean)" />
      <Member Name="set_ExternalThreading(System.Boolean)" />
      <Member Name="set_MayLeakOnAbort(System.Boolean)" />
      <Member Name="set_Resources(System.Security.Permissions.HostProtectionResource)" />
      <Member Name="set_SecurityInfrastructure(System.Boolean)" />
      <Member Name="set_SelfAffectingProcessMgmt(System.Boolean)" />
      <Member Name="set_SelfAffectingThreading(System.Boolean)" />
      <Member Name="set_SharedState(System.Boolean)" />
      <Member Name="set_Synchronization(System.Boolean)" />
      <Member Name="set_UI(System.Boolean)" />
      <Member MemberType="Property" Name="ExternalProcessMgmt" />
      <Member MemberType="Property" Name="ExternalThreading" />
      <Member MemberType="Property" Name="MayLeakOnAbort" />
      <Member MemberType="Property" Name="Resources" />
      <Member MemberType="Property" Name="SecurityInfrastructure" />
      <Member MemberType="Property" Name="SelfAffectingProcessMgmt" />
      <Member MemberType="Property" Name="SelfAffectingThreading" />
      <Member MemberType="Property" Name="SharedState" />
      <Member MemberType="Property" Name="Synchronization" />
      <Member MemberType="Property" Name="UI" />
    </Type>
    <Type Status="ImplRoot" Name="System.Security.Permissions.HostProtectionResource" />

    <Type Name="System.IO.BinaryReader">
      <Member Name="#ctor(System.IO.Stream)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="FillBuffer(System.Int32)" />
      <Member Name="get_BaseStream" />
      <Member Name="PeekChar" />
      <Member Name="Read" />
      <Member Name="Read7BitEncodedInt" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="Read(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadBoolean" />
      <Member Name="ReadByte" />
      <Member Name="ReadBytes(System.Int32)" />
      <Member Name="ReadChar" />
      <Member Name="ReadChars(System.Int32)" />
      <Member Name="ReadDecimal" />
      <Member Name="ReadDouble" />
      <Member Name="ReadInt16" />
      <Member Name="ReadInt32" />
      <Member Name="ReadInt64" />
      <Member Name="ReadSByte" />
      <Member Name="ReadSingle" />
      <Member Name="ReadString" />
      <Member Name="ReadUInt16" />
      <Member Name="ReadUInt32" />
      <Member Name="ReadUInt64" />
      <Member MemberType="Property" Name="BaseStream" />
    </Type>
    <Type Name="System.IO.BinaryWriter">
      <Member MemberType="Field" Name="Null" />
      <Member MemberType="Field" Name="OutStream" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.IO.Stream)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="get_BaseStream" />
      <Member Name="Seek(System.Int32,System.IO.SeekOrigin)" />
      <Member Name="Write(System.Boolean)" />
      <Member Name="Write(System.Byte)" />
      <Member Name="Write(System.Byte[])" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="Write(System.Char)" />
      <Member Name="Write(System.Char[])" />
      <Member Name="Write(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Write(System.Decimal)" />
      <Member Name="Write(System.Double)" />
      <Member Name="Write(System.Int16)" />
      <Member Name="Write(System.Int32)" />
      <Member Name="Write(System.Int64)" />
      <Member Name="Write(System.SByte)" />
      <Member Name="Write(System.Single)" />
      <Member Name="Write(System.String)" />
      <Member Name="Write(System.UInt16)" />
      <Member Name="Write(System.UInt32)" />
      <Member Name="Write(System.UInt64)" />
      <Member Name="Write7BitEncodedInt(System.Int32)" />
      <Member MemberType="Property" Name="BaseStream" />
    </Type>
    <Type Name="System.IO.Directory" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="CreateDirectory(System.String)" />
      <Member Name="Delete(System.String)" />
      <Member Name="Delete(System.String,System.Boolean)" />
      <Member Name="Exists(System.String)" />
      <Member Name="GetCreationTime(System.String)" />
      <Member Name="GetCurrentDirectory" />
      <Member Name="GetDirectories(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetDirectories(System.String,System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFiles(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFiles(System.String,System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFileSystemEntries(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFileSystemEntries(System.String,System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="EnumerateDirectories(System.String)"/>
      <Member Name="EnumerateDirectories(System.String,System.String)" />
      <Member Name="EnumerateDirectories(System.String,System.String,System.IO.SearchOption)" />
      <Member Name="GetDirectoryRoot(System.String)" />
      <Member Name="EnumerateFiles(System.String)" />
      <Member Name="EnumerateFiles(System.String,System.String)" />
      <Member Name="EnumerateFiles(System.String,System.String,System.IO.SearchOption)" />
      <Member Name="EnumerateFileSystemEntries(System.String)" />
      <Member Name="EnumerateFileSystemEntries(System.String,System.String)" />
      <Member Name="EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)" />
      <Member Name="GetLastAccessTime(System.String)" />
      <Member Name="GetLastWriteTime(System.String)" />
      <Member Name="Move(System.String,System.String)" />
      <Member Status="ApiFxInternal" Name="SetCurrentDirectory(System.String)" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="SetCurrentDirectory(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Status="ApiFxInternal" Name="UnsafeCreateDirectory(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeDelete(System.String,System.Boolean)" />
      <Member Status="ApiFxInternal" Name="UnsafeExists(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeGetCurrentDirectory" />
      <Member Status="ApiFxInternal" Name="UnsafeGetDirectories(System.String,System.String,System.IO.SearchOption)" />
      <Member Status="ApiFxInternal" Name="UnsafeGetFiles(System.String,System.String,System.IO.SearchOption)" />
      <Member Status="ApiFxInternal" Name="UnsafeMove(System.String,System.String)" />
    </Type>
    <Type Name="System.IO.DirectoryInfo" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.String)" />
      <Member Name="Create" />
      <Member Name="CreateSubdirectory(System.String)" />
      <Member Name="Delete" />
      <Member Name="Delete(System.Boolean)" />
      <Member Name="get_Exists" />
      <Member Name="get_Name" />
      <Member Name="get_Parent" />
      <Member Name="get_Root" />
      <Member Name="GetDirectories" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetDirectories(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFiles" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFiles(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFileSystemInfos" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="GetFileSystemInfos(System.String)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="EnumerateDirectories" />
      <Member Name="EnumerateDirectories(System.String)"/>
      <Member Name="EnumerateDirectories(System.String,System.IO.SearchOption)"/>
      <Member Name="EnumerateFiles"/>
      <Member Name="EnumerateFiles(System.String)"/>
      <Member Name="EnumerateFiles(System.String,System.IO.SearchOption)"/>
      <Member Name="EnumerateFileSystemInfos"/>
      <Member Name="EnumerateFileSystemInfos(System.String)"/>
      <Member Name="EnumerateFileSystemInfos(System.String,System.IO.SearchOption)"/>
      <Member Name="MoveTo(System.String)"  />
      <Member Status="ApiFxInternal" Name="UnsafeCreateDirectoryInfo(System.String)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Exists" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Parent" />
      <Member MemberType="Property" Name="Root" />
    </Type>
    <Type Name="System.IO.DirectoryNotFoundException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.IO.EndOfStreamException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.IO.File" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="AppendAllLines(System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;)"/>
      <Member Name="AppendAllLines(System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;,System.Text.Encoding)"  />
      <Member Name="AppendAllText(System.String,System.String)"  />
      <Member Name="AppendAllText(System.String,System.String,System.Text.Encoding)"  />
      <Member Name="AppendText(System.String)" />
      <Member Name="Copy(System.String,System.String)" />
      <Member Name="Copy(System.String,System.String,System.Boolean)" />
      <Member Name="Create(System.String)" />
      <Member Name="Create(System.String,System.Int32)" />
      <Member Name="CreateText(System.String)" />
      <Member Name="Delete(System.String)" />
      <Member Name="Exists(System.String)" />
      <Member Name="GetAttributes(System.String)"/>
      <Member Name="GetCreationTime(System.String)" />
      <Member Name="GetLastAccessTime(System.String)" />
      <Member Name="GetLastWriteTime(System.String)" />
      <Member Name="Move(System.String,System.String)" />
      <Member Name="Open(System.String,System.IO.FileMode)" />
      <Member Name="Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <Member Name="Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <Member Name="OpenRead(System.String)" />
      <Member Name="OpenText(System.String)" />
      <Member Name="OpenWrite(System.String)" />
      <Member Name="ReadAllBytes(System.String)" />
      <Member Name="ReadAllText(System.String)" />
      <Member Name="ReadAllText(System.String,System.Text.Encoding)" />
      <Member Name="ReadLines(System.String)" />
      <Member Name="ReadLines(System.String,System.Text.Encoding)" />
      <Member Status="ApiFxInternal" Name="UnsafeCopy(System.String,System.String,System.Boolean)" />
      <Member Status="ApiFxInternal" Name="UnsafeDelete(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeExists(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeMove(System.String,System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeReadAllBytes(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeReadAllText(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeWriteAllBytes(System.String,System.Byte[])" />
      <Member Status="ApiFxInternal" Name="UnsafeWriteAllText(System.String,System.String)" />
      <Member Name="SetAttributes(System.String,System.IO.FileAttributes)" />
      <Member Name="WriteAllBytes(System.String,System.Byte[])" />
      <Member Name="WriteAllLines(System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;)" />
      <Member Name="WriteAllLines(System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;,System.Text.Encoding)" />
      <Member Name="WriteAllText(System.String,System.String)" />
      <Member Name="WriteAllText(System.String,System.String,System.Text.Encoding)" />
    </Type>
    <Type Name="System.IO.FileAccess" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Read" />
      <Member MemberType="Field" Name="ReadWrite" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Write" />
    </Type>
    <Type Name="System.IO.FileAttributes" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Archive" />
      <Member MemberType="Field" Name="Compressed" />
      <Member MemberType="Field" Name="Device" />
      <Member MemberType="Field" Name="Directory" />
      <Member MemberType="Field" Name="Encrypted" />
      <Member MemberType="Field" Name="Hidden" />
      <Member MemberType="Field" Name="Normal" />
      <Member MemberType="Field" Name="NotContentIndexed" />
      <Member MemberType="Field" Name="Offline" />
      <Member MemberType="Field" Name="ReadOnly" />
      <Member MemberType="Field" Name="ReparsePoint" />
      <Member MemberType="Field" Name="SparseFile" />
      <Member MemberType="Field" Name="System" />
      <Member MemberType="Field" Name="Temporary" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.IO.FileInfo" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.String)" />
      <Member Name="AppendText" />
      <Member Name="CopyTo(System.String)" />
      <Member Name="CopyTo(System.String,System.Boolean)" />
      <Member Name="Create" />
      <Member Name="CreateText" />
      <Member Name="Delete" />
      <Member Name="get_Directory" />
      <Member Name="get_DirectoryName" />
      <Member Name="get_Exists" />
      <Member Name="get_Length" />
      <Member Name="get_Name" />
      <Member Name="MoveTo(System.String)" />
      <Member Name="Open(System.IO.FileMode)" />
      <Member Name="Open(System.IO.FileMode,System.IO.FileAccess)" />
      <Member Name="Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <Member Name="OpenRead" />
      <Member Name="OpenText" />
      <Member Name="OpenWrite" />
      <Member Status="ApiFxInternal" Name="UnsafeCreateFileInfo(System.String)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Directory" />
      <Member MemberType="Property" Name="DirectoryName" />
      <Member MemberType="Property" Name="Exists" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Name" />
    </Type>
    <Type Name="System.IO.FileMode" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Append" />
      <Member MemberType="Field" Name="Create" />
      <Member MemberType="Field" Name="CreateNew" />
      <Member MemberType="Field" Name="Open" />
      <Member MemberType="Field" Name="OpenOrCreate" />
      <Member MemberType="Field" Name="Truncate" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.IO.FileNotFoundException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.String,System.Exception)" />
      <Member Name="get_FileName" />
      <Member MemberType="Property" Name="FileName" />
      <Member Status="ImplRoot" Name="#ctor(System.String,System.String,System.Int32)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.IO.FileSecurityState"  Condition="not FEATURE_LEGACYNETCFIOSECURITY">
      <Member Name="EnsureState" />
      <Member Name="get_Path" />
      <Member MemberType="Property" Name="Path" />
    </Type>
    <Type Name="System.IO.FileShare" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Read" />
      <Member MemberType="Field" Name="ReadWrite" />
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Write" />
    </Type>
    <Type Name="System.IO.FileStream" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor(System.String,System.IO.FileMode)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)" />
      <Member Name="#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)"  />
      <Member Name="#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)"  />
      <Member Name="#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)"  />
      <Member Name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="EndRead(System.IAsyncResult)" />
      <Member Name="EndWrite(System.IAsyncResult)" />
      <Member Name="Finalize" />
      <Member Name="Flush" />
      <Member Name="Flush(System.Boolean)" />
      <Member Name="FlushAsync(System.Threading.CancellationToken)" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanWrite" />
      <Member Name="get_IsAsync" />
      <Member Name="get_Length" />
      <Member Name="get_Name" />
      <Member Name="get_Position" />
      <Member Name="get_SafeFileHandle" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadByte" />
      <Member Name="ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="set_Position(System.Int64)" />
      <Member Name="SetLength(System.Int64)" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="WriteByte(System.Byte)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Position" />
    </Type>
    <Type Name="System.IO.FileSystemInfo" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="FullPath" />
      <Member MemberType="Field" Name="OriginalPath" />
      <Member Name="#ctor" />
      <Member Name="Delete" />
      <Member Name="get_Attributes" />
      <Member Name="get_CreationTime" />
      <Member Name="get_Exists" />
      <Member Name="get_Extension" />
      <Member Name="get_FullName" />
      <Member Name="get_LastAccessTime" />
      <Member Name="get_LastWriteTime" />
      <Member Name="get_Name" />
      <Member Status="ApiFxInternal" Name="get_UnsafeGetFullName" />
      <Member Name="Refresh" />
      <Member Name="set_Attributes(System.IO.FileAttributes)" />
      <Member MemberType="Property" Name="Attributes" />
      <Member MemberType="Property" Name="Exists" />
      <Member MemberType="Property" Name="Extension" />
      <Member MemberType="Property" Name="FullName" />
      <Member MemberType="Property" Name="Name" />
      <Member Status="ApiFxInternal" MemberType="Property" Name="UnsafeGetFullName" />
    </Type>
    <Type Name="System.IO.IOException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.String,System.Int32)"  />
    </Type>
    <Type Name="System.IO.MemoryStream">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte[])" />
      <Member Name="#ctor(System.Byte[],System.Boolean)" />
      <Member Name="#ctor(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <Member Name="#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="FlushAsync(System.Threading.CancellationToken)"  />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanWrite" />
      <Member Name="get_Capacity" />
      <Member Name="get_Length" />
      <Member Name="get_Position" />
      <Member Name="GetBuffer" />
      <Member Name="TryGetBuffer(System.ArraySegment&lt;System.Byte&gt;@)" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="ReadByte" />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="set_Capacity(System.Int32)" />
      <Member Name="set_Position(System.Int64)" />
      <Member Name="SetLength(System.Int64)" />
      <Member Name="ToArray" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="WriteByte(System.Byte)" />
      <Member Name="WriteTo(System.IO.Stream)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Capacity" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Position" />
      <Member Status="ApiFxInternal" Name="InternalGetOriginAndLength(System.Int32@,System.Int32@)" Condition="FEATURE_COMINTEROP" />
    </Type>
    <Type Name="System.IO.Path">
      <Member MemberType="Field" Name="AltDirectorySeparatorChar" />
      <Member MemberType="Field" Name="DirectorySeparatorChar" />
      <Member MemberType="Field" Name="PathSeparator" />
      <Member MemberType="Field" Name="VolumeSeparatorChar" />
      <Member Name="ChangeExtension(System.String,System.String)" />
      <Member Name="Combine(System.String,System.String)" />
      <Member Name="Combine(System.String,System.String,System.String)"  />
      <Member Name="Combine(System.String[])"  />
      <Member Name="GetDirectoryName(System.String)" />
      <Member Name="GetExtension(System.String)" />
      <Member Name="GetFileName(System.String)" />
      <Member Name="GetFileNameWithoutExtension(System.String)" />
      <Member Name="GetFullPath(System.String)" />
      <Member Name="GetInvalidPathChars" />
      <Member Name="GetInvalidFileNameChars"  />
      <Member Name="GetPathRoot(System.String)" />
      <Member Name="GetRandomFileName"  />
      <Member Name="GetTempFileName" />
      <Member Name="GetTempPath" />
      <Member Name="HasExtension(System.String)" />
      <Member Name="IsPathRooted(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeGetFullPath(System.String)" />
      <Member Status="ApiFxInternal" Name="UnsafeGetTempFileName" />
    </Type>
    <Type Name="System.IO.PathTooLongException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.IO.SearchOption" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="TopDirectoryOnly" />
      <Member MemberType="Field" Name="AllDirectories" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.IO.SeekOrigin" Condition="FEATURE_LEGACYSURFACE">
      <Member MemberType="Field" Name="Begin" />
      <Member MemberType="Field" Name="Current" />
      <Member MemberType="Field" Name="End" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.IO.Stream">
      <Member MemberType="Field" Name="Null" />
      <Member Name="#ctor" />
      <Member Name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="CopyTo(System.IO.Stream)" />
      <Member Name="CopyTo(System.IO.Stream,System.Int32)" />
      <Member Name="CopyToAsync(System.IO.Stream)"  />
      <Member Name="CopyToAsync(System.IO.Stream,System.Int32)"  />
      <Member Name="CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="Close" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="EndRead(System.IAsyncResult)" />
      <Member Name="EndWrite(System.IAsyncResult)" />
      <Member Name="Flush" />
      <Member Name="FlushAsync"  />
      <Member Name="FlushAsync(System.Threading.CancellationToken)"  />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanTimeout" />
      <Member Name="get_CanWrite" />
      <Member Name="get_Length" />
      <Member Name="get_Position" />
      <Member Name="get_ReadTimeout" />
      <Member Name="get_WriteTimeout" />
      <Member Status="ImplRoot" Name="InternalCopyTo(System.IO.Stream,System.Int32)" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadByte" />
      <Member Name="ReadAsync(System.Byte[],System.Int32,System.Int32)"  />
      <Member Name="ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="set_Position(System.Int64)" />
      <Member Name="set_ReadTimeout(System.Int32)" />
      <Member Name="set_WriteTimeout(System.Int32)" />
      <Member Name="SetLength(System.Int64)" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteAsync(System.Byte[],System.Int32,System.Int32)"  />
      <Member Name="WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"  />
      <Member Name="WriteByte(System.Byte)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanTimeout" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Position" />
      <Member MemberType="Property" Name="ReadTimeout" />
      <Member MemberType="Property" Name="WriteTimeout" />
    </Type>
    <Type Name="System.IO.StreamReader">
      <Member MemberType="Field" Name="Null" />
      <Member Name="#ctor(System.IO.Stream)" />
      <Member Name="#ctor(System.IO.Stream,System.Boolean)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)"   />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Boolean)" />
      <Member Name="#ctor(System.String,System.Text.Encoding)" />
      <Member Name="#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <Member Name="#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)" />
      <Member Name="Close" />
      <Member Name="DiscardBufferedData" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="get_BaseStream" />
      <Member Name="get_CurrentEncoding" />
      <Member Name="get_EndOfStream" />
      <Member Name="Peek" />
      <Member Name="Read" />
      <Member Name="Read(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadBlock(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadBlockAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadLine" />
      <Member Name="ReadLineAsync"  />
      <Member Name="ReadToEnd" />
      <Member Name="ReadToEndAsync"  />
      <Member MemberType="Property" Name="BaseStream" />
      <Member MemberType="Property" Name="CurrentEncoding" />
      <Member MemberType="Property" Name="EndOfStream" />
    </Type>
    <Type Name="System.IO.StreamWriter">
      <Member MemberType="Field" Name="Null" />
      <Member Name="#ctor(System.IO.Stream)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <Member Name="#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Boolean)" />
      <Member Name="#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <Member Name="#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <Member Name="Close" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="FlushAsync"  />
      <Member Name="get_AutoFlush" />
      <Member Name="get_BaseStream" />
      <Member Name="get_Encoding" />
      <Member Name="set_AutoFlush(System.Boolean)" />
      <Member Name="Write(System.Char)" />
      <Member Name="Write(System.Char[])" />
      <Member Name="Write(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Write(System.String)" />
      <Member Name="WriteAsync(System.Char)"  />
      <Member Name="WriteAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="WriteAsync(System.String)"  />
      <Member Name="WriteLineAsync"  />
      <Member Name="WriteLineAsync(System.Char)"  />
      <Member Name="WriteLineAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="WriteLineAsync(System.String)"  />
      <Member MemberType="Property" Name="AutoFlush" />
      <Member MemberType="Property" Name="BaseStream" />
      <Member MemberType="Property" Name="Encoding" />
    </Type>
    <Type Name="System.IO.StringReader">
      <Member Name="#ctor(System.String)" />
      <Member Name="Close" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Peek" />
      <Member Name="Read" />
      <Member Name="Read(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadBlockAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadLine" />
      <Member Name="ReadLineAsync"  />
      <Member Name="ReadToEnd" />
      <Member Name="ReadToEndAsync"  />
    </Type>
    <Type Name="System.IO.StringWriter">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.IFormatProvider)" />
      <Member Name="#ctor(System.Text.StringBuilder)" />
      <Member Name="#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <Member Name="Close" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="FlushAsync"  />
      <Member Name="get_Encoding" />
      <Member Name="GetStringBuilder" />
      <Member Name="ToString" />
      <Member Name="Write(System.Char)" />
      <Member Name="Write(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Write(System.String)" />
      <Member Name="WriteAsync(System.Char)"  />
      <Member Name="WriteAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="WriteAsync(System.String)"  />
      <Member Name="WriteLineAsync(System.Char)"  />
      <Member Name="WriteLineAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="WriteLineAsync(System.String)"  />
      <Member MemberType="Property" Name="Encoding" />
    </Type>
    <Type Name="System.IO.TextReader">
      <Member MemberType="Field" Name="Null" />
      <Member Name="#ctor" />
      <Member Name="Close" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Peek" />
      <Member Name="Read" />
      <Member Name="Read(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadAsync(System.Char[],System.Int32,System.Int32)"  />
      <Member Name="ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <Member Name="ReadLine" />
      <Member Name="ReadLineAsync"  />
      <Member Name="ReadToEnd" />
      <Member Name="ReadToEndAsync"  />
    </Type>
    <Type Name="System.IO.TextWriter">
      <Member MemberType="Field" Name="CoreNewLine" />
      <Member MemberType="Field" Name="Null" />
      <Member Name="#ctor" />
      <Member Name="#ctor(System.IFormatProvider)" />
      <Member Name="Close" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="FlushAsync" />
      <Member Name="get_Encoding" />
      <Member Name="get_FormatProvider" />
      <Member Name="get_NewLine" />
      <Member Name="set_NewLine(System.String)" />
      <Member Name="Write(System.Boolean)" />
      <Member Name="Write(System.Char)" />
      <Member Name="Write(System.Char[])" />
      <Member Name="Write(System.Char[],System.Int32,System.Int32)" />
      <Member Name="Write(System.Decimal)" />
      <Member Name="Write(System.Double)" />
      <Member Name="Write(System.Int32)" />
      <Member Name="Write(System.Int64)" />
      <Member Name="Write(System.Object)" />
      <Member Name="Write(System.Single)" />
      <Member Name="Write(System.String)" />
      <Member Name="Write(System.String,System.Object)" />
      <Member Name="Write(System.String,System.Object,System.Object)" />
      <Member Name="Write(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="Write(System.String,System.Object[])" />
      <Member Name="Write(System.UInt32)" />
      <Member Name="Write(System.UInt64)" />
      <Member Name="WriteAsync(System.Char)" />
      <Member Name="WriteAsync(System.Char[])" />
      <Member Name="WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <Member Name="WriteAsync(System.String)" />
      <Member Name="WriteLine" />
      <Member Name="WriteLine(System.Boolean)" />
      <Member Name="WriteLine(System.Char)" />
      <Member Name="WriteLine(System.Char[])" />
      <Member Name="WriteLine(System.Char[],System.Int32,System.Int32)" />
      <Member Name="WriteLine(System.Decimal)" />
      <Member Name="WriteLine(System.Double)" />
      <Member Name="WriteLine(System.Int32)" />
      <Member Name="WriteLine(System.Int64)" />
      <Member Name="WriteLine(System.Object)" />
      <Member Name="WriteLine(System.Single)" />
      <Member Name="WriteLine(System.String)" />
      <Member Name="WriteLine(System.String,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <Member Name="WriteLine(System.String,System.Object[])" />
      <Member Name="WriteLine(System.UInt32)" />
      <Member Name="WriteLine(System.UInt64)" />
      <Member Name="WriteLineAsync" />
      <Member Name="WriteLineAsync(System.Char)" />
      <Member Name="WriteLineAsync(System.Char[])" />
      <Member Name="WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <Member Name="WriteLineAsync(System.String)" />
      <Member MemberType="Property" Name="Encoding" />
      <Member MemberType="Property" Name="FormatProvider" />
      <Member MemberType="Property" Name="NewLine" />
    </Type>
    <Type Name="System.IO.UnmanagedMemoryAccessor">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)" />
      <Member Name="#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanWrite" />
      <Member Name="get_Capacity" />
      <Member Name="get_IsOpen" />
      <Member Name="Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Name="ReadBoolean(System.Int64)" />
      <Member Name="ReadByte(System.Int64)" />
      <Member Name="ReadChar(System.Int64)" />
      <Member Name="ReadDecimal(System.Int64)" />
      <Member Name="ReadDouble(System.Int64)" />
      <Member Name="ReadInt16(System.Int64)" />
      <Member Name="ReadInt32(System.Int64)" />
      <Member Name="ReadInt64(System.Int64)" />
      <Member Name="ReadSByte(System.Int64)" />
      <Member Name="ReadSingle(System.Int64)" />
      <Member Name="ReadUInt16(System.Int64)" />
      <Member Name="ReadUInt32(System.Int64)" />
      <Member Name="ReadUInt64(System.Int64)" />
      <Member Name="Write(System.Int64,System.Boolean)" />
      <Member Name="Write(System.Int64,System.Byte)" />
      <Member Name="Write(System.Int64,System.Char)" />
      <Member Name="Write(System.Int64,System.Decimal)" />
      <Member Name="Write(System.Int64,System.Double)" />
      <Member Name="Write(System.Int64,System.Int16)" />
      <Member Name="Write(System.Int64,System.Int32)" />
      <Member Name="Write(System.Int64,System.Int64)" />
      <Member Name="Write(System.Int64,System.SByte)" />
      <Member Name="Write(System.Int64,System.Single)" />
      <Member Name="Write(System.Int64,System.UInt16)" />
      <Member Name="Write(System.Int64,System.UInt32)" />
      <Member Name="Write(System.Int64,System.UInt64)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Capacity" />
      <Member MemberType="Property" Name="IsOpen" />
    </Type>
    <Type Name="System.IO.UnmanagedMemoryStream">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Byte*,System.Int64)" />
      <Member Name="#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Name="#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)" />
      <Member Name="#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Status="ApiFxInternal" Name="#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess,System.Boolean)" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Flush" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanWrite" />
      <Member Name="get_Capacity" />        
      <Member Name="get_Length" />
      <Member Name="get_Position" />      
      <Member Status="ApiFxInternal" Name="get_PositionPointer" Condition="not FEATURE_LEGACYNETCF" /> 
      <Member Name="get_PositionPointer" Condition="FEATURE_LEGACYNETCF" /> 
      <Member Name="Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Name="Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadByte" />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="set_Position(System.Int64)" />
      <Member Name="SetLength(System.Int64)"  />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteByte(System.Byte)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Capacity" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Position" /> 
      <Member MemberType="Property" Name="PositionPointer" Condition="FEATURE_LEGACYNETCF" /> 
    </Type>          
    <Type Name="System.IO.IsolatedStorage.IsolatedStorageFile" Condition="FEATURE_ISOSTORE">
      <Member Name="Remove" />
      <Member Name="GetUserStoreForApplication" />
      <Member Name="GetUserStoreForSite" />
      <Member Name="DeleteFile(System.String)" />
      <Member Name="CreateDirectory(System.String)" />
      <Member Name="DeleteDirectory(System.String)" />
      <Member Name="GetFileNames" />      
      <Member Name="GetFileNames(System.String)" />   
      <Member Name="GetDirectoryNames" />         
      <Member Name="GetDirectoryNames(System.String)" />
      <Member Name="FileExists(System.String)" />
      <Member Name="DirectoryExists(System.String)" />             
      <Member Name="OpenFile(System.String,System.IO.FileMode)" />        
      <Member Name="OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)" />       
      <Member Name="OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />       
      <Member Name="CreateFile(System.String)" />         
      <Member Name="Dispose" />       
      <Member Name="IncreaseQuotaTo(System.Int64)" />
      <Member Name="GetCreationTime(System.String)" />
      <Member Name="GetLastAccessTime(System.String)" />
      <Member Name="GetLastWriteTime(System.String)" />
      <Member Name="CopyFile(System.String,System.String)" />
      <Member Name="CopyFile(System.String,System.String,System.Boolean)" />
      <Member Name="MoveFile(System.String,System.String)" />
      <Member Name="MoveDirectory(System.String,System.String)" />
      <Member MemberType="Property" Name="UsedSize" />    
      <Member MemberType="Property" Name="Quota" />   
      <Member MemberType="Property" Name="AvailableFreeSpace" />
      <Member MemberType="Property" Name="IsEnabled" />
      <Member Name="get_UsedSize" />      
      <Member Name="get_AvailableFreeSpace" />    
      <Member Name="get_Quota" />
      <Member Name="get_IsEnabled" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.IO.IsolatedStorage.IsolatedStorageFileIOHelperBase" Condition="FEATURE_ISOSTORE"> <!-- FEATURE_LEGACYNETCF -->
      <Member Status="ApiFxInternal" Name="#ctor" />
      <Member Status="ApiFxInternal" Name="UnsafeMoveFile(System.String,System.String)" />
    </Type>
    <Type Name="System.IO.IsolatedStorage.IsolatedStorageFileStream"  Condition="FEATURE_ISOSTORE">
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <Member Name="#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <Member MemberType="Property" Name="CanRead" />
      <Member MemberType="Property" Name="CanSeek" />
      <Member MemberType="Property" Name="CanWrite" />
      <Member MemberType="Property" Name="Length" />
      <Member MemberType="Property" Name="Name" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="Position" />
      <Member Name="get_CanRead" />
      <Member Name="get_CanSeek" />
      <Member Name="get_CanWrite" />
      <Member Name="get_Length" />
      <Member Name="get_Name" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_Position" />
      <Member Name="set_Position(System.Int64)" />
      <Member Name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="EndRead(System.IAsyncResult)" />
      <Member Name="EndWrite(System.IAsyncResult)" />
      <Member Name="Flush" />
      <Member Name="Flush(System.Boolean)" />
      <Member Name="SetLength(System.Int64)" />
      <Member Name="Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="ReadByte" />
      <Member Name="Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Name="Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Name="WriteByte(System.Byte)" />      
    </Type>
    <Type Name="System.IO.IsolatedStorage.IsolatedStorageException" Condition="FEATURE_ISOSTORE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />   
    </Type>
    <Type Status="ApiFxInternal" Name="System.IO.IsolatedStorage.IsolatedStorageSecurityOptions" Condition="FEATURE_ISOSTORE"/>
    <Type Status="ApiFxInternal" Name="System.IO.IsolatedStorage.IsolatedStorageSecurityState" Condition="FEATURE_ISOSTORE">
      <Member Name="get_AvailableFreeSpace" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="set_AvailableFreeSpace(System.Int64)" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_AvailableFreeSpaceComputed" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="set_AvailableFreeSpaceComputed(System.Boolean)" Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="get_Options" />
      <Member Name="get_Id" />
      <Member Name="set_Id(System.String)" />
      <Member Name="get_IsolatedStorageFolderName"  Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="set_IsolatedStorageFolderName(System.String)"  Condition="FEATURE_LEGACYNETCF"/>
      <Member Name="get_Group" />
      <Member Name="set_Group(System.String)" />
      <Member Name="get_RootUserDirectory" />
      <Member Name="set_RootUserDirectory(System.String)" />
      <Member Name="get_UsedSize" />
      <Member Name="get_Quota" />
      <Member Name="set_Quota(System.Int64)" />
      <Member Name="CreateStateToGetRootUserDirectory" />
      <Member Name="CreateStateToGetGroupAndIdForApplication" />
      <Member Name="CreateStateToGetGroupAndIdForSite" /> 
      <Member Name="CreateStateToIncreaseQuotaForGroup(System.String,System.Int64,System.Int64)" />
      <Member Name="CreateStateToCheckSetInnerException" Condition="not FEATURE_LEGACYNETCF" />
      <Member Name="CreateStateToGetAvailableFreeSpace" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="CreateStateForIsolatedStorageFolderName" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="AvailableFreeSpace" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="AvailableFreeSpaceComputed" Condition="FEATURE_LEGACYNETCF"/>
      <Member MemberType="Property" Name="IsolatedStorageFolderName"  Condition="FEATURE_LEGACYNETCF"/>
      <Member MemberType="Property" Name="Options" />
      <Member MemberType="Property" Name="Id" />
      <Member MemberType="Property" Name="Group" />
      <Member MemberType="Property" Name="RootUserDirectory" />
      <Member MemberType="Property" Name="UsedSize" />
      <Member MemberType="Property" Name="Quota" />
      <Member Status="ApiRoot" Name="EnsureState" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.IO.IsolatedStorage.IsolatedStorageGroup" Condition="FEATURE_ISOSTORE">
      <Member Name="get_Group" />
      <Member Name="get_UsedSize" />
      <Member Name="get_Quota" />
      <Member Name="get_Enabled" />
      <Member Name="set_Enabled(System.Boolean)" />
      <Member MemberType="Property" Name="Group" />
      <Member MemberType="Property" Name="UsedSize" />
      <Member MemberType="Property" Name="Quota" />
      <Member MemberType="Property" Name="Enabled" />
      <Member Name="Remove" />
      <Member Name="GetGroups" />
      <Member Name="RemoveAll" />
    </Type>
    <Type Name="System.Security.Permissions.SecurityAttribute">
      <Member Name="#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Name="get_Action" />
      <Member Name="get_Unrestricted" />
      <Member Name="set_Action(System.Security.Permissions.SecurityAction)" />
      <Member Name="set_Unrestricted(System.Boolean)" />
      <Member Name="FindSecurityAttributeTypeHandle(System.String)"/>
      <Member MemberType="Property" Name="Action" />
      <Member MemberType="Property" Name="Unrestricted" />
    </Type>

    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.Contract" >
        <Member MemberType="Event" Name="ContractFailed"    />
        <Member Name="Assert(System.Boolean)" />
        <Member Name="Assert(System.Boolean,System.String)" />
        <Member Name="Assume(System.Boolean)" />
        <Member Name="Assume(System.Boolean,System.String)" />
        <Member Name="EndContractBlock" />
        <Member Name="Ensures(System.Boolean,System.String)" />
        <Member Name="Ensures(System.Boolean)" />
        <Member Name="EnsuresOnThrow&lt;TException&gt;(System.Boolean)" />
        <Member Name="EnsuresOnThrow&lt;TException&gt;(System.Boolean,System.String)" />
        <Member Name="Exists&lt;T&gt;(System.Collections.Generic.IEnumerable&lt;T&gt;,System.Predicate&lt;T&gt;)" />
        <Member Name="Exists(System.Int32,System.Int32,System.Predicate&lt;System.Int32&gt;)" />
        <Member Name="ForAll&lt;T&gt;(System.Collections.Generic.IEnumerable&lt;T&gt;,System.Predicate&lt;T&gt;)" />
        <Member Name="ForAll(System.Int32,System.Int32,System.Predicate&lt;System.Int32&gt;)" />
        <Member Name="Invariant(System.Boolean)" />
        <Member Name="Invariant(System.Boolean,System.String)" />
        <Member Name="OldValue&lt;T&gt;(T)" />
        <Member Name="Requires(System.Boolean)" />
        <Member Name="Requires(System.Boolean,System.String)" />
        <Member Name="Requires&lt;TException&gt;(System.Boolean)" />
        <Member Name="Requires&lt;TException&gt;(System.Boolean,System.String)" />
        <Member Name="Result&lt;T&gt;" />
        <Member Name="ValueAtReturn&lt;T&gt;(T@)" />
    </Type>
    <Type Name="System.Diagnostics.Contracts.ContractAbbreviatorAttribute"  >
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Diagnostics.Contracts.ContractArgumentValidatorAttribute"  >
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute">
        <Member Name="#ctor(System.String)" />
        <Member MemberType="Property" Name="Name" />
    </Type>
    <Type Name="System.Diagnostics.Contracts.ContractFailedEventArgs"  >
      <Member Name="#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)" />
      <Member Name="get_Condition" />
      <Member Name="get_FailureKind" />
      <Member Name="get_Handled" />
      <Member Name="get_Message" />
      <Member Name="get_OriginalException" />
      <Member Name="get_Unwind" />
      <Member Name="SetHandled" />
      <Member Name="SetUnwind" />
      <Member MemberType="Property" Name="Condition" />
      <Member MemberType="Property" Name="FailureKind" />
      <Member MemberType="Property" Name="Handled" />
      <Member MemberType="Property" Name="Message" />
      <Member MemberType="Property" Name="OriginalException" />
      <Member MemberType="Property" Name="Unwind" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractOptionAttribute"  >
      <Member Name="#ctor(System.String,System.String,System.Boolean)" />
      <Member Name="#ctor(System.String,System.String,System.String)" />
      <Member MemberType="Property" Name="Category" />
      <Member MemberType="Property" Name="Setting" />
      <Member MemberType="Property" Name="Enabled" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.PureAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractInvariantMethodAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractClassAttribute">
        <Member Name="#ctor(System.Type)" />
        <Member MemberType="Property" Name="TypeContainingContracts" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractClassForAttribute">
        <Member Name="#ctor(System.Type)" />
        <Member MemberType="Property" Name="TypeContractsAreFor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.ContractVerificationAttribute">
        <Member Name="#ctor(System.Boolean)" />
        <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Status="ApiRoot" Name="System.Diagnostics.Contracts.Internal.ContractHelper">
        <Member Name="RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)" />
        <Member Name="TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Diagnostics.Contracts.ContractException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)" />
      <Member MemberType="Property" Name="Condition" />
      <Member MemberType="Property" Name="Failure" />
      <Member MemberType="Property" Name="Kind" />
      <Member MemberType="Property" Name="UserMessage" />
    </Type>
    <Type Name="System.StringSplitOptions" />
    <Type Status="ImplRoot" Name="System.__Canon" />
    <Type Status="ImplRoot" Name="System.__ComObject" Condition="FEATURE_COMINTEROP">
      <Member MemberType="Field" Name="m_ObjectToDataMap" />
      <Member Name="ReleaseSelf" />
      <Member Name="ReleaseAllData" />
      <Member Name="GetEventProvider(System.RuntimeType)" />
    </Type>
    <Type Status="ImplRoot" Name="System.BCLDebug">
      <Member Name="GetRegistryLoggingValues(System.Boolean@,System.Boolean@,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
    <Type Status="ImplRoot" Name="System.Configuration.Assemblies.AssemblyVersionCompatibility" />
    <Type Status="ImplRoot" Name="System.ContextBoundObject" />
    <Type Status="ImplRoot" Name="System.CrossAppDomainMarshaledException">
      <Member Name="#ctor(System.String,System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Currency">
      <Member Status="ImplRoot" Name="#ctor(System.Decimal)" /> <!-- EE - il stubs -->
    </Type>    
    <Type Status="ImplRoot" Name="System.Diagnostics.EditAndContinueHelper">
      <Member MemberType="Field" Name="_objectReference" />
    </Type>
    <Type Status="ImplRoot" Name="System.Diagnostics.StackFrameHelper" />

    <Type Name="System.Diagnostics.Tracing.EventAttribute">
      <Member Name="#ctor(System.Int32)" />
      <Member Name="get_EventId" />
      <Member MemberType="Property" Name="ActivityOptions" />
      <Member MemberType="Property" Name="Channel" />
      <Member MemberType="Property" Name="Keywords" />  
      <Member MemberType="Property" Name="Level" />  
      <Member MemberType="Property" Name="Message" />  
      <Member MemberType="Property" Name="Opcode" />  
      <Member MemberType="Property" Name="Task" />  
      <Member MemberType="Property" Name="Version" />
      <Member MemberType="Property" Name="Tags" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventActivityOptions">
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Detachable" />
      <Member MemberType="Field" Name="Disable" />
      <Member MemberType="Field" Name="Recursive" />
    </Type>


    <Type Name="System.Diagnostics.Tracing.EventFieldFormat">
      <Member MemberType="Field" Name="Boolean" />
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="Hexadecimal" />
      <Member MemberType="Field" Name="HResult" />
      <Member MemberType="Field" Name="Json" />
      <Member MemberType="Field" Name="String" />
      <Member MemberType="Field" Name="Xml" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventDescriptor">
      <Member Name="#ctor(System.Int32,System.Byte,System.Byte,System.Int64)" />
      <Member Name="#ctor(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int64)" />
      <Member Name="get_EventId" />
      <Member Name="get_Channel" /> 
      <Member Name="get_Level" />  
      <Member Name="get_Opcode" />
      <Member Name="get_Task" />
      <Member Name="get_Version" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Diagnostics.Tracing.EventDescriptor)" />
    </Type> 
    
    <Type Name="System.Diagnostics.Tracing.EventChannel">
      <Member MemberType="Field" Name="Admin" />
      <Member MemberType="Field" Name="Analytic" />
      <Member MemberType="Field" Name="Debug" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Operational" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventCommand">
      <Member MemberType="Field" Name="Disable" />
      <Member MemberType="Field" Name="Enable" />
      <Member MemberType="Field" Name="SendManifest" />
      <Member MemberType="Field" Name="Update" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventCommandEventArgs">
      <Member Name="get_Arguments" />
      <Member Name="get_Command" />
      <Member Name="DisableEvent(System.Int32)" />
      <Member Name="EnableEvent(System.Int32)" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventDataAttribute">
      <Member Name="#ctor" />
      <Member MemberType="Property" Name="Name" /> 
      <Member MemberType="Property" Name="Level" />  
      <Member MemberType="Property" Name="Opcode" />  
      <Member MemberType="Property" Name="Keywords" />  
      <Member MemberType="Property" Name="Tags" />  
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventKeywords">
      <Member MemberType="Field" Name="AuditFailure" />
      <Member MemberType="Field" Name="AuditSuccess" />
      <Member MemberType="Field" Name="CorrelationHint" />
      <Member MemberType="Field" Name="EventLogClassic" />
      <Member MemberType="Field" Name="MicrosoftTelemetry" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="Sqm" />
      <Member MemberType="Field" Name="WdiContext" />
      <Member MemberType="Field" Name="WdiDiagnostic" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventLevel">
      <Member MemberType="Field" Name="Critical" />
      <Member MemberType="Field" Name="Error" />
      <Member MemberType="Field" Name="Informational" />
      <Member MemberType="Field" Name="LogAlways" />
      <Member MemberType="Field" Name="Verbose" />
      <Member MemberType="Field" Name="Warning" />    
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventListener">
      <Member Name="#ctor" />
      <Member Name="DisableEvents(System.Diagnostics.Tracing.EventSource)" />
      <Member Name="Dispose" />
      <Member Name="EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)" />
      <Member Name="EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />  
      <Member Name="EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;)" />  
      <Member Name="EventSourceIndex(System.Diagnostics.Tracing.EventSource)" />
      <Member Name="OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <Member Name="OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
    </Type>    
    
    <Type Name="System.Diagnostics.Tracing.EventManifestOptions">
      <Member MemberType="Field" Name="AllCultures" />
      <Member MemberType="Field" Name="AllowEventSourceOverride" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="OnlyIfNeededForRegistration" />
      <Member MemberType="Field" Name="Strict" />
    </Type>    
    
    <Type Name="System.Diagnostics.Tracing.EventOpcode">
      <Member MemberType="Field" Name="DataCollectionStart" />
      <Member MemberType="Field" Name="DataCollectionStop" />
      <Member MemberType="Field" Name="Extension" />
      <Member MemberType="Field" Name="Info" />
      <Member MemberType="Field" Name="Receive" />
      <Member MemberType="Field" Name="Reply" />    
      <Member MemberType="Field" Name="Resume" />    
      <Member MemberType="Field" Name="Send" />    
      <Member MemberType="Field" Name="Start" />    
      <Member MemberType="Field" Name="Stop" />    
      <Member MemberType="Field" Name="Suspend" />    
    </Type>
    
    <Type Name="System.Diagnostics.Tracing.EventSource"> 
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Boolean)" />
      <Member Name="#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <Member Name="#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <Member Name="#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <Member Name="get_Guid" />
      <Member Name="get_Name" />
      <Member MemberType="Property" Name="ConstructionException" />
      <Member MemberType="Property" Name="CurrentThreadActivityId" />
      <Member MemberType="Event" Name="EventCommandExecuted" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="GenerateManifest(System.Type,System.String)" />
      <Member Name="GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <Member Name="GetGuid(System.Type)" />
      <Member Name="GetName(System.Type)" />
      <Member Name="GetTrait(System.String)" />
      <Member Name="GetSources" />
      <Member Name="IsEnabled" />
      <Member Name="IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <Member Name="IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <Member Name="OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <Member Name="SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;)" />
      <Member Name="SetCurrentThreadActivityId(System.Guid)" />
      <Member Name="SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <Member MemberType="Property" Name="Settings" />
      <Member Name="ToString" />
      <Member Name="Write(System.String)" />
      <Member Name="Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <Member Name="Write&lt;T&gt;(System.String,T)" />
      <Member Name="Write&lt;T&gt;(System.String,System.Diagnostics.Tracing.EventSourceOptions,T)" />
      <Member Name="Write&lt;T&gt;(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,T@)" />
      <Member Name="Write&lt;T&gt;(System.String,System.Diagnostics.Tracing.EventSourceOptions@,T@)" />
      <Member Name="WriteEvent(System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.Byte[])" />
      <Member Name="WriteEvent(System.Int32,System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.Int32,System.String)" />
      <Member Name="WriteEvent(System.Int32,System.Int64)" />
      <Member Name="WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <Member Name="WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <Member Name="WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <Member Name="WriteEvent(System.Int32,System.Int64,System.String)" />
      <Member Name="WriteEvent(System.Int32,System.Object[])" />
      <Member Name="WriteEvent(System.Int32,System.String)" />
      <Member Name="WriteEvent(System.Int32,System.String,System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <Member Name="WriteEvent(System.Int32,System.String,System.Int64)" />
      <Member Name="WriteEvent(System.Int32,System.String,System.String)" />
      <Member Name="WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <Member Name="WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)" />
      <Member Name="WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" />
      <Member Name="WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)" />
      <Member Name="get_Settings" /> 
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventSource+EventData">
      <Member MemberType="Property" Name="DataPointer" /> 
      <Member MemberType="Property" Name="Size" /> 
    </Type>
      
    <Type Name="System.Diagnostics.Tracing.EventSourceAttribute">
      <Member Name="#ctor" />
      <Member MemberType="Property" Name="Guid" /> 
      <Member MemberType="Property" Name="LocalizationResources" /> 
      <Member MemberType="Property" Name="Name" /> 
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventIgnoreAttribute">
      <Member Name="#ctor" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventSourceException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventSourceOptions">
      <Member MemberType="Property" Name="Keywords" />
      <Member MemberType="Property" Name="Level" />
      <Member MemberType="Property" Name="Opcode" />
      <Member MemberType="Property" Name="Tags" />
      <Member MemberType="Property" Name="ActivityOptions" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventSourceSettings">
      <Member MemberType="Field" Name="Default" />
      <Member MemberType="Field" Name="EtwManifestEventFormat" />
      <Member MemberType="Field" Name="EtwSelfDescribingEventFormat" />
      <Member MemberType="Field" Name="ThrowOnEventWriteErrors" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventTask">
      <Member MemberType="Field" Name="None" /> 
    </Type>    

    <Type Name="System.Diagnostics.Tracing.EventTags">
      <Member MemberType="Field" Name="None" /> 
    </Type>  

    <Type Name="System.Diagnostics.Tracing.EventFieldTags">
      <Member MemberType="Field" Name="None" /> 
    </Type>  

    <Type Name="System.Diagnostics.Tracing.EventFieldAttribute">
      <Member Name="#ctor" />
      <Member MemberType="Property" Name="Tags" />
      <Member MemberType="Property" Name="Name" />
      <Member MemberType="Property" Name="Format" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.EventWrittenEventArgs">
      <Member Name="get_Channel" />
      <Member Name="get_EventId" />
      <Member Name="get_EventSource" />
      <Member Name="get_Keywords" />
      <Member Name="get_Level" />
      <Member Name="get_Message" />
      <Member Name="get_Opcode" />
      <Member Name="get_Payload" />
      <Member Name="get_PayloadNames" />
      <Member Name="get_Task" />
      <Member Name="get_Version" />
      <Member Name="get_Tags" />
      <Member MemberType="Property" Name="ActivityId" />
      <Member MemberType="Property" Name="EventName" />
      <Member MemberType="Property" Name="RelatedActivityId" />
    </Type>

    <Type Name="System.Diagnostics.Tracing.NonEventAttribute">
      <Member Name="#ctor" />
    </Type>
    
   <Type Name="System.Diagnostics.Tracing.FrameworkEventSource+Tasks">
      <Member MemberType="Field" Name="GetResponse" />
      <Member MemberType="Field" Name="GetRequestStream" />
      <Member MemberType="Field" Name="ThreadTransfer" />
   </Type>

   <Type Name="System.Diagnostics.Tracing.FrameworkEventSource+Keywords">
      <Member MemberType="Field" Name="Loader" />
      <Member MemberType="Field" Name="ThreadPool" />
      <Member MemberType="Field" Name="NetClient" />
      <Member MemberType="Field" Name="DynamicTypeUsage" />
      <Member MemberType="Field" Name="ThreadTransfer" />
   </Type>

   <Type Name="System.Diagnostics.Tracing.FrameworkEventSource+Opcodes">
      <Member MemberType="Field" Name="ReceiveHandled" />
   </Type>

    
    <Type Status="ImplRoot" Name="System.DuplicateWaitObjectException" />
    <Type Status="ImplRoot" Name="System.IO.FileStreamAsyncResult" >
      <Member MemberType="Field" Name="_handle" />
      <Member MemberType="Field" Name="_overlapped" Platform="Win" />
      <Member MemberType="Field" Name="_EndXxxCalled" />
      <Member MemberType="Field" Name="_numBytes" />
      <Member MemberType="Field" Name="_numBufferedBytes" />
      <Member MemberType="Field" Name="_isWrite" />
    </Type>
    <Type Status="ImplRoot" Name="System.IO.Stream+SynchronousAsyncResult">      
      <Member Name="get_AsyncState" />
      <Member Name="get_AsyncWaitHandle" />
      <Member Name="get_CompletedSynchronously" />
      <Member Name="get_IsCompleted" />
      <Member MemberType="Property" Name="AsyncState" />
      <Member MemberType="Property" Name="AsyncWaitHandle" />
      <Member MemberType="Property" Name="CompletedSynchronously" />
      <Member MemberType="Property" Name="IsCompleted" />
    </Type>
    <Type Status="ImplRoot" Name="System.LoaderOptimization" />
    <Type Name="System.OperationCanceledException" >
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.String,System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.String,System.Exception,System.Threading.CancellationToken)" />
      <Member Name="get_CancellationToken" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.CustomAttributeCtorParameter" />
    <Type Status="ImplRoot" Name="System.Reflection.CustomAttributeEncodedArgument" />
    <Type Status="ImplRoot" Name="System.Reflection.CustomAttributeNamedParameter" />
    <Type Status="ImplRoot" Name="System.Reflection.CustomAttributeType" />
    <Type Status="ImplRoot" Name="System.Reflection.Emit.DynamicResolver" />
    <Type Status="ImplRoot" Name="System.Reflection.Emit.DynamicResolver+SecurityControlFlags" />
    <Type Status="ImplRoot" Name="System.Reflection.Emit.DynamicScope" />
    <Type Status="ImplRoot" Name="System.Reflection.ExceptionHandlingClause" />
    <Type Status="ImplRoot" Name="System.Reflection.InvalidFilterCriteriaException" />

    
    <Type Status="ApiRoot" Name="System.Reflection.LocalVariableInfo">
      <Member Name="#ctor" />
      <Member Name="get_IsPinned" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_LocalIndex" Condition="FEATURE_LEGACYNETCF" />
      <Member Name="get_LocalType" Condition="FEATURE_LEGACYNETCF" />
      <Member MemberType="Property" Name="IsPinned" Condition="FEATURE_LEGACYNETCF" />            
      <Member MemberType="Property" Name="LocalIndex" Condition="FEATURE_LEGACYNETCF" />            
      <Member MemberType="Property" Name="LocalType" Condition="FEATURE_LEGACYNETCF" />            
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.MetadataImport">
      <Member Name="ThrowError(System.Int32)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.MethodBody">
      <Member MemberType="Field" Name="m_exceptionHandlingClauses" />
      <Member MemberType="Field" Name="m_IL" />
      <Member MemberType="Field" Name="m_initLocals" />
      <Member MemberType="Field" Name="m_localSignatureMetadataToken" />
      <Member MemberType="Field" Name="m_localVariables" />
      <Member MemberType="Field" Name="m_maxStackSize" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.Emit.ExceptionHandler">
      <Member Name="op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)" />
      <Member Name="op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Reflection.Pointer" />
    <Type Name="System.Reflection.ReflectionTypeLoadException">
      <Member Name="#ctor(System.Type[],System.Exception[])" />
      <Member Name="#ctor(System.Type[],System.Exception[],System.String)" />              
      <Member MemberType="Property" Name="LoaderExceptions" />
      <Member MemberType="Property" Name="Types" />
      <Member Name="get_LoaderExceptions" />
      <Member Name="get_Types" />
    </Type>
    <Type Name="System.Reflection.ResourceAttributes" Condition="FEATURE_LEGACYNETCF">
      <Member MemberType="Field" Name="Private" />
      <Member MemberType="Field" Name="Public" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.RtFieldInfo">
      <Member Status="ImplRoot" Name="GetFieldHandle" />
    </Type>
    <Type Status="ImplRoot" Name="System.Reflection.RuntimeConstructorInfo">
      <Member Status="ImplRoot" MemberType="Field" Name="_empty1" />
      <Member Status="ImplRoot" MemberType="Field" Name="_empty2" />
      <Member Status="ImplRoot" MemberType="Field" Name="_empty3" />
    </Type>
    <Type Status="ImplRoot" Name="System.ReflectionOnlyType" />
    <Type Status="ImplRoot" Name="System.ResId" />
    <Type Status="ImplRoot" Name="System.Resolver">
      <Member Name="GetJitContext(System.Int32@)" /> <!-- EE -->
      <Member Name="GetCodeInfo(System.Int32@,System.Int32@,System.Int32@)" /> <!-- EE -->
      <Member Name="GetLocalsSignature" /> <!-- EE -->
      <Member Name="GetEHInfo(System.Int32,System.Void*)" /> <!-- EE -->
      <Member Name="GetRawEHInfo" /> <!-- EE -->
      <Member Name="GetStringLiteral(System.Int32)" /> <!-- EE -->
      <Member Name="ResolveToken(System.Int32,System.IntPtr@,System.IntPtr@,System.IntPtr@)" /> <!-- EE -->
      <Member Name="ResolveSignature(System.Int32,System.Int32)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.CompilerServices.RuntimeWrappedException">
      <Member Name="#ctor(System.Object)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.CompilerServices.TypeDependencyAttribute">
      <Member Name="#ctor(System.String)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ArrayWithOffset">
      <Member Name="#ctor(System.Object,System.Int32)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="Equals(System.Runtime.InteropServices.ArrayWithOffset)" />
      <Member Name="GetArray" />
      <Member Name="GetHashCode" />
      <Member Name="GetOffset" />
      <Member Name="op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)" />
      <Member Name="op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
    <Type Status="ImplRoot" Name="System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute" />
    <Type Name="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
      <Member Name="#ctor"/>
      <Member Name="Finalize" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.Expando.IExpando">
      <Member Name="AddField(System.String)" /> <!-- EE -->
      <Member Name="RemoveMember(System.Reflection.MemberInfo)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.ICustomMarshaler">
      <Member Name="MarshalNativeToManaged(System.IntPtr)" /> <!-- EE -->
      <Member Name="MarshalManagedToNative(System.Object)" /> <!-- EE -->
      <Member Name="CleanUpNativeData(System.IntPtr)" /> <!-- EE -->
      <Member Name="CleanUpManagedData(System.Object)" /> <!-- EE -->
      <Member Name="GetNativeDataSize" /> <!-- EE -->
    </Type>
    <Type Name="System.Runtime.InteropServices.InvalidOleVariantTypeException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IStringable" Condition="FEATURE_COMINTEROP">
      <Member Name="ToString"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IIterator&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="get_Current"/>
      <Member Name="get_HasCurrent" />
      <Member Name="MoveNext"/>
      <Member Name="GetMany(T[])"/>
    </Type>    
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.BindableIterableToEnumerableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="GetEnumerator_Stub" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.BindableVectorToCollectionAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Count" />
      <Member Name="IsSynchronized" />
      <Member Name="SyncRoot" />
      <Member Name="CopyTo(System.Array,System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.BindableVectorToListAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Indexer_Get(System.Int32)" />
      <Member Name="Indexer_Set(System.Int32,System.Object)" />
      <Member Name="Add(System.Object)" />
      <Member Name="Contains(System.Object)" />
      <Member Name="Clear" />
      <Member Name="IsFixedSize" />
      <Member Name="IsReadOnly" />
      <Member Name="IndexOf(System.Object)" />
      <Member Name="Insert(System.Int32,System.Object)" />
      <Member Name="Remove(System.Object)" />
      <Member Name="RemoveAt(System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceImpl&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="UnboxHelper(System.Object)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl&lt;K,V&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="BoxHelper(System.Object)" />
      <Member Name="UnboxHelper(System.Object)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceArrayImpl&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="UnboxHelper(System.Object)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.Type)" />
      <Member MemberType="Property" Name="DefaultInterface" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="Name" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.DictionaryToMapAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Lookup&lt;K,V&gt;(K)" />
      <Member Name="Size&lt;K,V&gt;" />
      <Member Name="HasKey&lt;K,V&gt;(K)" />
      <Member Name="GetView&lt;K,V&gt;" />
      <Member Name="Insert&lt;K,V&gt;(K,V)" />
      <Member Name="Remove&lt;K,V&gt;(K)" />
      <Member Name="Clear&lt;K,V&gt;" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.VectorViewToReadOnlyCollectionAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Count&lt;T&gt;" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.MapViewToReadOnlyCollectionAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Count&lt;K,V&gt;" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="First_Stub" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.EnumerableToIterableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="First_Stub&lt;T&gt;" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" Condition="FEATURE_COMINTEROP">
      <Member Name="op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)" />
      <Member Name="op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor"/>
      <Member Name="get_InvocationList"/>
      <Member Name="set_InvocationList(T)"/>
      <Member MemberType="Property" Name="InvocationList"/>
      <Member Name="AddEventHandler(T)"/>
      <Member Name="RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)"/>
      <Member Name="RemoveEventHandler(T)"/>
      <Member Status="ApiFxInternal" Name="ExtractHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)" />
      <Member Name="GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.GetEnumerator_Delegate&lt;T@&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IActivationFactory" Condition="FEATURE_COMINTEROP">
      <Member Name="ActivateInstance"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IBindableIterable" Condition="FEATURE_COMINTEROP">
      <Member Name="First" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IBindableIterator" Condition="FEATURE_COMINTEROP">
      <Member Name="get_Current" />
      <Member MemberType="Property" Name="Current" />
      <Member Name="get_HasCurrent" />
      <Member MemberType="Property" Name="HasCurrent" />
      <Member Name="MoveNext" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IBindableVector" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt(System.UInt32)" />
      <Member Name="get_Size" />
      <Member MemberType="Property" Name="Size" />
      <Member Name="GetView" />
      <Member Name="IndexOf(System.Object,System.UInt32@)" />
      <Member Name="SetAt(System.UInt32,System.Object)" />
      <Member Name="InsertAt(System.UInt32,System.Object)" />
      <Member Name="RemoveAt(System.UInt32)" />
      <Member Name="Append(System.Object)" />
      <Member Name="RemoveAtEnd" />
      <Member Name="Clear" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IBindableVectorView" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt(System.UInt32)" />
      <Member Name="get_Size" />
      <Member MemberType="Property" Name="Size" />
      <Member Name="IndexOf(System.Object,System.UInt32@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IClosable" Condition="FEATURE_COMINTEROP">
      <Member Name="Close"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IDisposableToIClosableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor"/>
      <Member Name="Close"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IClosableToIDisposableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor"/>
      <Member Name="Dispose"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.ICustomProperty" Condition="FEATURE_COMINTEROP">
      <Member Name="GetValue(System.Object)"/>
      <Member Name="GetValue(System.Object,System.Object)"/>
      <Member Name="SetValue(System.Object,System.Object)"/>
      <Member Name="SetValue(System.Object,System.Object,System.Object)"/>
      <Member Name="get_CanRead"/>
      <Member Name="get_CanWrite"/>
      <Member Name="get_Name"/>
      <Member Name="get_Type"/>
      <Member MemberType="Property" Name="CanRead"/>
      <Member MemberType="Property" Name="CanWrite"/>
      <Member MemberType="Property" Name="Name"/>
      <Member MemberType="Property" Name="Type"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderImpl" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateProperty(System.Object,System.String)" />
      <Member Name="CreateIndexedProperty(System.Object,System.String,System.StubHelpers.TypeNameNative*)" />
      <Member Name="GetType(System.Object,System.StubHelpers.TypeNameNative*)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderProxy" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateInstance(System.Object)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IIterable&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="First" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IKeyValuePair&lt;K,V&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="get_Key" />
      <Member Name="get_Value" />
      <Member MemberType="Property" Name="Key" />
      <Member MemberType="Property" Name="Value" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IMap&lt;K,V&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="Lookup(K)" />
      <Member Name="get_Size" />
      <Member Name="Size" MemberType="Property" />
      <Member Name="HasKey(K)" />
      <Member Name="GetView" />
      <Member Name="Insert(K,V)" />
      <Member Name="Remove(K)" />
      <Member Name="Clear" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.Indexer_Get_Delegate&lt;T@&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Int32,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Int32)" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.Type,System.Byte,System.Byte,System.Byte,System.Byte)"/>
      <Member MemberType="Property" Name="BuildVersion" />
      <Member MemberType="Property" Name="MajorVersion" />
      <Member MemberType="Property" Name="MinorVersion" />
      <Member MemberType="Property" Name="RevisionVersion" />
      <Member MemberType="Property" Name="InterfaceType" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IterableToEnumerableAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="GetEnumerator_Stub&lt;T&gt;" />
      <Member Name="GetEnumerator_Variance_Stub&lt;T&gt;" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IMapView&lt;K,V&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="Lookup(K)" />
      <Member Name="get_Size" />
      <Member Name="Size" MemberType="Property" />
      <Member Name="HasKey(K)" />
      <Member Name="Split(System.Runtime.InteropServices.WindowsRuntime.IMapView&lt;K,V&gt;@,System.Runtime.InteropServices.WindowsRuntime.IMapView&lt;K,V&gt;@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IMapViewToIReadOnlyDictionaryAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Indexer_Get&lt;K,V&gt;(K)" />
      <Member Name="Keys&lt;K,V&gt;" />
      <Member Name="Values&lt;K,V&gt;" />
      <Member Name="ContainsKey&lt;K,V&gt;(K)" />
      <Member Name="TryGetValue&lt;K,V&gt;(K,V@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IPropertyValue" Condition="FEATURE_COMINTEROP">
      <Member Name="get_Type"/>
      <Member MemberType="Property" Name="Type"/>
      <Member Name="get_IsNumericScalar"/>
      <Member MemberType="Property" Name="IsNumericScalar"/>
      <Member Name="GetUInt8" />
      <Member Name="GetInt16" />
      <Member Name="GetUInt16" />
      <Member Name="GetInt32" />
      <Member Name="GetUInt32" />
      <Member Name="GetInt64" />
      <Member Name="GetUInt64" />
      <Member Name="GetSingle" />
      <Member Name="GetDouble" />
      <Member Name="GetChar16" />
      <Member Name="GetBoolean" />
      <Member Name="GetString" />
      <Member Name="GetGuid" />
      <Member Name="GetDateTime" />
      <Member Name="GetTimeSpan" />
      <Member Name="GetPoint" />
      <Member Name="GetSize" />
      <Member Name="GetRect" />
      <Member Name="GetUInt8Array" />
      <Member Name="GetInt16Array" />
      <Member Name="GetUInt16Array" />
      <Member Name="GetInt32Array" />
      <Member Name="GetUInt32Array" />
      <Member Name="GetInt64Array" />
      <Member Name="GetUInt64Array" />
      <Member Name="GetSingleArray" />
      <Member Name="GetDoubleArray" />
      <Member Name="GetChar16Array" />
      <Member Name="GetBooleanArray" />
      <Member Name="GetStringArray" />
      <Member Name="GetInspectableArray" />
      <Member Name="GetGuidArray" />
      <Member Name="GetDateTimeArray" />
      <Member Name="GetTimeSpanArray" />
      <Member Name="GetPointArray" />
      <Member Name="GetSizeArray" />
      <Member Name="GetRectArray" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IReadOnlyDictionaryToIMapViewAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Lookup&lt;K,V&gt;(K)" />
      <Member Name="Size&lt;K,V&gt;" />
      <Member Name="HasKey&lt;K,V&gt;(K)" />
      <Member Name="Split&lt;K,V&gt;(System.Runtime.InteropServices.WindowsRuntime.IMapView&lt;K,V&gt;@,System.Runtime.InteropServices.WindowsRuntime.IMapView&lt;K,V&gt;@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListToIVectorViewAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt&lt;T&gt;(System.UInt32)" />
      <Member Name="Size&lt;T&gt;" />
      <Member Name="IndexOf&lt;T&gt;(T,System.UInt32@)" />
      <Member Name="GetMany&lt;T&gt;(System.UInt32,T[])" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IReferenceFactory" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateIReference(System.Object)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo" Condition="FEATURE_COMINTEROP">
      <Member Name="GetErrorDetails(System.String@,System.Int32@,System.String@,System.String@)" />
      <Member Name="GetReference(System.String@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IVector&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt(System.UInt32)" />
      <Member Name="get_Size" />
      <Member Name="Size" MemberType="Property" />
      <Member Name="GetView" />
      <Member Name="IndexOf(T,System.UInt32@)" />
      <Member Name="SetAt(System.UInt32,T)" />
      <Member Name="RemoveAt(System.UInt32)" />
      <Member Name="Append(T)" />
      <Member Name="RemoveAtEnd" />
      <Member Name="Clear" />
      <Member Name="GetMany(System.UInt32,T[])" />
      <Member Name="ReplaceAll(T[])" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IVectorView&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt(System.UInt32)" />
      <Member Name="get_Size" />
      <Member Name="Size" MemberType="Property" />
      <Member Name="IndexOf(T,System.UInt32@)" />
      <Member Name="GetMany(System.UInt32,T[])" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IVectorViewToIReadOnlyListAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Indexer_Get&lt;T&gt;(System.Int32)" />
      <Member Name="Indexer_Get_Variance&lt;T&gt;(System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.ListToBindableVectorAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt(System.UInt32)" />
      <Member Name="Size" />
      <Member Name="GetView" />
      <Member Name="IndexOf(System.Object,System.UInt32@)" />
      <Member Name="SetAt(System.UInt32,System.Object)" />
      <Member Name="InsertAt(System.UInt32,System.Object)" />
      <Member Name="RemoveAt(System.UInt32)" />
      <Member Name="Append(System.Object)" />
      <Member Name="RemoveAtEnd" />
      <Member Name="Clear" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.ListToVectorAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="GetAt&lt;T&gt;(System.UInt32)" />
      <Member Name="Size&lt;T&gt;" />
      <Member Name="GetView&lt;T&gt;" />
      <Member Name="IndexOf&lt;T&gt;(T,System.UInt32@)" />
      <Member Name="SetAt&lt;T&gt;(System.UInt32,T)" />
      <Member Name="InsertAt&lt;T&gt;(System.UInt32,T)" />
      <Member Name="RemoveAt&lt;T&gt;(System.UInt32)" />
      <Member Name="Append&lt;T&gt;(T)" />
      <Member Name="RemoveAtEnd&lt;T&gt;" />
      <Member Name="Clear&lt;T&gt;" />
      <Member Name="GetMany&lt;T&gt;(System.UInt32,T[])" />
      <Member Name="ReplaceAll&lt;T&gt;(T[])" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.MapToCollectionAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Count&lt;K,V&gt;" />
      <Member Name="IsReadOnly&lt;K,V&gt;" />
      <Member Name="Add&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;)" />
      <Member Name="Clear&lt;K,V&gt;" />
      <Member Name="Contains&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;)" />
      <Member Name="CopyTo&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;[],System.Int32)" />
      <Member Name="Remove&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.MapToDictionaryAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Indexer_Get&lt;K,V&gt;(K)" />
      <Member Name="Indexer_Set&lt;K,V&gt;(K,V)" />
      <Member Name="Keys&lt;K,V&gt;" />
      <Member Name="Values&lt;K,V&gt;" />
      <Member Name="ContainsKey&lt;K,V&gt;(K)" />
      <Member Name="Add&lt;K,V&gt;(K,V)" />
      <Member Name="Remove&lt;K,V&gt;(K)" />
      <Member Name="TryGetValue&lt;K,V&gt;(K,V@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.RuntimeClass" Condition="FEATURE_COMINTEROP" />
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.VectorToCollectionAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Count&lt;T&gt;" />
      <Member Name="IsReadOnly&lt;T&gt;" />
      <Member Name="Add&lt;T&gt;(T)" />
      <Member Name="Clear&lt;T&gt;" />
      <Member Name="Contains&lt;T&gt;(T)" />
      <Member Name="CopyTo&lt;T&gt;(T[],System.Int32)" />
      <Member Name="Remove&lt;T&gt;(T)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.VectorToListAdapter" Condition="FEATURE_COMINTEROP">
      <Member Name="Indexer_Get&lt;T&gt;(System.Int32)" />
      <Member Name="Indexer_Set&lt;T&gt;(System.Int32,T)" />
      <Member Name="IndexOf&lt;T&gt;(T)" />
      <Member Name="Insert&lt;T&gt;(System.Int32,T)" />
      <Member Name="RemoveAt&lt;T&gt;(System.Int32)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeImportAttribute" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.WindowsFoundationEventHandler&lt;T&gt;" Condition="FEATURE_COMINTEROP">
      <Member Name="#ctor(System.Object,System.IntPtr)" />
      <Member Name="BeginInvoke(System.Object,T,System.AsyncCallback,System.Object)" />
      <Member Name="EndInvoke(System.IAsyncResult)" />
      <Member Name="Invoke(System.Object,T)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBufferHelper" Condition="FEATURE_COMINTEROP">
      <Member Name="StoreOverlappedPtrInCCW(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Threading.NativeOverlapped*)" />
      <Member Name="StoreOverlappedInCCW(System.Object,System.Threading.NativeOverlapped*)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.WindowsRuntime.IManagedActivationFactory" Condition="FEATURE_COMINTEROP">
      <Member Name="RunClassConstructor" />
    </Type>
    <Type Name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal" Condition="FEATURE_COMINTEROP">
      <Member Status="ApiRoot" Name="GetRegistrationTokenCacheSize" />
      <Member Name="AddEventHandler&lt;T&gt;(System.Func&lt;T,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&gt;,System.Action&lt;System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&gt;,T)" />
      <Member Name="FreeHString(System.IntPtr)" />
      <Member Name="GetActivationFactory(System.Type)" />
      <Member Name="GetActivationFactoryForType(System.Type)" />
      <Member Name="GetManagedActivationFactory(System.Type)" />
      <Member Name="PtrToStringHString(System.IntPtr)" />
      <Member Name="RemoveAllEventHandlers(System.Action&lt;System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&gt;)" />
      <Member Name="RemoveEventHandler&lt;T&gt;(System.Action&lt;System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken&gt;,T)" />
      <Member Name="StringToHString(System.String)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Runtime.Versioning.ResourceConsumptionAttribute">
      <Member Name="#ctor(System.Runtime.Versioning.ResourceScope)" />
      <Member Name="#ctor(System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)" />
      <Member MemberType="Property" Name="ConsumptionScope" />
      <Member MemberType="Property" Name="ResourceScope" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Versioning.ResourceExposureAttribute">
      <Member Name="#ctor(System.Runtime.Versioning.ResourceScope)" />
      <Member MemberType="Property" Name="ResourceExposureLevel" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Versioning.TargetFrameworkAttribute">
      <Member Name="#ctor(System.String)" />
      <Member MemberType="Property" Name="FrameworkName" />
      <Member MemberType="Property" Name="FrameworkDisplayName" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Versioning.VersioningHelper">
      <Member Name="MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)" />
      <Member Name="MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope,System.Type)" />
    </Type>
    <Type Name="System.Runtime.Serialization.FormatterServices">
        <Member Name="GetUninitializedObject(System.Type)" />
    </Type>
    <Type Name="System.Runtime.Serialization.SerializationException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />  
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.OnSerializingAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.OnSerializedAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.OnDeserializingAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.OnDeserializedAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.StreamingContext">
      <Member Name="#ctor(System.Runtime.Serialization.StreamingContextStates)" />
      <Member Name="#ctor(System.Runtime.Serialization.StreamingContextStates,System.Object)" />
      <Member MemberType="Property" Name="Context" />
      <Member MemberType="Property" Name="State" />
    </Type>
    <Type Status="ApiRoot" Name="System.Runtime.Serialization.StreamingContextStates">
      <Member MemberType="Field" Name="CrossProcess" />
      <Member MemberType="Field" Name="CrossMachine" />
      <Member MemberType="Field" Name="File" />
      <Member MemberType="Field" Name="Persistence" />
      <Member MemberType="Field" Name="Remoting" />
      <Member MemberType="Field" Name="Other" />
      <Member MemberType="Field" Name="Clone" />
      <Member MemberType="Field" Name="CrossAppDomain" />
      <Member MemberType="Field" Name="All" />
    </Type>
    <Type Status="ImplRoot" Name="System.RuntimeType">
      <Member Status="ImplRoot" MemberType="Field" Name="m_keepalive" />
      <Member Name="GetPropertyInfo(System.RuntimeType,System.Int32)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Security.CodeAccessPermission" />
    <Type Status="ImplRoot" Name="System.Security.PermissionType" />
    <Type Status="ImplRoot" Name="System.Security.CodeAccessSecurityEngine">
      <Member Name="CheckHelper(System.Object,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.CodeAccessPermission,System.Security.PermissionToken,System.RuntimeMethodHandleInternal,System.Reflection.RuntimeAssembly,System.Security.Permissions.SecurityAction)" /> <!-- EE -->
      <Member Name="CheckSetHelper(System.Object,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.RuntimeMethodHandleInternal,System.Reflection.RuntimeAssembly,System.Security.Permissions.SecurityAction)" /> <!-- EE -->
    </Type>
    <Type Name="System.Security.Cryptography.CryptographicException" Condition="FEATURE_LEGACYSURFACE">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="ThrowCryptographicException(System.Int32)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Security.DynamicSecurityMethodAttribute" />
    <Type Status="ImplRoot" Name="System.Security.FrameSecurityDescriptor">
      <Member MemberType="Field" Name="m_callerToken" Condition="not FEATURE_PAL" />
      <Member MemberType="Field" Name="m_DeclarativeDenials" />
      <Member MemberType="Field" Name="m_DeclarativeRestrictions" />
      <Member MemberType="Field" Name="m_denials" />
      <Member MemberType="Field" Name="m_impToken" Condition="not FEATURE_PAL" />
      <Member MemberType="Field" Name="m_restriction" />
    </Type>
    <Type Status="ImplRoot" Name="System.Security.PermissionListSet">
      <Member Name="CheckDemandNoThrow(System.Security.CodeAccessPermission)" /> <!-- EE -->
      <Member Name="CheckSetDemandNoThrow(System.Security.PermissionSet)" /> <!-- EE -->
      <Member Name="Update(System.Security.PermissionSet)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Security.Permissions.PermissionState" />
    <Type Name="System.Security.Permissions.SecurityAction" />
    <Type Status="ImplRoot" Name="System.Security.Permissions.SecurityPermission" />
    <Type Name="System.Security.Permissions.CodeAccessSecurityAttribute">
      <Member Name="#ctor(System.Security.Permissions.SecurityAction)" />
    </Type>
    <Type Name="System.Security.Permissions.SecurityPermissionAttribute">
      <Member Name="#ctor(System.Security.Permissions.SecurityAction)" />
      <Member MemberType="Property" Name="ControlAppDomain" />
      <Member MemberType="Property" Name="ControlDomainPolicy" />
      <Member MemberType="Property" Name="ControlEvidence" />
      <Member MemberType="Property" Name="ControlPolicy" />
      <Member MemberType="Property" Name="ControlThread" />
      <Member MemberType="Property" Name="Flags" />
      <Member MemberType="Property" Name="UnmanagedCode" />
      <Member MemberType="Property" Name="SkipVerification" />
    </Type>
    <Type Status="ImplRoot" Name="System.Security.PermissionSet">
      <Member MemberType="Field" Name="m_serializedPermissionSet" />  <!-- smosier: avoid changing layout of objects mirrored in EE for now -->
      <Member MemberType="Field" Name="m_unrestrictedPermSet" />  <!-- smosier: avoid changing layout of objects mirrored in EE for now -->
      <Member MemberType="Field" Name="m_normalPermSet" />  <!-- smosier: avoid changing layout of objects mirrored in EE for now -->
      <Member MemberType="Field" Name="readableonly" />  <!-- smosier: avoid changing layout of objects mirrored in EE for now -->
      <Member Name="CreateSerialized(System.Object[],System.Boolean,System.Byte[]@,System.Security.PermissionSet@,System.Security.Permissions.HostProtectionResource,System.Boolean)" /> <!-- EE -->
      <Member Name="Contains(System.Security.IPermission)" /> <!-- EE -->
      <Member Name="Demand" /> <!-- EE -->
      <Member Name="DemandNonCAS" /> <!-- EE -->
      <Member Name="Union(System.Security.PermissionSet)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Security.PermissionToken" />
    <Type Status="ImplRoot" Name="System.Security.Policy.Evidence" />
    <Type Name="System.Security.Principal.IIdentity">
      <Member MemberType="Property" Name="AuthenticationType" />
      <Member MemberType="Property" Name="IsAuthenticated" />
      <Member MemberType="Property" Name="Name" />
      <Member Name="get_AuthenticationType" />
      <Member Name="get_IsAuthenticated" />
      <Member Name="get_Name" />
    </Type>
    <Type Name="System.Security.Principal.IPrincipal">
      <Member MemberType="Property" Name="Identity" />
      <Member Name="IsInRole(System.String)" />
      <Member Name ="get_Identity" />
    </Type>
    <Type Name="System.Security.Principal.TokenImpersonationLevel">
      <Member MemberType="Field" Name="Anonymous" />
      <Member MemberType="Field" Name="Delegation" />
      <Member MemberType="Field" Name="Identification" />
      <Member MemberType="Field" Name="Impersonation" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Security.SecurityCriticalAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.Security.SecurityRuntime">
      <Member Name="FrameDescHelper(System.Security.FrameSecurityDescriptor,System.Security.IPermission,System.Security.PermissionToken,System.RuntimeMethodHandleInternal)" /> <!-- EE -->
      <Member Name="FrameDescSetHelper(System.Security.FrameSecurityDescriptor,System.Security.PermissionSet,System.Security.PermissionSet@,System.RuntimeMethodHandleInternal)" /> <!-- EE -->
    </Type>
    <Type Name="System.Security.SecurityTransparentAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Security.SecuritySafeCriticalAttribute" >
      <Member Name="#ctor" />
    </Type>
    <Type Name="System.Security.UnverifiableCodeAttribute">
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.Security.SuppressUnmanagedCodeSecurityAttribute">
      <Member Name="#ctor"/>
    </Type>
    <Type Name="System.Security.VerificationException" >
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Status="ImplRoot" Name="System.SharedStatics">
      <Member MemberType="Field"  Name="_sharedStatics" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.SZArrayHelper">
      <Member Name="Add&lt;T&gt;(T)" />
      <Member Name="Clear&lt;T&gt;" />
      <Member Name="Contains&lt;T&gt;(T)" />
      <Member Name="CopyTo&lt;T&gt;(T[],System.Int32)" />
      <Member Name="get_Count&lt;T&gt;" />
      <Member Name="get_IsReadOnly&lt;T&gt;" />
      <Member Name="get_Item&lt;T&gt;(System.Int32)" />
      <Member Name="GetEnumerator&lt;T&gt;" />
      <Member Name="IndexOf&lt;T&gt;(T)" />
      <Member Name="Insert&lt;T&gt;(System.Int32,T)" />
      <Member Name="Remove&lt;T&gt;(T)" />
      <Member Name="RemoveAt&lt;T&gt;(System.Int32)" />
      <Member Name="set_Item&lt;T&gt;(System.Int32,T)" />
    </Type>
    <Type Status="ImplRoot" Name="System.Threading._IOCompletionCallback">
      <Member Name="PerformIOCompletionCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Threading._ThreadPoolWaitCallback">
      <Member Name="PerformWaitCallback" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Threading._ThreadPoolWaitOrTimerCallback">
      <Member Name="PerformWaitOrTimerCallback(System.Object,System.Boolean)" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.TimerQueue">
      <Member Name="AppDomainTimerCallback" /> <!-- EE -->
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.InternalCrossContextDelegate" />
    <Type Status="ImplRoot" Name="System.Threading.OverlappedData" />

    <Type Status="ImplRoot" Name="System.Threading.ThreadInterruptedException" />
    <Type Name="System.ThreadStaticAttribute">
        <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.TypeUnloadedException" />
    <Type Status="ImplRoot" Name="System.Runtime.InteropServices.PInvokeMap" />
    <Type Name="System.ArgIterator">  <!-- for MC++ -->
      <Member Status="ImplRoot" Name="#ctor(System.RuntimeArgumentHandle,System.Void*)" /> <!-- EE - il stubs -->
    </Type>
        <Type Name="System.Runtime.InteropServices.BestFitMappingAttribute">
      <Member MemberType="Field" Name="ThrowOnUnmappableChar" />
      <Member Name="#ctor(System.Boolean)" />
      <Member MemberType="Property" Name="BestFitMapping" />
      <Member Name="get_BestFitMapping" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComEventInterfaceAttribute">
      <Member Name="#ctor(System.Type,System.Type)" />
      <Member MemberType="Property" Name="EventProvider" />
      <Member MemberType="Property" Name="SourceInterface" />
      <Member Name="get_EventProvider" />
      <Member Name="get_SourceInterface" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComEventsHelper">
      <Member Name="Combine(System.Object,System.Guid,System.Int32,System.Delegate)" />
      <Member Name="Remove(System.Object,System.Guid,System.Int32,System.Delegate)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComMemberType">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Method" />
      <Member MemberType="Field" Name="PropGet" />
      <Member MemberType="Field" Name="PropSet" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComSourceInterfacesAttribute">
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.Type)" />
      <Member Name="#ctor(System.Type,System.Type)" />
      <Member Name="#ctor(System.Type,System.Type,System.Type)" />
      <Member Name="#ctor(System.Type,System.Type,System.Type,System.Type)" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Value" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CustomQueryInterfaceMode">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Allow" />
      <Member MemberType="Field" Name="Ignore" />
    </Type>
    <Type Name="System.Runtime.InteropServices.CustomQueryInterfaceResult">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="Failed" />
      <Member MemberType="Field" Name="Handled" />
      <Member MemberType="Field" Name="NotHandled" />
    </Type>
    <Type Name="System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
      <Member Name="#ctor(System.Runtime.InteropServices.DllImportSearchPath)" />
      <Member MemberType="Property" Name="Paths" />
      <Member Name="get_Paths" />
    </Type>
    <Type Name="System.Runtime.InteropServices.DllImportSearchPath">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="ApplicationDirectory" />
      <Member MemberType="Field" Name="AssemblyDirectory" />
      <Member MemberType="Field" Name="LegacyBehavior" />
      <Member MemberType="Field" Name="SafeDirectories" />
      <Member MemberType="Field" Name="System32" />
      <Member MemberType="Field" Name="UseDllDirectoryForDependencies" />
      <Member MemberType="Field" Name="UserDirectories" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ICustomAdapter">
      <Member Name="GetUnderlyingObject" />
    </Type>
    <Type Name="System.Runtime.InteropServices.SafeBuffer">
      <Member Name="#ctor(System.Boolean)" />
      <Member MemberType="Property" Name="ByteLength" />
      <Member Name="AcquirePointer(System.Byte*@)" />
      <Member Name="get_ByteLength" />
      <Member Name="Initialize(System.UInt32,System.UInt32)" />
      <Member Name="Initialize(System.UInt64)" />
      <Member Name="Initialize&lt;T&gt;(System.UInt32)" />
      <Member Name="Read&lt;T&gt;(System.UInt64)" />
      <Member Name="ReadArray&lt;T&gt;(System.UInt64,T[],System.Int32,System.Int32)" />
      <Member Name="ReleasePointer" />
      <Member Name="Write&lt;T&gt;(System.UInt64,T)" />
      <Member Name="WriteArray&lt;T&gt;(System.UInt64,T[],System.Int32,System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.TypeIdentifierAttribute">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String,System.String)" />
      <Member MemberType="Property" Name="Identifier" />
      <Member MemberType="Property" Name="Scope" />
      <Member Name="get_Identifier" />
      <Member Name="get_Scope" />
    </Type>
    <Type Name="System.Runtime.InteropServices.VarEnum">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VT_ARRAY" />
      <Member MemberType="Field" Name="VT_BLOB" />
      <Member MemberType="Field" Name="VT_BLOB_OBJECT" />
      <Member MemberType="Field" Name="VT_BOOL" />
      <Member MemberType="Field" Name="VT_BSTR" />
      <Member MemberType="Field" Name="VT_BYREF" />
      <Member MemberType="Field" Name="VT_CARRAY" />
      <Member MemberType="Field" Name="VT_CF" />
      <Member MemberType="Field" Name="VT_CLSID" />
      <Member MemberType="Field" Name="VT_CY" />
      <Member MemberType="Field" Name="VT_DATE" />
      <Member MemberType="Field" Name="VT_DECIMAL" />
      <Member MemberType="Field" Name="VT_DISPATCH" />
      <Member MemberType="Field" Name="VT_EMPTY" />
      <Member MemberType="Field" Name="VT_ERROR" />
      <Member MemberType="Field" Name="VT_FILETIME" />
      <Member MemberType="Field" Name="VT_HRESULT" />
      <Member MemberType="Field" Name="VT_I1" />
      <Member MemberType="Field" Name="VT_I2" />
      <Member MemberType="Field" Name="VT_I4" />
      <Member MemberType="Field" Name="VT_I8" />
      <Member MemberType="Field" Name="VT_INT" />
      <Member MemberType="Field" Name="VT_LPSTR" />
      <Member MemberType="Field" Name="VT_LPWSTR" />
      <Member MemberType="Field" Name="VT_NULL" />
      <Member MemberType="Field" Name="VT_PTR" />
      <Member MemberType="Field" Name="VT_R4" />
      <Member MemberType="Field" Name="VT_R8" />
      <Member MemberType="Field" Name="VT_RECORD" />
      <Member MemberType="Field" Name="VT_SAFEARRAY" />
      <Member MemberType="Field" Name="VT_STORAGE" />
      <Member MemberType="Field" Name="VT_STORED_OBJECT" />
      <Member MemberType="Field" Name="VT_STREAM" />
      <Member MemberType="Field" Name="VT_STREAMED_OBJECT" />
      <Member MemberType="Field" Name="VT_UI1" />
      <Member MemberType="Field" Name="VT_UI2" />
      <Member MemberType="Field" Name="VT_UI4" />
      <Member MemberType="Field" Name="VT_UI8" />
      <Member MemberType="Field" Name="VT_UINT" />
      <Member MemberType="Field" Name="VT_UNKNOWN" />
      <Member MemberType="Field" Name="VT_USERDEFINED" />
      <Member MemberType="Field" Name="VT_VARIANT" />
      <Member MemberType="Field" Name="VT_VECTOR" />
      <Member MemberType="Field" Name="VT_VOID" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.BIND_OPTS">
      <Member MemberType="Field" Name="cbStruct" />
      <Member MemberType="Field" Name="dwTickCountDeadline" />
      <Member MemberType="Field" Name="grfFlags" />
      <Member MemberType="Field" Name="grfMode" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.BINDPTR">
      <Member MemberType="Field" Name="lpfuncdesc" />
      <Member MemberType="Field" Name="lptcomp" />
      <Member MemberType="Field" Name="lpvardesc" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.CALLCONV">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="CC_CDECL" />
      <Member MemberType="Field" Name="CC_MACPASCAL" />
      <Member MemberType="Field" Name="CC_MAX" />
      <Member MemberType="Field" Name="CC_MPWCDECL" />
      <Member MemberType="Field" Name="CC_MPWPASCAL" />
      <Member MemberType="Field" Name="CC_MSCPASCAL" />
      <Member MemberType="Field" Name="CC_PASCAL" />
      <Member MemberType="Field" Name="CC_RESERVED" />
      <Member MemberType="Field" Name="CC_STDCALL" />
      <Member MemberType="Field" Name="CC_SYSCALL" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.CONNECTDATA">
      <Member MemberType="Field" Name="dwCookie" />
      <Member MemberType="Field" Name="pUnk" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.DESCKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="DESCKIND_FUNCDESC" />
      <Member MemberType="Field" Name="DESCKIND_IMPLICITAPPOBJ" />
      <Member MemberType="Field" Name="DESCKIND_MAX" />
      <Member MemberType="Field" Name="DESCKIND_NONE" />
      <Member MemberType="Field" Name="DESCKIND_TYPECOMP" />
      <Member MemberType="Field" Name="DESCKIND_VARDESC" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.DISPPARAMS">
      <Member MemberType="Field" Name="cArgs" />
      <Member MemberType="Field" Name="cNamedArgs" />
      <Member MemberType="Field" Name="rgdispidNamedArgs" />
      <Member MemberType="Field" Name="rgvarg" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ELEMDESC">
      <Member MemberType="Field" Name="desc" />
      <Member MemberType="Field" Name="tdesc" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ELEMDESC+DESCUNION">
      <Member MemberType="Field" Name="idldesc" />
      <Member MemberType="Field" Name="paramdesc" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.EXCEPINFO">
      <Member MemberType="Field" Name="wCode" />
      <Member MemberType="Field" Name="wReserved" />
      <Member MemberType="Field" Name="dwHelpContext" />
      <Member MemberType="Field" Name="scode" />
      <Member MemberType="Field" Name="pfnDeferredFillIn" />
      <Member MemberType="Field" Name="pvReserved" />
      <Member MemberType="Field" Name="bstrDescription" />
      <Member MemberType="Field" Name="bstrHelpFile" />
      <Member MemberType="Field" Name="bstrSource" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.FUNCDESC">
      <Member MemberType="Field" Name="cParams" />
      <Member MemberType="Field" Name="cParamsOpt" />
      <Member MemberType="Field" Name="cScodes" />
      <Member MemberType="Field" Name="oVft" />
      <Member MemberType="Field" Name="wFuncFlags" />
      <Member MemberType="Field" Name="memid" />
      <Member MemberType="Field" Name="lprgelemdescParam" />
      <Member MemberType="Field" Name="lprgscode" />
      <Member MemberType="Field" Name="callconv" />
      <Member MemberType="Field" Name="elemdescFunc" />
      <Member MemberType="Field" Name="funckind" />
      <Member MemberType="Field" Name="invkind" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.FUNCFLAGS">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="FUNCFLAG_FBINDABLE" />
      <Member MemberType="Field" Name="FUNCFLAG_FDEFAULTBIND" />
      <Member MemberType="Field" Name="FUNCFLAG_FDEFAULTCOLLELEM" />
      <Member MemberType="Field" Name="FUNCFLAG_FDISPLAYBIND" />
      <Member MemberType="Field" Name="FUNCFLAG_FHIDDEN" />
      <Member MemberType="Field" Name="FUNCFLAG_FIMMEDIATEBIND" />
      <Member MemberType="Field" Name="FUNCFLAG_FNONBROWSABLE" />
      <Member MemberType="Field" Name="FUNCFLAG_FREPLACEABLE" />
      <Member MemberType="Field" Name="FUNCFLAG_FREQUESTEDIT" />
      <Member MemberType="Field" Name="FUNCFLAG_FRESTRICTED" />
      <Member MemberType="Field" Name="FUNCFLAG_FSOURCE" />
      <Member MemberType="Field" Name="FUNCFLAG_FUIDEFAULT" />
      <Member MemberType="Field" Name="FUNCFLAG_FUSESGETLASTERROR" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.FUNCKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="FUNC_DISPATCH" />
      <Member MemberType="Field" Name="FUNC_NONVIRTUAL" />
      <Member MemberType="Field" Name="FUNC_PUREVIRTUAL" />
      <Member MemberType="Field" Name="FUNC_STATIC" />
      <Member MemberType="Field" Name="FUNC_VIRTUAL" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IBindCtx">
      <Member Name="EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)" />
      <Member Name="GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)" />
      <Member Name="GetObjectParam(System.String,System.Object@)" />
      <Member Name="GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)" />
      <Member Name="RegisterObjectBound(System.Object)" />
      <Member Name="RegisterObjectParam(System.String,System.Object)" />
      <Member Name="ReleaseBoundObjects" />
      <Member Name="RevokeObjectBound(System.Object)" />
      <Member Name="RevokeObjectParam(System.String)" />
      <Member Name="SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IConnectionPoint">
      <Member Name="Advise(System.Object,System.Int32@)" />
      <Member Name="EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)" />
      <Member Name="GetConnectionInterface(System.Guid@)" />
      <Member Name="GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)" />
      <Member Name="Unadvise(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IConnectionPointContainer">
      <Member Name="EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)" />
      <Member Name="FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IDLDESC">
      <Member MemberType="Field" Name="dwReserved" />
      <Member MemberType="Field" Name="wIDLFlags" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IDLFLAG">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="IDLFLAG_FIN" />
      <Member MemberType="Field" Name="IDLFLAG_FLCID" />
      <Member MemberType="Field" Name="IDLFLAG_FOUT" />
      <Member MemberType="Field" Name="IDLFLAG_FRETVAL" />
      <Member MemberType="Field" Name="IDLFLAG_NONE" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints">
      <Member Name="Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)" />
      <Member Name="Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)" />
      <Member Name="Reset" />
      <Member Name="Skip(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IEnumConnections">
      <Member Name="Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)" />
      <Member Name="Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)" />
      <Member Name="Reset" />
      <Member Name="Skip(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IEnumMoniker">
      <Member Name="Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)" />
      <Member Name="Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)" />
      <Member Name="Reset" />
      <Member Name="Skip(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IEnumString">
      <Member Name="Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)" />
      <Member Name="Next(System.Int32,System.String[],System.IntPtr)" />
      <Member Name="Reset" />
      <Member Name="Skip(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IEnumVARIANT">
      <Member Name="Clone" />
      <Member Name="Next(System.Int32,System.Object[],System.IntPtr)" />
      <Member Name="Reset" />
      <Member Name="Skip(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IMoniker">
      <Member Name="BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <Member Name="BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <Member Name="CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)" />
      <Member Name="GetClassID(System.Guid@)" />
      <Member Name="GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)" />
      <Member Name="GetSizeMax(System.Int64@)" />
      <Member Name="GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)" />
      <Member Name="Hash(System.Int32@)" />
      <Member Name="Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="IsDirty" />
      <Member Name="IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <Member Name="IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <Member Name="IsSystemMoniker(System.Int32@)" />
      <Member Name="Load(System.Runtime.InteropServices.ComTypes.IStream)" />
      <Member Name="ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <Member Name="Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="IMPLTYPEFLAG_FDEFAULT" />
      <Member MemberType="Field" Name="IMPLTYPEFLAG_FDEFAULTVTABLE" />
      <Member MemberType="Field" Name="IMPLTYPEFLAG_FRESTRICTED" />
      <Member MemberType="Field" Name="IMPLTYPEFLAG_FSOURCE" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.INVOKEKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="INVOKE_FUNC" />
      <Member MemberType="Field" Name="INVOKE_PROPERTYGET" />
      <Member MemberType="Field" Name="INVOKE_PROPERTYPUT" />
      <Member MemberType="Field" Name="INVOKE_PROPERTYPUTREF" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IPersistFile">
      <Member Name="GetClassID(System.Guid@)" />
      <Member Name="GetCurFile(System.String@)" />
      <Member Name="IsDirty" />
      <Member Name="Load(System.String,System.Int32)" />
      <Member Name="Save(System.String,System.Boolean)" />
      <Member Name="SaveCompleted(System.String)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
      <Member Name="EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)" />
      <Member Name="GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)" />
      <Member Name="GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)" />
      <Member Name="IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <Member Name="NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)" />
      <Member Name="Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <Member Name="Revoke(System.Int32)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ITypeComp">
      <Member Name="Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)" />
      <Member Name="BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ITypeInfo">
      <Member Name="AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)" />
      <Member Name="CreateInstance(System.Object,System.Guid@,System.Object@)" />
      <Member Name="GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)" />
      <Member Name="GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Name="GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetFuncDesc(System.Int32,System.IntPtr@)" />
      <Member Name="GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />
      <Member Name="GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)" />
      <Member Name="GetMops(System.Int32,System.String@)" />
      <Member Name="GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />
      <Member Name="GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetRefTypeOfImplType(System.Int32,System.Int32@)" />
      <Member Name="GetTypeAttr(System.IntPtr@)" />
      <Member Name="GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />
      <Member Name="GetVarDesc(System.Int32,System.IntPtr@)" />
      <Member Name="Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)" />
      <Member Name="ReleaseFuncDesc(System.IntPtr)" />
      <Member Name="ReleaseTypeAttr(System.IntPtr)" />
      <Member Name="ReleaseVarDesc(System.IntPtr)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ITypeInfo2">
      <Member Name="AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)" />
      <Member Name="CreateInstance(System.Object,System.Guid@,System.Object@)" />
      <Member Name="GetAllCustData(System.IntPtr)" />
      <Member Name="GetAllFuncCustData(System.Int32,System.IntPtr)" />
      <Member Name="GetAllImplTypeCustData(System.Int32,System.IntPtr)" />
      <Member Name="GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)" />
      <Member Name="GetAllVarCustData(System.Int32,System.IntPtr)" />
      <Member Name="GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)" />
      <Member Name="GetCustData(System.Guid@,System.Object@)" />
      <Member Name="GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Name="GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetFuncCustData(System.Int32,System.Guid@,System.Object@)" />
      <Member Name="GetFuncDesc(System.Int32,System.IntPtr@)" />
      <Member Name="GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)" />
      <Member Name="GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />
      <Member Name="GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)" />
      <Member Name="GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)" />
      <Member Name="GetMops(System.Int32,System.String@)" />
      <Member Name="GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />
      <Member Name="GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)" />
      <Member Name="GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetRefTypeOfImplType(System.Int32,System.Int32@)" />
      <Member Name="GetTypeAttr(System.IntPtr@)" />
      <Member Name="GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />
      <Member Name="GetTypeFlags(System.Int32@)" />
      <Member Name="GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)" />
      <Member Name="GetVarCustData(System.Int32,System.Guid@,System.Object@)" />
      <Member Name="GetVarDesc(System.Int32,System.IntPtr@)" />
      <Member Name="GetVarIndexOfMemId(System.Int32,System.Int32@)" />
      <Member Name="Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)" />
      <Member Name="ReleaseFuncDesc(System.IntPtr)" />
      <Member Name="ReleaseTypeAttr(System.IntPtr)" />
      <Member Name="ReleaseVarDesc(System.IntPtr)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ITypeLib">
      <Member Name="FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)" />
      <Member Name="GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetLibAttr(System.IntPtr@)" />
      <Member Name="GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />
      <Member Name="GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetTypeInfoCount" />
      <Member Name="GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)" />
      <Member Name="IsName(System.String,System.Int32)" />
      <Member Name="ReleaseTLibAttr(System.IntPtr)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.ITypeLib2">
      <Member Name="FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)" />
      <Member Name="GetAllCustData(System.IntPtr)" />
      <Member Name="GetCustData(System.Guid@,System.Object@)" />
      <Member Name="GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)" />
      <Member Name="GetLibAttr(System.IntPtr@)" />
      <Member Name="GetLibStatistics(System.IntPtr,System.Int32@)" />
      <Member Name="GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />
      <Member Name="GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetTypeInfoCount" />
      <Member Name="GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)" />
      <Member Name="GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)" />
      <Member Name="IsName(System.String,System.Int32)" />
      <Member Name="ReleaseTLibAttr(System.IntPtr)" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.LIBFLAGS">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="LIBFLAG_FCONTROL" />
      <Member MemberType="Field" Name="LIBFLAG_FHASDISKIMAGE" />
      <Member MemberType="Field" Name="LIBFLAG_FHIDDEN" />
      <Member MemberType="Field" Name="LIBFLAG_FRESTRICTED" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.PARAMDESC">
      <Member MemberType="Field" Name="lpVarValue" />
      <Member MemberType="Field" Name="wParamFlags" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.PARAMFLAG">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="PARAMFLAG_FHASCUSTDATA" />
      <Member MemberType="Field" Name="PARAMFLAG_FHASDEFAULT" />
      <Member MemberType="Field" Name="PARAMFLAG_FIN" />
      <Member MemberType="Field" Name="PARAMFLAG_FLCID" />
      <Member MemberType="Field" Name="PARAMFLAG_FOPT" />
      <Member MemberType="Field" Name="PARAMFLAG_FOUT" />
      <Member MemberType="Field" Name="PARAMFLAG_FRETVAL" />
      <Member MemberType="Field" Name="PARAMFLAG_NONE" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.SYSKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="SYS_MAC" />
      <Member MemberType="Field" Name="SYS_WIN16" />
      <Member MemberType="Field" Name="SYS_WIN32" />
      <Member MemberType="Field" Name="SYS_WIN64" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.TYPEATTR">
      <Member MemberType="Field" Name="guid" />
      <Member MemberType="Field" Name="cbAlignment" />
      <Member MemberType="Field" Name="cbSizeVft" />
      <Member MemberType="Field" Name="cFuncs" />
      <Member MemberType="Field" Name="cImplTypes" />
      <Member MemberType="Field" Name="cVars" />
      <Member MemberType="Field" Name="wMajorVerNum" />
      <Member MemberType="Field" Name="wMinorVerNum" />
      <Member MemberType="Field" Name="cbSizeInstance" />
      <Member MemberType="Field" Name="dwReserved" />
      <Member MemberType="Field" Name="lcid" />
      <Member MemberType="Field" Name="MEMBER_ID_NIL" />
      <Member MemberType="Field" Name="memidConstructor" />
      <Member MemberType="Field" Name="memidDestructor" />
      <Member MemberType="Field" Name="lpstrSchema" />
      <Member MemberType="Field" Name="idldescType" />
      <Member MemberType="Field" Name="tdescAlias" />
      <Member MemberType="Field" Name="wTypeFlags" />
      <Member MemberType="Field" Name="typekind" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.TYPEDESC">
      <Member MemberType="Field" Name="vt" />
      <Member MemberType="Field" Name="lpValue" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.TYPEFLAGS">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="TYPEFLAG_FAGGREGATABLE" />
      <Member MemberType="Field" Name="TYPEFLAG_FAPPOBJECT" />
      <Member MemberType="Field" Name="TYPEFLAG_FCANCREATE" />
      <Member MemberType="Field" Name="TYPEFLAG_FCONTROL" />
      <Member MemberType="Field" Name="TYPEFLAG_FDISPATCHABLE" />
      <Member MemberType="Field" Name="TYPEFLAG_FDUAL" />
      <Member MemberType="Field" Name="TYPEFLAG_FHIDDEN" />
      <Member MemberType="Field" Name="TYPEFLAG_FLICENSED" />
      <Member MemberType="Field" Name="TYPEFLAG_FNONEXTENSIBLE" />
      <Member MemberType="Field" Name="TYPEFLAG_FOLEAUTOMATION" />
      <Member MemberType="Field" Name="TYPEFLAG_FPREDECLID" />
      <Member MemberType="Field" Name="TYPEFLAG_FPROXY" />
      <Member MemberType="Field" Name="TYPEFLAG_FREPLACEABLE" />
      <Member MemberType="Field" Name="TYPEFLAG_FRESTRICTED" />
      <Member MemberType="Field" Name="TYPEFLAG_FREVERSEBIND" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.TYPEKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="TKIND_ALIAS" />
      <Member MemberType="Field" Name="TKIND_COCLASS" />
      <Member MemberType="Field" Name="TKIND_DISPATCH" />
      <Member MemberType="Field" Name="TKIND_ENUM" />
      <Member MemberType="Field" Name="TKIND_INTERFACE" />
      <Member MemberType="Field" Name="TKIND_MAX" />
      <Member MemberType="Field" Name="TKIND_MODULE" />
      <Member MemberType="Field" Name="TKIND_RECORD" />
      <Member MemberType="Field" Name="TKIND_UNION" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.TYPELIBATTR">
      <Member MemberType="Field" Name="guid" />
      <Member MemberType="Field" Name="wMajorVerNum" />
      <Member MemberType="Field" Name="wMinorVerNum" />
      <Member MemberType="Field" Name="lcid" />
      <Member MemberType="Field" Name="wLibFlags" />
      <Member MemberType="Field" Name="syskind" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.VARDESC">
      <Member MemberType="Field" Name="desc" />
      <Member MemberType="Field" Name="wVarFlags" />
      <Member MemberType="Field" Name="memid" />
      <Member MemberType="Field" Name="elemdescVar" />
      <Member MemberType="Field" Name="varkind" />
      <Member MemberType="Field" Name="lpstrSchema" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.VARDESC+DESCUNION">
      <Member MemberType="Field" Name="oInst" />
      <Member MemberType="Field" Name="lpvarValue" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.VARFLAGS">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VARFLAG_FBINDABLE" />
      <Member MemberType="Field" Name="VARFLAG_FDEFAULTBIND" />
      <Member MemberType="Field" Name="VARFLAG_FDEFAULTCOLLELEM" />
      <Member MemberType="Field" Name="VARFLAG_FDISPLAYBIND" />
      <Member MemberType="Field" Name="VARFLAG_FHIDDEN" />
      <Member MemberType="Field" Name="VARFLAG_FIMMEDIATEBIND" />
      <Member MemberType="Field" Name="VARFLAG_FNONBROWSABLE" />
      <Member MemberType="Field" Name="VARFLAG_FREADONLY" />
      <Member MemberType="Field" Name="VARFLAG_FREPLACEABLE" />
      <Member MemberType="Field" Name="VARFLAG_FREQUESTEDIT" />
      <Member MemberType="Field" Name="VARFLAG_FRESTRICTED" />
      <Member MemberType="Field" Name="VARFLAG_FSOURCE" />
      <Member MemberType="Field" Name="VARFLAG_FUIDEFAULT" />
    </Type>
    <Type Name="System.Runtime.InteropServices.ComTypes.VARKIND">
      <Member MemberType="Field" Name="value__" />
      <Member MemberType="Field" Name="VAR_CONST" />
      <Member MemberType="Field" Name="VAR_DISPATCH" />
      <Member MemberType="Field" Name="VAR_PERINSTANCE" />
      <Member MemberType="Field" Name="VAR_STATIC" />
    </Type>

    <Type Status="ImplRoot" Name="System.StubHelpers.StubHelpers">
      <Member Name="ClearLastError" />
      <Member Name="SetLastError" />
      <Member Name="IsQCall(System.IntPtr)" />
      <Member Name="InitDeclaringType(System.IntPtr)" />
      <Member Name="GetNDirectTarget(System.IntPtr)" />
      <Member Name="GetDelegateTarget(System.Delegate,System.IntPtr@)" />
      <Member Name="ThrowInteropParamException(System.Int32,System.Int32)" />
      <Member Name="AddToCleanupList(System.StubHelpers.CleanupWorkList@,System.Runtime.InteropServices.SafeHandle)" />
      <Member Name="DestroyCleanupList(System.StubHelpers.CleanupWorkList@)" />
      <Member Name="GetHRExceptionObject(System.Int32)" />
      <Member Name="CreateCustomMarshalerHelper(System.IntPtr,System.Int32,System.IntPtr)" />
      <Member Name="CheckStringLength(System.Int32)" />
      <Member Name="DecimalCanonicalizeInternal(System.Decimal@)" />
      <Member Name="FmtClassUpdateNativeInternal(System.Object,System.Byte*,System.StubHelpers.CleanupWorkList@)" />
      <Member Name="FmtClassUpdateCLRInternal(System.Object,System.Byte*)" />
      <Member Name="LayoutDestroyNativeInternal(System.Byte*,System.IntPtr)" />
      <Member Name="AllocateInternal(System.IntPtr)" />
      <Member Name="strlen(System.SByte*)" />
      <Member Name="MarshalToManagedVaListInternal(System.IntPtr,System.IntPtr)" />
      <Member Name="MarshalToUnmanagedVaListInternal(System.IntPtr,System.UInt32,System.IntPtr)" />
      <Member Name="CalcVaListSize(System.IntPtr)" />
      <Member Name="ProfilerBeginTransitionCallback(System.IntPtr,System.IntPtr,System.Object)" Platform="Win" /> <!-- EE -->
      <Member Name="ProfilerEndTransitionCallback(System.IntPtr,System.IntPtr)" Platform="Win" /> <!-- EE -->
      <Member Name="SafeHandleAddRef(System.Runtime.InteropServices.SafeHandle,System.Boolean@)" />
      <Member Name="SafeHandleRelease(System.Runtime.InteropServices.SafeHandle)" />
      <Member Name="ValidateObject(System.Object,System.IntPtr,System.Object)" />
      <Member Name="ValidateByref(System.IntPtr,System.IntPtr,System.Object)" />
      <Member Name="LogPinnedArgument(System.IntPtr,System.IntPtr)" />
      <Member Name="GetStubContext" />
      <Member Name="GetStubContextAddr" Architecture="amd64" />
      <Member Name="GetStubContextAddr" Architecture="arm64" />
      <Member Name="ArrayTypeCheck(System.Object,System.Object[])" Condition="FEATURE_ARRAYSTUB_AS_IL" />
      <Member Name="MulticastDebuggerTraceHelper(System.Object,System.Int32)" Condition="FEATURE_STUBS_AS_IL" />
      <Member Name="GetCOMHRExceptionObject(System.Int32,System.IntPtr,System.Object)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetCOMHRExceptionObject_WinRT(System.Int32,System.IntPtr,System.Object)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetCOMIPFromRCW(System.Object,System.IntPtr,System.IntPtr@,System.Boolean@)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetCOMIPFromRCW_WinRT(System.Object,System.IntPtr,System.IntPtr@)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetCOMIPFromRCW_WinRTSharedGeneric(System.Object,System.IntPtr,System.IntPtr@)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetCOMIPFromRCW_WinRTDelegate(System.Object,System.IntPtr,System.IntPtr@)" Condition="FEATURE_COMINTEROP" />
      <Member Name="ShouldCallWinRTInterface(System.Object,System.IntPtr)" Condition="FEATURE_COMINTEROP" />
      <Member Name="StubRegisterRCW(System.Object)" Condition="FEATURE_COMINTEROP" />
      <Member Name="StubUnregisterRCW(System.Object)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetDelegateInvokeMethod(System.Delegate)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetWinRTFactoryObject(System.IntPtr)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetWinRTFactoryReturnValue(System.Object,System.IntPtr)" Condition="FEATURE_COMINTEROP" />
      <Member Name="GetOuterInspectable(System.Object,System.IntPtr)" Condition="FEATURE_COMINTEROP" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.AnsiCharMarshaler">
      <Member Name="ConvertToNative(System.Char,System.Boolean,System.Boolean)" />
      <Member Name="ConvertToManaged(System.Byte)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.AnsiBSTRMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.Int32,System.String)" />
      <Member Name="ConvertToManaged(System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.BSTRMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.String,System.IntPtr)" />
      <Member Name="ConvertToManaged(System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.CSTRMarshaler">
      <Member Name="ConvertToNative(System.Int32,System.String,System.IntPtr)" />
      <Member Name="ConvertToManaged(System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ApiFxInternal" Name="System.StubHelpers.EventArgsMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateNativeNCCEventArgsInstance(System.Int32,System.Object,System.Object,System.Int32,System.Int32)"/>
      <Member Name="CreateNativePCEventArgsInstance(System.String)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.HResultExceptionMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.Exception)" />
      <Member Name="ConvertToManaged(System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.KeyValuePairMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;@)" />
      <Member Name="ConvertToManaged&lt;K,V&gt;(System.IntPtr)" />
      <Member Name="ConvertToManagedBox&lt;K,V&gt;(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.MngdSafeArrayMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateMarshaler(System.IntPtr,System.IntPtr,System.Int32,System.Int32)" />
      <Member Name="ConvertSpaceToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative(System.IntPtr,System.Object@,System.IntPtr,System.Object)" />
      <Member Name="ConvertSpaceToManaged(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr,System.Object@,System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.MngdHiddenLengthArrayMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="CreateMarshaler(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt16)" />
      <Member Name="ConvertSpaceToManaged(System.IntPtr,System.Object@,System.IntPtr,System.Int32)" />
      <Member Name="ConvertContentsToManaged(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertSpaceToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ClearNativeContents(System.IntPtr,System.IntPtr,System.Int32)" />
      <Member Name="ClearNativeContents_Type(System.IntPtr,System.Int32)" />
      <Member Name="ConvertContentsToManaged_DateTime(System.DateTimeOffset[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged_Type(System.Type[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged_Exception(System.Exception[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged_Nullable&lt;T&gt;(System.Nullable&lt;T&gt;[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged_KeyValuePair&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative_DateTime(System.DateTimeOffset[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative_Type(System.Type[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative_Exception(System.Exception[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative_Nullable&lt;T&gt;(System.Nullable&lt;T&gt;[]@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative_KeyValuePair&lt;K,V&gt;(System.Collections.Generic.KeyValuePair&lt;K,V&gt;[]@,System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.NullableMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative&lt;T&gt;(System.Nullable&lt;T&gt;@)" />
      <Member Name="ConvertToManaged&lt;T&gt;(System.IntPtr)" />
      <Member Name="ConvertToManagedRetVoid&lt;T&gt;(System.IntPtr,System.Nullable&lt;T&gt;@)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.WSTRBufferMarshaler">
      <Member Name="ConvertToNative(System.String)" />
      <Member Name="ConvertToManaged(System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.ValueClassMarshaler">
      <Member Name="ConvertToNative(System.IntPtr,System.IntPtr,System.IntPtr,System.StubHelpers.CleanupWorkList@)" />
      <Member Name="ConvertToManaged(System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr,System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.DateMarshaler">
      <Member Name="ConvertToNative(System.DateTime)" />
      <Member Name="ConvertToManaged(System.Double)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.DateTimeOffsetMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.DateTimeOffset@,System.StubHelpers.DateTimeNative@)"/>
      <Member Name="ConvertToManaged(System.DateTimeOffset@,System.StubHelpers.DateTimeNative@)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.HStringMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.String)"/>
      <Member Name="ConvertToNativeReference(System.String,System.Runtime.InteropServices.WindowsRuntime.HSTRING_HEADER*)"/>
      <Member Name="ConvertToManaged(System.IntPtr)"/>
      <Member Name="ClearNative(System.IntPtr)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.ObjectMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.Object,System.IntPtr)"/>
      <Member Name="ConvertToManaged(System.IntPtr)"/>
      <Member Name="ClearNative(System.IntPtr)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.InterfaceMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="ConvertToNative(System.Object,System.IntPtr,System.IntPtr,System.Int32)"/>
      <Member Name="ConvertToManaged(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)"/>
      <Member Name="ClearNative(System.IntPtr)"/>
      <Member Name="ConvertToManagedWithoutUnboxing(System.IntPtr)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.UriMarshaler" Condition="FEATURE_COMINTEROP">
      <Member Name="GetRawUriFromNative(System.IntPtr)"/>
      <Member Name="CreateNativeUriInstance(System.String)"/>
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.VBByValStrMarshaler">
      <Member Name="ConvertToNative(System.String,System.Boolean,System.Boolean,System.Int32@)" />
      <Member Name="ConvertToManaged(System.IntPtr,System.Int32)" />
      <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.MngdNativeArrayMarshaler">
      <Member Name="CreateMarshaler(System.IntPtr,System.IntPtr,System.Int32)" />
      <Member Name="ConvertSpaceToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertContentsToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertSpaceToManaged(System.IntPtr,System.Object@,System.IntPtr,System.Int32)" />
      <Member Name="ConvertContentsToManaged(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr,System.IntPtr,System.Int32)" />
      <Member Name="ClearNativeContents(System.IntPtr,System.IntPtr,System.Int32)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.MngdRefCustomMarshaler">
      <Member Name="CreateMarshaler(System.IntPtr,System.IntPtr)" />
      <Member Name="ConvertContentsToNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ConvertContentsToManaged(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ClearNative(System.IntPtr,System.Object@,System.IntPtr)" />
      <Member Name="ClearManaged(System.IntPtr,System.Object@,System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.AsAnyMarshaler">
       <Member Name="#ctor(System.IntPtr)" />
       <Member Name="ConvertToNative(System.Object,System.Int32)" />
       <Member Name="ConvertToManaged(System.Object,System.IntPtr)" />
       <Member Name="ClearNative(System.IntPtr)" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.NativeVariant" />
    <Type Status="ImplRoot" Name="Microsoft.Win32.Win32Native+OSVERSIONINFOEX">
      <Member MemberType="Field" Name="OSVersionInfoSize" />
      <Member MemberType="Field" Name="MajorVersion" />
      <Member MemberType="Field" Name="MinorVersion" />
      <Member MemberType="Field" Name="BuildNumber" />
      <Member MemberType="Field" Name="PlatformId" />
      <Member MemberType="Field" Name="CSDVersion" />
      <Member MemberType="Field" Name="ServicePackMajor" />
      <Member MemberType="Field" Name="ServicePackMinor" />
      <Member MemberType="Field" Name="SuiteMask" />
      <Member MemberType="Field" Name="ProductType" />
      <Member MemberType="Field" Name="Reserved" />
      <Member Name="#ctor" />
    </Type>
    <Type Status="ImplRoot" Name="System.StubHelpers.TypeNameNative" Condition="FEATURE_COMINTEROP">
      <Member MemberType="Field" Name="typeName" />
      <Member MemberType="Field" Name="typeKind" />
    </Type>
    <Type Status="ImplRoot" Name="Microsoft.Win32.Win32Native+WIN32_FIND_DATA">
      <Member MemberType="Field" Name="cFileName" />
      <Member MemberType="Field" Name="dwFileAttributes" />
      <Member MemberType="Field" Name="dwReserved0" />
      <Member MemberType="Field" Name="dwReserved1" />
      <Member MemberType="Field" Name="ftCreationTime_dwHighDateTime" />
      <Member MemberType="Field" Name="ftCreationTime_dwLowDateTime" />
      <Member MemberType="Field" Name="ftLastAccessTime_dwHighDateTime" />
      <Member MemberType="Field" Name="ftLastAccessTime_dwLowDateTime" />
      <Member MemberType="Field" Name="ftLastWriteTime_dwHighDateTime" />
      <Member MemberType="Field" Name="ftLastWriteTime_dwLowDateTime" />
      <Member MemberType="Field" Name="nFileSizeHigh" />
      <Member MemberType="Field" Name="nFileSizeLow" />
      <Member MemberType="Field" Name="cAlternateFileName" />
      <Member Name="#ctor" />
    </Type>
    <Type Status="ApiFxInternal" Name="Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES">
      <Member Status="ApiRoot" Name="#ctor" />
    </Type>
    <!-- PFX Types -->
    <!-- System.Threading.Tasks namespace -->
    <Type Name="System.Threading.Tasks.TaskScheduler">
      <Member Name="#ctor" />
      <Member Name="TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />
      <Member Name="TryExecuteTask(System.Threading.Tasks.Task)" />
      <Member Name="get_MaximumConcurrencyLevel" />
      <Member Name="get_Default" />
      <Member Name="get_Current" />
      <Member Name="get_Id" />
      <Member Name="QueueTask(System.Threading.Tasks.Task)" />
      <Member Name="TryDequeue(System.Threading.Tasks.Task)" />
      <Member Name="GetScheduledTasks" />
      <Member Name="FromCurrentSynchronizationContext" />
      <Member Status="ImplRoot" Name="GetTaskSchedulersForDebugger" />
      <Member Status="ImplRoot" Name="GetScheduledTasksForDebugger" />
      <Member MemberType="Event" Name="UnobservedTaskException" />
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.Tasks.TaskScheduler+SystemThreadingTasks_TaskSchedulerDebugView">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.Tasks.TaskScheduler)" />
      <Member Status="ImplRoot" Name="get_ScheduledTasks" />
      <Member Status="ImplRoot" Name="get_Id" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskSchedulerException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Exception)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.Tasks.Task">
      <Member Name="#ctor(System.Action)" />
      <Member Name="#ctor(System.Action,System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Action&lt;System.Object&gt;,System.Object)" />
      <Member Name="#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Action&lt;System.Object&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Action&lt;System.Object&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Action&lt;System.Object&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,TResult&gt;)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,System.Object,TResult&gt;,System.Object)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,System.Object,TResult&gt;,System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,System.Object,TResult&gt;,System.Object,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task,System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="FromResult&lt;TResult&gt;(TResult)" />
      <Member Name="FromException(System.Exception)" />
      <Member Name="FromException&lt;TResult&gt;(System.Exception)" />
      <Member Name="FromCanceled(System.Threading.CancellationToken)" />
      <Member Name="FromCanceled&lt;TResult&gt;(System.Threading.CancellationToken)" />
      <Member Name="Run(System.Action)" />
      <Member Name="Run(System.Action,System.Threading.CancellationToken)" />
      <Member Name="Run&lt;TResult&gt;(System.Func&lt;TResult&gt;)" />
      <Member Name="Run&lt;TResult&gt;(System.Func&lt;TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="Run(System.Func&lt;System.Threading.Tasks.Task&gt;)" />
      <Member Name="Run(System.Func&lt;System.Threading.Tasks.Task&gt;,System.Threading.CancellationToken)" />
      <Member Name="Run&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;)" />
      <Member Name="Run&lt;TResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;,System.Threading.CancellationToken)" />
      <Member Name="Delay(System.TimeSpan)" />
      <Member Name="Delay(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Name="Delay(System.Int32)" />
      <Member Name="Delay(System.Int32,System.Threading.CancellationToken)" />
      <Member Name="WhenAll(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;)" />
      <Member Name="WhenAll(System.Threading.Tasks.Task[])" />
      <Member Name="WhenAll&lt;TResult&gt;(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;)" />
      <Member Name="WhenAll&lt;TResult&gt;(System.Threading.Tasks.Task&lt;TResult&gt;[])" />
      <Member Name="WhenAny(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;)" />
      <Member Name="WhenAny(System.Threading.Tasks.Task[])" />
      <Member Name="WhenAny&lt;TResult&gt;(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;)" />
      <Member Name="WhenAny&lt;TResult&gt;(System.Threading.Tasks.Task&lt;TResult&gt;[])" />
      <Member Name="Dispose" />
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="RunSynchronously" />
      <Member Name="RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
      <Member Name="Start" />
      <Member Name="Start(System.Threading.Tasks.TaskScheduler)" />
      <Member Name="Wait" />
      <Member Name="Wait(System.Int32)" />
      <Member Name="Wait(System.Threading.CancellationToken)" />
      <Member Name="Wait(System.TimeSpan)" />
      <Member Name="Wait(System.Int32,System.Threading.CancellationToken)" />
      <Member Name="WaitAll(System.Threading.Tasks.Task[])" />
      <Member Name="WaitAll(System.Threading.Tasks.Task[],System.Int32)" />
      <Member Name="WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
      <Member Name="WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)" />
      <Member Name="WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
      <Member Name="WaitAny(System.Threading.Tasks.Task[])" />
      <Member Name="WaitAny(System.Threading.Tasks.Task[],System.Int32)" />
      <Member Name="WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
      <Member Name="WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)" />
      <Member Name="WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
      <Member Name="GetAwaiter" />
      <Member Name="ConfigureAwait(System.Boolean)" />
      <Member Name="Yield" />
      <Member Name="get_AsyncState" />
      <Member Name="get_CompletedTask" />
      <Member Name="get_CreationOptions" />
      <Member Name="get_CurrentId" />
      <Member Name="get_Exception" />
      <Member Name="get_Factory" />
      <Member Name="get_Id" />
      <Member Name="get_IsCanceled" />
      <Member Name="get_IsCompleted" />
      <Member Name="get_IsFaulted" />
      <Member Name="get_Status" />
      <Member Status="ImplRoot" Name="get_DebuggerDisplayMethodDescription" />
      <!--Internal members exposed to be used by Unwrap extension method in System.Core.dll-->
      <Member Status="ImplRoot" Name="CreateUnwrapPromise&lt;TResult&gt;(System.Threading.Tasks.Task,System.Boolean)" />
      <Member Status="ImplRoot" Name="NotifyDebuggerOfWaitCompletion"                       />
      <Member Status="ImplRoot" Name="SetNotificationForWaitCompletion(System.Boolean)"     />
      <!--Internal helper members exposed to be used by VS Debugger-->
      <Member Status="ImplRoot" Name="GetDelegateContinuationsForDebugger" />
      <Member Status="ImplRoot" Name="GetActiveTaskFromId(System.Int32)" />
      <Member Status="ImplRoot" Name="GetActiveTasks" />
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.Tasks.SystemThreadingTasks_TaskDebugView">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.Tasks.Task)" />
      <Member Status="ImplRoot" Name="get_AsyncState" />
      <Member Status="ImplRoot" Name="get_CreationOptions" />
      <Member Status="ImplRoot" Name="get_Exception" />
      <Member Status="ImplRoot" Name="get_Id" />
      <Member Status="ImplRoot" Name="get_Status" />
      <Member Status="ImplRoot" Name="get_CancellationPending" />
    </Type>
    <Type Name="System.Threading.Tasks.Task&lt;TResult&gt;">
      <Member Name="#ctor(System.Func&lt;TResult&gt;)" />
      <Member Name="#ctor(System.Func&lt;TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Func&lt;System.Object,TResult&gt;,System.Object)" />
      <Member Name="#ctor(System.Func&lt;TResult&gt;,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Func&lt;TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;,System.Object)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;,System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;,System.Object,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;,System.Object)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;,System.Object,System.Threading.CancellationToken)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;,System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;,System.Object,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWith&lt;TNewResult&gt;(System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ConfigureAwait(System.Boolean)" />
      <Member Name="GetAwaiter" />
      <Member Name="get_Factory" />
      <Member Name="get_Result" />
      <!-- DebuggerDisplayMethodDescription ysed by the debugger display-->
      <Member Status="ImplRoot" Name="get_DebuggerDisplayMethodDescription" />
      <Member Status="ImplRoot" Name="get_DebuggerDisplayResultDescription" />
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.Tasks.SystemThreadingTasks_FutureDebugView&lt;TResult&gt;">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.Tasks.Task&lt;TResult&gt;)" />
      <Member Status="ImplRoot" Name="get_AsyncState" />
      <Member Status="ImplRoot" Name="get_CreationOptions" />
      <Member Status="ImplRoot" Name="get_Exception" />
      <Member Status="ImplRoot" Name="get_Id" />
      <Member Status="ImplRoot" Name="get_Status" />
      <Member Status="ImplRoot" Name="get_Result" />
      <Member Status="ImplRoot" Name="get_CancellationPending" />
    </Type>
    <Type Name="System.Threading.Tasks.VoidTaskResult"/>
    <Type Name="System.Threading.Tasks.TaskCanceledException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Threading.Tasks.Task)" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
      <Member Name="get_Task" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Object)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <Member Name="SetCanceled" />
      <Member Name="SetException(System.Exception)" />
      <Member Name="SetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;)" />
      <Member Name="SetResult(TResult)" />
      <Member Name="TrySetCanceled" />
      <Member Name="TrySetCanceled(System.Threading.CancellationToken)" />
      <Member Name="TrySetException(System.Exception)" />
      <Member Name="TrySetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;)" />
      <Member Name="TrySetResult(TResult)" />
      <Member Name="get_Task" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskFactory">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskScheduler)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task[]&gt;)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task[]&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task[]&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task[]&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;)" />
      <Member Name="ContinueWhenAll&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task&gt;)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Action&lt;System.Threading.Tasks.Task&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;)" />
      <Member Name="ContinueWhenAny&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny&lt;TResult&gt;(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="FromAsync(System.IAsyncResult,System.Action&lt;System.IAsyncResult&gt;)"/>
      <Member Name="FromAsync(System.IAsyncResult,System.Action&lt;System.IAsyncResult&gt;,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync(System.IAsyncResult,System.Action&lt;System.IAsyncResult&gt;,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="FromAsync&lt;TResult&gt;(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;)"/>
      <Member Name="FromAsync&lt;TResult&gt;(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TResult&gt;(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="FromAsync(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,System.Object)"/>
      <Member Name="FromAsync(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TResult&gt;(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Object)"/>
      <Member Name="FromAsync&lt;TResult&gt;(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TResult&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TResult&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,TArg2,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,TArg2,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TResult&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TResult&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,TArg2,TArg3,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Action&lt;System.IAsyncResult&gt;,TArg1,TArg2,TArg3,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Action)"/>
      <Member Name="StartNew(System.Action,System.Threading.CancellationToken)"/>
      <Member Name="StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="StartNew(System.Action&lt;System.Object&gt;,System.Object)"/>
      <Member Name="StartNew(System.Action&lt;System.Object&gt;,System.Object,System.Threading.CancellationToken)"/>
      <Member Name="StartNew(System.Action&lt;System.Object&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Action&lt;System.Object&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;TResult&gt;)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;TResult&gt;,System.Threading.CancellationToken)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;TResult&gt;,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;System.Object,TResult&gt;,System.Object)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew&lt;TResult&gt;(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="get_CancellationToken" />
      <Member Name="get_CreationOptions" />
      <Member Name="get_ContinuationOptions" />
      <Member Name="get_Scheduler" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Threading.CancellationToken)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskScheduler)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAll&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny(System.Threading.Tasks.Task[],System.Func&lt;System.Threading.Tasks.Task,TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.CancellationToken)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.Tasks.TaskContinuationOptions)" />
      <Member Name="ContinueWhenAny&lt;TAntecedentResult&gt;(System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <Member Name="FromAsync(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;)"/>
      <Member Name="FromAsync(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync(System.IAsyncResult,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="FromAsync(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Object)"/>
      <Member Name="FromAsync(System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1&gt;(System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2&gt;(System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,System.Object)"/>
      <Member Name="FromAsync&lt;TArg1,TArg2,TArg3&gt;(System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;,System.Func&lt;System.IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Func&lt;TResult&gt;)"/>
      <Member Name="StartNew(System.Func&lt;TResult&gt;,System.Threading.CancellationToken)"/>
      <Member Name="StartNew(System.Func&lt;TResult&gt;,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Func&lt;TResult&gt;,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="StartNew(System.Func&lt;System.Object,TResult&gt;,System.Object)"/>
      <Member Name="StartNew(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken)"/>
      <Member Name="StartNew(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.Tasks.TaskCreationOptions)"/>
      <Member Name="StartNew(System.Func&lt;System.Object,TResult&gt;,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)"/>
      <Member Name="get_CancellationToken" />
      <Member Name="get_CreationOptions" />
      <Member Name="get_ContinuationOptions" />
      <Member Name="get_Scheduler" />
    </Type>
    <Type Name="System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
      <Member Name="#ctor(System.AggregateException)" />
      <Member Name="SetObserved" />
      <Member Name="get_Exception" />
      <Member Name="get_Observed" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskContinuationOptions">
      <Member MemberType="Field" Name="AttachedToParent" />
      <Member MemberType="Field" Name="ExecuteSynchronously" />
      <Member MemberType="Field" Name="LongRunning" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="NotOnCanceled" />
      <Member MemberType="Field" Name="NotOnFaulted" />
      <Member MemberType="Field" Name="NotOnRanToCompletion" />
      <Member MemberType="Field" Name="OnlyOnCanceled" />
      <Member MemberType="Field" Name="OnlyOnFaulted" />
      <Member MemberType="Field" Name="OnlyOnRanToCompletion" />
      <Member MemberType="Field" Name="PreferFairness" />
      <Member MemberType="Field" Name="DenyChildAttach" />
      <Member MemberType="Field" Name="HideScheduler" />
      <Member MemberType="Field" Name="LazyCancellation" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskCreationOptions">
      <Member MemberType="Field" Name="AttachedToParent" />
      <Member MemberType="Field" Name="LongRunning" />
      <Member MemberType="Field" Name="None" />
      <Member MemberType="Field" Name="PreferFairness" />
      <Member MemberType="Field" Name="DenyChildAttach" />
      <Member MemberType="Field" Name="HideScheduler" />
      <Member MemberType="Field" Name="RunContinuationsAsynchronously" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Threading.Tasks.TaskStatus">
      <Member MemberType="Field" Name="Created" />
      <Member MemberType="Field" Name="WaitingForActivation" />
      <Member MemberType="Field" Name="WaitingToRun" />
      <Member MemberType="Field" Name="Running" />
      <Member MemberType="Field" Name="WaitingForChildrenToComplete" />
      <Member MemberType="Field" Name="RanToCompletion" />
      <Member MemberType="Field" Name="Canceled" />
      <Member MemberType="Field" Name="Faulted" />
      <Member MemberType="Field" Name="value__" />
    </Type>
    <Type Name="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.Threading.Tasks.TaskScheduler)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)" />
      <Member Name="#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)" />
      <Member Name="Complete" />
      <Member MemberType="Property" Name="Completion" />
      <Member MemberType="Property" Name="ConcurrentScheduler" />
      <Member MemberType="Property" Name="ExclusiveScheduler" />
    </Type>
   <Type Status="ImplRoot" Name="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+DebugView">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair)" />
      <Member Status="ImplRoot" MemberType="Property" Name="Mode" />
      <Member Status="ImplRoot" MemberType="Property" Name="ScheduledExclusive" />
      <Member Status="ImplRoot" MemberType="Property" Name="ScheduledConcurrent" />
      <Member Status="ImplRoot" MemberType="Property" Name="CurrentlyExecutingTaskCount" />
      <Member Status="ImplRoot" MemberType="Property" Name="TargetScheduler" />
    </Type>
   <Type Status="ImplRoot" Name="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+ConcurrentExclusiveTaskScheduler+DebugView">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+ConcurrentExclusiveTaskScheduler)" />
      <Member Status="ImplRoot" MemberType="Property" Name="MaximumConcurrencyLevel" />
      <Member Status="ImplRoot" MemberType="Property" Name="ScheduledTasks" />
      <Member Status="ImplRoot" MemberType="Property" Name="SchedulerPair" />
   </Type>
   <Type Name="System.Threading.Tasks.TplEtwProvider+Tasks">
      <Member MemberType="Field" Name="Loop" />
      <Member MemberType="Field" Name="Invoke" />
      <Member MemberType="Field" Name="TaskExecute" />
      <Member MemberType="Field" Name="TaskWait" />
      <Member MemberType="Field" Name="ForkJoin" />
      <Member MemberType="Field" Name="TaskScheduled" />
      <Member MemberType="Field" Name="AwaitTaskContinuationScheduled" />
   </Type>
   <Type Name="System.Threading.Tasks.TplEtwProvider+Keywords">
      <Member MemberType="Field" Name="TaskTransfer" />
      <Member MemberType="Field" Name="Tasks" />
      <Member MemberType="Field" Name="Parallel" />
   </Type>
    
    <!-- System.Runtime.CompilerServices namespace -->
    <Type Name="System.Runtime.CompilerServices.TaskAwaiter">
      <Member Name="get_IsCompleted" />
      <Member Name="OnCompleted(System.Action)" />
      <Member Name="UnsafeOnCompleted(System.Action)" />
      <Member Name="GetResult" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;">
      <Member Name="get_IsCompleted" />
      <Member Name="OnCompleted(System.Action)" />
      <Member Name="UnsafeOnCompleted(System.Action)" />
      <Member Name="GetResult" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable">
      <Member Name="GetAwaiter" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter">
      <Member Name="get_IsCompleted" />
      <Member Name="OnCompleted(System.Action)" />
      <Member Name="UnsafeOnCompleted(System.Action)" />
      <Member Name="GetResult" />
    </Type>
     <Type Name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt;">
      <Member Name="GetAwaiter" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt;+ConfiguredTaskAwaiter">
      <Member Name="get_IsCompleted" />
      <Member Name="OnCompleted(System.Action)" />
      <Member Name="UnsafeOnCompleted(System.Action)" />
      <Member Name="GetResult" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.INotifyCompletion">
      <Member Name="OnCompleted(System.Action)" />
    </Type>
     <Type Name="System.Runtime.CompilerServices.ICriticalNotifyCompletion">
      <Member Name="UnsafeOnCompleted(System.Action)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.YieldAwaitable">
      <Member Name="GetAwaiter" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter">
      <Member Name="get_IsCompleted" />
      <Member Name="OnCompleted(System.Action)" />
      <Member Name="UnsafeOnCompleted(System.Action)" />
      <Member Name="GetResult" />
    </Type>
     <Type Name="System.Runtime.CompilerServices.IAsyncStateMachine">
      <Member Name="MoveNext" />
      <Member Name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
      <Member Name="Create" />
      <Member Name="Start&lt;TStateMachine&gt;(TStateMachine@)" />
      <Member Name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
      <Member Name="AwaitOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="AwaitUnsafeOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="SetResult" />
      <Member Name="SetException(System.Exception)" />
      <!-- These are required by the debugger team.  Adding to the model file to prevent inadvertant thinning -->
      <Member Status="ImplRoot" MemberType="Property" Name="ObjectIdForDebugger"   />
      <Member Status="ImplRoot" Name="get_ObjectIdForDebugger"                     />
    </Type>
    <Type Name="System.Runtime.CompilerServices.AsyncTaskMethodBuilder">
      <Member Name="Create" />
      <Member Name="Start&lt;TStateMachine&gt;(TStateMachine@)" />
      <Member Name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
      <Member Name="AwaitOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="AwaitUnsafeOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="SetResult" />
      <Member Name="SetException(System.Exception)" />
      <Member Name="get_Task" />
      <!-- These are required by the debugger team.  Adding to the model file to prevent inadvertant thinning -->
      <Member Status="ImplRoot" MemberType="Property" Name="ObjectIdForDebugger" />
      <Member Status="ImplRoot" Name="get_ObjectIdForDebugger" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_builder" />
    </Type>
    <Type Name="System.Runtime.CompilerServices.AsyncTaskMethodBuilder&lt;TResult&gt;" >
      <Member Name="Create" />
      <Member Name="Start&lt;TStateMachine&gt;(TStateMachine@)" />
      <Member Name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" />
      <Member Name="AwaitOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="AwaitUnsafeOnCompleted&lt;TAwaiter,TStateMachine&gt;(TAwaiter@,TStateMachine@)" />
      <Member Name="SetResult(TResult)" />
      <Member Name="SetException(System.Exception)" />
      <Member Name="get_Task" />
      <!-- These are required by the debugger team.  Adding to the model file to prevent inadvertant thinning -->
      <Member Status="ImplRoot" MemberType="Property" Name="ObjectIdForDebugger" />
      <Member Status="ImplRoot" Name="get_ObjectIdForDebugger" />
      <Member Status="ImplRoot" MemberType="Field" Name="m_task" />
    </Type>
    
    <!-- System namespace -->
    <Type Name="System.AggregateException">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;)"/>
      <Member Name="#ctor(System.Exception[])"/>
      <Member Name="#ctor(System.String)"/>
      <Member Name="#ctor(System.String,System.Collections.Generic.IEnumerable&lt;System.Exception&gt;)"/>
      <Member Name="#ctor(System.String,System.Exception[])"/>
      <Member Name="#ctor(System.String,System.Collections.Generic.IList&lt;System.Exception&gt;)"/>
      <Member Name="#ctor(System.String,System.Exception)"/>
      <Member Name="get_InnerExceptions" />
      <Member Name="Handle(System.Func&lt;System.Exception,System.Boolean&gt;)"/>
      <Member Name="Flatten"/>
      <Member Name="GetBaseException"/>
      <Member Name="ToString"/>
    </Type>
    <!-- System.Threading namespace -->
    <Type Name="System.Threading.AsyncLocal&lt;T&gt;">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.Action&lt;System.Threading.AsyncLocalValueChangedArgs&lt;T&gt;&gt;)"/>
      <Member Name="get_Value"/>
      <Member Name="set_Value(T)"/>      
    </Type>
    <Type Name="System.Threading.AsyncLocalValueChangedArgs&lt;T&gt;">
      <Member Name="get_PreviousValue"/>
      <Member Name="get_CurrentValue"/>
      <Member Name="get_ThreadContextChanged"/>
    </Type>
    <Type Name="System.Threading.ExecutionContext">
      <Member Name="Capture" />
      <Member Status="ApiFxInternal" Name="IsFlowSuppressed" />
      <Member Name="Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)"/>
      <Member Status="ApiFxInternal" Name="CreateCopy"  />
      <Member Status="ApiFxInternal" Name="Dispose"  />
    </Type>
    <Type Name="System.Threading.CancellationToken">
      <Member Name="#ctor(System.Boolean)"/>
      <Member Name="get_None" />
      <Member Name="get_IsCancellationRequested" />
      <Member Name="get_CanBeCanceled" />
      <Member Name="get_WaitHandle" />
      <Member Name="Register(System.Action)" />
      <Member Name="Register(System.Action,System.Boolean)" />
      <Member Name="Register(System.Action&lt;System.Object&gt;,System.Object)" />
      <Member Name="Register(System.Action&lt;System.Object&gt;,System.Object,System.Boolean)" />
      <Member Name="Equals(System.Threading.CancellationToken)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <Member Name="op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <Member Name="ThrowIfCancellationRequested" />
    </Type>
    <Type Name="System.Threading.CancellationTokenSource">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.TimeSpan)" />
      <Member Name="#ctor(System.Int32)" />
      <Member Name="Cancel"/>
      <Member Name="Cancel(System.Boolean)"/>
      <Member Name="CancelAfter(System.TimeSpan)" />
      <Member Name="CancelAfter(System.Int32)" />
      <Member Name="CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)"/>
      <Member Name="CreateLinkedTokenSource(System.Threading.CancellationToken[])"/>
      <Member Name="Dispose"/>
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="get_Token"/>
      <Member Name="get_IsCancellationRequested"/>
      <Member Status="ImplRoot" Name="get_CallbackCount" Condition="DEBUG"/>
    </Type>
    <Type Name="System.Threading.CancellationTokenRegistration">
      <Member Name="Dispose"/>
      <Member Name="Equals(System.Threading.CancellationTokenRegistration)" />
      <Member Name="Equals(System.Object)" />
      <Member Name="GetHashCode" />
      <Member Name="op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <Member Name="op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
    </Type>
    <Type Name="System.Threading.SpinWait">
      <Member Name="SpinOnce"/>
      <Member Name="Reset" />
      <Member Name="get_Count" />
      <Member Name="get_NextSpinWillYield" />
      <Member Name="SpinUntil(System.Func&lt;System.Boolean&gt;)" />
      <Member Name="SpinUntil(System.Func&lt;System.Boolean&gt;,System.TimeSpan)" />
      <Member Name="SpinUntil(System.Func&lt;System.Boolean&gt;,System.Int32)" />
    </Type>
    <Type Name="System.Threading.SpinLock">
      <Member Name="#ctor(System.Boolean)"/>
      <Member Name="Enter(System.Boolean@)" />
      <Member Name="TryEnter(System.Boolean@)" />
      <Member Name="TryEnter(System.TimeSpan,System.Boolean@)" />
      <Member Name="TryEnter(System.Int32,System.Boolean@)" />
      <Member Name="Exit" />
      <Member Name="Exit(System.Boolean)" />
      <Member Name="get_IsHeld"/>
      <Member Name="get_IsHeldByCurrentThread"/>
      <Member Name="get_IsThreadOwnerTrackingEnabled"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.SpinLock+SystemThreading_SpinLockDebugView">
      <Member Status="ImplRoot" Name="#ctor(System.Threading.SpinLock)"/>
      <Member Status="ImplRoot" Name="get_IsHeld"/>
      <Member Status="ImplRoot" Name="get_IsHeldByCurrentThread"/>
      <Member Status="ImplRoot" Name="get_OwnerThreadID"/>
    </Type>
    <Type Name="System.Threading.ManualResetEventSlim">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.Boolean)"/>
      <Member Name="#ctor(System.Boolean,System.Int32)"/>
      <Member Name="Dispose"/>
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Set" />
      <Member Name="Reset" />
      <Member Name="Wait" />
      <Member Name="Wait(System.TimeSpan)" />
      <Member Name="Wait(System.Int32)" />
      <Member Name="Wait(System.Threading.CancellationToken)" />
      <Member Name="Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Name="Wait(System.Int32,System.Threading.CancellationToken)" />
      <Member Name="get_IsSet"/>
      <Member Name="get_SpinCount"/>
      <Member Name="get_WaitHandle"/>
    </Type>
    <Type Name="System.Threading.CountdownEvent">
      <Member Name="#ctor(System.Int32)"/>
      <Member Name="AddCount"/>
      <Member Name="AddCount(System.Int32)"/>
      <Member Name="Dispose"/>
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Reset" />
      <Member Name="Reset(System.Int32)" />
      <Member Name="Signal" />
      <Member Name="Signal(System.Int32)" />
      <Member Name="TryAddCount"/>
      <Member Name="TryAddCount(System.Int32)"/>
      <Member Name="Wait" />
      <Member Name="Wait(System.TimeSpan)" />
      <Member Name="Wait(System.Int32)" />
      <Member Name="Wait(System.Threading.CancellationToken)" />
      <Member Name="Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Name="Wait(System.Int32,System.Threading.CancellationToken)" />
      <Member Name="get_CurrentCount"/>
      <Member Name="get_InitialCount"/>
      <Member Name="get_IsSet"/>
      <Member Name="get_WaitHandle"/>
    </Type>
    <Type Name="System.Threading.Semaphore">
      <Member Name="#ctor(System.Int32,System.Int32)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.String)" />
      <Member Name="#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <Member Name="OpenExisting(System.String)" />
      <Member Name="Release" />
      <Member Name="Release(System.Int32)" />
      <Member Name="TryOpenExisting(System.String,System.Threading.Semaphore@)" />
    </Type>
    <Type Name="System.Threading.SemaphoreSlim">
      <Member Name="#ctor(System.Int32)"/>
      <Member Name="#ctor(System.Int32,System.Int32)"/>
      <Member Name="Dispose"/>
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="Release" />
      <Member Name="Release(System.Int32)" />
      <Member Name="Wait" />
      <Member Name="Wait(System.TimeSpan)" />
      <Member Name="Wait(System.Int32)" />
      <Member Name="Wait(System.Threading.CancellationToken)" />
      <Member Name="Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Name="Wait(System.Int32,System.Threading.CancellationToken)" />
      <!--WaitAsync only supported in CoreSys bcause CoreCLR build is still using V4.0 tools -->
      <Member Name="WaitAsync" />
      <Member Name="WaitAsync(System.TimeSpan)" />
      <Member Name="WaitAsync(System.Int32)" />
      <Member Name="WaitAsync(System.Threading.CancellationToken)" />
      <Member Name="WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Name="WaitAsync(System.Int32,System.Threading.CancellationToken)" />
      <Member Name="get_CurrentCount"/>
      <Member Name="get_AvailableWaitHandle"/>
    </Type>
    <Type Name="System.Threading.SemaphoreFullException">
      <Member Name="#ctor" />
      <Member Name="#ctor(System.String)" />
      <Member Name="#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Threading.ThreadLocal&lt;T&gt;">
      <Member Name="#ctor"/>
      <Member Name="#ctor(System.Boolean)"/>
      <Member Name="#ctor(System.Func&lt;T&gt;)"/>
      <Member Name="#ctor(System.Func&lt;T&gt;,System.Boolean)"/>
      <Member Name="Dispose"/>
      <Member Name="Dispose(System.Boolean)" />
      <Member Name="ToString" />
      <Member MemberType="Property" Name="Value" />
      <Member Name="get_Values"/>
      <Member Name="get_IsValueCreated"/>
    </Type>
    <Type Status="ImplRoot" Name="System.Threading.SystemThreading_ThreadLocalDebugView&lt;T&gt;">
      <Member Name="#ctor(System.Threading.ThreadLocal&lt;T&gt;)"/>
      <Member Status="ImplRoot" Name="get_Value"/>
      <Member Status="ImplRoot" Name="get_IsValueCreated"/>
      <Member Status="ImplRoot" Name="get_Values"/>
    </Type>
    <Type Name="System.Threading.LazyInitializer">
      <Member Name="EnsureInitialized&lt;T&gt;(T@)"/>
      <Member Name="EnsureInitialized&lt;T&gt;(T@,System.Func&lt;T&gt;)"/>
      <Member Name="EnsureInitialized&lt;T&gt;(T@,System.Boolean@,System.Object@)"/>
      <Member Name="EnsureInitialized&lt;T&gt;(T@,System.Boolean@,System.Object@,System.Func&lt;T&gt;)"/>
    </Type>
    <Type Status="ImplRoot" Name="Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs" Condition="FEATURE_COMINTEROP">
      <Member Name="get_Enabled" />
      <Member Name="get_TraceLevel" />
    </Type>
    <!--End of PFX types -->
  </Assembly>
</ThinModel>
 
