<Project>
  <Import Project="Directory.Build.props" />
  <Import Project="Directory.Build.targets" />

  <Target Name="Build">
    <PropertyGroup>
      <OSPlatformConfig>$(TargetOS).$(TargetArchitecture).$(Configuration)</OSPlatformConfig>
      <RootBinDir>$(RepoRoot)\artifacts</RootBinDir>
      <LogsDir>$(RootBinDir)\log</LogsDir>
      <BinDir>$(RootBinDir)\bin\coreclr\$(OSPlatformConfig)</BinDir>
      <IntermediatesDir>$(RootBinDir)\obj\coreclr\$(OSPlatformConfig)</IntermediatesDir>
      <CrossGenCoreLibLog>$(LogsDir)\CrossgenCoreLib_$(TargetOS)__$(TargetArchitecture)__$(Configuration).log</CrossGenCoreLibLog>
      <ExeExtension Condition="'$(OS)' == 'Windows_NT'">.exe</ExeExtension>

      <CoreLibAssemblyName>System.Private.CoreLib</CoreLibAssemblyName>
      <CoreLibOutputPath>$(BinDir)\$(CoreLibAssemblyName).dll</CoreLibOutputPath>

      <BuildPdb>false</BuildPdb>
      <BuildPdb Condition="'$(OS)' == 'Windows_NT' and '$(TargetOS)' == 'Windows_NT'">true</BuildPdb>

      <BuildPerfMap>false</BuildPerfMap>
      <BuildPerfMap Condition="'$(TargetOS)' == 'Linux'">true</BuildPerfMap>
    </PropertyGroup>

    <PropertyGroup>
      <CrossDir></CrossDir>
      <CrossDir Condition="'$(TargetArchitecture)' == 'arm64'">x64</CrossDir>
      <CrossDir Condition="'$(TargetArchitecture)' == 'arm'">x86</CrossDir>
      <CrossDir Condition="'$(TargetArchitecture)' == 'arm' and '$(OS)' != 'Windows_NT'">x64</CrossDir>
      <CrossDir Condition="'$(TargetArchitecture)' == 'x86' and '$(BuildArchitecture)' != 'x86' and '$(OS)' != 'Windows_NT'">$(BuildArchitecture)</CrossDir>
      <CrossGenExe>$(BinDir)\$(CrossDir)\crossgen$(ExeExtension)</CrossGenExe>
    </PropertyGroup>

    <MakeDir
      Directories="$(BinDir);$(IntermediatesDir);$(LogsDir)" />

    <Message Importance="High"
      Text="Generating native image of System.Private.CoreLib for $(OSPlatformConfig). Logging to $(CrossGenCoreLibLog)" />

    <PropertyGroup>
      <CrossGenCmd>$(CrossGenExe)</CrossGenCmd>
      <CrossGenCmd>$(CrossGenCmd) /nologo</CrossGenCmd>
      <CrossGenCmd>$(CrossGenCmd) <!-- IbcTuning --></CrossGenCmd>
      <CrossGenCmd>$(CrossGenCmd) /Platform_Assemblies_Paths "$(BinDir)\IL"</CrossGenCmd>

      <CrossGenDllCmd>$(CrossGenCmd) /out "$(CoreLibOutputPath)"</CrossGenDllCmd> 
      <CrossGenDllCmd>$(CrossGenDllCmd) "$(BinDir)\IL\$(CoreLibAssemblyName).dll"</CrossGenDllCmd>
    </PropertyGroup>
    
    <PropertyGroup Condition="$(BuildPerfMap)">
      <CrossGenPerfMapCmd>$(CrossGenCmd) /CreatePerfMap "$(BinDir)"</CrossGenPerfMapCmd>
      <CrossGenPerfMapCmd>$(CrossGenPerfMapCmd) "$(CoreLibOutputPath)"</CrossGenPerfMapCmd>
    </PropertyGroup>
    
    <PropertyGroup Condition="$(BuildPdb)">
      <VsSetupCmd>call $(RepoRoot)\src\coreclr\setup_vs_tools.cmd</VsSetupCmd>
      <CrossGenPdbCmd>$(VsSetupCmd) &amp;&amp; $(CrossGenCmd) /CreatePdb "$(BinDir)\PDB"</CrossGenPdbCmd>
      <CrossGenPdbCmd>$(CrossGenPdbCmd) "$(CoreLibOutputPath)"</CrossGenPdbCmd>
    </PropertyGroup>
    
    <Message Importance="High" Text="$(CrossGenDllCmd)" />
    
    <Exec Command="$(CrossGenDllCmd)" />

    <Message Condition="$(BuildPdb)" Importance="High" Text="$(CrossGenPdbCmd)" />

    <Exec Condition="$(BuildPdb)" Command="$(CrossGenPdbCmd)" />

    <Message Condition="$(BuildPerfMap)" Importance="High" Text="$(CrossGenPerfMapCmd)" />

    <Exec Condition="$(BuildPerfMap)" Command="$(CrossGenPerfMapCmd)" />

    <Message Importance="High" Text="Crossgenning of System.Private.CoreLib succeeded.  Finished at $(TIME)" />
    <Message Importance="High" Text="Product binaries are available at $(BinDir)" />
  </Target>

  <Target Name="Restore" />
  <Target Name="Test" />
  <Target Name="Pack" />
</Project>
