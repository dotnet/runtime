<Project>

  <!-- This file contains build properties that apply to product
       projects and test projects. It's imported by
       tests/dir.common.props, and the global dir.props. -->

  <PropertyGroup>
    <CoreclrDir>$(MSBuildThisFileDirectory)</CoreclrDir>
  </PropertyGroup>

  <!-- Set default Configuration and Platform -->
  <PropertyGroup>
    <BuildArch>$(__BuildArch)</BuildArch>
    <BuildArch Condition="'$(BuildArch)' == ''">$(TargetArchitecture)</BuildArch>
    <BuildArch Condition="'$(BuildArch)'==''">x64</BuildArch>
    <BuildArch Condition="'$(BuildArch)' == 'amd64'">x64</BuildArch>

    <BuildType>$(__BuildType)</BuildType>
    <BuildType Condition="'$(BuildType)'==''">Debug</BuildType>
    <BuildType Condition="'$(BuildType)' == 'debug'">Debug</BuildType>
    <BuildType Condition="'$(BuildType)' == 'release'">Release</BuildType>
    <BuildType Condition="'$(BuildType)' == 'checked'">Checked</BuildType>

    <!-- TODO: converge on one property for TargetOS and __TargetOS (and similar), and remove these extra lines. -->
    <__TargetOS>$(TargetOS)</__TargetOS>
    <__BuildArch>$(BuildArch)</__BuildArch>

    <Configuration Condition="'$(Configuration)' == ''">$(BuildType)</Configuration>
    <Platform Condition="'$(Platform)' == ''">$(BuildArch)</Platform>

    <PlatformConfigPathPart>$(TargetOS).$(BuildArch).$(BuildType)</PlatformConfigPathPart>
  </PropertyGroup>

  <!-- Common properties -->
  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>

    <BaseIntermediateOutputPath>$(RepoRoot)artifacts\obj\coreclr\$(MSBuildProjectName)\</BaseIntermediateOutputPath>

    <SourceDir>$(ProjectDir)src\</SourceDir>
    <BinDir>$(ArtifactsDir)bin\coreclr\$(PlatformConfigPathPart)\</BinDir>

    <!-- We don't append back slash because this path is used by nuget.exe as output directory and it
         fails to write packages to it if the path contains the forward slash.
    -->
    <PackagesBinDir>$(BinDir).nuget\</PackagesBinDir>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Central place to set the versions of all nuget packages produced in the repo -->
    <PackageVersion Condition="'$(PackageVersion)' == ''">5.0.0</PackageVersion>

    <!-- Set the boolean below to true to generate packages with stabilized versions -->
    <StabilizePackageVersion Condition="'$(StabilizePackageVersion)' == ''">false</StabilizePackageVersion>
    <StableVersion Condition="'$(StabilizePackageVersion)' == 'true' and '$(StableVersion)' == ''">$(PackageVersion)</StableVersion>
  </PropertyGroup>

  <!-- Set up common target properties that we use to conditionally include sources -->
  <PropertyGroup>
    <TargetsFreeBSD Condition="'$(TargetOS)' == 'FreeBSD'">true</TargetsFreeBSD>
    <TargetsLinux Condition="'$(TargetOS)' == 'Linux'">true</TargetsLinux>
    <TargetsNetBSD Condition="'$(TargetOS)' == 'NetBSD'">true</TargetsNetBSD>
    <TargetsOSX Condition="'$(TargetOS)' == 'OSX'">true</TargetsOSX>
    <TargetsWindows Condition="'$(TargetOS)' == 'Windows_NT'">true</TargetsWindows>

    <TargetsUnix Condition="'$(TargetsFreeBSD)' == 'true' or '$(TargetsLinux)' == 'true' or '$(TargetsNetBSD)' == 'true' or '$(TargetsOSX)' == 'true'">true</TargetsUnix>

    <!-- We are only tracking Linux Distributions for Nuget RID mapping -->
    <DistroRid Condition="'$(TargetsLinux)' == 'true'">$(__DistroRid)</DistroRid>

    <!-- Folder for cross target components -->
    <CrossTargetComponentFolder Condition="'$(BuildArch)' == 'arm64'">x64</CrossTargetComponentFolder>
    <CrossTargetComponentFolder Condition="'$(BuildArch)' == 'arm' and '$(TargetsWindows)' == 'true'">x86</CrossTargetComponentFolder>
    <CrossTargetComponentFolder Condition="'$(BuildArch)' == 'arm' and '$(TargetsLinux)' == 'true'">x64</CrossTargetComponentFolder>
  </PropertyGroup>

  <!-- Set the kind of PDB to Portable -->
  <PropertyGroup>
    <DebugType Condition="'$(DebugType)' == ''">Portable</DebugType>
  </PropertyGroup>

  <!-- Output paths -->
  <PropertyGroup>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <!-- Provides properties for dependency versions and configures dependency verification/auto-upgrade. -->
  <Import Project="$(MSBuildThisFileDirectory)dependencies.props" />
</Project>
