<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- NuGet package restore sources. -->
  <PropertyGroup>
    <RestoreSources Condition="'$(DotNetBuildOffline)' != 'true'">
      https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json;
      https://dotnetfeed.blob.core.windows.net/dotnet-coreclr/index.json;
      https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;
      https://api.nuget.org/v3/index.json;
      $(RestoreSources)
    </RestoreSources>
  </PropertyGroup>

  <Import Project="eng/Versions.props" />

  <PropertyGroup>
    <!-- Central place to set the versions of all nuget packages produced in the repo -->
    <PackageVersion Condition="'$(PackageVersion)' == ''">3.0.0</PackageVersion>

    <!-- Set the boolean below to true to generate packages with stabilized versions -->
    <StabilizePackageVersion Condition="'$(StabilizePackageVersion)' == ''">false</StabilizePackageVersion>
    <StableVersion Condition="'$(StabilizePackageVersion)' == 'true' and '$(StableVersion)' == ''">$(PackageVersion)</StableVersion>

    <PreReleaseLabel>preview5</PreReleaseLabel>
  </PropertyGroup>

  <!-- Source of truth for dependency tooling: the commit hash of the dotnet/versions master branch as of the last auto-upgrade. -->
  <PropertyGroup>
    <CoreClrCurrentRef>23829a234ac49c614ad350276af9e13ba8a481c0</CoreClrCurrentRef>
    <BuildToolsCurrentRef>79eb261c83005ea1c93c7861d374d1dd16a07353</BuildToolsCurrentRef>
  </PropertyGroup>

  <!-- Tests/infrastructure dependency versions. -->
  <PropertyGroup>
    <MicrosoftNETCoreRuntimeCoreCLRPackageVersion>3.0.0-preview5-27605-73</MicrosoftNETCoreRuntimeCoreCLRPackageVersion>
    <XunitPackageVersion>2.4.1</XunitPackageVersion>
    <XunitPerformanceApiPackageVersion>1.0.0-beta-build0015</XunitPerformanceApiPackageVersion>
    <MicrosoftDiagnosticsTracingTraceEventPackageVersion>2.0.36</MicrosoftDiagnosticsTracingTraceEventPackageVersion>
    <IbcMergePackageVersion>4.6.0-alpha-00001</IbcMergePackageVersion>
    <CommandLineParserVersion>2.2.0</CommandLineParserVersion>

    <!-- Scenario tests install this version of Microsoft.NetCore.App, then patch coreclr binaries via xcopy. At the moment it is
         updated manually whenever breaking changes require it to move forward, but it would be nice if we could update it automatically
         as we do with many of the package versions above -->
    <BaselineMicrosoftNetCoreAppPackageVersion>2.1.0-preview3-26416-01</BaselineMicrosoftNetCoreAppPackageVersion>
  </PropertyGroup>

  <!-- Package dependency verification/auto-upgrade configuration. -->
  <PropertyGroup>
    <BaseDotNetBuildInfo>build-info/dotnet/</BaseDotNetBuildInfo>
    <DependencyBranch>master</DependencyBranch>
    <CurrentRefXmlPath>$(MSBuildThisFileFullPath)</CurrentRefXmlPath>
  </PropertyGroup>

  <!-- ILLink.Tasks package version -->
  <PropertyGroup>
    <ILLinkTasksPackage>ILLink.Tasks</ILLinkTasksPackage>
    <ILLinkTasksPackageVersion>0.1.5-preview-1461378</ILLinkTasksPackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <RemoteDependencyBuildInfo Include="CoreClr">
      <BuildInfoPath>$(BaseDotNetBuildInfo)coreclr/$(DependencyBranch)</BuildInfoPath>
      <CurrentRef>$(CoreClrCurrentRef)</CurrentRef>
    </RemoteDependencyBuildInfo>
    <RemoteDependencyBuildInfo Include="BuildTools">
      <BuildInfoPath>$(BaseDotNetBuildInfo)buildtools/$(DependencyBranch)</BuildInfoPath>
      <CurrentRef>$(BuildToolsCurrentRef)</CurrentRef>
    </RemoteDependencyBuildInfo>
    
    <DependencyBuildInfo Include="@(RemoteDependencyBuildInfo)">
      <RawVersionsBaseUrl>https://raw.githubusercontent.com/dotnet/versions</RawVersionsBaseUrl>
    </DependencyBuildInfo>

    <XmlUpdateStep Include="CoreClr">
      <Path>$(MSBuildThisFileFullPath)</Path>
      <ElementName>MicrosoftNETCoreRuntimeCoreCLRPackageVersion</ElementName>
      <PackageId>Microsoft.NETCore.Runtime.CoreCLR</PackageId>
    </XmlUpdateStep>
    <UpdateStep Include="BuildTools">
      <UpdaterType>File</UpdaterType>
      <Path>$(MSBuildThisFileDirectory)BuildToolsVersion.txt</Path>
      <PackageId>Microsoft.DotNet.BuildTools</PackageId>
    </UpdateStep>
    <UpdateStep Include="ILAsm">
      <UpdaterType>File</UpdaterType>
      <Path>$(MSBuildThisFileDirectory)ILAsmVersion.txt</Path>
      <PackageId>Microsoft.NETCore.ILAsm</PackageId>
    </UpdateStep>
  </ItemGroup>

  <!-- Set up dependencies on packages that aren't found in a BuildInfo. -->
  <ItemGroup>
    <XUnitDependency Include="xunit"/>
    <XUnitDependency Include="xunit.assert"/>
    <XUnitDependency Include="xunit.core"/>
    <XUnitDependency Include="xunit.extensibility.core" />
    <XUnitDependency Include="xunit.runner.console"/>
    <XUnitDependency Include="xunit.runner.msbuild"/>
    <XUnitDependency Include="xunit.runner.utility"/>
    <StaticDependency Include="@(XUnitDependency)">
      <Version>$(XunitPackageVersion)</Version>
    </StaticDependency>

    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.analysis" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.analysis.cli" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.metrics" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.run.core" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.runner.cli" />
    <XunitPerformanceDependency Include="Microsoft.DotNet.xunit.performance.runner.Windows" />
    <StaticDependency Include="@(XunitPerformanceDependency)">
      <Version>1.0.0-alpha-build0040</Version>
    </StaticDependency>

    <XUnitPerformanceApiDependency Include="xunit.performance.api" />
    <XUnitPerformanceApiDependency Include="xunit.performance.core" />
    <XUnitPerformanceApiDependency Include="xunit.performance.execution" />
    <XUnitPerformanceApiDependency Include="xunit.performance.metrics" />
    <StaticDependency Include="@(XUnitPerformanceApiDependency)">
      <Version>$(XunitPerformanceApiPackageVersion)</Version>
    </StaticDependency>

    <DependencyBuildInfo Include="@(StaticDependency)">
      <PackageId>%(Identity)</PackageId>
      <UpdateStableVersions>true</UpdateStableVersions>
    </DependencyBuildInfo>
  </ItemGroup>

  <!-- Override isolated build dependency versions with versions from Repo API. -->
  <Import Project="$(DotNetPackageVersionPropsPath)"
          Condition="'$(DotNetPackageVersionPropsPath)' != ''" />

</Project>
