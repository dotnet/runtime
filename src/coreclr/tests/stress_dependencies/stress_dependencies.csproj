<Project Sdk="Microsoft.NET.Sdk" >
  <PropertyGroup>
    <CLRTestKind>BuildOnly</CLRTestKind>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <IsTestProject>false</IsTestProject>
    <RuntimeIdentifiers>win-x64;ubuntu.14.04-x64;osx.10.10-x64;win-x86;ubuntu.14.04-x86;osx.10.10-x86</RuntimeIdentifiers>
    <MicrosoftNETCoreCoreDisToolsPackageName>Microsoft.NETCore.CoreDisTools</MicrosoftNETCoreCoreDisToolsPackageName>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="$(MicrosoftNETCoreCoreDisToolsPackageName)" GeneratePathProperty="True">
      <Version>1.0.1-prerelease-*</Version>
    </PackageReference>
  </ItemGroup>

  <!--                                                                       -->
  <!-- Target: DumpCoreDisToolsPackagePath                                   -->
  <!--                                                                       -->
  <!-- Notes:                                                                -->
  <!--                                                                       -->
  <!-- DumpCoreDisToolsPackagePath is used by setup-stress-dependencies.cmd  -->
  <!-- and setup-stress-dependencies.sh to get the path to coredistools.dll  -->
  <!-- for stress testing. The task will write a file to be read back by     -->
  <!-- setup-stress-dependencies.cmd/sh. The path for the file is:           -->
  <!-- $(CoreDisToolsPackagePathOutputFile)                                  -->
  <!--                                                                       -->
  <Target Name="DumpCoreDisToolsPackagePath">
    <!-- Error if PgoDataPackagePathOutputFile is not set. -->
    <Error Condition="'$(CoreDisToolsPackagePathOutputFile)'==''" Text="CoreDisToolsPackagePathOutputFile must be passed as a property." />
    <Error Condition="'$(PkgMicrosoft_NETCore_CoreDisTools)' == ''" Text="CoreDisTools package path not found!" />
    <Error Condition="'$(RuntimeIdentifier)' == ''" Text="Unable to locate correct CoreDisTools without a runtime identifier. Please pass in the runtime identifier via the RuntimeIdentifier property." />

    <PropertyGroup>
      <CoreDisToolsPackageVersion>$([System.IO.Path]::GetFileName('$(PkgMicrosoft_NETCore_CoreDisTools)'))</CoreDisToolsPackageVersion>
      <!-- The CoreDisTools package's rid-specific assets are an older, pinned version for non-Windows platforms. So we hardcode that here so we avoid parsing JSON in MSBuild. -->
      <CoreDisToolsPackageVersion Condition="!$([MSBuild]::IsOSPlatform(Windows))">1.0.1-prerelease-00002</CoreDisToolsPackageVersion>
      <CoreDisToolsPackageNameLowercase>$(MicrosoftNETCoreCoreDisToolsPackageName.ToLower())</CoreDisToolsPackageNameLowercase>
      <CoreDisToolsPackagePath>$([MSBuild]::NormalizePath($(PkgMicrosoft_NETCore_CoreDisTools),../../,runtime.$(RuntimeIdentifier).$(CoreDisToolsPackageNameLowercase),$(CoreDisToolsPackageVersion)))</CoreDisToolsPackagePath>
    </PropertyGroup>

    <Error Condition="!Exists('$(CoreDisToolsPackagePath)')" Text="Unable to locate restored CoreDisTools package. Maybe the platform-specific package naming changed or there is not a version available for rid $(RuntimeIdentifier)?" />

    <!-- Cleanup old version file -->
    <Delete Files="$(CoreDisToolsPackagePathOutputFile)" Condition="Exists('$(CoreDisToolsPackagePathOutputFile)')" />

    <WriteLinesToFile File="$(CoreDisToolsPackagePathOutputFile)" Lines="$(CoreDisToolsPackagePath)" Overwrite="true"/>
    <Message Text="Microsoft.NETCore.CoreDisTools Package path: $(CoreDisToolsPackagePath) written to: $(CoreDisToolsPackagePathOutputFile)" />
  </Target>

</Project>
