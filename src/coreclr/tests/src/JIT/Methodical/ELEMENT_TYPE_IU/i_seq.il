// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

//
//
.assembly extern mscorlib
{ }
.assembly 'test'
{ }
.class private auto ansi Test extends [mscorlib]System.Object
{
.method private hidebysig static native int calc(native int, native int) il managed
{
	.maxstack 8
	.locals (native int)
	ldarg.1
	stloc.0
	ldloc.0
	br again
again:
	ldarg.0
	brfalse.s stop
	ldarg.0
	ldarg.1
	switch (sum,fact)
	pop
	br stop
sum:
	add
	br.s cont
fact:
	mul
cont:
	ldarg.0
	ldc.i4.1
	sub
	starg 0
	br again
stop:
	ret
}

.method private hidebysig static int32 Main() il managed
{
	.entrypoint
	.maxstack  5
	ldc.i4.s 6
	ldc.i4.1
	call native int Test::calc(native int, native int)
	ldc.i4 720
	conv.i
	ceq
	brfalse ERROR
	ldc.i4.s 6
	ldc.i4.0
	call native int Test::calc(native int, native int)
	ldc.i4 21
	conv.i
	ceq
	brfalse ERROR
	ldc.i4 0x64
	ldstr "PASSED"
	br EXIT
ERROR:
	ldc.i4.1
	ldstr "FAILED"
EXIT:
	call void [mscorlib]System.Console::WriteLine(class [mscorlib]System.String)
	ret
}
.method public hidebysig specialname rtspecialname 
        instance void .ctor() il managed
{
	.maxstack  8
	ldarg.0
	call       instance void [mscorlib]System.Object::.ctor()
	ret
}
}
