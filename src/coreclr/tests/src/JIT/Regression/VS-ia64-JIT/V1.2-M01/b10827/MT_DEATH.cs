// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//

using System;
using System.Threading;
class testout1
{

    public int sum = 0;
    bool _field_bool;
    bool sfb_false;
    bool sfb_true;
    bool mfb;
    bool mfb_false;
    bool mfb_true;
    bool simple_func_bool()
    {
        return true;
    }
    bool func_sb_true()
    {
        return true;
    }
    bool func_sb_false()
    {
        return false;
    }

    void Sub_Funclet_0()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && true ? true : true) True_Sum++; else False_Sum++;
        if (true && true ? true : false) True_Sum++; else False_Sum++;
        if (true && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? false : true) True_Sum++; else False_Sum++;
        if (true && true ? false : false) True_Sum++; else False_Sum++;
        if (true && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_1()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_2()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_3()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? true : true) True_Sum++; else False_Sum++;
        if (true && false ? true : false) True_Sum++; else False_Sum++;
        if (true && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? false : true) True_Sum++; else False_Sum++;
        if (true && false ? false : false) True_Sum++; else False_Sum++;
        if (true && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_4()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_5()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_6()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_7()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_8()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_9()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_10()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_11()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_12()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_13()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_14()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_15()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_16()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_17()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_18()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_19()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_20()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_21()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_22()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_23()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_24()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_25()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_26()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_27()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_28()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_29()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_30()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_31()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_32()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_33()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_34()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_35()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_36()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_37()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_38()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (true && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (true && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? true : true) True_Sum++; else False_Sum++;
        if (false && true ? true : false) True_Sum++; else False_Sum++;
        if (false && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? false : true) True_Sum++; else False_Sum++;
        if (false && true ? false : false) True_Sum++; else False_Sum++;
        if (false && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_39()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_40()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_41()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? true : true) True_Sum++; else False_Sum++;
        if (false && false ? true : false) True_Sum++; else False_Sum++;
        if (false && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_42()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && false ? false : true) True_Sum++; else False_Sum++;
        if (false && false ? false : false) True_Sum++; else False_Sum++;
        if (false && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_43()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_44()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_45()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_46()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_47()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_48()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_49()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_50()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_51()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_52()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_53()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_54()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_55()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_56()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_57()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_58()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_59()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_60()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_61()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_62()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_63()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_64()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_65()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_66()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_67()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_68()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_69()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_70()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_71()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_72()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_73()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_74()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_75()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_76()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (false && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (false && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_77()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_78()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_79()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_80()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && false ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_81()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_82()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_83()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_84()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_85()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_86()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_87()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_88()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_89()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_90()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_91()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_92()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_93()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_94()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_95()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_96()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_97()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_98()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_99()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_100()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_101()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_102()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_103()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_104()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_105()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_106()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_107()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_108()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_109()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_110()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_111()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_112()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_113()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_114()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_115()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_true && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_true && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_116()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_117()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_118()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_119()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_120()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_121()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_122()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_123()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_124()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_125()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_126()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_127()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_128()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_129()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_130()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_131()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_132()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_133()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_134()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_135()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_136()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_137()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_138()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_139()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_140()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_141()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_142()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_143()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_144()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_145()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_146()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_147()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_148()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_149()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_150()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_151()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_152()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_153()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (lb_false && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (lb_false && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_154()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_155()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_156()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_157()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_158()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_159()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_160()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_161()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_162()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_163()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_164()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_165()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_166()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_167()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_168()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_169()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_170()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_171()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_172()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_173()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_174()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_175()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_176()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_177()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_178()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_179()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_180()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_181()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_182()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_183()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_184()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_185()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_186()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_187()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_188()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_189()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_190()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_191()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_true && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_true && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_192()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_193()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_194()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_195()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_196()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_197()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_198()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_199()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_200()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_201()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_202()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_203()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_204()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_205()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_206()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_207()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_208()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_209()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_210()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_211()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_212()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_213()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_214()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_215()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_216()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_217()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_218()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_219()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_220()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_221()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_222()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_223()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_224()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_225()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_226()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_227()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_228()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_229()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_230()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (sfb_false && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (sfb_false && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_231()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_232()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_233()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_234()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_235()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_236()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_237()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_238()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_239()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_240()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_241()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_242()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_243()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_244()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_245()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_246()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_247()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_248()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_249()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_250()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_251()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_252()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_253()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_254()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_255()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_256()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_257()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_258()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_259()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_260()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_261()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_262()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_263()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_264()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_265()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_266()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_267()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_268()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_true && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_269()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_270()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_271()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_272()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_273()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_274()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_275()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_276()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_277()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_278()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_279()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_280()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_281()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_282()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_283()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_284()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_285()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_286()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_287()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_288()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_289()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_290()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_291()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_292()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_293()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_294()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_295()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_296()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_297()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_298()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_299()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_300()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_301()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_302()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_303()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_304()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_305()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_306()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_307()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (t1_i.mfb_false && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_308()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_309()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_310()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_311()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_312()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_313()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_314()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_315()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_316()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_317()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_318()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_319()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_320()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_321()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_322()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_323()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_324()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_325()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_326()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_327()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_328()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_329()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_330()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_331()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_332()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_333()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_334()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_335()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_336()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_337()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_338()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_339()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_340()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_341()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_342()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_343()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_344()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_345()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_true() && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_346()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_347()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_348()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_349()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_350()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_351()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_352()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_353()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_354()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_355()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_356()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_357()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_358()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_359()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_360()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_361()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_362()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_363()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_364()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_365()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_366()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_367()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_368()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_369()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_370()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_371()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_372()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_373()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_374()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_375()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_376()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_377()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_378()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_379()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_380()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_381()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_382()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_383()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (func_sb_false() && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_384()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && true ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_385()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_386()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_387()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_388()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_389()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_390()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_391()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_392()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_393()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_394()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_395()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_396()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_397()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_398()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_399()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_400()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_401()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_402()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_403()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_404()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_405()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_406()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_407()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_408()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_409()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_410()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_411()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_412()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_413()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_414()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_415()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_416()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_417()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_418()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_419()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_420()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_421()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_422()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_true[index] && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_423()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_424()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_425()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_426()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && false ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_427()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_428()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_429()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_430()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_431()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_432()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_433()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_434()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_435()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && lb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && lb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_436()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_437()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_438()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_439()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_440()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_441()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && sfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && sfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_442()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_true ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_443()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_444()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_true ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_445()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_false ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_446()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_447()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && t1_i.mfb_false ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_448()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_true() ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_449()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_true() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_450()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_451()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_true() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? false : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_452()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_false() ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_453()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_454()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && func_sb_false() ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_455()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_true[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_456()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_457()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_true[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? true : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_458()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_false[index] ? false : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? false : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? local_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : _field_bool) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_459()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_false[index] ? _field_bool : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? _field_bool : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? t1_i.mfb : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? simple_func_bool() : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    void Sub_Funclet_460()
    {
        int True_Sum = 0;
        int False_Sum = 0;
        int index = 1;
        bool local_bool = true;
        bool lb_false = false;
        bool lb_true = true;
        testout1 t1_i = new testout1();
        bool[] ab_false = new bool[3];
        bool[] ab_true = new bool[3];
        ab_true[0] = true;
        ab_true[1] = true;
        ab_true[2] = true;

        _field_bool = true;
        sfb_false = false;
        sfb_true = true;

        t1_i.mfb = true;
        t1_i.mfb_false = false;
        t1_i.mfb_true = true;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_true[index] : ab_false[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : true) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : false) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : local_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : _field_bool) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : t1_i.mfb) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : simple_func_bool()) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : ab_true[index]) True_Sum++; else False_Sum++;
        if (ab_false[index] && ab_false[index] ? ab_false[index] : ab_false[index]) True_Sum++; else False_Sum++;
        sum += (True_Sum * 2) - False_Sum; return;
    }
    public void Fire()
    {
        int temp = sum;
        sum = 0;
        switch (temp)
        {
            case 0:
                Sub_Funclet_0();
                Sub_Funclet_1();
                Sub_Funclet_2();
                Sub_Funclet_3();
                Sub_Funclet_4();
                Sub_Funclet_5();
                Sub_Funclet_6();
                Sub_Funclet_7();
                Sub_Funclet_8();
                Sub_Funclet_9();
                Sub_Funclet_10();
                Sub_Funclet_11();
                Sub_Funclet_12();
                Sub_Funclet_13();
                Sub_Funclet_14();
                Sub_Funclet_15();
                Sub_Funclet_16();
                Sub_Funclet_17();
                Sub_Funclet_18();
                Sub_Funclet_19();
                Sub_Funclet_20();
                break;
            case 1:
                Sub_Funclet_21();
                Sub_Funclet_22();
                Sub_Funclet_23();
                Sub_Funclet_24();
                Sub_Funclet_25();
                Sub_Funclet_26();
                Sub_Funclet_27();
                Sub_Funclet_28();
                Sub_Funclet_29();
                Sub_Funclet_30();
                Sub_Funclet_31();
                Sub_Funclet_32();
                Sub_Funclet_33();
                Sub_Funclet_34();
                Sub_Funclet_35();
                Sub_Funclet_36();
                Sub_Funclet_37();
                Sub_Funclet_38();
                Sub_Funclet_39();
                Sub_Funclet_40();
                break;
            case 2:

                Sub_Funclet_41();
                Sub_Funclet_42();
                Sub_Funclet_43();
                Sub_Funclet_44();
                Sub_Funclet_45();
                Sub_Funclet_46();
                Sub_Funclet_47();
                Sub_Funclet_48();
                Sub_Funclet_49();
                Sub_Funclet_50();
                Sub_Funclet_51();
                Sub_Funclet_52();
                Sub_Funclet_53();
                Sub_Funclet_54();
                Sub_Funclet_55();
                Sub_Funclet_56();
                Sub_Funclet_57();
                Sub_Funclet_58();
                Sub_Funclet_59();
                Sub_Funclet_60();
                break;
            case 3:

                Sub_Funclet_61();
                Sub_Funclet_62();
                Sub_Funclet_63();
                Sub_Funclet_64();
                Sub_Funclet_65();
                Sub_Funclet_66();
                Sub_Funclet_67();
                Sub_Funclet_68();
                Sub_Funclet_69();
                Sub_Funclet_70();
                Sub_Funclet_71();
                Sub_Funclet_72();
                Sub_Funclet_73();
                Sub_Funclet_74();
                Sub_Funclet_75();
                Sub_Funclet_76();
                Sub_Funclet_77();
                Sub_Funclet_78();
                Sub_Funclet_79();
                Sub_Funclet_80();
                break;
            case 4:

                Sub_Funclet_81();
                Sub_Funclet_82();
                Sub_Funclet_83();
                Sub_Funclet_84();
                Sub_Funclet_85();
                Sub_Funclet_86();
                Sub_Funclet_87();
                Sub_Funclet_88();
                Sub_Funclet_89();
                Sub_Funclet_90();
                Sub_Funclet_91();
                Sub_Funclet_92();
                Sub_Funclet_93();
                Sub_Funclet_94();
                Sub_Funclet_95();
                Sub_Funclet_96();
                Sub_Funclet_97();
                Sub_Funclet_98();
                Sub_Funclet_99();
                Sub_Funclet_100();
                break;
            case 5:

                Sub_Funclet_101();
                Sub_Funclet_102();
                Sub_Funclet_103();
                Sub_Funclet_104();
                Sub_Funclet_105();
                Sub_Funclet_106();
                Sub_Funclet_107();
                Sub_Funclet_108();
                Sub_Funclet_109();
                Sub_Funclet_110();
                Sub_Funclet_111();
                Sub_Funclet_112();
                Sub_Funclet_113();
                Sub_Funclet_114();
                Sub_Funclet_115();
                Sub_Funclet_116();
                Sub_Funclet_117();
                Sub_Funclet_118();
                Sub_Funclet_119();
                Sub_Funclet_120();
                break;
            case 6:

                Sub_Funclet_121();
                Sub_Funclet_122();
                Sub_Funclet_123();
                Sub_Funclet_124();
                Sub_Funclet_125();
                Sub_Funclet_126();
                Sub_Funclet_127();
                Sub_Funclet_128();
                Sub_Funclet_129();
                Sub_Funclet_130();
                Sub_Funclet_131();
                Sub_Funclet_132();
                Sub_Funclet_133();
                Sub_Funclet_134();
                Sub_Funclet_135();
                Sub_Funclet_136();
                Sub_Funclet_137();
                Sub_Funclet_138();
                Sub_Funclet_139();
                Sub_Funclet_140();
                break;
            case 7:

                Sub_Funclet_141();
                Sub_Funclet_142();
                Sub_Funclet_143();
                Sub_Funclet_144();
                Sub_Funclet_145();
                Sub_Funclet_146();
                Sub_Funclet_147();
                Sub_Funclet_148();
                Sub_Funclet_149();
                Sub_Funclet_150();
                Sub_Funclet_151();
                Sub_Funclet_152();
                Sub_Funclet_153();
                Sub_Funclet_154();
                Sub_Funclet_155();
                Sub_Funclet_156();
                Sub_Funclet_157();
                Sub_Funclet_158();
                Sub_Funclet_159();
                Sub_Funclet_160();
                break;
            case 8:

                Sub_Funclet_161();
                Sub_Funclet_162();
                Sub_Funclet_163();
                Sub_Funclet_164();
                Sub_Funclet_165();
                Sub_Funclet_166();
                Sub_Funclet_167();
                Sub_Funclet_168();
                Sub_Funclet_169();
                Sub_Funclet_170();
                Sub_Funclet_171();
                Sub_Funclet_172();
                Sub_Funclet_173();
                Sub_Funclet_174();
                Sub_Funclet_175();
                Sub_Funclet_176();
                Sub_Funclet_177();
                Sub_Funclet_178();
                Sub_Funclet_179();
                Sub_Funclet_180();
                Sub_Funclet_181();
                Sub_Funclet_182();
                Sub_Funclet_183();
                Sub_Funclet_184();
                Sub_Funclet_185();
                Sub_Funclet_186();
                Sub_Funclet_187();
                Sub_Funclet_188();
                Sub_Funclet_189();
                Sub_Funclet_190();
                Sub_Funclet_191();
                Sub_Funclet_192();
                Sub_Funclet_193();
                Sub_Funclet_194();
                Sub_Funclet_195();
                Sub_Funclet_196();
                Sub_Funclet_197();
                Sub_Funclet_198();
                Sub_Funclet_199();
                Sub_Funclet_200();
                break;
            case 9:

                Sub_Funclet_201();
                Sub_Funclet_202();
                Sub_Funclet_203();
                Sub_Funclet_204();
                Sub_Funclet_205();
                Sub_Funclet_206();
                Sub_Funclet_207();
                Sub_Funclet_208();
                Sub_Funclet_209();
                Sub_Funclet_210();
                Sub_Funclet_211();
                Sub_Funclet_212();
                Sub_Funclet_213();
                Sub_Funclet_214();
                Sub_Funclet_215();
                Sub_Funclet_216();
                Sub_Funclet_217();
                Sub_Funclet_218();
                Sub_Funclet_219();
                Sub_Funclet_220();
                Sub_Funclet_221();
                Sub_Funclet_222();
                Sub_Funclet_223();
                Sub_Funclet_224();
                Sub_Funclet_225();
                Sub_Funclet_226();
                Sub_Funclet_227();
                Sub_Funclet_228();
                Sub_Funclet_229();
                Sub_Funclet_230();
                Sub_Funclet_231();
                Sub_Funclet_232();
                Sub_Funclet_233();
                Sub_Funclet_234();
                Sub_Funclet_235();
                Sub_Funclet_236();
                Sub_Funclet_237();
                Sub_Funclet_238();
                Sub_Funclet_239();
                Sub_Funclet_240();
                Sub_Funclet_241();
                Sub_Funclet_242();
                Sub_Funclet_243();
                Sub_Funclet_244();
                Sub_Funclet_245();
                Sub_Funclet_246();
                Sub_Funclet_247();
                Sub_Funclet_248();
                Sub_Funclet_249();
                Sub_Funclet_250();
                break;
            case 10:

                Sub_Funclet_251();
                Sub_Funclet_252();
                Sub_Funclet_253();
                Sub_Funclet_254();
                Sub_Funclet_255();
                Sub_Funclet_256();
                Sub_Funclet_257();
                Sub_Funclet_258();
                Sub_Funclet_259();
                Sub_Funclet_260();
                Sub_Funclet_261();
                Sub_Funclet_262();
                Sub_Funclet_263();
                Sub_Funclet_264();
                Sub_Funclet_265();
                Sub_Funclet_266();
                Sub_Funclet_267();
                Sub_Funclet_268();
                Sub_Funclet_269();
                Sub_Funclet_270();
                Sub_Funclet_271();
                Sub_Funclet_272();
                Sub_Funclet_273();
                Sub_Funclet_274();
                Sub_Funclet_275();
                Sub_Funclet_276();
                Sub_Funclet_277();
                Sub_Funclet_278();
                Sub_Funclet_279();
                Sub_Funclet_280();
                Sub_Funclet_281();
                Sub_Funclet_282();
                Sub_Funclet_283();
                Sub_Funclet_284();
                Sub_Funclet_285();
                Sub_Funclet_286();
                Sub_Funclet_287();
                Sub_Funclet_288();
                Sub_Funclet_289();
                Sub_Funclet_290();
                Sub_Funclet_291();
                Sub_Funclet_292();
                Sub_Funclet_293();
                Sub_Funclet_294();
                Sub_Funclet_295();
                Sub_Funclet_296();
                Sub_Funclet_297();
                Sub_Funclet_298();
                Sub_Funclet_299();
                Sub_Funclet_300();
                break;
            case 11:

                Sub_Funclet_301();
                Sub_Funclet_302();
                Sub_Funclet_303();
                Sub_Funclet_304();
                Sub_Funclet_305();
                Sub_Funclet_306();
                Sub_Funclet_307();
                Sub_Funclet_308();
                Sub_Funclet_309();
                Sub_Funclet_310();
                Sub_Funclet_311();
                Sub_Funclet_312();
                Sub_Funclet_313();
                Sub_Funclet_314();
                Sub_Funclet_315();
                Sub_Funclet_316();
                Sub_Funclet_317();
                Sub_Funclet_318();
                Sub_Funclet_319();
                Sub_Funclet_320();
                Sub_Funclet_321();
                Sub_Funclet_322();
                Sub_Funclet_323();
                Sub_Funclet_324();
                Sub_Funclet_325();
                Sub_Funclet_326();
                Sub_Funclet_327();
                Sub_Funclet_328();
                Sub_Funclet_329();
                Sub_Funclet_330();
                Sub_Funclet_331();
                Sub_Funclet_332();
                Sub_Funclet_333();
                Sub_Funclet_334();
                Sub_Funclet_335();
                Sub_Funclet_336();
                Sub_Funclet_337();
                Sub_Funclet_338();
                Sub_Funclet_339();
                Sub_Funclet_340();
                Sub_Funclet_341();
                Sub_Funclet_342();
                Sub_Funclet_343();
                Sub_Funclet_344();
                Sub_Funclet_345();
                Sub_Funclet_346();
                Sub_Funclet_347();
                Sub_Funclet_348();
                Sub_Funclet_349();
                Sub_Funclet_350();
                break;
            case 12:

                Sub_Funclet_351();
                Sub_Funclet_352();
                Sub_Funclet_353();
                Sub_Funclet_354();
                Sub_Funclet_355();
                Sub_Funclet_356();
                Sub_Funclet_357();
                Sub_Funclet_358();
                Sub_Funclet_359();
                Sub_Funclet_360();
                Sub_Funclet_361();
                Sub_Funclet_362();
                Sub_Funclet_363();
                Sub_Funclet_364();
                Sub_Funclet_365();
                Sub_Funclet_366();
                Sub_Funclet_367();
                Sub_Funclet_368();
                Sub_Funclet_369();
                Sub_Funclet_370();
                Sub_Funclet_371();
                Sub_Funclet_372();
                Sub_Funclet_373();
                Sub_Funclet_374();
                Sub_Funclet_375();
                Sub_Funclet_376();
                Sub_Funclet_377();
                Sub_Funclet_378();
                Sub_Funclet_379();
                Sub_Funclet_380();
                Sub_Funclet_381();
                Sub_Funclet_382();
                Sub_Funclet_383();
                Sub_Funclet_384();
                Sub_Funclet_385();
                Sub_Funclet_386();
                Sub_Funclet_387();
                Sub_Funclet_388();
                Sub_Funclet_389();
                Sub_Funclet_390();
                Sub_Funclet_391();
                Sub_Funclet_392();
                Sub_Funclet_393();
                Sub_Funclet_394();
                Sub_Funclet_395();
                Sub_Funclet_396();
                Sub_Funclet_397();
                Sub_Funclet_398();
                Sub_Funclet_399();
                Sub_Funclet_400();
                break;
            case 13:

                Sub_Funclet_401();
                Sub_Funclet_402();
                Sub_Funclet_403();
                Sub_Funclet_404();
                Sub_Funclet_405();
                Sub_Funclet_406();
                Sub_Funclet_407();
                Sub_Funclet_408();
                Sub_Funclet_409();
                Sub_Funclet_410();
                Sub_Funclet_411();
                Sub_Funclet_412();
                Sub_Funclet_413();
                Sub_Funclet_414();
                Sub_Funclet_415();
                Sub_Funclet_416();
                Sub_Funclet_417();
                Sub_Funclet_418();
                Sub_Funclet_419();
                Sub_Funclet_420();
                Sub_Funclet_421();
                Sub_Funclet_422();
                Sub_Funclet_423();
                Sub_Funclet_424();
                Sub_Funclet_425();
                Sub_Funclet_426();
                Sub_Funclet_427();
                Sub_Funclet_428();
                Sub_Funclet_429();
                Sub_Funclet_430();
                Sub_Funclet_431();
                Sub_Funclet_432();
                Sub_Funclet_433();
                Sub_Funclet_434();
                Sub_Funclet_435();
                Sub_Funclet_436();
                Sub_Funclet_437();
                Sub_Funclet_438();
                Sub_Funclet_439();
                Sub_Funclet_440();
                Sub_Funclet_441();
                Sub_Funclet_442();
                Sub_Funclet_443();
                Sub_Funclet_444();
                Sub_Funclet_445();
                Sub_Funclet_446();
                Sub_Funclet_447();
                Sub_Funclet_448();
                Sub_Funclet_449();
                Sub_Funclet_450();
                break;
            case 14:

                Sub_Funclet_451();
                Sub_Funclet_452();
                Sub_Funclet_453();
                Sub_Funclet_454();
                Sub_Funclet_455();
                Sub_Funclet_456();
                Sub_Funclet_457();
                Sub_Funclet_458();
                Sub_Funclet_459();
                Sub_Funclet_460();
                break;
            default:
                break;
        }

        return;
    }

    public static int Main()
    {
        int Sum = 0;
        Thread[] Thrd = new Thread[15];
        testout1[] Objs = new testout1[15];
        for (int i = 0; i < 15; i++)
        {
            Objs[i] = new testout1();
            Objs[i].sum = i;
            Thrd[i] = new Thread(new ThreadStart(Objs[i].Fire));
            Thrd[i].Start();
        }
        for (int i = 0; i < 15; i++)
        {
            Thrd[i].Join();
            Console.WriteLine("Tot " + i + " " + Objs[i].sum);
            Sum += Objs[i].sum;
        }

        if (Sum == 11520)
        {
            Console.WriteLine("PASSED");
            return 100;
        }
        else
        {
            Console.WriteLine("FAILED " + Sum);
            return 1;
        }

    }
}
