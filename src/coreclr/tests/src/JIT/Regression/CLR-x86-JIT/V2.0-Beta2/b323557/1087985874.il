// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

.assembly Test1 {}
.assembly extern mscorlib{auto}
.class FullProof {

.method static int32 Test() {
.maxstack 66
.zeroinit
.locals(int64 test10)
	 ldc.r8 1       //  1
         ckfinite       //  1
         ldc.r4 0       //  0 1
         ldc.r4 0       //  0 0 1
         ldc.i8 1       //  1 0 0 1
         conv.ovf.u8    //  1 0 0 1
         ldc.i4 1       //  1 1 0 0 1
         ldc.i4 0       //  0 1 1 0 0 1 
         ldc.i8 -1      // -1 0 1 1 0 0 1
         ldloc test10   // 0 -1 0 1 1 0 0 1
         ble.un IL_57   //  0 1 1 0 0 1
         add.ovf.un     //  1 1 0 0 1
         ldc.i4 5       //  5 1 1 0 0 1
IL_57:   shr.un         //  2 1 0 0 1
         shr.un         //  1 0 0 1
         pop            //  0 0 1
         pop            //  0 1
         cgt            //  1
         dup
         call void [mscorlib]System.Console::WriteLine(int32)
         ret
}

  .method public static int32  Main()
{
.entrypoint
.maxstack 3
        ldc.r4 1
        ldc.r8 0
        cgt
        call void [mscorlib]System.Console::WriteLine(int32)

        call int32 FullProof::Test()

	ldc.i4 1
	ceq
	brtrue.s PASS

FAIL:
	ldstr      "FAIL"
	call       void [mscorlib]System.Console::WriteLine(string)
	ldc.i4.0
	br.s       END
PASS:
	ldstr      "PASS"
	call       void [mscorlib]System.Console::WriteLine(string)
	ldc.i4     100
	br.s       END

END:

        ret
}

}

