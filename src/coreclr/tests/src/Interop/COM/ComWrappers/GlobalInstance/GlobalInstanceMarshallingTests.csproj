<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <ApplicationManifest>App.manifest</ApplicationManifest>
    <CLRTestScriptLocalCoreShim>true</CLRTestScriptLocalCoreShim>
    <RequiresMockHostPolicy>true</RequiresMockHostPolicy>
    <!-- Blocked on ILAsm supporting embedding resources. See https://github.com/dotnet/coreclr/issues/20819 -->
    <IlrtTestKind>BuildOnly</IlrtTestKind>
    <!-- Test unsupported outside of windows -->
    <TestUnsupportedOutsideWindows>true</TestUnsupportedOutsideWindows>
    <DisableProjectBuild Condition="'$(TargetsWindows)' != 'true'">true</DisableProjectBuild>
    <!-- This test would require the runincontext.exe to include App.manifest describing the COM interfaces -->
    <UnloadabilityIncompatible>true</UnloadabilityIncompatible>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Interop.settings.targets))" />
  <ItemGroup>
    <Compile Include="GlobalInstance.cs" />
    <Compile Include="GlobalInstance.Marshalling.cs" />
    <Compile Include="../Common.cs" />
    <Compile Include="../../ServerContracts/Server.Contracts.cs" />
    <Compile Include="../../ServerContracts/ServerGuids.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="../MockReferenceTrackerRuntime/CMakeLists.txt" />
    <ProjectReference Include="../../NativeServer/CMakeLists.txt" />
    <ProjectReference Include="../../NETServer/NETServer.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>Content</OutputItemType>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="CoreShim.X.manifest">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
