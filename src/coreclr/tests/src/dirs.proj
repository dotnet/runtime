<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="Directory.Build.props" />

  <Target Name="ResolveDisabledProjects" BeforeTargets="BuildAllProjects;CopyAllNativeTestProjectBinaries" >
    <PropertyGroup>
      <TestRoot>$(RepoRoot)src\tests\</TestRoot>
    </PropertyGroup>

    <ItemGroup>
      <DisabledProjects Include="$(TestRoot)TestWrappers*\**\*.csproj" />
      <DisabledProjects Include="$(TestRoot)*\**\cs_template.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\Coreclr.TestWrapper\Coreclr.TestWrapper.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\test_dependencies\test_dependencies.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\CoreFX\TestFileSetup\CoreFX.TestUtils.TestFileSetup.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\PerfHarness\PerfHarness.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\stress_dependencies\stress_dependencies.csproj" />
      <DisabledProjects Include="$(TestRoot)GC\Performance\Framework\GCPerfTestFramework.csproj" />
      <DisabledProjects Include="$(TestRoot)Performance\Scenario\JitBench\unofficial_dotnet\JitBench.csproj" /> <!-- no official build support for SDK-style netcoreapp2.0 projects -->
      <DisabledProjects Include="$(TestRoot)Loader\classloader\generics\regressions\DD117522\Test.csproj" />
      <DisabledProjects Include="$(TestRoot)Loader\classloader\generics\GenericMethods\VSW491668.csproj" /> <!-- issue 5501 -->
      <DisabledProjects Include="$(TestRoot)reflection\GenericAttribute\GenericAttributeTests.csproj" />
      <DisabledProjects Include="$(TestRoot)Common\ilasm\ilasm.ilproj" />
    </ItemGroup>

    <ItemGroup>
      <AllProjects Include="$(TestRoot)**\*.csproj" Exclude="@(DisabledProjects)" />
      <AllProjects Include="$(TestRoot)**\*.fsproj" Exclude="@(DisabledProjects)" />
      <AllProjects Include="$(TestRoot)**\*.ilproj" Exclude="@(DisabledProjects)" />
    </ItemGroup>

    <!-- All the test projects are partitioned into the test groups as defined below.
         Each of the test groups is meant to be built by a separate MSBuild invocation with specified $(__TestGroupToBuild) property. -->

    <ItemGroup Condition=" '$(CLRTestPriorityToBuild)' == '0' ">
      <!-- Group number k consists of all the test projects P such that _GroupStartsWith(k) <= P.Identity < _GroupStartsWith(k+1).
           In other words, ItemGroup _GroupStartsWith defines boundaries between the test groups. -->

      <!-- MSBuild does not allow specifying an item with empty identity but if it was possible Group number 1 would be defined as follows:

      <_GroupStartsWith Include="">
        <GroupNumber>1</GroupNumber>
      </_GroupStartsWith> -->

      <_GroupStartsWith Include="$(TestRoot)JIT\Methodical\Boxing\callconv\_relinstance_il.ilproj">
        <GroupNumber>2</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Regression\CLR-x86-JIT\V1-M12-Beta2\b35351\b35351.ilproj">
        <GroupNumber>3</GroupNumber>
      </_GroupStartsWith>
    </ItemGroup>

    <Error Condition=" '$(CLRTestPriorityToBuild)' == '0' And ($(__TestGroupToBuild) &lt; 1 Or $(__TestGroupToBuild) &gt; 3) " Text="__TestGroupToBuild property must be between 1 and 3 for Pri0." />

    <ItemGroup Condition=" '$(CLRTestPriorityToBuild)' == '1' ">
      <!-- See above for explanation.
      <_GroupStartsWith Include="">
        <GroupNumber>1</GroupNumber>
      </_GroupStartsWith> -->

      <_GroupStartsWith Include="$(TestRoot)JIT\CodeGenBringUpTests\DblNeg_ro.csproj">
        <GroupNumber>2</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Directed\shift\uint32_d.csproj">
        <GroupNumber>3</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Methodical\AsgOp\r8\r8flat_cs_r.csproj">
        <GroupNumber>4</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Methodical\eh\finallyexec\tryCatchFinallyThrow_nonlocalexit4_ro.csproj">
        <GroupNumber>5</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Regression\CLR-x86-JIT\V1-M09.5-PDC\b25701\b25701.ilproj">
        <GroupNumber>6</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\Regression\JitBlue\GitHub_19171\GitHub_19171.csproj">
        <GroupNumber>7</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)JIT\jit64\valuetypes\nullable\box-unbox\value\box-unbox-value030.csproj">
        <GroupNumber>8</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)Loader\classloader\TypeGeneratorTests\TypeGeneratorTest225\Generated225.ilproj">
        <GroupNumber>9</GroupNumber>
      </_GroupStartsWith>

      <_GroupStartsWith Include="$(TestRoot)Loader\classloader\generics\VSD\Class2_ImplicitOverrideVirtualNewslot.csproj">
        <GroupNumber>10</GroupNumber>
      </_GroupStartsWith>
    </ItemGroup>

    <Error Condition=" '$(CLRTestPriorityToBuild)' == '1' And ($(__TestGroupToBuild) &lt; 1 Or $(__TestGroupToBuild) &gt; 10)" Text="__TestGroupToBuild property must be between 1 and 10 for Pri1." />

    <PropertyGroup>
      <!-- This computes lower inclusive and upper exclusive boundaries for Group number $(__TestGroupToBuild). -->
      <_GroupStartsWith>@(_GroupStartsWith->WithMetadataValue("GroupNumber", $(__TestGroupToBuild)))</_GroupStartsWith>
      <_GroupEndsWithExcl>@(_GroupStartsWith->WithMetadataValue("GroupNumber", $([MSBuild]::Add($(__TestGroupToBuild), 1))))</_GroupEndsWithExcl>
    </PropertyGroup>

    <ItemGroup>
      <AllProjects>
        <InGroup>True</InGroup>
      </AllProjects>

      <AllProjects Condition=" '$(_GroupStartsWith)' != '' And $([System.StringComparer]::Ordinal.Compare($(_GroupStartsWith), %(Identity))) &gt; 0 ">
        <InGroup>False</InGroup>
      </AllProjects>

      <AllProjects Condition=" '$(_GroupEndsWithExcl)' != '' And $([System.StringComparer]::Ordinal.Compare(%(Identity), $(_GroupEndsWithExcl))) &gt;= 0 ">
        <InGroup>False</InGroup>
      </AllProjects>
    </ItemGroup>

    <ItemGroup>
      <Project Include="@(AllProjects->WithMetadataValue('InGroup', 'True'))">
        <AdditionalProperties>TargetOS=$(TargetOS)</AdditionalProperties>
      </Project>
    </ItemGroup>

  </Target>

  <Import Project="..\dir.traversal.targets" />

  <!-- Override clean from dir.traversal.targets and just remove the full BinDir -->
  <Target Name="Clean">
    <RemoveDir Directories="$(BinDir)" />
  </Target>
</Project>
