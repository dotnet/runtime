<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="PrereleaseResolveNuGetPackageAssets" AssemblyFile="$(ToolsDir)Microsoft.DotNet.Build.Tasks.dll"/>

  <ItemGroup>
    <TestTargetFramework Include="DNXCore,Version=v5.0">
      <Folder>dnxcore50</Folder>
    </TestTargetFramework>
  </ItemGroup>

  <ItemGroup>
    <AllProjectJsonLockFiles Include="$(SourceDir)**\*\project.lock.json"/>
  </ItemGroup>

  <Target Name="CopyDependecyToCoreRoot"
    Inputs="@(AllProjectJsonLockFiles)"
    Outputs="$(CORE_ROOT)\*.*">
    
    <ItemGroup>
      <ProjectJsonLockFileExclude Include="$(SourceDir).nuget\project.lock.json" />
      <ProjectJsonLockFileExclude Include="$(SourceDir)Test*\**\project.lock.json" />
      <ProjectJsonLockFileExclude Include="$(SourceDir)Common\Coreclr.TestWrapper\**\project.lock.json" />
      <ProjectJsonLockFileExclude Include="$(SourceDir)packages\**\*\project.lock.json" />
    </ItemGroup>

    <ItemGroup>
      <ProjectLockJsonFiles Include="@(AllProjectJsonLockFiles)"  Exclude="@(ProjectJsonLockFileExclude)"/>
    </ItemGroup>
    
    <!-- This will use the overridden PrereleaseResolveNuGetPackageAssets, which outputs copy local items
         for the xunit wrapper projects -->
    <PrereleaseResolveNuGetPackageAssets AllowFallbackOnTargetSelection="true"
                                         IncludeFrameworkReferences="false"
                                         NuGetPackagesDirectory="$(PackagesDir)"
                                         RuntimeIdentifier="dotnet"
                                         ProjectLanguage="$(Language)"
                                         ProjectLockFile="%(ProjectLockJsonFiles.Identity)"
                                         TargetMonikers="@(TestTargetFramework)">
      <Output TaskParameter="ResolvedAnalyzers" ItemName="Analyzer" />
      <Output TaskParameter="ResolvedReferences" ItemName="Reference" />
      <Output TaskParameter="ResolvedCopyLocalItems" ItemName="RunTimeCopyLocal" />
    </PrereleaseResolveNuGetPackageAssets>
    <ItemGroup>
      <RunTimeDependecyExclude Include="$(CORE_ROOT)\**\*.*"  />
      <RunTimeDependecyExcludeFiles Include="@(RunTimeDependecyExclude -> '%(FileName)%(Extension)')" />
      <RunTimeDependecyExcludeFiles Include="@(RunTimeDependecyExclude -> '%(FileName).ni%(Extension)')" />
      <RunTimeDependecyExcludeFiles Include="@(RunTimeDependecyExclude -> '%(FileName).pdb')" />
      <AllResolvedRuntimeDependencies Include="@(RunTimeCopyLocal -> '%(FileName)%(Extension)')">
        <File>%(Identity)</File>
      </AllResolvedRuntimeDependencies>
      <RunTimeDependecyCopyLocalFile Include="@(AllResolvedRuntimeDependencies)"  Exclude="@(RunTimeDependecyExcludeFiles)"/>
      <RunTimeDependecyCopyLocal Include="@(RunTimeDependecyCopyLocalFile -> '%(File)')"  />
    </ItemGroup>
    
    <Copy
      SourceFiles="@(RunTimeDependecyCopyLocal)"
      DestinationFolder="$(CORE_ROOT)"
      SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      Retries="$(CopyRetryCount)"
      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>

</Project>
