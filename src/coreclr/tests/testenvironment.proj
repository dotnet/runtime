<Project DefaultTargets="CreateTestEnvFile">
  <!-- This project creates a .cmd or .sh file that sets the environment variables corresponding to the specified Scenario property.
       For example, to create SetStressModes.cmd file for scenario "jitstress1" you can use the following command:

       dotnet msbuild testenvironment.proj /p:TestEnvFileName=SetStressModes.cmd /p:Scenario=jitstress1 /p:TargetsWindows=true
  -->


  <!-- COMPlus_* variables that can be specified for a test scenario -->
  <!-- There is a non-COMPlus variable here: RunningIlasmRoundTrip. When set to 1, this triggers CoreCLR round-trip testing.
       The value is read in the test wrapper scripts. When set in a __TestEnv script, it is set before it is read.
       The COMPlus_ processing handling below allows for variables not prefixed by 'COMPlus_'.
  -->
  <PropertyGroup>
    <COMPlusVariables>
      COMPlus_TieredCompilation;
      COMPlus_DbgEnableMiniDump;
      COMPlus_DbgEnableElfDumpOnMacOS;
      COMPlus_DbgMiniDumpName;
      COMPlus_EnableAES;
      COMPlus_EnableAVX;
      COMPlus_EnableAVX2;
      COMPlus_EnableBMI1;
      COMPlus_EnableBMI2;
      COMPlus_EnableFMA;
      COMPlus_EnableHWIntrinsic;
      COMPlus_EnableIncompleteISAClass;
      COMPlus_EnableLZCNT;
      COMPlus_EnablePCLMULQDQ;
      COMPlus_EnablePOPCNT;
      COMPlus_EnableSSE;
      COMPlus_EnableSSE2;
      COMPlus_EnableSSE3;
      COMPlus_EnableSSE3_4;
      COMPlus_EnableSSE41;
      COMPlus_EnableSSE42;
      COMPlus_EnableSSSE3;
      COMPlus_FeatureSIMD;
      COMPlus_ForceRelocs;
      COMPlus_GCStress;
      COMPlus_HeapVerify;
      COMPlus_JITMinOpts;
      COMPlus_JitELTHookEnabled;
      COMPlus_JitStress;
      COMPlus_JitStressRegs;
      COMPlus_TailcallStress;
      COMPlus_ReadyToRun;
      COMPlus_ZapDisable;
      COMPlus_TC_OnStackReplacement;
      COMPlus_TC_QuickJitForLoops;
      COMPlus_TC_OnStackReplacement_InitialCounter;
      COMPlus_OSR_HitLimit;
      COMPlus_TieredPGO;
      COMPlus_JitEnableGuardedDevirtualization;
      COMPlus_EnableEHWriteThru;
      COMPlus_JitObjectStackAllocation;
      RunningIlasmRoundTrip
    </COMPlusVariables>
  </PropertyGroup>
  <ItemGroup>
    <COMPlusVariable Include="$(COMPlusVariables)" />
  </ItemGroup>

  <!-- Default values for some COMPlus_* variables -->
  <ItemDefinitionGroup>
    <TestEnvironment>
      <TieredCompilation>0</TieredCompilation>
      <DbgEnableMiniDump Condition="'$(TargetsWindows)' != 'true'">1</DbgEnableMiniDump> <!-- Enable minidumps for all scenarios -->
      <DbgEnableElfDumpOnMacOS Condition="'$(TargetsOSX)' == 'true'">1</DbgEnableElfDumpOnMacOS> <!-- Enable minidumps for OSX -->
      <DbgMiniDumpName Condition="'$(TargetsWindows)' != 'true'">$HELIX_DUMP_FOLDER/coredump.%d.dmp</DbgMiniDumpName>
    </TestEnvironment>
  </ItemDefinitionGroup>

  <!-- TestEnvironment is a mapping between Scenario and COMPlus_* environment variable values that are written to __TestEnv file -->
  <ItemGroup>
    <!-- "normal" scenario doesn't define any COMPlus_* variables and uses the coreclr runtime default values
         while other scenarios use the default values of COMPlus_* variables defined in ItemDefinitionGroup above -->
    <TestEnvironment Include="normal" TieredCompilation="" />
    <TestEnvironment Include="jitminopts" JITMinOpts="1" />
    <TestEnvironment Include="no_tiered_compilation" TieredCompilation="0" />
    <TestEnvironment Include="forcerelocs" ForceRelocs="1" />
    <TestEnvironment Include="jitstress1" JitStress="1" />
    <TestEnvironment Include="jitstress2" JitStress="2" />
    <TestEnvironment Include="jitstress1_tiered" JitStress="1" TieredCompilation="1" />
    <TestEnvironment Include="jitstress2_tiered" JitStress="2" TieredCompilation="1" />
    <TestEnvironment Include="jitstress_isas_incompletehwintrinsic" EnableIncompleteISAClass="1"  />
    <TestEnvironment Include="jitstress_isas_nohwintrinsic" EnableHWIntrinsic="0" />
    <TestEnvironment Include="jitstress_isas_nohwintrinsic_nosimd" EnableHWIntrinsic="0" FeatureSIMD="0" />
    <TestEnvironment Include="jitstress_isas_nosimd" FeatureSIMD="0" />
    <TestEnvironment Include="jitstress_isas_x86_noaes" EnableAES="0" /> <!-- Depends on SSE2 -->
    <TestEnvironment Include="jitstress_isas_x86_noavx" EnableAVX="0" /> <!-- Depends on SSE42 -->
    <TestEnvironment Include="jitstress_isas_x86_noavx2" EnableAVX2="0" /> <!-- Depends on AVX -->
    <TestEnvironment Include="jitstress_isas_x86_nobmi1" EnableBMI1="0" /> <!-- No dependencies -->
    <TestEnvironment Include="jitstress_isas_x86_nobmi2" EnableBMI2="0" /> <!-- No dependencies -->
    <TestEnvironment Include="jitstress_isas_x86_nofma" EnableFMA="0" /> <!-- Depends on AVX -->
    <TestEnvironment Include="jitstress_isas_x86_nohwintrinsic" EnableBMI1="0" EnableBMI2="0" EnableLZCNT="0" EnableSSE="0" />
    <TestEnvironment Include="jitstress_isas_x86_nolzcnt" EnableLZCNT="0" /> <!-- No dependencies -->
    <TestEnvironment Include="jitstress_isas_x86_nopclmulqdq" EnablePCLMULQDQ="0" /> <!-- Depends on SSE2 -->
    <TestEnvironment Include="jitstress_isas_x86_nopopcnt" EnablePOPCNT="0" /> <!-- Depends on SSE42 -->
    <TestEnvironment Include="jitstress_isas_x86_nosse" EnableSSE="0" /> <!-- No dependencies -->
    <TestEnvironment Include="jitstress_isas_x86_nosse2" EnableSSE2="0" /> <!-- Depends on SSE -->
    <TestEnvironment Include="jitstress_isas_x86_nosse3" EnableSSE3="0" /> <!-- Depends on SSE2 -->
    <TestEnvironment Include="jitstress_isas_x86_nosse3_4" EnableSSE3_4="0" /> <!-- Depends on SSE2 -->
    <TestEnvironment Include="jitstress_isas_x86_nosse41" EnableSSE41="0" /> <!-- Depends on SSSE3 and SSE3_4 -->
    <TestEnvironment Include="jitstress_isas_x86_nosse42" EnableSSE42="0" /> <!-- Depends on SSE41 -->
    <TestEnvironment Include="jitstress_isas_x86_nossse3" EnableSSSE3="0" /> <!-- Depends on SSE3 -->
    <TestEnvironment Include="jitstressregs1_x86_noavx" JitStressRegs="1" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs2_x86_noavx" JitStressRegs="2" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs3_x86_noavx" JitStressRegs="3" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs4_x86_noavx" JitStressRegs="4" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs8_x86_noavx" JitStressRegs="8" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs0x10_x86_noavx" JitStressRegs="0x10" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs0x80_x86_noavx" JitStressRegs="0x80" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs0x1000_x86_noavx" JitStressRegs="0x1000" EnableAVX="0" />
    <TestEnvironment Include="jitstressregs1" JitStressRegs="1" />
    <TestEnvironment Include="jitstressregs2" JitStressRegs="2" />
    <TestEnvironment Include="jitstressregs3" JitStressRegs="3" />
    <TestEnvironment Include="jitstressregs4" JitStressRegs="4" />
    <TestEnvironment Include="jitstressregs8" JitStressRegs="8" />
    <TestEnvironment Include="jitstressregs0x10" JitStressRegs="0x10" />
    <TestEnvironment Include="jitstressregs0x80" JitStressRegs="0x80" />
    <TestEnvironment Include="jitstressregs0x1000" JitStressRegs="0x1000" />
    <TestEnvironment Include="jitstress2_jitstressregs1" JitStress="2" JitStressRegs="1" />
    <TestEnvironment Include="jitstress2_jitstressregs2" JitStress="2" JitStressRegs="2" />
    <TestEnvironment Include="jitstress2_jitstressregs3" JitStress="2" JitStressRegs="3" />
    <TestEnvironment Include="jitstress2_jitstressregs4" JitStress="2" JitStressRegs="4" />
    <TestEnvironment Include="jitstress2_jitstressregs8" JitStress="2" JitStressRegs="8" />
    <TestEnvironment Include="jitstress2_jitstressregs0x10" JitStress="2" JitStressRegs="0x10" />
    <TestEnvironment Include="jitstress2_jitstressregs0x80" JitStress="2" JitStressRegs="0x80" />
    <TestEnvironment Include="jitstress2_jitstressregs0x1000" JitStress="2" JitStressRegs="0x1000" />
    <TestEnvironment Include="jitelthookenabled" JitELTHookEnabled="1" />
    <TestEnvironment Include="jitelthookenabled_tiered" JitELTHookEnabled="1" TieredCompilation="1" />
    <TestEnvironment Include="tailcallstress" TailcallStress="1" />
    <TestEnvironment Include="gcstress0x3" GCStress="0x3" />
    <TestEnvironment Include="gcstress0xc" GCStress="0xC" />
    <TestEnvironment Include="zapdisable" ZapDisable="1" ReadyToRun="0" />
    <TestEnvironment Include="heapverify1" HeapVerify="1" />
    <TestEnvironment Include="gcstress0xc_zapdisable" GCStress="0xC" ZapDisable="1" ReadyToRun="0" />
    <TestEnvironment Include="gcstress0xc_zapdisable_jitstress2" GCStress="0xC" ZapDisable="1" ReadyToRun="0" JitStress="2" />
    <TestEnvironment Include="gcstress0xc_zapdisable_heapverify1" GCStress="0xC" ZapDisable="1" ReadyToRun="0" HeapVerify="1" />
    <TestEnvironment Include="gcstress0xc_jitstress1" GCStress="0xC" JitStress="1" />
    <TestEnvironment Include="gcstress0xc_jitstress2" GCStress="0xC" JitStress="2" />
    <TestEnvironment Include="gcstress0xc_tailcallstress" GCStress="0xC" TailcallStress="1" />
    <TestEnvironment Include="gcstress0xc_jitminopts_heapverify1" GCStress="0xC" JITMinOpts="1" HeapVerify="1" />
    <TestEnvironment Include="jitosr" TC_OnStackReplacement="1" TC_QuickJitForLoops="1" TieredCompilation="1" />
    <TestEnvironment Include="jitosr_stress" TC_OnStackReplacement="1" TC_QuickJitForLoops="1" TC_OnStackReplacement_InitialCounter="1" OSR_HitLimit="1" TieredCompilation="1" />
    <TestEnvironment Include="jitpgo" TieredPGO="1" TieredCompilation="1" />
    <TestEnvironment Include="jitguardeddevirtualization" JitEnableGuardedDevirtualization="1" TieredCompilation="0" />
    <TestEnvironment Include="jitehwritethru" EnableEhWriteThru="1" TieredCompilation="0" />
    <TestEnvironment Include="jitobjectstackallocation" JitObjectStackAllocation="1" TieredCompilation="0" />
    <TestEnvironment Include="ilasmroundtrip" RunningIlasmRoundTrip="1" />
    <TestEnvironment Include="clrinterpreter" TieredCompilation="1" />
  </ItemGroup>

  <!-- We use target batching on the COMPlusVariable items to iterate over the all COMPlus_* environment variables
       that can be specified by a test scenario. -->
  <Target Name="OutputCOMPlusVariables" Inputs="@(COMPlusVariable)" Outputs="%(COMPlusVariable.Identity)">
    <PropertyGroup>
      <_COMPlusVariable>%(COMPlusVariable.Identity)</_COMPlusVariable>
      <_COMPlusVariableMetadataName>$(_COMPlusVariable.Replace('COMPlus_', ''))</_COMPlusVariableMetadataName>
    </PropertyGroup>

    <ItemGroup>
      <_TestEnvironment Include="@(TestEnvironment)" Condition="'%(Identity)' == '$(Scenario)'" />
      <_TestEnvironmentWithMetadata Include="@(_TestEnvironment->HasMetadata($(_COMPlusVariableMetadataName)))" />

      <!-- _TestEnvironmentWithMetadata can be either empty or contain one item:

       1) If _TestEnvironmentWithMetadata is empty, then this suggests that the test scenario with identity $(Scenario)
          doesn't define COMPlus_* environment variable with name $(_COMPlusVariable);

       2) Otherwise, the test scenario defines such COMPlus_* environment variable and the specified value
          of this variable can be extracted by using Metadata() item function.
      -->

      <_COMPlusVariable Include="$(_COMPlusVariable)" Condition="@(_TestEnvironmentWithMetadata->Count()) == 1">
        <Value>@(_TestEnvironmentWithMetadata->Metadata($(_COMPlusVariableMetadataName)))</Value>
      </_COMPlusVariable>
    </ItemGroup>

    <!-- Conceptually, this target creates a collection of _COMPlusVariable items that corresponds to
         COMPlus_* environment variables specified for the test scenario with identity $(Scenario) -->

  </Target>

  <Target Name="CreateTestEnvFile" DependsOnTargets="OutputCOMPlusVariables">
    <ItemGroup Condition="'$(TargetsWindows)' == 'true'">
      <_TestEnvFileLine Include="@(_COMPlusVariable->'set %(Identity)=%(Value)')"  />

      <!-- Mono interpreter -->
      <_TestEnvFileLine Include="set MONO_ENV_OPTIONS=--interpreter" Condition="'$(Scenario)' == 'interpreter'" />

      <!-- CLR interpreter -->
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="set COMPlus_Interpret=%2A" /> <!-- %2A is asterisk / wildcard -->
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="set COMPlus_InterpreterHWIntrinsicsIsSupportedFalse=1" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="set COMPlus_InterpreterJITThreshold=0x1000" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="set COMPlus_TC_CallCountThreshold=0x1000" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="set COMPlus_InterpreterDoLoopMethods=1" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetsWindows)' != 'true'">
      <_TestEnvFileLine Include="#!/usr/bin/env bash" />
      <_TestEnvFileLine Include="@(_COMPlusVariable->'export %(Identity)=%(Value)')"  />

      <!-- Mono interpreter -->
      <_TestEnvFileLine Include="export MONO_ENV_OPTIONS=--interpreter" Condition="'$(Scenario)' == 'interpreter'" />

      <!-- CLR interpreter -->
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="export COMPlus_Interpret=%2A" /> <!-- %2A is asterisk / wildcard -->
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="export COMPlus_InterpreterHWIntrinsicsIsSupportedFalse=1" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="export COMPlus_InterpreterJITThreshold=0x1000" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="export COMPlus_TC_CallCountThreshold=0x1000" />
      <_TestEnvFileLine Condition="'$(Scenario)' == 'clrinterpreter'" Include="export COMPlus_InterpreterDoLoopMethods=1" />
    </ItemGroup>

    <WriteLinesToFile File="$(TestEnvFileName)" Lines="@(_TestEnvFileLine)" Overwrite="true" />
  </Target>

</Project>
