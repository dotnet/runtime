<Project>
  <PropertyGroup>
    <RequiresBuildRid>true</RequiresBuildRid>
  </PropertyGroup>

  <!-- Packaging projects (.pkgproj) are non-SDK-style, so they need to directly import Directory.Build.props -->
  <Import Project="..\Directory.Build.props" />
  <Import Project="$(NuGetPackageRoot)\microsoft.dotnet.build.tasks.packaging\$(MicrosoftDotNetBuildTasksPackagingVersion)\build\Microsoft.DotNet.Build.Tasks.Packaging.props" />

  <PropertyGroup>
    <!-- Defined in Packaging.targets, but we need this before targets are imported -->
    <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
    <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>
    <MinOSForArch>win7</MinOSForArch>
    <MinOSForArch Condition="'$(PackagePlatform)' == 'arm'">win8</MinOSForArch>
    <MinOSForArch Condition="'$(PackagePlatform)' == 'arm64'">win10</MinOSForArch>
    <PackagePlatform>AnyCPU</PackagePlatform>

    <PackageIndexFile>$(MSBuildThisFileDirectory)packageIndex.json</PackageIndexFile>

    <!-- coreclr doesn't currently use the index so don't force it to be in sync -->
    <SkipIndexCheck>true</SkipIndexCheck>

    <!-- Central place to set the versions of all nuget packages produced in the repo -->
    <PackageVersion Condition="'$(PackageVersion)' == ''">6.0.0</PackageVersion>
    <StableVersion Condition="'$(StabilizePackageVersion)' == 'true' and '$(StableVersion)' == ''">$(PackageVersion)</StableVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageIndex Condition="'$(MSBuildProjectExtension)' == '.pkgproj'" Include="$(PackageIndexFile)" />
  </ItemGroup>

  <PropertyGroup>
    <!-- build the transport package which includes product and symbols in addition to standard packages
    This is a legacy setting as we tend to use symbol packages for symbol indexing and we don't use
    transport packages to flow dependencies anymore -->
    <CreatePackedPackage Condition="'$(CreatePackedPackage)' == ''">false</CreatePackedPackage>

    <!-- indicates that lib prefix is not added to library names for Unix-like operating systems -->
    <SkipLibraryPrefixFromUnix>true</SkipLibraryPrefixFromUnix>
  </PropertyGroup>

  <PropertyGroup>
    <SkipPackageFileCheck>true</SkipPackageFileCheck>
    <OutputPath>$(PackageOutputPath)</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsLineupPackage)' == 'true'">
    <SkipValidatePackage>true</SkipValidatePackage>
    <IncludeRuntimeJson>true</IncludeRuntimeJson>
  </PropertyGroup>

  <ItemGroup>
    <_project Include="@(BuildRID)">
      <Platform Condition="'%(Platform)' == ''">amd64</Platform>
      <PackageTargetRuntime>%(Identity)</PackageTargetRuntime>
      <AdditionalProperties>PackageTargetRuntime=%(Identity);Platform=%(Platform)</AdditionalProperties>
    </_project>

    <_buildRidProjects Include="@(_project->'$(MSBuildProjectName).pkgproj')" />
    <!-- Only include rid projects for a builds file, not for a lineup package -->
    <Project Condition="'$(IsLineupPackage)' != 'true'" Include="@(_buildRidProjects)" />
  </ItemGroup>

  <ItemGroup Condition="'$(IsLineupPackage)' == 'true'">
    <!-- Include project references for a lineup package to generate the runtime.json file -->
    <ProjectReference Include="@(_buildRidProjects)" />
  </ItemGroup>
</Project>
