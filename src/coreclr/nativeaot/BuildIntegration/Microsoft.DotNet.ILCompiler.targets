<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>

    <!-- Set the publishAot property to true if not set-->
    <PublishAot Condition="'$(PublishAot)' == ''">true</PublishAot>
  </PropertyGroup>


  <PropertyGroup Condition="'$(RuntimeIdentifier)' != ''">

    <!-- Define the name of the runtime specific compiler package to import -->
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('win'))">win</OSIdentifier>
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('osx'))">osx</OSIdentifier>
    <OSIdentifier Condition="$(RuntimeIdentifier.StartsWith('linux-musl')) OR $(RuntimeIdentifier.StartsWith('alpine'))">linux-musl</OSIdentifier>
    <OSIdentifier Condition="'$(OSIdentifier)' == ''">linux</OSIdentifier>

    <!-- Determine TargetArchitecture from RuntimeIdentifier -->
    <RidWithHyphen>$(RuntimeIdentifier)-</RidWithHyphen>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-x86-'))">x86</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-x64-'))">x64</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-arm-'))">arm</TargetArchitecture>
    <TargetArchitecture Condition="$(RidWithHyphen.Contains('-arm64-'))">arm64</TargetArchitecture>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">unknown</TargetArchitecture>

    <RuntimeIlcPackageName>runtime.$(OSIdentifier)-$(TargetArchitecture).Microsoft.DotNet.ILCompiler</RuntimeIlcPackageName>

    <OSHostArch>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</OSHostArch>
    <!-- OSArchitecture does not report the true OS architecture for x86 and x64 processes running on Windows ARM64. -->
    <!-- The following condition checks those cases. -->
    <OSHostArch Condition="$([MSBuild]::IsOSPlatform('Windows')) and
        $([System.Environment]::GetEnvironmentVariable('PROCESSOR_ARCHITECTURE', EnvironmentVariableTarget.Machine)) == 'ARM64'">arm64</OSHostArch>

    <IlcHostArch Condition="'$(IlcHostArch)' == ''">$(OSHostArch)</IlcHostArch>
    <IlcHostPackageName>runtime.$(OSIdentifier)-$(IlcHostArch).Microsoft.DotNet.ILCompiler</IlcHostPackageName>

  </PropertyGroup>

  <PropertyGroup>

    <!-- If the NativeAOT toolchain is being consumed via package, runtime-specific properties must be set before compilation can proceed -->
    <ImportRuntimeIlcPackageTargetDependsOn>RunResolvePackageDependencies</ImportRuntimeIlcPackageTargetDependsOn>
    <IlcSetupPropertiesDependsOn>ImportRuntimeIlcPackageTarget</IlcSetupPropertiesDependsOn>
    <IlcDynamicBuildPropertyDependencies>SetupProperties</IlcDynamicBuildPropertyDependencies>

  </PropertyGroup>

  <!-- Target ProcessFrameworkReferences sets the details to download the runtime package but requires setting the version to the explicit package if one exists -->
  <Target Name="SetILCompilerVersionForPackageReference" Condition="'$(AotRuntimePackageLoadedViaSDK)' != 'true' and '$(PublishAot)' == 'true'" BeforeTargets="ProcessFrameworkReferences">
    <ItemGroup>
      <OldKnownIlPack Include="@(KnownILCompilerPack)"/>
      <ILCompilerReference Include="@(PackageReference)" Condition="'%(Identity)'=='Microsoft.DotNet.ILCompiler'"/>
    </ItemGroup>
    <ItemGroup>
        <KnownILCompilerPack Remove="@(OldKnownIlPack)" />
        <KnownILCompilerPack Include="Microsoft.DotNet.ILCompiler"
              TargetFramework="@(OldKnownIlPack->'%(TargetFramework)')"
              ILCompilerPackNamePattern="@(OldKnownIlPack->'%(ILCompilerPackNamePattern)')"
              ILCompilerPackVersion="@(ILCompilerReference->'%(Version)')"
              ILCompilerRuntimeIdentifiers="@(OldKnownIlPack->'%(ILCompilerRuntimeIdentifiers)')"/>
    </ItemGroup>
  </Target>

  <!-- Locate the runtime package according to the current target runtime -->
  <Target Name="ImportRuntimeIlcPackageTarget" Condition="'$(BuildingFrameworkLibrary)' != 'true' and '$(PublishAot)' == 'true'" DependsOnTargets="$(ImportRuntimeIlcPackageTargetDependsOn)" BeforeTargets="Publish">
    <Error Condition="'@(ResolvedILCompilerPack)' == ''" Text="The ResolvedILCompilerPack ItemGroup is required for target ImportRuntimeIlcPackageTarget" />

    <PropertyGroup>
      <RuntimePackagePath>@(ResolvedILCompilerPack->'%(PackageDirectory)')</RuntimePackagePath>
      <IlcHostPackagePath>@(ResolvedILCompilerPack->'%(PackageDirectory)')</IlcHostPackagePath>
      <IlcPath>>@(ResolvedILCompilerPack->'%(PackageDirectory)')</IlcPath>
    </PropertyGroup>

  </Target>

  <Import Project="$(MSBuildThisFileDirectory)\Microsoft.NETCore.Native.targets" Condition="'$(PublishAot)' == 'true'"/>

</Project>
