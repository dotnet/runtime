<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bif_InvalidMetadata" xml:space="preserve">
    <value>A problem was found in this image's metadata.</value>
  </data>
  <data name="Acc_CreateAbstEx" xml:space="preserve">
    <value>Cannot create an instance of {0} because it is an abstract class.</value>
  </data>
  <data name="Acc_NotClassInit" xml:space="preserve">
    <value>Type initializer was not callable.</value>
  </data>
  <data name="Acc_ReadOnly" xml:space="preserve">
    <value>Cannot set a constant field.</value>
  </data>
  <data name="Arg_MemberInfoNotFound" xml:space="preserve">
    <value>A MemberInfo that matches '{0}' could not be found.</value>
  </data>
  <data name="Arg_NotGenericMethodDefinition" xml:space="preserve">
    <value>{0} is not a GenericMethodDefinition. MakeGenericMethod may only be called on a method for which MethodBase.IsGenericMethodDefinition is true.</value>
  </data>
  <data name="Arg_NotGenericParameter" xml:space="preserve">
    <value>Method may only be called on a Type for which Type.IsGenericParameter is true.</value>
  </data>
  <data name="Arg_TypeLoadNullStr" xml:space="preserve">
    <value>A null or zero length string does not represent a valid Type.</value>
  </data>
  <data name="Argument_NotEnoughGenArguments" xml:space="preserve">
    <value>The type or method has {1} generic parameter(s), but {0} generic argument(s) were provided. A generic argument must be provided for each generic parameter.</value>
  </data>
  <data name="Reflection_CustomReflectionObjectsNotSupported" xml:space="preserve">
    <value>The object '{0}' was created by a custom ReflectionContext and cannot be used here.</value>
  </data>
  <data name="TypeLoad_TypeNotFound" xml:space="preserve">
    <value>The type '{0}' cannot be found.</value>
  </data>
  <data name="TypeLoad_TypeNotFoundInAssembly" xml:space="preserve">
    <value>The type '{0}' cannot be found in assembly '{1}'.</value>
  </data>
  <data name="FileNotFound_AssemblyNotFound" xml:space="preserve">
    <value>Cannot load assembly '{0}'. No metadata found for this assembly.</value>
  </data>
  <data name="Arg_HTCapacityOverflow" xml:space="preserve">
    <value>Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.</value>
  </data>
  <data name="Arg_DlgtTargMeth" xml:space="preserve">
    <value>Cannot bind to the target method because its signature is not compatible with that of the delegate type.</value>
  </data>
  <data name="Arg_MustBeDelegate" xml:space="preserve">
    <value>Type must derive from Delegate.</value>
  </data>
  <data name="Arg_InvokeMethodMissingMetadata" xml:space="preserve">
    <value>Cannot create a delegate on type '{0}' as it is missing metadata for the Invoke method.</value>
  </data>
  <data name="Argument_AddingDuplicate" xml:space="preserve">
    <value>An item with the same key has already been added. Key: {0}</value>
  </data>
  <data name="Argument_InvalidHandle" xml:space="preserve">
    <value>The handle is invalid.</value>
  </data>
  <data name="Argument_ResolveMethodHandle" xml:space="preserve">
    <value>Type handle '{0}' and method handle with declaring type '{1}' are incompatible. Get RuntimeMethodHandle and declaring RuntimeTypeHandle off the same MethodBase.</value>
  </data>
  <data name="Argument_ResolveFieldHandle" xml:space="preserve">
    <value>Type handle '{0}' and field handle with declaring type '{1}' are incompatible. Get RuntimeFieldHandle and declaring RuntimeTypeHandle off the same FieldInfo.</value>
  </data>
  <data name="Argument_MethodDeclaringTypeGeneric" xml:space="preserve">
    <value>Cannot resolve method {0} because the declaring type of the method handle is generic. Explicitly provide the declaring type to GetMethodFromHandle.</value>
  </data>
  <data name="Argument_FieldDeclaringTypeGeneric" xml:space="preserve">
    <value>Cannot resolve field {0} because the declaring type of the field handle is generic. Explicitly provide the declaring type to GetFieldFromHandle.</value>
  </data>
  <data name="Arg_UnboundGenParam" xml:space="preserve">
    <value>Late bound operations cannot be performed on types or methods for which ContainsGenericParameters is true.</value>
  </data>
  <data name="Argument_AssemblyGetTypeCannotSpecifyAssembly" xml:space="preserve">
    <value>Type names passed to Assembly.GetType() must not specify an assembly.</value>
  </data>
  <data name="InvalidOperation_NoPublicAddMethod" xml:space="preserve">
    <value>Cannot add the event handler since no public add method exists for the event.</value>
  </data>
  <data name="InvalidOperation_NoPublicRemoveMethod" xml:space="preserve">
    <value>Cannot remove the event handler since no public remove method exists for the event.</value>
  </data>
  <data name="Arg_NotGenericTypeDefinition" xml:space="preserve">
    <value>{0} is not a GenericTypeDefinition. MakeGenericType may only be called on a type for which Type.IsGenericTypeDefinition is true.</value>
  </data>
  <data name="PlatformNotSupported_MakeGenericType" xml:space="preserve">
    <value>PlatformNotSupported_MakeGenericType", @"MakeGenericType can only accept Type objects created by the runtime.</value>
  </data>
  <data name="ArgumentException_InvalidTypeArgument" xml:space="preserve">
    <value>The type '{0}' may not be used as a type argument.</value>
  </data>
  <data name="ArgumentException_InvalidArrayElementType" xml:space="preserve">
    <value>The type '{0}' may not be used as an array element type.</value>
  </data>
  <data name="PlatformNotSupported_NoTypeHandleForOpenTypes" xml:space="preserve">
    <value>TypeHandles are not supported for types that return true for ContainsGenericParameters.</value>
  </data>
  <data name="Argument_HasToBeArrayClass" xml:space="preserve">
    <value>Must be an array type.</value>
  </data>
  <data name="InvalidOperation_NotGenericType" xml:space="preserve">
    <value>This operation is only valid on generic types.</value>
  </data>
  <data name="Arg_GetMethNotFnd" xml:space="preserve">
    <value>Property get method not found.</value>
  </data>
  <data name="Arg_SetMethNotFnd" xml:space="preserve">
    <value>Property set method not found.</value>
  </data>
  <data name="Arg_EmptyArray" xml:space="preserve">
    <value>Array may not be empty.</value>
  </data>
  <data name="MissingMember" xml:space="preserve">
    <value>Member not found.</value>
  </data>
  <data name="Arg_AmbiguousMatchException" xml:space="preserve">
    <value>Ambiguous match found.</value>
  </data>
  <data name="NoMetadataTokenAvailable" xml:space="preserve">
    <value>There is no metadata token available for the given member.</value>
  </data>
  <data name="MissingField" xml:space="preserve">
    <value>Field not found.</value>
  </data>
  <data name="Arg_MustBeType" xml:space="preserve">
    <value>Type must be a type provided by the runtime.</value>
  </data>
  <data name="NotSupported_ChangeType" xml:space="preserve">
    <value>ChangeType operation is not supported.</value>
  </data>
  <data name="Arg_NoDefCTor" xml:space="preserve">
    <value>No parameterless constructor defined for this object.</value>
  </data>
  <data name="NotSupported_ActivAttr" xml:space="preserve">
    <value>Activation Attributes are not supported.</value>
  </data>
  <data name="NotSupported_CallToVarArg" xml:space="preserve">
    <value>Vararg calling convention not supported.</value>
  </data>
  <data name="Acc_CreateGenericEx" xml:space="preserve">
    <value>Cannot create an instance of {0} because Type.ContainsGenericParameters is true.</value>
  </data>
  <data name="Acc_CreateVoid" xml:space="preserve">
    <value>Cannot dynamically create an instance of System.Void.</value>
  </data>
  <data name="Arg_GenericParameter" xml:space="preserve">
    <value>Method must be called on a Type for which Type.IsGenericParameter is false.</value>
  </data>
  <data name="Arg_NoAccessSpec" xml:space="preserve">
    <value>Must specify binding flags describing the invoke operation required (BindingFlags.InvokeMethod CreateInstance GetField SetField GetProperty SetProperty).</value>
  </data>
  <data name="Arg_NamedParamTooBig" xml:space="preserve">
    <value>Named parameter array cannot be bigger than argument array.</value>
  </data>
  <data name="Arg_PropSetGet" xml:space="preserve">
    <value>Cannot specify both Get and Set on a property.</value>
  </data>
  <data name="Arg_PropSetInvoke" xml:space="preserve">
    <value>Cannot specify Set on a property and Invoke on a method.</value>
  </data>
  <data name="Arg_NamedParamNull" xml:space="preserve">
    <value>Named parameter value must not be null.</value>
  </data>
  <data name="Arg_CreatInstAccess" xml:space="preserve">
    <value>Cannot specify both CreateInstance and another access type.</value>
  </data>
  <data name="Arg_FldSetGet" xml:space="preserve">
    <value>Cannot specify both Get and Set on a field.</value>
  </data>
  <data name="Arg_FldGetPropSet" xml:space="preserve">
    <value>Cannot specify both GetField and SetProperty.</value>
  </data>
  <data name="Arg_FldSetPropGet" xml:space="preserve">
    <value>Cannot specify both SetField and GetProperty.</value>
  </data>
  <data name="Arg_FldSetInvoke" xml:space="preserve">
    <value>Cannot specify Set on a Field and Invoke on a method.</value>
  </data>
  <data name="Arg_IndexMustBeInt" xml:space="preserve">
    <value>All indexes must be of type Int32.</value>
  </data>
  <data name="Arg_FldGetArgErr" xml:space="preserve">
    <value>No arguments can be provided to Get a field value.</value>
  </data>
  <data name="Arg_FldSetArgErr" xml:space="preserve">
    <value>Only the field value can be specified to set a field value.</value>
  </data>
  <data name="Arg_PlatformNotSupportedInvokeMemberCom" xml:space="preserve">
    <value>InvokeMember on a COM object is not supported on this platform.</value>
  </data>
  <data name="Argument_MustBeRuntimeType" xml:space="preserve">
    <value>Type must be a runtime Type object.</value>
  </data>
  <data name="Argument_MustBeRuntimeMethodInfo" xml:space="preserve">
    <value>MethodInfo must be a runtime MethodInfo object.</value>
  </data>
  <data name="Arg_ArrayZeroError" xml:space="preserve">
    <value>Array must not be of length zero.</value>
  </data>
  <data name="Argument_MustBeRuntimeFieldInfo" xml:space="preserve">
    <value>FieldInfo must be a runtime FieldInfo object.</value>
  </data>
  <data name="Argument_TypedReferenceInvalidField" xml:space="preserve">
    <value>Field in TypedReferences cannot be static.</value>
  </data>
  <data name="MissingMemberTypeRef" xml:space="preserve">
    <value>FieldInfo does not match the target Type.</value>
  </data>
  <data name="Arg_TypeRefPrimitve" xml:space="preserve">
    <value>TypedReferences cannot be redefined as primitives.</value>
  </data>
  <data name="MissingMemberNestErr" xml:space="preserve">
    <value>TypedReference can only be made on nested value Types.</value>
  </data>
  <data name="Arg_TypedReference_Null" xml:space="preserve">
    <value>The TypedReference must be initialized.</value>
  </data>
  <data name="Acc_CreateAbst" xml:space="preserve">
    <value>Cannot create an abstract class.</value>
  </data>
  <data name="Acc_CreateInterface" xml:space="preserve">
    <value>Cannot create an instance of an interface.</value>
  </data>
  <data name="CannotCreateByRefOfByRef" xml:space="preserve">
    <value>Cannot create a byref of a byref: {0}</value>
  </data>
  <data name="CannotCreatePointerOfByRef" xml:space="preserve">
    <value>Cannot create a pointer to a byref: {0}</value>
  </data>
  <data name="Arg_EnumLitValueNotFound" xml:space="preserve">
    <value>Literal value was not found.</value>
  </data>
  <data name="NotSupported_ByRefLike" xml:space="preserve">
    <value>Cannot create boxed ByRef-like values.</value>
  </data>
  <data name="CannotUseByRefLikeTypeInInstantiation" xml:space="preserve">
    <value>Cannot instantiate a generic type on a byref-like type.</value>
  </data>
  <data name="RFLCT_Targ_StatMethReqTarg" xml:space="preserve">
    <value>Non-static method requires a target.</value>
  </data>
  <data name="RFLCT_Targ_ITargMismatch" xml:space="preserve">
    <value>Object does not match target type.</value>
  </data>
  <data name="InvalidOperation_NoValue" xml:space="preserve">
    <value>Nullable object must have a value.</value>
  </data>
  <data name="Argument_ArrayGetInterfaceMap" xml:space="preserve">
    <value>Interface maps for generic interfaces on arrays cannot be retrieved.</value>
  </data>
  <data name="NotSupported_CodeBase" xml:space="preserve">
    <value>CodeBase is not supported on assemblies loaded from a single-file bundle.</value>
  </data>
</root>
