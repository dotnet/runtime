{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Run AgentTools/Begin.ps1",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\Begin.ps1\") {\n   \"Begin.ps1 script found. Executing...\"\n   cd $(AgentToolsPath)\n   & $(AgentToolsPath)\\Begin.ps1\n} else {\n   \"Begin.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Set up pipeline-specific git repository",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "inlineScript",
        "scriptName": "",
        "arguments": "-gitUrl $(PB_VstsRepoGitUrl) -root $(Pipeline.SourcesDirectory)",
        "workingFolder": "",
        "inlineScript": "param($gitUrl, $root)\n\nif (Test-Path $root)\n{\n  Remove-Item -Recurse -Force $root\n}\ngit clone --no-checkout $gitUrl $root 2>&1 | Write-Host\ncd $root\ngit checkout $env:SourceVersion 2>&1 | Write-Host\n\nWrite-Host (\"##vso[task.setvariable variable=Pipeline.SourcesDirectory;]$root\")",
        "failOnStandardError": "true"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Setup vs dev env",
      "timeoutInMinutes": 0,
      "task": {
        "id": "bfc8bf76-e7ac-4a8c-9a55-a944a9f632fd",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Pipeline.SourcesDirectory)\\setup_vs_tools.cmd",
        "arguments": "",
        "modifyEnvironment": "true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Sync symbol packages",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "sync.cmd",
        "arguments": "-ab -AzureAccount=$(CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -Container=$(PB_ContainerName) -BlobNamePrefix=$(PB_BlobNamePrefix)$(ConfigurationGroup)/symbolpkg/ -- /p:DownloadFlatFiles=true /p:BlobNameExtension=\".nupkg\" /p:DownloadDirectory=$(AzureContainerSymbolPackageDirectory)symbolpkg",
        "workingFolder": "$(Pipeline.SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Symbol Packages -> Blob Feed",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(),  contains(variables.PB_PublishType, 'blob'), eq(variables.ConfigurationGroup, 'Release'))",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "msbuild",
        "arguments": "src\\publish.proj /v:D /t:PublishSymbolPackages /p:__PublishSymbols=true $(FeedPublishArguments) /fileloggerparameters:Verbosity=diag;LogFile=publishsympkg.log",
        "workingFolder": "$(Pipeline.SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish symbols to msdl",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), contains(variables.PB_PublishType, 'msdl'), eq(variables.ConfigurationGroup, 'Release'))",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "msbuild",
        "arguments": "src\\publish.proj /v:D /t:PublishAllSymbols $(FeedPublishArguments) /p:SymbolServerPath=$(PB_MsdlSymbolServerPath) /p:SymbolServerPAT=$(PB_MsdlSymbolServerPAT) /p:SymbolExpirationInDays=$(PB_SymbolExpirationInDays)",
        "workingFolder": "$(Pipeline.SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish symbols to symweb",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), contains(variables.PB_PublishType, 'symweb'), eq(variables.ConfigurationGroup, 'Release'))",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "msbuild",
        "arguments": "src\\publish.proj /v:D /t:PublishAllSymbols $(FeedPublishArguments) /p:SymbolServerPath=$(PB_SymwebSymbolServerPath) /p:SymbolServerPAT=$(PB_SymwebSymbolServerPAT) /p:SymbolExpirationInDays=$(PB_SymbolExpirationInDays)",
        "workingFolder": "$(Pipeline.SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Run AgentTools/End.ps1",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\End.ps1\") {\n   \"End.ps1 script found. Executing...\"\n   cd $(AgentToolsPath)\n   & $(AgentToolsPath)\\End.ps1\n} else {\n   \"End.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "ConfigurationGroup": {
      "value": "$(PB_BuildType)",
      "allowOverride": true
    },
    "CloudDropAccountName": {
      "value": "dotnetbuildoutput",
      "allowOverride": true
    },
    "CloudDropAccessToken": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_ContainerName": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "PB_BlobNamePrefix": {
      "value": "$(PB_PipeBuildIdentifier)/",
      "allowOverride": true
    },
    "AzureBlobFeedAccountName": {
      "value": "dotnetfeed",
      "allowOverride": true
    },
    "AzureBlobFeedAccessToken": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "AzureBlobFeedContainerName": {
      "value": "dotnet-core",
      "allowOverride": true
    },
    "Pipeline.SourcesDirectory": {
      "value": "$(Build.BinariesDirectory)\\pipelineRepository"
    },
    "PB_VstsAccountName": {
      "value": "dn-bot"
    },
    "PB_VstsRepositoryName": {
      "value": "DotNet-CoreCLR-Trusted",
      "allowOverride": true
    },
    "PB_VstsRepoGitUrl": {
      "value": "https://$(PB_VstsAccountName):$(VstsRepoPat)@devdiv.visualstudio.com/DevDiv/_git/$(PB_VstsRepositoryName)/"
    },
    "VstsRepoPat": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "SourceVersion": {
      "value": "master",
      "allowOverride": true
    },
    "SourceBranch": {
      "value": "master",
      "allowOverride": true
    },
    "AzureContainerSymbolPackageDirectory": {
      "value": "$(Pipeline.SourcesDirectory)\\packages\\AzureTransfer\\$(ConfigurationGroup)\\",
      "allowOverride": true
    },
    "AzureContainerSymbolPackageGlob": {
      "value": "symbolpkg\\*.nupkg",
    },
    "FeedPublishArguments": {
      "value": "$(PB_BuildOutputManifestArguments) /p:ExpectedFeedUrl=$(PB_PublishBlobFeedUrl) /p:CloudDropAccessToken=$(PB_PublishBlobFeedKey) /p:CloudDropAccountName=$(AzureBlobFeedAccountName) /p:ContainerName=$(AzureBlobFeedContainerName) /p:OverwriteOnPublish=true /p:PackagesPatternDir=$(AzureContainerSymbolPackageDirectory) /p:__BuildType=$(ConfigurationGroup) /p:OfficialPublish=true /p:PublishFlatContainer=false"
    },
    "PB_PublishType": {
      "value": "",
      "allowOverride": true
    },
    "PB_PublishBlobFeedUrl": {
      "value": "",
      "allowOverride": true
    },
    "PB_PublishBlobFeedKey": {
      "value": "",
      "allowOverride": true
    },
    "PB_BuildOutputManifestArguments": {
      "value": "/p:ManifestBuildId=$(OfficialBuildId) /p:ManifestBranch=$(SourceBranch) /p:ManifestCommit=$(SourceVersion)"
    },
    "PB_MsdlSymbolServerPath": {
      "value": "https://microsoftpublicsymbols.artifacts.visualstudio.com/DefaultCollection"
    },
    "PB_MsdlSymbolServerPAT": {
      "value": null,
      "isSecret": true
    },
    "PB_SymwebSymbolServerPath": {
      "value": "https://microsoft.artifacts.visualstudio.com/DefaultCollection"
    },
    "PB_SymwebSymbolServerPAT": {
      "value": null,
      "isSecret": true
    },
    "PB_SymbolExpirationInDays": {
      "value": "30"
    },
  },
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 180,
  "jobCancelTimeoutInMinutes": 5,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "false",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "0",
      "labelSourcesFormat": "$(build.buildNumber)"
    },
    "id": "0a2b2664-c1be-429c-9b40-8a24dee27a4a",
    "type": "TfsGit",
    "name": "DotNet-BuildPipeline",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-BuildPipeline",
    "defaultBranch": "refs/heads/master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "queue": {
    "_links": {
      "self": {
        "href": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330"
      }
    },
    "id": 330,
    "name": "DotNetCore-Build",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330",
    "pool": {
      "id": 97,
      "name": "DotNetCore-Build"
    }
  },
  "id": -1,
  "name": "DotNet-Trusted-Publish-Symbols",
  "path": "\\",
  "type": "build",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097642
  }
}
