<Project>

  <PropertyGroup>
    <UseIntellisensePackageDocXmlFile Condition="'$(UseIntellisensePackageDocXmlFile)' == ''">true</UseIntellisensePackageDocXmlFile>
    <NoWarn Condition="'$(UseIntellisensePackageDocXmlFile)' == 'true'">$(NoWarn);1591</NoWarn>
    <IntellisensePackageXmlRootFolder>$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)', 'microsoft.private.intellisense', '$(MicrosoftPrivateIntellisenseVersion)', 'IntellisenseFiles'))</IntellisensePackageXmlRootFolder>
    <IntellisensePackageXmlFileFromNetFolder>$([MSBuild]::NormalizePath('$(IntellisensePackageXmlRootFolder)', 'net', '1033', '$(AssemblyName).xml'))</IntellisensePackageXmlFileFromNetFolder>
    <IntellisensePackageXmlFileFromDotNetPlatExtFolder>$([MSBuild]::NormalizePath('$(IntellisensePackageXmlRootFolder)', 'dotnet-plat-ext', '1033', '$(AssemblyName).xml'))</IntellisensePackageXmlFileFromDotNetPlatExtFolder>
    <IntellisensePackageXmlFile Condition="'$(UseIntellisensePackageDocXmlFile)' == 'true' and Exists($(IntellisensePackageXmlFileFromNetFolder))">$(IntellisensePackageXmlFileFromNetFolder)</IntellisensePackageXmlFile>
    <IntellisensePackageXmlFile Condition="'$(IntellisensePackageXmlFile)' == '' and '$(UseIntellisensePackageDocXmlFile)' == 'true' and Exists($(IntellisensePackageXmlFileFromDotNetPlatExtFolder))">$(IntellisensePackageXmlFileFromDotNetPlatExtFolder)</IntellisensePackageXmlFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageDownload Include="Microsoft.Private.Intellisense" Version="[$(MicrosoftPrivateIntellisenseVersion)]" />
  </ItemGroup>

  <!-- TODO: Remove this target when no library relies on the intellisense documentation file anymore.-->
  <!-- Replace the default xml file generated in the obj folder with the one that comes from the docs feed. -->
  <Target Name="ChangeDocumentationFileForPackaging"
          AfterTargets="DocumentationProjectOutputGroup"
          Condition="'$(UseIntellisensePackageDocXmlFile)' == 'true'">
    <ItemGroup>
      <DocFileItem Remove="@(DocFileItem)" />
      <DocFileItem Include="$(IntellisensePackageXmlFile)" />
    </ItemGroup>
  </Target>

  <Target Name="CopyDocumentationFileToXmlDocDir"
          AfterTargets="CopyFilesToOutputDirectory"
          Condition="'$(IsNetCoreAppSrc)' == 'true' and '$(TargetFramework)' == '$(NetCoreAppCurrent)'"
          DependsOnTargets="ChangeDocumentationFileForPackaging">
    <Copy SourceFiles="@(DocFileItem)"
          DestinationFolder="$(XmlDocDir)"
          SkipUnchangedFiles="true"
          UseHardlinksIfPossible="true" />
  </Target>

</Project>