<Project InitialTargets="_OverridePackDependsOnForCsProjToPkgProj">
  
  <PropertyGroup Condition="'$(IsPackable)' == 'true'">
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);AddRuntimeSpecificAssemblies;LibIntellisenseDocs</TargetsForTfmSpecificContentInPackage>
    <TargetsForTfmSpecificDebugSymbolsInPackage>$(TargetsForTfmSpecificDebugSymbolsInPackage);AddRuntimeDebugSymbolsWithTfm</TargetsForTfmSpecificDebugSymbolsInPackage>
    <IncludeBuildOutput Condition="'$(TargetsAnyOS)' != 'true' or '$(ExcludeFromPackage)' == 'true'">false</IncludeBuildOutput>  
    <!-- Don't include target platform specific dependencies, since we use the target platform to represent RIDs instead -->
    <SuppressDependenciesWhenPacking Condition="'$(ExcludeFromPackage)' == 'true' or ('$(TargetsAnyOS)' != 'true' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net5.0')))">true</SuppressDependenciesWhenPacking>
    <PackageDesignerMarkerFile>$(MSBuildThisFileDirectory)useSharedDesignerContext.txt</PackageDesignerMarkerFile>
    <PackageValidationBaselineVersion Condition="'$(PackageValidationBaselineVersion)' == ''">$([MSBuild]::Subtract($(MajorVersion), 1)).0.0</PackageValidationBaselineVersion>
  </PropertyGroup>

  <!--     There are some packages where we require only one ref for a specific framework to be present. In order to avoid problems with this package when targetting 
           dektop with RAR we will make sure there are no exclude=compile references in the package.
    For more info, please check issues:
     - https://github.com/dotnet/runtime/issues/27470  -> Why reference assets were removed from the package
     - https://github.com/dotnet/aspnetcore/issues/11206  -> Why ASP.NET required a ref to be added back for netcoreapp
     - https://github.com/dotnet/runtime/issues/29966  -> Issue tracking to work of readding a ref to netcoreapp -->
  <Target Name="RemoveExcludeCompileFromPackageDependencies" Condition="'$(RemoveExcludeCompileFromPackageDependencies)' == 'true'" DependsOnTargets="GetPackageDependencies" BeforeTargets="ValidateExcludeCompileDesktop">
    <ItemGroup>
      <Dependency>
        <Exclude></Exclude>
      </Dependency>
    </ItemGroup>    
  </Target>

  <Target Name="ValidateExcludeCompileDesktop"
          AfterTargets="GetPackageDependencies"
          Inputs="%(Dependency.Identity);%(Dependency.TargetFramework)" 
          Outputs="unused"
          Condition="'$(SkipValidatePackage)' != 'true'">
    <PropertyGroup>
      <_excludeCompile Condition="@(Dependency->WithMetadataValue('Exclude', 'Compile')->Count()) == @(Dependency->Count())">true</_excludeCompile>
    </PropertyGroup>
    <Error Text="Cannot have Exclude=Compile dependencies when targeting a desktop TFM. @(Dependency). You can exclude the reference asset in the package by setting the ExcludeReferenceAssets property to true in your project." 
           Condition="$([System.String]::Copy('%(Dependency.TargetFramework)').StartsWith('net4')) and 
                      '$(_excludeCompile)' == 'true' and
                      '%(Dependency.Identity)' != '_._'" />
  </Target>

  <!-- Point to the custom pack target which invokes the pkgproj from a source csproj. -->
  <Target Name="_OverridePackDependsOnForCsProjToPkgProj"
          Condition="'$(GeneratePackage)' == 'true' and
                     '$(IsSourceProject)' == 'true' and
                     Exists('$(PkgProjPath)')">
    <PropertyGroup>
      <IsPackable>true</IsPackable>
      <PackDependsOn>_BuildPkgProj</PackDependsOn>
    </PropertyGroup>
  </Target>

  <Target Name="_BuildPkgProj">
    <MSBuild Projects="$(PkgProjPath)"
             Targets="Build" />
  </Target>

  <Target Name="AddRuntimeSpecificAssemblies"
          DependsOnTargets="BuiltProjectOutputGroup;SatelliteDllsProjectOutputGroup;$(TargetsForTfmSpecificBuildOutput)"
          Condition="'$(TargetsAnyOS)' != 'true' and '$(ExcludeFromPackage)' == ''">
    <ItemGroup>
      <TfmSpecificPackageFile Include="@(SatelliteDllsProjectOutputGroupOutput);
                            @(BuiltProjectOutputGroupOutput)">
        <PackagePath>runtimes/$(_runtimeOS)/lib/$(TargetFrameworkWithoutSuffix)</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <!-- Runtime independent symbols are automatically added by the pack task.-->
  <Target Name="AddRuntimeDebugSymbolsWithTfm"
          Condition="'$(IncludeSymbols)' == 'true' and '$(TargetsAnyOS)' != 'true' and '$(ExcludeFromPackage)' == ''">
    <PropertyGroup>
      <RuntimeSymbolPath>$([System.IO.Path]::GetDirectoryName($(TargetPath)))\$(TargetName).pdb</RuntimeSymbolPath>
    </PropertyGroup>

    <ItemGroup Condition="Exists('$(RuntimeSymbolPath)')">
      <TfmSpecificDebugSymbolsFile Include="$(RuntimeSymbolPath)">
        <TargetPath>/runtimes/$(_runtimeOS)/lib/$(TargetFrameworkWithoutSuffix)/$(TargetName).pdb</TargetPath>
        <TargetFramework>$(TargetFrameworkWithoutSuffix)</TargetFramework>
      </TfmSpecificDebugSymbolsFile>
    </ItemGroup>
  </Target>
</Project>
