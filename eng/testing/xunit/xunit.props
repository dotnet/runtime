<Project>
  <PropertyGroup>
    <TestRunner Condition="'$(TestRunner)' == ''">xunit.console</TestRunner>
    <TestRunnerConfigPath>$(MSBuildThisFileDirectory)xunit.runner.json</TestRunnerConfigPath>
    <TestResultsName>testResults.xml</TestResultsName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Condition="'$(IncludeRemoteExecutor)' == 'true'" Include="Microsoft.DotNet.RemoteExecutor" Version="$(MicrosoftDotNetRemoteExecutorVersion)" />

    <PackageReference Include="Microsoft.DotNet.XUnitExtensions" Version="$(MicrosoftDotNetXUnitExtensionsVersion)" />
    <!-- Excluding xunit.core/build as it enables deps file generation. -->
    <PackageReference Include="xunit" Version="$(XUnitVersion)" ExcludeAssets="build" />

    <!-- Microsoft.Net.Test.Sdk brings a lot of assemblies with it. To reduce helix payload submission size we disable it on CI. -->
    <PackageReference Condition="'$(ArchiveTest)' != 'true'" Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftNETTestSdkVersion)" />
    <PackageReference Condition="'$(ArchiveTest)' != 'true'" Include="xunit.runner.visualstudio" Version="$(XUnitVersion)" />
    <!--
      Microsoft.Net.Test.Sdk has a dependency on Newtonsoft.Json v9.0.1. We upgrade the dependency version
      with the one used in corefx to have a consistent set of dependency versions. Additionally this works
      around a dupliate type between System.Runtime.Serialization.Formatters and Newtonsoft.Json.
    -->
    <PackageReference Condition="'$(ArchiveTest)' != 'true'" Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
  </ItemGroup>

  <Import Project="$(MSBuildThisFileDirectory)xunit.console.props" Condition="'$(TestRunner)' == 'xunit.console'" />
</Project>
