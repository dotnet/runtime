<Project>
  <PropertyGroup>
    <RunArguments>$(TargetFileName)</RunArguments>
    <RunArguments>$(RunArguments) -xml $(TestResultsName)</RunArguments>
    <RunArguments>$(RunArguments) -nologo</RunArguments>
    <RunArguments Condition="'$(ArchiveTests)' == 'true'">$(RunArguments) -nocolor</RunArguments>

    <!-- Add local and global options to the argument stack. -->
    <RunArguments Condition="'$(TestDisableParallelization)' == 'true'">$(RunArguments) -maxthreads 1</RunArguments>
    <RunArguments Condition="'$(XUnitMethodName)' != ''">$(RunArguments) -method $(XUnitMethodName)</RunArguments>
    <RunArguments Condition="'$(XUnitClassName)' != ''">$(RunArguments) -class $(XUnitClassName)</RunArguments>
    <RunArguments Condition="'$(XUnitShowProgress)' == 'true'">$(RunArguments) -verbose</RunArguments>
    <RunArguments Condition="'$(TargetsNetFx)' == 'true' and '$(TestDisableAppDomain)' == 'true'">$(RunArguments) -noappdomain</RunArguments>

    <!-- Add to run argument string -->
    <RunArguments>$(RunArguments)$(_withCategories.Replace(';', ' -trait category='))</RunArguments>
    <RunArguments>$(RunArguments)$(_withoutCategories.Replace(';', ' -notrait category='))</RunArguments>

    <!-- User passed in options. -->
    <RunArguments Condition="'$(XUnitOptions)' != ''">$(RunArguments) $(XUnitOptions)</RunArguments>
  </PropertyGroup>

  <!-- Overwrite the runner config file with the app local one. -->
  <Target Name="OverwriteDesktopTestRunnerConfigs"
          Condition="'$(GenerateRuntimeConfigurationFiles)' == 'true' and '$(TargetsNetFx)' == 'true'"
          AfterTargets="CopyFilesToOutputDirectory">

    <ItemGroup>
      <_testRunnerConfigSourceFile Include="$(TargetDir)$(TargetName).exe.config" />
      <_testRunnerConfigDestFile Include="$(TargetDir)$(_testRunnerName).config" />
    </ItemGroup>

    <Copy SourceFiles="@(_testRunnerConfigSourceFile)"
          Condition="'@(_testRunnerConfigSourceFile)' != ''"
          DestinationFiles="@(_testRunnerConfigDestFile)"
          SkipUnchangedFiles="true" />

  </Target>

  <!-- Setup run commands. -->
  <PropertyGroup Condition="'$(TargetsNetCoreApp)' == 'true'">
    <RunCommand>"$(RunScriptHost)"</RunCommand>
    <_depsFileRunArgument Condition="'$(GenerateDependencyFile)' == 'true'">--depsfile $(AssemblyName).deps.json</_depsFileRunArgument>
    <RunArguments>exec --runtimeconfig $(AssemblyName).runtimeconfig.json $(_depsFileRunArgument) xunit.console.dll $(RunArguments)</RunArguments>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetsNetFx)' == 'true'">
    <_testRunnerName>xunit.console.exe</_testRunnerName>
    <RunCommand>$(_testRunnerName)</RunCommand>
  </PropertyGroup>

  <!-- ResolveAssemblyReferences is the target that populates ReferenceCopyLocalPaths which is what is copied to output directory. -->
  <Target Name="CopyRunnerToOutputDirectory" BeforeTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <!-- Copy test runner to output directory -->
      <None Include="$([System.IO.Path]::GetDirectoryName('$(XunitConsole472Path)'))\*"
            Exclude="$([System.IO.Path]::GetDirectoryName('$(XunitConsole472Path)'))\xunit.console.*exe.config;$([System.IO.Path]::GetDirectoryName('$(XunitConsole472Path)'))\xunit.console.x86.exe"
            Condition="'$(TargetsNetFx)' == 'true' and '$(XunitConsole472Path)' != ''"
            CopyToOutputDirectory="PreserveNewest"
            Visible="false" />

      <_xunitConsoleNetCoreExclude Condition="'$(GenerateDependencyFile)' != 'true' and '$(XunitConsoleNetCore21AppPath)' != ''" Include="$([System.IO.Path]::GetDirectoryName('$(XunitConsoleNetCore21AppPath)'))\xunit.console.deps.json" />
      <None Include="$([System.IO.Path]::GetDirectoryName('$(XunitConsoleNetCore21AppPath)'))\*"
            Exclude="@(_xunitConsoleNetCoreExclude)"
            Condition="'$(TargetsNetCoreApp)' == 'true' and '$(XunitConsoleNetCore21AppPath)' != ''"
            CopyToOutputDirectory="PreserveNewest"
            Visible="false" />
    </ItemGroup>
  </Target>
</Project>
