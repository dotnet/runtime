<Project>
  <PropertyGroup>
    <RunCommand>"$(DotNetTool)"</RunCommand>
    <RunCommand Condition="'$(ContinuousIntegrationBuild)' == 'true'">dotnet</RunCommand>
    <RunArguments>test $(TargetFileName)</RunArguments>

    <!-- CLI options -->
    <RunArguments>$(RunArguments) --nologo</RunArguments>
    <RunArguments>$(RunArguments) --logger "trx;LogFileName=$(TrxTestResultsName)"</RunArguments>
    <RunArguments>$(RunArguments) --logger "html;LogFileName=$(HtmlTestResultsName)"</RunArguments>
    <RunArguments>$(RunArguments) --framework $(TargetFramework)</RunArguments>
    <RunArguments>$(RunArguments) --platform $(TargetArchitecture)</RunArguments>
    <RunArguments Condition="'$(TestDisableParallelization)' != 'true'">$(RunArguments) --parallel</RunArguments>
    <RunArguments Condition="'$(TestBlame)' == 'true'">$(RunArguments) --blame</RunArguments>

    <!-- Categories -->
    <_testFilter Condition="'$(_withCategories)' != ''">$(_withCategories.Replace(';', '&amp;category='))</_testFilter>
    <_testFilter Condition="'$(_withoutCategories)' != ''">$(_testFilter)$(_withoutCategories.Replace(';', '&amp;category!='))</_testFilter>
    <!-- On Windows in bat scripts with delayed expansion enabled we need to escape the bang operator. -->
    <_testFilter Condition="'$(TargetOS)' == 'Windows_NT'">$(_testFilter.Replace('!=', '^!='))</_testFilter>
    <_testFilter>$(_testFilter.Trim('&amp;'))</_testFilter>
    <!-- On Windows in bat scripts with delayed expansion enabled we need to escape the bang operator. -->
    <_testFilter Condition="'$(TestFilter)' != ''">$(_testFilter)&amp;$(TestFilter.Replace('!=', '^!='))</_testFilter>

    <RunArguments>$(RunArguments) --filter "($(_testFilter))"</RunArguments>

    <!-- User passed in options. -->
    <RunArguments Condition="'$(XUnitOptions)' != ''">$(RunArguments) $(XUnitOptions)</RunArguments>

    <!-- RunConfiguration settings. -->
    <RunSettingsOptions Condition="'$(TestDisableParallelization)' == 'true'">$(RunSettingsOptions) RunConfiguration.DisableParallelization=true</RunSettingsOptions>
    <RunSettingsOptions Condition="'$(TestDisableAppDomain)' == 'true'">$(RunSettingsOptions) RunConfiguration.DisableAppDomain=true</RunSettingsOptions>
    <RunSettingsOptions>$(RunSettingsOptions) RunConfiguration.DotNetHostPath="$(RunScriptHost)"</RunSettingsOptions>
    <RunArguments>$(RunArguments) --$(RunSettingsOptions)</RunArguments>
  </PropertyGroup>
</Project>