<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">
  <PropertyGroup>
    <IncludeXHarnessCli>true</IncludeXHarnessCli>
  </PropertyGroup>
  <PropertyGroup Condition="'$(AGENT_OS)' != 'Windows_NT'">
    <Python>python3</Python>
    <HelixPreCommands>$(HelixPreCommands);chmod +x $HELIX_WORKITEM_PAYLOAD/SOD/SizeOnDisk</HelixPreCommands>
    <HelixPreCommands>$(HelixPreCommands);chmod +x $HELIX_WORKITEM_PAYLOAD/startup/Startup</HelixPreCommands>
  </PropertyGroup>

  <ItemGroup>
    <HelixCorrelationPayload Include="$(CorrelationPayloadDirectory)">
      <PayloadDirectory>%(Identity)</PayloadDirectory>
    </HelixCorrelationPayload>
  </ItemGroup>

  <PropertyGroup>
    <LlvmPath>nollvm</LlvmPath>
    <LlvmPath Condition="'$(iOSLlvmBuild)' == 'True'">llvm</LlvmPath>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(AGENT_OS)' == 'Windows_NT'">
    <ScenarioDirectory>%HELIX_CORRELATION_PAYLOAD%\performance\src\scenarios\</ScenarioDirectory>
    
  </PropertyGroup>
  <PropertyGroup Condition="'$(AGENT_OS)' != 'Windows_NT'">
    <ScenarioDirectory>$HELIX_CORRELATION_PAYLOAD/performance/src/scenarios/</ScenarioDirectory>
  </PropertyGroup>

  <ItemGroup>
    <HelixWorkItem Include="SOD - iOS HelloWorld .app Size">
        <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
        <PreCommands>cd $(ScenarioDirectory)helloios;cp -rf $HELIX_CORRELATION_PAYLOAD/iosHelloWorld/$(LlvmPath) ./app;$(Python) pre.py --name app</PreCommands>
        <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
        <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <HelixWorkItem Include="SOD - iOS HelloWorld Mono Zip Size $(LlvmPath)">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)helloios;cp -v $HELIX_CORRELATION_PAYLOAD/iosHelloWorldZip/$(LlvmPath)zip/iOSSampleApp$(LlvmPath)/iOSSampleApp$(LlvmPath).zip .;$(Python) pre.py --name iOSSampleApp$(LlvmPath).zip</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <XHarnessAppBundleToTest Include="Device Startup - iOS Mono HelloWorld $(LlvmPath)">
      <AppBundlePath>$(WorkItemDirectory).zip</AppBundlePath>
      <WorkItemTimeout>00:05:00</WorkItemTimeout>
      <TestTarget>ios-device</TestTarget>
      <CustomCommands>
        <![CDATA[
          # PreCommands
          export XHARNESSPATH=$XHARNESS_CLI_PATH

          cp -r $HELIX_CORRELATION_PAYLOAD/iosHelloWorld/$(LlvmPath)/HelloiOS.app $(ScenarioDirectory)helloios/HelloiOS.app
          cp -f embedded.mobileprovision $(ScenarioDirectory)helloios/HelloiOS.app
          cd $(ScenarioDirectory)helloios
          sign HelloiOS.app

          $(Python) pre.py --name HelloiOS.app

          # Testing commands
          $(Python) test.py devicestartup --device-type ios --package-path HelloiOS.app --package-name net.dot.HelloiOS --scenario-name "%(Identity)"
          ((result=$?))
          
          # Post commands
          $(Python) post.py
          exit $result
        ]]>
      </CustomCommands>
    </XHarnessAppBundleToTest>
    <HelixWorkItem Include="SOD - Maui MacCatalyst .app Size" Condition="'$(iOSLlvmBuild)' == 'False'">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)mauiios;cp -rf $HELIX_CORRELATION_PAYLOAD/MauiMacCatalystDefault ./app;$(Python) pre.py --name app</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <HelixWorkItem Include="SOD - Maui iOS IPA Size" Condition="'$(iOSLlvmBuild)' == 'False'">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)mauiios;cp $HELIX_CORRELATION_PAYLOAD/MauiiOSDefault.ipa .;$(Python) pre.py --name MauiiOSDefault.ipa</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <HelixWorkItem Include="SOD - Maui iOS IPA Size Unzipped" Condition="'$(iOSLlvmBuild)' == 'False'">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)mauiios;cp $HELIX_CORRELATION_PAYLOAD/MauiiOSDefault.ipa .;$(Python) pre.py --unzip --name MauiiOSDefault.ipa</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <HelixWorkItem Include="SOD - Maui iOS Podcast IPA Size" Condition="'$(iOSLlvmBuild)' == 'False'">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)mauiios;cp $HELIX_CORRELATION_PAYLOAD/MauiiOSPodcast.ipa .;$(Python) pre.py --name MauiiOSPodcast.ipa</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
    <HelixWorkItem Include="SOD - Maui iOS Podcast IPA Size Unzipped" Condition="'$(iOSLlvmBuild)' == 'False'">
      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
      <PreCommands>cd $(ScenarioDirectory)mauiios;cp $HELIX_CORRELATION_PAYLOAD/MauiiOSPodcast.ipa .;$(Python) pre.py --unzip --name MauiiOSPodcast.ipa</PreCommands>
      <Command>$(Python) test.py sod --scenario-name &quot;%(Identity)&quot;</Command>
      <PostCommands>$(Python) post.py</PostCommands>
    </HelixWorkItem>
	<XHarnessAppBundleToTest Include="Device Startup - iOS Maui Default" Condition="'$(iOSLlvmBuild)' == 'False'">
    <AppBundlePath>$(WorkItemDirectory).zip</AppBundlePath>
    <WorkItemTimeout>00:05:00</WorkItemTimeout>
	  <TestTarget>ios-device</TestTarget>
	  <CustomCommands>
	   	<![CDATA[
          # PreCommands
          export XHARNESSPATH=$XHARNESS_CLI_PATH

          cp -r $HELIX_CORRELATION_PAYLOAD/MauiTesting.app $(ScenarioDirectory)mauiios/MauiTesting.app
          cp -f embedded.mobileprovision $(ScenarioDirectory)mauiios/MauiTesting.app
          cd $(ScenarioDirectory)mauiios
          sign MauiTesting.app

          $(Python) pre.py --name MauiTesting.app

          # Testing commands
          $(Python) test.py devicestartup --device-type ios --package-path MauiTesting.app --package-name net.dot.mauitesting --scenario-name "%(Identity)"
          ((result=$?))
          
          # Post commands
          $(Python) post.py
          exit $result
        ]]>
	  </CustomCommands>
	</XHarnessAppBundleToTest>
    <XHarnessAppBundleToTest Include="Device Startup - iOS Maui Podcast" Condition="'$(iOSLlvmBuild)' == 'False'">
    <AppBundlePath>$(WorkItemDirectory).zip</AppBundlePath>
    <WorkItemTimeout>00:05:00</WorkItemTimeout>
	  <TestTarget>ios-device</TestTarget>
	  <CustomCommands>
	   	<![CDATA[
          # PreCommands
          export XHARNESSPATH=$XHARNESS_CLI_PATH

          cp -r $HELIX_CORRELATION_PAYLOAD/Microsoft.NetConf2021.Maui.app $(ScenarioDirectory)mauiios/Microsoft.NetConf2021.Maui.app
          cp -f embedded.mobileprovision $(ScenarioDirectory)mauiios/Microsoft.NetConf2021.Maui.app
          cd $(ScenarioDirectory)mauiios
          sign Microsoft.NetConf2021.Maui.app

          $(Python) pre.py --name Microsoft.NetConf2021.Maui.app

          # Testing commands
          $(Python) test.py devicestartup --device-type ios --package-path Microsoft.NetConf2021.Maui.app --package-name net.dot.netconf2021.maui --scenario-name "%(Identity)"
          ((result=$?))
          
          # Post commands
          $(Python) post.py
          exit $result
        ]]>
	  </CustomCommands>
	</XHarnessAppBundleToTest>
  </ItemGroup>
  <!--
    This target is to work around the XHarness command that depend on scripts in ORIGPYPATH
    being run before we get to run our normal Post commands. AddXHarnessCLI is the XHarness
    Target so we just make sure we add this after that.
  -->
  <Target Name="ResetPYTHONPATHBeforeXHarnessCommand" AfterTargets="AddXHarnessCLI">
    <PropertyGroup>
      <HelixPostCommands>export PYTHONPATH=$ORIGPYPATH;$(HelixPostCommands)</HelixPostCommands>
    </PropertyGroup>
  </Target>
</Project>
