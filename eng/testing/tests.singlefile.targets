<Project>
  <PropertyGroup>
    <OutputType>Exe</OutputType>

    <DefineConstants>$(DefineConstants);SINGLE_FILE_TEST_RUNNER</DefineConstants>

    <BundleDir>$([MSBuild]::NormalizeDirectory('$(OutDir)', 'publish'))</BundleDir>
    <RunScriptOutputPath>$([MSBuild]::NormalizePath('$(BundleDir)', '$(RunScriptOutputName)'))</RunScriptOutputPath>
    <RuntimeIdentifier>$(PackageRID)</RuntimeIdentifier>

    <RunScriptCommand Condition="'$(TargetOS)' == 'windows'">$(AssemblyName).exe</RunScriptCommand>
    <RunScriptCommand Condition="'$(TargetOS)' != 'windows'">chmod +rwx $(AssemblyName) &amp;&amp; ./$(AssemblyName)</RunScriptCommand>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TestNativeAot)' != 'true'">
    <PublishSingleFile>true</PublishSingleFile>
    <UseAppHost>true</UseAppHost>
    <SelfContained>true</SelfContained>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TestNativeAot)' == 'true'">
    <IlcToolsPath>$(CoreCLRILCompilerDir)</IlcToolsPath>
    <IlcToolsPath Condition="'$(TargetArchitecture)' != '$(BuildArchitecture)'">$(CoreCLRCrossILCompilerDir)</IlcToolsPath>
    <CppCompilerAndLinker Condition="'$(TargetArchitecture)' != '$(BuildArchitecture)' and '$(HostOS)' != 'windows'">clang-9</CppCompilerAndLinker>
    <SysRoot Condition="'$(TargetArchitecture)' != '$(BuildArchitecture)' and '$(HostOS)' != 'windows'">$(ROOTFS_DIR)</SysRoot>
    <IlcBuildTasksPath>$(CoreCLRILCompilerDir)netstandard/ILCompiler.Build.Tasks.dll</IlcBuildTasksPath>
    <IlcSdkPath>$(CoreCLRAotSdkDir)</IlcSdkPath>
    <IlcFrameworkPath>$(NetCoreAppCurrentTestHostSharedFrameworkPath)</IlcFrameworkPath>
    <NoWarn>$(NoWarn);IL3050;IL3051;IL3052;IL3054;IL3055;IL1005;IL3002</NoWarn>
    <TrimMode>partial</TrimMode>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <SuppressTrimAnalysisWarnings>true</SuppressTrimAnalysisWarnings>

    <!-- Forced by ILLink targets; we should fix the SDK -->
    <SelfContained>true</SelfContained>

    <!-- Works around https://github.com/dotnet/runtime/issues/73926 -->
    <!-- RequiresUnreferenceCodeAttribute method called -->
    <NoWarn>$(NoWarn);IL2026;IL2116</NoWarn>
    <!-- Invalid use of DynamicallyAccessedMembersAttribute -->
    <NoWarn>$(NoWarn);IL2041;IL2042;IL2043;IL2056</NoWarn>
    <!-- Reference to removed attribute type -->
    <NoWarn>$(NoWarn);IL2045</NoWarn>
    <!-- RequiresUnreferencedCodeAttribute mismatch on virtual override -->
    <NoWarn>$(NoWarn);IL2046</NoWarn>
    <!-- COM marshalling warning -->
    <NoWarn>$(NoWarn);IL2050</NoWarn>
    <!-- Reflection intrinsics with unknown arguments -->
    <NoWarn>$(NoWarn);IL2032;IL2055;IL2057;IL2058;IL2059;IL2060;IL2061;IL2096</NoWarn>
    <!-- Unknown values passed to locations with DynamicallyAccessedMemberTypes -->
    <NoWarn>$(NoWarn);IL2062;IL2063;IL2064;IL2065;IL2066</NoWarn>
    <!-- Unsatisfied DynamicallyAccessedMembers requirements -->
    <NoWarn>$(NoWarn);IL2067;IL2068;IL2069;IL2070;IL2071;IL2072;IL2073;IL2074;IL2075;IL2076;IL2077;IL2078;IL2079;IL2080;IL2081;IL2082;IL2083;IL2084;IL2085;IL2086;IL2087;IL2088;IL2089;IL2090;IL2091</NoWarn>
    <!-- DynamicallyAccessedMembersAttribute mismatch on virtual override -->
    <NoWarn>$(NoWarn);IL2092;IL2093;IL2094;IL2095</NoWarn>
    <!-- DynamicallyAccessedMembersAttribute used on unsupported member -->
    <NoWarn>$(NoWarn);IL2097;IL2098;IL2099;IL2106</NoWarn>
    <!-- Unknown value passed to Expression.Property -->
    <NoWarn>$(NoWarn);IL2103</NoWarn>
    <!-- Multiple methods associated with state machine type or user method -->
    <NoWarn>$(NoWarn);IL2107;IL2117</NoWarn>
    <!-- Unannotated type derived from base type with RequiresUnreferencedCode -->
    <NoWarn>$(NoWarn);IL2109</NoWarn>
    <!-- Reflection access to members with DynamicallyAccessedMembers requirements -->
    <NoWarn>$(NoWarn);IL2110;IL2111;IL2114;IL2115</NoWarn>
    <!-- Reflection access to members with RequiresUnreferencedCode -->
    <NoWarn>$(NoWarn);IL2112;IL2113</NoWarn>
    <!-- Reflection access to compiler-generated code -->
    <NoWarn>$(NoWarn);IL2118;IL2119;IL2120</NoWarn>

  </PropertyGroup>

  <Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(TestNativeAot)' == 'true'" />

  <ItemGroup Condition="'$(TestNativeAot)' == 'true'">
    <RdXmlFile Include="$(MSBuildThisFileDirectory)default.rd.xml" />

    <!-- Tests are doing private reflection. -->
    <IlcArg Include="--nometadatablocking" />

    <!-- xunit calls MakeGenericType to check if something is IEquatable -->
    <IlcArg Include="--feature:System.Reflection.IsTypeConstructionEagerlyValidated=false" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(CommonTestPath)SingleFileTestRunner\SingleFileTestRunner.cs"
             Link="Common\SingleFileTestRunner\SingleFileTestRunner.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="xunit.runner.utility" Version="$(XUnitVersion)" />
  </ItemGroup>

  <Target Name="__ExcludeAssembliesFromSingleFile"
          Inputs="%(ResolvedFileToPublish.Identity)"
          Outputs="__NewResolvedFiles"
          BeforeTargets="_ComputeFilesToBundle">
    <PropertyGroup>
      <__Identity>%(ResolvedFileToPublish.Identity)</__Identity>
      <__FileName>%(ResolvedFileToPublish.Filename)%(ResolvedFileToPublish.Extension)</__FileName>
    </PropertyGroup>

    <ItemGroup>
      <__NewResolvedFiles Include="@(ResolvedFileToPublish)">
        <ExcludeFromSingleFile Condition="'%(__ExcludeFromBundle.Identity)' == '$(__FileName)'">true</ExcludeFromSingleFile>
      </__NewResolvedFiles>
    </ItemGroup>
  </Target>

  <Target Name="__UpdateExcludedAssembliesFromSingleFile"
          Inputs="ExcludeFromSingleFile"
          Outputs="ResolvedFileToPublish"
          DependsOnTargets="ComputeResolvedFilesToPublishList"
          BeforeTargets="_ComputeFilesToBundle">
    <ItemGroup>
      <ResolvedFileToPublish Remove="@(ResolvedFileToPublish)" />
      <ResolvedFileToPublish Include="@(__NewResolvedFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="PublishTestAsSingleFile"
          Condition="'$(IsCrossTargetingBuild)' != 'true'"
          AfterTargets="Build"
          DependsOnTargets="Publish;ArchiveTests" />

</Project>
