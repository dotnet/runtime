<Project>
  <!-- Settings for tools that publish as AOT -->

  <PropertyGroup Condition="'$(AotOrSingleFile)' == 'true' and '$(UseNativeAotForComponents)' == 'true'">
    <PublishAot>true</PublishAot>
    <!-- Use .dwarf files instead of .dsym files since our symbol exporting may not safely handle folders. -->
    <NativeSymbolExt Condition="'$(_IsApplePlatform)' == 'true'">.dwarf</NativeSymbolExt>
    <DsymUtilOptions Condition="'$(_IsApplePlatform)' == 'true'">--flat</DsymUtilOptions>
  </PropertyGroup>

  <PropertyGroup Condition="'$(AotOrSingleFile)' == 'true' and '$(UseNativeAotForComponents)' != 'true'">
    <PublishSingleFile>true</PublishSingleFile>
  </PropertyGroup>

  <PropertyGroup>
    <_TrueTargetRid>$(RuntimeIdentifier)</_TrueTargetRid>
    <!--
      NativeAOT's targets don't handle cross-targeting to a non-portable RID.
      Change the RID when importing the NativeAOT targets to the corresponding portable RID if specified.
    -->
    <RuntimeIdentifier Condition="'$(BaseRid)' != ''">$(BaseRid)</RuntimeIdentifier>
  </PropertyGroup>
  <Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(PublishAot)' == 'true' and '$(UseBootstrapLayout)' == 'true'" />
  <PropertyGroup>
    <RuntimeIdentifier>$(_TrueTargetRid)</RuntimeIdentifier>
  </PropertyGroup>


  <Target Name="LocateNativeCompiler"
          Condition="'$(UseNativeAotForComponents)' == 'true' and '$(HostOS)' != 'windows'"
          BeforeTargets="SetupOSSpecificProps">
      <PropertyGroup>
        <CppCompilerAndLinker Condition="'$(CppCompilerAndLinker)' == ''">clang</CppCompilerAndLinker>
        <SysRoot Condition="'$(CrossBuild)' == 'true'">$(ROOTFS_DIR)</SysRoot>
      </PropertyGroup>

      <Exec Command="sh -c 'build_arch=&quot;$(TargetArchitecture)&quot; compiler=&quot;$(CppCompilerAndLinker)&quot; . &quot;$(RepositoryEngineeringDir)/common/native/init-compiler.sh&quot; &amp;&amp; echo &quot;$CC;$LDFLAGS&quot;' 2>/dev/null"
            EchoOff="true"
            ConsoleToMsBuild="true"
            StandardOutputImportance="Low">
        <Output TaskParameter="ConsoleOutput" PropertyName="_CC_LDFLAGS" />
      </Exec>

    <PropertyGroup>
      <CppLinker>$(_CC_LDFLAGS.SubString(0, $(_CC_LDFLAGS.IndexOf(';'))))</CppLinker>
      <_LDFLAGS>$(_CC_LDFLAGS.SubString($([MSBuild]::Add($(_CC_LDFLAGS.IndexOf(';')), 1))))</_LDFLAGS>
      <LinkerFlavor Condition="$(_LDFLAGS.Contains('lld'))">lld</LinkerFlavor>
    </PropertyGroup>
  </Target>

</Project>
