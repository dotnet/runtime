<Project>
  
  <PropertyGroup>
    <NeedIlcFixes Condition="'$(NativeAotSupported)' == 'true' and '$(HostOS)' != 'windows'">true</NeedIlcFixes>
    <NeedIlcFixes Condition="'$(TestNativeAot)' == 'true' and '$(HostOS)' != 'windows'">true</NeedIlcFixes>
    <NeedIlcFixes Condition="'$(TestBuildMode)' == 'nativeaot' and '$(HostOS)' != 'windows'">true</NeedIlcFixes>
    <NeedIlcFixes Condition="'$(PublishAot)' == 'true' and '$(_hostOS)' != 'win'">true</NeedIlcFixes>
  </PropertyGroup>

 <!--
    Use init-compiler.sh to locate the compiler toolchain which was resolved for rest of the build.
    This target is essentially an override hook which is called before `SetupOSSpecificProps` in
    `Microsoft.NETCore.Native.Unix.targets`. Note that the input is `CppCompilerAndLinker`
    and the output is `CppLinker`, because from `SetupOSSpecificProps` onwards, we only use `CppLinker`
    (when alternative compiler, i.e. gcc, is not selected)
  -->
  <Target Name="LocateNativeCompiler"
          Condition="'$(NeedIlcFixes)' == 'true'"
          BeforeTargets="SetupOSSpecificProps">
    <PropertyGroup>
      <CppCompilerAndLinker Condition="'$(CppCompilerAndLinker)' == ''">clang</CppCompilerAndLinker>
    </PropertyGroup>

    <Exec Command="sh -c 'build_arch=&quot;$(TargetArchitecture)&quot; compiler=&quot;$(CppCompilerAndLinker)&quot; . &quot;$(RepositoryEngineeringDir)/common/native/init-compiler.sh&quot; &amp;&amp; echo &quot;$CC;$LDFLAGS&quot;' 2>/dev/null"
          EchoOff="true"
          ConsoleToMsBuild="true"
          StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="_CC_LDFLAGS" />
    </Exec>

    <PropertyGroup>
      <CppLinker>$(_CC_LDFLAGS.SubString(0, $(_CC_LDFLAGS.IndexOf(';'))))</CppLinker>
      <_LDFLAGS>$(_CC_LDFLAGS.SubString($([MSBuild]::Add($(_CC_LDFLAGS.IndexOf(';')), 1))))</_LDFLAGS>
      <!-- TODO: change to <LinkerFlavor>lld</LinkerFlavor> once we pick up an SDK with https://github.com/dotnet/runtime/pull/83558. -->
      <UseLLVMLinker Condition="$(_LDFLAGS.Contains('lld'))">true</UseLLVMLinker>
      <LinkerFlavor Condition="'$(UseLLVMLinker)' == 'true'">lld</LinkerFlavor>
    </PropertyGroup>
  </Target>

</Project>