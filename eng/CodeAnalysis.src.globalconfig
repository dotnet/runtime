is_global = true

# AD0001: Analyzer threw an exception
dotnet_diagnostic.AD0001.severity = warning

# BCL0001: Ensure minimum API surface is respected
dotnet_diagnostic.BCL0001.severity = warning

# BCL0010: AppContext default value expected to be true
dotnet_diagnostic.BCL0010.severity = warning

# BCL0011: AppContext default value defined in if statement with incorrect pattern
dotnet_diagnostic.BCL0011.severity = warning

# BCL0012: AppContext default value defined in if statement at root of switch case
dotnet_diagnostic.BCL0012.severity = warning

# BCL0020: Invalid SR.Format call
dotnet_diagnostic.BCL0020.severity = warning

# SYSLIB1045: Convert to 'GeneratedRegexAttribute'.
dotnet_diagnostic.SYSLIB1045.severity = warning

# SYSLIB1054: Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time
dotnet_diagnostic.SYSLIB1054.severity = warning

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = warning
dotnet_code_quality.CA1052.api_surface = private, internal

# CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = warning

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = suggestion

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = suggestion

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = suggestion

# CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = warning

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = warning

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning

# CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning

# CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = warning

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = warning

# CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = warning

# CA1421: This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1421.severity = suggestion

# CA1422: Validate platform compatibility
dotnet_diagnostic.CA1422.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = warning

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = warning

# CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1513.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = suggestion

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = warning

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning
dotnet_code_quality.CA1802.api_surface = private, internal

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = suggestion

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning
dotnet_code_quality.CA1822.api_surface = private, internal

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = warning

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = warning

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = warning

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = suggestion

# CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = warning

# CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = suggestion

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = warning

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = warning

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = warning

# CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA1855.severity = warning

# CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1856.severity = error

# CA1857: A constant is expected for the parameter
dotnet_diagnostic.CA1857.severity = warning

# CA1858: Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.CA1858.severity = warning

# CA1859: Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = warning

# CA1860: Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1860.severity = warning

# CA1861: Avoid constant arrays as arguments
dotnet_diagnostic.CA1861.severity = warning

# CA1862: Prefer using 'StringComparer'/'StringComparison' to perform case-insensitive string comparisons
dotnet_diagnostic.CA1862.severity = suggestion

# CA1863: Use 'CompositeFormat'
dotnet_diagnostic.CA1863.severity = suggestion

# CA1864: Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1864.severity = warning

# CA1868: Unnecessary call to 'Contains' for sets
dotnet_diagnostic.CA1868.severity = warning

# CA1869: Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1869.severity = warning

# CA1870: Use a cached 'SearchValues' instance
dotnet_diagnostic.CA1870.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

# CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = warning

# CA2020: Prevent behavioral change
dotnet_diagnostic.CA2020.severity = warning

# CA2021: Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2021.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning
dotnet_code_quality.CA2208.api_surface = public

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = warning

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = warning

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = warning

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = warning

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = warning

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = warning

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning

# CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = warning

# CA2260: Use correct type parameter
dotnet_diagnostic.CA2260.severity = warning

# CA2261: Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.CA2261.severity = warning

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning

# CA3076: Insecure XSLT script processing
dotnet_diagnostic.CA3076.severity = warning

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = warning

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = warning

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning

# CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = warning

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning

# CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning

# IL3000: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3000.severity = warning

# IL3001: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3001.severity = warning

# IL3002: Using member with RequiresAssemblyFilesAttribute can break functionality when embedded in a single-file app
dotnet_diagnostic.IL3002.severity = warning

# RS1001: Missing diagnostic analyzer attribute
dotnet_diagnostic.RS1001.severity = warning

# RS1002: Missing kind argument when registering an analyzer action
dotnet_diagnostic.RS1002.severity = warning

# RS1003: Unsupported SymbolKind argument when registering a symbol analyzer action
dotnet_diagnostic.RS1003.severity = warning

# RS1004: Recommend adding language support to diagnostic analyzer
dotnet_diagnostic.RS1004.severity = warning

# RS1005: ReportDiagnostic invoked with an unsupported DiagnosticDescriptor
dotnet_diagnostic.RS1005.severity = warning

# RS1006: Invalid type argument for DiagnosticAnalyzer's Register method
dotnet_diagnostic.RS1006.severity = warning

# RS1008: Avoid storing per-compilation data into the fields of a diagnostic analyzer
dotnet_diagnostic.RS1008.severity = warning

# RS1009: Only internal implementations of this interface are allowed
dotnet_diagnostic.RS1009.severity = error

# RS1010: Create code actions should have a unique EquivalenceKey for FixAll occurrences support
dotnet_diagnostic.RS1010.severity = warning

# RS1011: Use code actions that have a unique EquivalenceKey for FixAll occurrences support
dotnet_diagnostic.RS1011.severity = warning

# RS1012: Start action has no registered actions
dotnet_diagnostic.RS1012.severity = warning

# RS1013: Start action has no registered non-end actions
dotnet_diagnostic.RS1013.severity = warning

# RS1014: Do not ignore values returned by methods on immutable objects
dotnet_diagnostic.RS1014.severity = warning

# RS1017: DiagnosticId for analyzers must be a non-null constant
dotnet_diagnostic.RS1017.severity = warning

# RS1018: DiagnosticId for analyzers must be in specified format
dotnet_diagnostic.RS1018.severity = warning

# RS1019: DiagnosticId must be unique across analyzers
dotnet_diagnostic.RS1019.severity = warning

# RS1021: Invalid entry in analyzer category and diagnostic ID range specification file
dotnet_diagnostic.RS1021.severity = warning

# RS1022: Do not use types from Workspaces assembly in an analyzer
dotnet_diagnostic.RS1022.severity = warning

# RS1023: Upgrade MSBuildWorkspace
dotnet_diagnostic.RS1023.severity = warning

# RS1024: Symbols should be compared for equality
dotnet_diagnostic.RS1024.severity = warning

# RS1025: Configure generated code analysis
dotnet_diagnostic.RS1025.severity = warning

# RS1026: Enable concurrent execution
dotnet_diagnostic.RS1026.severity = warning

# RS1027: Types marked with DiagnosticAnalyzerAttribute(s) should inherit from DiagnosticAnalyzer
dotnet_diagnostic.RS1027.severity = warning

# RS1029: Do not use reserved diagnostic IDs
dotnet_diagnostic.RS1029.severity = warning

# RS1030: Do not invoke Compilation.GetSemanticModel() method within a diagnostic analyzer
dotnet_diagnostic.RS1030.severity = warning

# RS1031: Define diagnostic title correctly
dotnet_diagnostic.RS1031.severity = warning

# RS1032: Define diagnostic message correctly
dotnet_diagnostic.RS1032.severity = warning

# RS1033: Define diagnostic description correctly
dotnet_diagnostic.RS1033.severity = warning

# RS1034: Prefer 'IsKind' for checking syntax kinds
dotnet_diagnostic.RS1034.severity = warning

# RS1035: Do not use APIs banned for analyzers
dotnet_diagnostic.RS1035.severity = error

# RS1036: Specify analyzer banned API enforcement setting
dotnet_diagnostic.RS1036.severity = warning

# RS1037: Add "CompilationEnd" custom tag to compilation end diagnostic descriptor
dotnet_diagnostic.RS1037.severity = warning

# RS2000: Add analyzer diagnostic IDs to analyzer release
dotnet_diagnostic.RS2000.severity = warning

# RS2001: Ensure up-to-date entry for analyzer diagnostic IDs are added to analyzer release
dotnet_diagnostic.RS2001.severity = warning

# RS2002: Do not add removed analyzer diagnostic IDs to unshipped analyzer release
dotnet_diagnostic.RS2002.severity = warning

# RS2003: Shipped diagnostic IDs that are no longer reported should have an entry in the 'Removed Rules' table in unshipped file
dotnet_diagnostic.RS2003.severity = warning

# RS2004: Diagnostic IDs marked as removed in analyzer release file should not be reported by analyzers
dotnet_diagnostic.RS2004.severity = warning

# RS2005: Remove duplicate entries for diagnostic ID in the same analyzer release
dotnet_diagnostic.RS2005.severity = warning

# RS2006: Remove duplicate entries for diagnostic ID between analyzer releases
dotnet_diagnostic.RS2006.severity = warning

# RS2007: Invalid entry in analyzer release file
dotnet_diagnostic.RS2007.severity = warning

# RS2008: Enable analyzer release tracking
dotnet_diagnostic.RS2008.severity = warning

# SA1000: Spacing around keywords
# suggestion until https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3478 is resolved
dotnet_diagnostic.SA1000.severity = suggestion

# SA1001: Commas should not be preceded by whitespace
dotnet_diagnostic.SA1001.severity = warning

# SA1014: Opening generic brackets should not be preceded by a space
dotnet_diagnostic.SA1014.severity = warning

# SA1018: Nullable type symbol should not be preceded by a space
dotnet_diagnostic.SA1018.severity = warning

# SA1020: Increment symbol should not be preceded by a space
dotnet_diagnostic.SA1020.severity = warning

# SA1026: Keyword followed by span or blank line
dotnet_diagnostic.SA1026.severity = warning

# SA1027: Tabs and spaces should be used correctly
dotnet_diagnostic.SA1027.severity = warning

# SA1028: Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = warning

# SA1102: Query clause should follow previous clause
dotnet_diagnostic.SA1102.severity = warning

# SA1105: Query clauses spanning multiple lines should begin on own line
dotnet_diagnostic.SA1105.severity = warning

# SA1113: Comma should be on the same line as previous parameter
dotnet_diagnostic.SA1113.severity = warning

# SA1115: Parameter should begin on the line after the previous parameter
dotnet_diagnostic.SA1115.severity = warning

# SA1121: Use built-in type alias
dotnet_diagnostic.SA1121.severity = warning

# SA1129: Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = warning

# SA1136: Enum values should be on separate lines
dotnet_diagnostic.SA1136.severity = warning

# SA1141: Use tuple syntax
dotnet_diagnostic.SA1141.severity = warning

# SA1142: Refer to tuple elements by name
dotnet_diagnostic.SA1142.severity = warning

# SA1205: Partial elements should declare an access modifier
dotnet_diagnostic.SA1205.severity = warning

# SA1206: Keyword ordering - TODO Re-enable as warning after https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3527
dotnet_diagnostic.SA1206.severity = suggestion

# SA1212: A get accessor appears after a set accessor within a property or indexer
dotnet_diagnostic.SA1212.severity = warning

# SA1302: Interface names should begin with I
dotnet_diagnostic.SA1302.severity = warning

# SA1400: Member should declare an access modifier
dotnet_diagnostic.SA1400.severity = warning

# SA1404: Code analysis suppression should have justification
dotnet_diagnostic.SA1404.severity = warning

# SA1410: Remove delegate parens when possible
dotnet_diagnostic.SA1410.severity = warning

# SA1411: Attribute constructor shouldn't use unnecessary parenthesis
dotnet_diagnostic.SA1411.severity = warning

# SA1517: Code should not contain blank lines at start of file
dotnet_diagnostic.SA1517.severity = warning

# SA1518: Code should not contain blank lines at the end of the file
dotnet_diagnostic.SA1518.severity = warning

# IDE0001: Simplify name
dotnet_diagnostic.IDE0001.severity = suggestion

# IDE0002: Simplify member access
dotnet_diagnostic.IDE0002.severity = suggestion

# IDE0003: Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = suggestion

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = suggestion

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = suggestion

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = suggestion

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = suggestion

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = suggestion

# IDE0019: Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = suggestion

# IDE0020: Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0020.severity = warning

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = suggestion

# IDE0029: Use coalesce expression
dotnet_diagnostic.IDE0029.severity = warning

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = warning

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = warning

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = suggestion

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = suggestion

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = suggestion

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = warning

# IDE0038: Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0038.severity = suggestion

# IDE0039: Use local function
dotnet_diagnostic.IDE0039.severity = suggestion

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = suggestion

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = warning

# IDE0043: Invalid format string
dotnet_diagnostic.IDE0043.severity = warning

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = suggestion

# IDE0045: Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = suggestion

# IDE0046: Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = suggestion

# IDE0049: Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = suggestion

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = suggestion

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = suggestion

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = suggestion

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = suggestion

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning
dotnet_code_quality_unused_parameters = non_public

# IDE0062: Make local function 'static'
dotnet_diagnostic.IDE0062.severity = warning

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = warning

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = suggestion

# IDE0070: Use 'System.HashCode'
dotnet_diagnostic.IDE0070.severity = suggestion

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning

# IDE0073: The file header is missing or not located at the top of the file
dotnet_diagnostic.IDE0073.severity = warning

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = warning

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = silent

# IDE0076: Invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = warning

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = suggestion

# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = suggestion

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# IDE0081: Remove ByVal
dotnet_diagnostic.IDE0081.severity = none

# IDE0082: 'typeof' can be converted  to 'nameof'
dotnet_diagnostic.IDE0082.severity = warning

# IDE0084: Use pattern matching (IsNot operator)
dotnet_diagnostic.IDE0084.severity = none

# IDE0100: Remove redundant equality
dotnet_diagnostic.IDE0100.severity = warning

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# IDE0120: Simplify LINQ expression
dotnet_diagnostic.IDE0120.severity = none

# IDE0140: Simplify object creation
dotnet_diagnostic.IDE0140.severity = none

# IDE0170: Simplify property pattern
dotnet_diagnostic.IDE0170.severity = warning

# IDE0180: Use tuple swap
dotnet_diagnostic.IDE0180.severity = suggestion

# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = warning

# IDE0210: Use top-level statements
dotnet_diagnostic.IDE0210.severity = none

# IDE0211: Use program main
dotnet_diagnostic.IDE0211.severity = none

# IDE0230: Use UTF8 string literal
dotnet_diagnostic.IDE0230.severity = suggestion

# IDE0240: Remove redundant nullable directive
dotnet_diagnostic.IDE0240.severity = suggestion

# IDE0241: Remove unnecessary nullable directive
dotnet_diagnostic.IDE0241.severity = suggestion

# IDE0250: Make struct readonly
dotnet_diagnostic.IDE0250.severity = suggestion

# IDE0260: Use pattern matching
dotnet_diagnostic.IDE0260.severity = suggestion

# IDE0270: Use coalesce expression
dotnet_diagnostic.IDE0270.severity = suggestion

# IDE0280: Use 'nameof'
dotnet_diagnostic.IDE0280.severity = warning

# IDE1005: Delegate invocation can be simplified.
dotnet_diagnostic.IDE1005.severity = warning

