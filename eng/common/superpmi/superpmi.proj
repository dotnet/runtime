<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">

  <PropertyGroup Condition="'$(AGENT_OS)' == 'Windows_NT'">
    <FileSeparatorChar>\</FileSeparatorChar>
  </PropertyGroup>
  <PropertyGroup Condition="'$(AGENT_OS)' != 'Windows_NT'">
    <FileSeparatorChar>/</FileSeparatorChar>
  </PropertyGroup>

    <!-- The directory structure of pmiAssembliesPayload is
         source\workitem\pmiAssembliesDirectory\<machine_specific_load_0>\binaries
         source\workitem\pmiAssembliesDirectory\<machine_specific_load_1>\binaries
         ...
         source\workitem\pmiAssembliesDirectory\<machine_specific_load_N>\binaries

         PmiAssembliesPayload - Path that will be sent to helix machine to run collection on
         PmiAssembliesDirectory - Path on helix machine itself where superpmi.py will discover the sent assemblies.
    -->
  <PropertyGroup Condition="'$(AGENT_OS)' == 'Windows_NT'">
    <Python>py -3</Python>
    <PmiAssembliesPayload>$(WorkItemDirectory)\pmiAssembliesDirectory</PmiAssembliesPayload>
    <PmiAssembliesDirectory>%HELIX_WORKITEM_PAYLOAD%\binaries</PmiAssembliesDirectory>
    <SuperPMIDirectory>%HELIX_CORRELATION_PAYLOAD%\superpmi</SuperPMIDirectory>
    <OutputMchPath>%HELIX_WORKITEM_UPLOAD_ROOT%</OutputMchPath>
    <!-- Workaround until https://github.com/dotnet/arcade/pull/6179 is not available -->
    <HelixResultsDestinationDir>$(BUILD_SOURCESDIRECTORY\artifacts\helixresults</HelixResultsDestinationDir>
    <WorkItemCommand>$(SuperPMIDirectory)\superpmi.py collect --pmi -pmi_location $(SuperPMIDirectory)\pmi.dll </WorkItemCommand>
  </PropertyGroup>
  <PropertyGroup Condition="'$(AGENT_OS)' != 'Windows_NT'">
    <Python>py -3</Python>
    <PmiAssembliesPayload>$(WorkItemDirectory)/pmiAssembliesDirectory</PmiAssembliesPayload>
    <PmiAssembliesDirectory>$HELIX_WORKITEM_PAYLOAD/binaries</PmiAssembliesDirectory>
    <SuperPMIDirectory>$HELIX_CORRELATION_PAYLOAD/superpmi</SuperPMIDirectory>
    <OutputMchPath>$HELIX_WORKITEM_UPLOAD_ROOT</OutputMchPath>
    <!-- Workaround until https://github.com/dotnet/arcade/pull/6179 is not available -->
    <HelixResultsDestinationDir>$(BUILD_SOURCESDIRECTORY/artifacts/helixresults</HelixResultsDestinationDir>
    <WorkItemCommand>$(SuperPMIDirectory)/superpmi.py collect --pmi -pmi_location $(SuperPMIDirectory)/pmi.dll </WorkItemCommand>
  </PropertyGroup>

  <PropertyGroup Condition="'$(WorkItemCommand)' != ''">
    <WorkItemCommand>$(Python) $(WorkItemCommand) -pmi_assemblies $(PmiAssembliesDirectory) -arch $(Architecture) -build_type $(BuildConfig) -core_root $(SuperPMIDirectory)</WorkItemCommand>
  </PropertyGroup>

  <PropertyGroup>
    <EnableAzurePipelinesReporter>false</EnableAzurePipelinesReporter>
    <EnableXUnitReporter>false</EnableXUnitReporter>
    <WorkItemTimeout>5:00</WorkItemTimeout>
    <WorkItemTimeout Condition="'$(HelixSourcePrefix)' != 'official'">0:15</WorkItemTimeout>
  </PropertyGroup>

  <ItemGroup>
    <HelixCorrelationPayload Include="$(CorrelationPayloadDirectory)">
      <PayloadDirectory>%(Identity)</PayloadDirectory>
    </HelixCorrelationPayload>
  </ItemGroup>

  <PropertyGroup>
    <PartitionCount>1</PartitionCount>
  </PropertyGroup>

  <ItemGroup>
    <Partition Include="$(MchFileTag).Libraries" PmiAssemblies="Core_Root" OutputMchName="libraries.pmi" />
    <!-- <Partition Include="$(MchFileTag).Tests" PmiAssemblies="Tests" OutputMchName="tests.pmi" /> -->
  </ItemGroup>

  <ItemGroup>
    <HelixWorkItem Include="@(Partition)">
    <!-- TODO: Here too make payload folder different for workitem.Name -->
      <PayloadDirectory>$(PmiAssembliesPayload)$(FileSeparatorChar)%(HelixWorkItem.PmiAssemblies)</PayloadDirectory>
      <Command>$(WorkItemCommand) -output_mch_path $(OutputMchPath)$(FileSeparatorChar)%(HelixWorkItem.OutputMchName).$(MchFileTag).mch</Command>
      <Timeout>$(WorkItemTimeout)</Timeout>
      <DownloadFilesFromResults>%(HelixWorkItem.OutputMchName).$(MchFileTag).mch;%(HelixWorkItem.OutputMchName).$(MchFileTag).mch.mct</DownloadFilesFromResults>
    </HelixWorkItem>
  </ItemGroup>

    <!--
    This is useful for local testing to print the produced helix items
    To use this when you are changing how items are produced, uncomment the target
    and replace the Project item at the top of the file with this:
    <Project DefaultTargets="printItems">

    Once you've done that you can run this to see the results:
    dotnet msbuild .\scenarios.proj /v:n
   -->
   <!-- <PropertyGroup>
     <HelixTargetQueues>Some_Queue</HelixTargetQueues>
   </PropertyGroup>
  <Target Name="printItems">
        <Message Text="@(HelixWorkItem -> 'name: %(HelixWorkItem.Identity)
     dir: %(HelixWorkItem.PayloadDirectory)
     pre: %(HelixWorkItem.PreCommands)
     command: %(HelixWorkItem.Command)
     post: %(HelixWorkItem.PostCommands)
     timeout: %(HelixWorkItem.Timeout)  '"/>
  </Target> -->

</Project>