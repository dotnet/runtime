<Project>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <!--
      Disable RAR from transitively discovering dependencies for references. This is required as we don't copy
      dependencies over into the output directory which means RAR can't resolve them.
    -->
    <_FindDependencies>false</_FindDependencies>
  </PropertyGroup>

   <!-- If a CoreLib ProjectReference is present, make all P2P assets non transitive. -->
  <ItemGroup Condition="'@(ProjectReference)' != '' and
                         @(ProjectReference->AnyHaveMetadataValue('Identity', '$(CoreLibProject)'))">
    <ProjectReference Update="@(ProjectReference)"
                      PrivateAssets="all" />
  </ItemGroup>

  <!-- Project references shouldn't be copied to the output for non test apps. -->
  <ItemDefinitionGroup Condition="'$(IsTestProject)' != 'true' and '$(IsTestSupportProject)' != 'true'">
    <ProjectReference>
      <Private>false</Private>
    </ProjectReference>
  </ItemDefinitionGroup>

  <!-- Filter out transitive P2Ps which should be excluded. -->
  <Target Name="FilterTransitiveProjectReferences"
          AfterTargets="IncludeTransitiveProjectReferences"
          Condition="'$(DisableTransitiveProjectReferences)' != 'true' and
                     '@(DefaultReferenceExclusion)' != ''">
    <ItemGroup>
      <_transitiveProjectReferenceWithExclusion Include="@(ProjectReference)">
        <Exclusion>%(DefaultReferenceExclusion.Identity)</Exclusion>
      </_transitiveProjectReferenceWithExclusion>
      <ProjectReference Remove="@(_transitiveProjectReferenceWithExclusion)"
                        Condition="'%(_transitiveProjectReferenceWithExclusion.NuGetPackageId)' == '%(_transitiveProjectReferenceWithExclusion.Exclusion)'" />
    </ItemGroup>
  </Target>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and
                        ('$(IsSourceProject)' == 'true' or '$(IsTestProject)' == 'true' or '$(IsTestSupportProject)' == 'true')">
    <_projectReferenceWithOriginal Include="@(ProjectReference)"
                                   Original="%(Identity)" />
    <_projectReferenceByFileName Include="@(_projectReferenceWithOriginal->'%(FileName)')" />
  </ItemGroup>

  <!-- Make NetCoreAppLibrary P2Ps which aren't packable not app-local (non private). -->
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and
                        ('$(IsSourceProject)' == 'true' or '$(IsTestProject)' == 'true' or '$(IsTestSupportProject)' == 'true')">
    <_projectReferencePackable Include="@(_projectReferenceByFileName)"
                               Exclude="@(NetCoreAppLibrary->WithMetadataValue('IsPackable', ''))" />
    <_projectReferenceNonPackable Include="@(_projectReferenceByFileName)"
                                  Exclude="@(_projectReferencePackable)" />
    <ProjectReference Update="@(_projectReferenceNonPackable->'%(Original)')"
                      PrivateAssets="all"
                      Private="false" />
  </ItemGroup>

</Project>
