<Project>
  <PropertyGroup>
    <!-- Disable RAR from transitively discovering dependencies for References -->
    <_FindDependencies>false</_FindDependencies>
  </PropertyGroup>

  <!-- netstandard is a default reference whenever building an implementation assembly for .NETCoreApp. -->
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and
                        '$(IsSourceProject)' == 'true'">
    <Reference Include="netstandard"
               Private="false" />
  </ItemGroup>

   <!-- If a CoreLib ProjectReference is present, make all P2P assets non transitive. -->
  <ItemGroup Condition="'@(ProjectReference)' != '' and
                         @(ProjectReference->AnyHaveMetadataValue('Identity', '$(CoreLibProject)'))">
    <ProjectReference Update="@(ProjectReference)"
                      PrivateAssets="all" />
  </ItemGroup>

  <!-- Project references shouldn't be copied to the output for non test apps. -->
  <ItemDefinitionGroup Condition="'$(IsTestProject)' != 'true' and '$(IsTestSupportProject)' != 'true'">
    <ProjectReference>
      <Private>false</Private>
    </ProjectReference>
  </ItemDefinitionGroup>

  <!-- Filter out transitive P2Ps which should be excluded. -->
  <Target Name="FilterTransitiveProjectReferences"
          AfterTargets="IncludeTransitiveProjectReferences"
          Condition="'$(DisableTransitiveProjectReferences)' != 'true' and
                     '@(DefaultReferenceExclusion)' != ''">
    <ItemGroup>
      <_transitiveProjectReferenceWithExclusion Include="@(ProjectReference)">
        <Exclusion>%(DefaultReferenceExclusion.Identity)</Exclusion>
      </_transitiveProjectReferenceWithExclusion>
      <ProjectReference Remove="@(_transitiveProjectReferenceWithExclusion)"
                        Condition="'%(_transitiveProjectReferenceWithExclusion.NuGetPackageId)' == '%(_transitiveProjectReferenceWithExclusion.Exclusion)'" />
    </ItemGroup>
  </Target>

  <!-- Make shared framework assemblies not app-local (non private). -->
  <Target Name="UpdateProjectReferencesWithPrivateAttribute"
          AfterTargets="AssignProjectConfiguration"
          BeforeTargets="PrepareProjectReferences"
          Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and
                     ('$(IsTestProject)' == 'true' or '$(IsTestSupportProject)' == 'true') and
                     '@(ProjectReferenceWithConfiguration)' != ''">
    <ItemGroup>
      <ProjectReferenceWithConfiguration PrivateAssets="all"
                                         Private="false"
                                         Condition="$(NetCoreAppLibrary.Contains('%(Filename);'))" />
    </ItemGroup>
  </Target>

</Project>
