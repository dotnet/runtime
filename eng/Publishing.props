<Project>

  <PropertyGroup>
    <ProducesDotNetReleaseShippingAssets>true</ProducesDotNetReleaseShippingAssets>
    <PublishDependsOnTargets>$(PublishDependsOnTargets);_PublishInstallers</PublishDependsOnTargets>
  </PropertyGroup>

  <ItemGroup Condition="'$(DotNetBuildRepo)' == 'true'">
    <_InstallersToPublish Remove="@(_InstallersToPublish)" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.tar.gz" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.zip" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.deb" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.rpm" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.exe" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsPackagesDir)**\*.msi" UploadPathSegment="Runtime" />
  </ItemGroup>

  <Target Name="_PublishInstallers">

    <ItemGroup>
      <_SymbolsArchive Include="$(ArtifactsPackagesDir)**\Symbols.runtime.tar.gz" Condition="'$(DotNetBuildFromSource)' == 'true'" />
      <!-- Exclude Symbols archive as it is already included, with correct blob path, in Publish.proj. -->
      <_InstallersToPublish Remove="@(_SymbolsArchive)" Condition="'$(DotNetBuildFromSource)' == 'true'" />
    </ItemGroup>

    <!-- Discover the runtime package version from dotnet-runtime-<Version>-<Rid>.<Extension> archive. -->
    <PropertyGroup>
      <_RuntimeFilenamePrefix>dotnet-runtime-</_RuntimeFilenamePrefix>
      <_PackageRid>$(OutputRID)</_PackageRid>
      <!-- Use TargetRid if OutputRID isn't available, i.e. on Windows. -->
      <_PackageRid Condition="'$(_PackageRid)' == ''">$(TargetRid)</_PackageRid>
    </PropertyGroup>
    <ItemGroup>
      <_RuntimeArchiveItem Include="$(ArtifactsPackagesDir)**\$(_RuntimeFilenamePrefix)*$(_PackageRid)$(ArchiveExtension)" />
      <_RuntimeInternalArchiveItem Include="$(ArtifactsPackagesDir)**\dotnet-runtime-internal*$(_PackageRid)$(ArchiveExtension)" />
      <_RuntimeArchiveItem Remove="@(_RuntimeInternalArchiveItem)" />
    </ItemGroup>

    <!-- Extract runtime version from runtime archive filename. -->
    <PropertyGroup>
      <_RuntimeArchiveFilename>%(_RuntimeArchiveItem.Filename)%(_RuntimeArchiveItem.Extension)</_RuntimeArchiveFilename>
      <_RuntimeVersion>$(_RuntimeArchiveFilename.Replace('$(_RuntimeFilenamePrefix)','').Replace('-$(_PackageRid)$(ArchiveExtension)',''))</_RuntimeVersion>
    </PropertyGroup>

    <ItemGroup>
      <ItemsToPushToBlobFeed Include="@(_InstallersToPublish)">
        <ManifestArtifactData>NonShipping=false</ManifestArtifactData>
        <PublishFlatContainer>true</PublishFlatContainer>
        <RelativeBlobPath>%(_InstallersToPublish.UploadPathSegment)/$(_RuntimeVersion)/%(Filename)%(Extension)</RelativeBlobPath>
      </ItemsToPushToBlobFeed>
    </ItemGroup>
  </Target>

</Project>
