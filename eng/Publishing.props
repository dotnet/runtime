<Project>
  <PropertyGroup>
    <ProducesDotNetReleaseShippingAssets>true</ProducesDotNetReleaseShippingAssets>
    <!-- This avoids creating VS.*.symbols.nupkg packages that are identical to the original package. -->
    <AutoGenerateSymbolPackages>false</AutoGenerateSymbolPackages>
  </PropertyGroup>

  <Target Name="GetNonStableProductVersion">
    <!-- Retrieve the non-stable runtime pack product version.
         Don't stabilize the package version in order to retrieve the VersionSuffix. -->
    <MSBuild Projects="$(RepoRoot)src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.CoreCLR.sfxproj"
             Targets="ReturnProductVersion"
             Properties="IsShipping=false;
                         Crossgen2SdkOverridePropsPath=;
                         Crossgen2SdkOverrideTargetsPath=">
      <Output TaskParameter="TargetOutputs" PropertyName="NonStableProductVersion" />
    </MSBuild>
  </Target>

  <!--
    Only generate the productVersion.txt and runtime-productVersion.txt files when we're building
    either the full VMR repo or not building in the VMR infrastructure.
    This ensures that we don't produce these files in the "Repo source build" builds,
    but we do produce them in both the VMR and the runtime official build.
  -->
  <PropertyGroup Condition="'$(DotNetBuildOrchestrator)' == 'true'">
    <ShouldGenerateProductVersionFiles Condition="'$(PackageRID)' == 'win-x64' and ('$(DotNetBuildPass)' == '' or '$(DotNetBuildPass)' == '1')">true</ShouldGenerateProductVersionFiles>
    <ShouldGenerateProductVersionFiles Condition="'$(DotNetBuildSourceOnly)' == 'true'">true</ShouldGenerateProductVersionFiles>
  </PropertyGroup>

  <Target Name="GenerateProductVersionFiles"
          DependsOnTargets="GetNonStableProductVersion"
          BeforeTargets="PublishToAzureDevOpsArtifacts"
          Condition="'$(ShouldGenerateProductVersionFiles)' == 'true'">
    <!-- Retrieve the runtime pack product version. -->
    <MSBuild Projects="$(RepoRoot)src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.CoreCLR.sfxproj"
             Targets="ReturnProductVersion"
             Properties="Crossgen2SdkOverridePropsPath=;
                         Crossgen2SdkOverrideTargetsPath=">
      <Output TaskParameter="TargetOutputs" PropertyName="ProductVersionForVersionsFile" />
    </MSBuild>

    <ItemGroup>
      <ProductVersionFile Include="$(ArtifactsShippingPackagesDir)productVersion.txt" />
      <ProductVersionFile Include="$(ArtifactsShippingPackagesDir)runtime-productVersion.txt" />
    </ItemGroup>

    <!-- Generate productVersion.txt file containing the product version. -->
    <WriteLinesToFile File="%(ProductVersionFile.Identity)"
                      Lines="$(ProductVersionForVersionsFile)"
                      Overwrite="true"
                      Encoding="ASCII" />

    <ItemGroup>
      <Artifact Include="@(ProductVersionFile)"
                RelativeBlobPath="Runtime/$(NonStableProductVersion)/%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

  <Target Name="AddRelativeBlobPathToInstallerArtifacts"
          DependsOnTargets="GetNonStableProductVersion"
          BeforeTargets="PublishToAzureDevOpsArtifacts"
          AfterTargets="GenerateChecksumsFromArtifacts">
    <ItemGroup>
      <Artifact Condition="'%(Artifact.PublishFlatContainer)' == 'true' and '%(Artifact.RelativeBlobPath)' == ''"
                RelativeBlobPath="Runtime/$(NonStableProductVersion)/%(Artifact.SubBlobFolder)%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>
</Project>
