<Project>

  <PropertyGroup>
    <GitHubRepositoryName>runtime</GitHubRepositoryName>
  </PropertyGroup>

  <!-- Set up the dotnet/runtime source-build command. -->
  <PropertyGroup>
    <BaseInnerSourceBuildCommand>$(CurrentRepoSourceBuildSourceDir)eng\build-source-build.sh</BaseInnerSourceBuildCommand>

    <SourceBuildPortable>true</SourceBuildPortable>
    <SourceBuildPortable Condition="'$(SourceBuildNonPortable)' == 'true'">false</SourceBuildPortable>

    <!-- If TargetRid not specified, detect RID based on portability. -->
    <TargetRid Condition="'$(TargetRid)' == '' and '$(SourceBuildNonPortable)' == 'true'">$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</TargetRid>
    <TargetRid Condition="'$(TargetRid)' == ''">$(__DistroRid)</TargetRid>

    <!-- Split e.g. 'fedora.33-x64' into 'fedora.33' and 'x64'. -->
    <_targetRidPlatformIndex>$(TargetRid.LastIndexOfAny("-"))</_targetRidPlatformIndex>
    <TargetRidWithoutPlatform>$(TargetRid.Substring(0, $(_targetRidPlatformIndex)))</TargetRidWithoutPlatform>
    <TargetRidPlatform>$(TargetRid.Substring($(_targetRidPlatformIndex)).TrimStart('-'))</TargetRidPlatform>

    <LogVerbosity Condition="'$(LogVerbosity)' == ''">minimal</LogVerbosity>

    <!-- Common args -->
    <InnerBuildArgs>$(InnerBuildArgs) --arch $(TargetRidPlatform)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --configuration Release</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:RuntimeConfiguration=Release</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:MicrosoftNetFrameworkReferenceAssembliesVersion=1.0.0</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --binaryLog</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --ci</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --runtimeConfiguration Release</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --verbosity $(LogVerbosity)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --nodereuse false</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --warnAsError false</InnerBuildArgs>

    <!-- CoreCLR args -->
    <InnerBuildArgs>$(InnerBuildArgs) --coreclr-args</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) -cmakeargs</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) -DCLR_CMAKE_USE_SYSTEM_LIBUNWIND=TRUE</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:ContinuousIntegrationBuild=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:PackageRid=$(TargetRid)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:NoPgoOptimize=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:KeepNativeSymbols=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:RuntimeOS=$(TargetRidWithoutPlatform)</InnerBuildArgs>

    <!-- Libraries args -->
    <InnerBuildArgs>$(InnerBuildArgs) --libraries-args</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --restore --build --pack</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:SkipTests=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:ConfigurationGroup=Release</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:PackageRid=$(TargetRid)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:RuntimeOS=$(TargetRidWithoutPlatform)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:PortableBuild=$(SourceBuildPortable)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:BuildAllPackages=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:BuildAllOOBPackages=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:KeepNativeSymbols=true</InnerBuildArgs>

    <!-- Installer args -->
    <InnerBuildArgs>$(InnerBuildArgs) --installer-args</InnerBuildArgs>
    <!-- Restore and build?????????? -->
    <InnerBuildArgs>$(InnerBuildArgs) /p:PortableBuild=$(SourceBuildPortable)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:KeepNativeSymbols=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) -cmakeargs</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) -DCLR_CMAKE_USE_SYSTEM_LIBUNWIND=TRUE</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:BuildDebPackage=false</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:BuildAllPackages=true</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:RestoreAllBuildRids=false</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) /p:OutputRid=$(TargetRid)</InnerBuildArgs>
    <InnerBuildArgs>$(InnerBuildArgs) --warnAsError false</InnerBuildArgs>

    <InnerBuildArgs>$(InnerBuildArgs) --additional-args</InnerBuildArgs>
  </PropertyGroup>

  <ItemGroup>
    <!-- Work around issue where local clone may cause failure using non-origin remote fallback: https://github.com/dotnet/sourcelink/issues/629 -->
    <InnerBuildEnv Include="EnableSourceControlManagerQueries=false" />
    <InnerBuildEnv Include="EnableSourceLink=false" />
    <InnerBuildEnv Include="DisableSourceLink=true" />
    <InnerBuildEnv Include="DeterministicSourcePaths=false" />
  </ItemGroup>

  <Target Name="ApplySourceBuildPatchFiles"
          AfterTargets="PrepareInnerSourceBuildRepoRoot"
          BeforeTargets="RunInnerSourceBuildCommand">

    <ItemGroup>
      <SourceBuildPatchFile Include="$(RepositoryEngineeringDir)source-build-patches\*.patch" />
    </ItemGroup>

    <Exec
      Command="git apply --ignore-whitespace --whitespace=nowarn &quot;%(SourceBuildPatchFile.FullPath)&quot;"
      WorkingDirectory="$(InnerSourceBuildRepoRoot)"
      Condition="'@(SourceBuildPatchFile)' != ''" />
  </Target>

  <Target Name="CategorizeRuntimeSupplementalArtifacts"
          BeforeTargets="GetCategorizedIntermediateNupkgContents">
    <ItemGroup>
      <!--
        Order matters in some situations: put more specific patterns first, so
        they are the ones "picked" during item-name-only deduplication.
      -->
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-hostfxr-internal-*.tar.gz" Category="hostfxr-internal" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-runtime-internal-*.tar.gz" Category="runtime-internal" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-runtime-*.tar.gz" Category="runtime" />

      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-crossgen2-*.tar.gz" Category="Crossgen2Pack.Archive" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-apphost-pack-*.tar.gz" Category="HostPack.Archive" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-targeting-pack-*.tar.gz" Category="RefPack.Archive" />

      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.NETCore.App.Crossgen2.*.nupkg" Category="Crossgen2Pack" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.NETCore.App.Host.*.nupkg" Category="HostPack" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.NETCore.App.Ref.*.nupkg" Category="RefPack" />
      <IntermediateNupkgArtifactFile Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.NETCore.App.Runtime.*.nupkg" Category="RuntimePack" />

      <IntermediateNupkgArtifactFile
        Include="
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\dotnet-ilverify.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.NET.Sdk.IL.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\*Microsoft.NETCore.ILAsm.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\*Microsoft.NETCore.ILDAsm.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\*Microsoft.NETCore.TestHost.*.nupkg;
          "
        Category="CoreCLR" />

      <IntermediateNupkgArtifactFile
        Include="$(CurrentRepoSourceBuildArtifactsPackagesDir)NonShipping\Microsoft.NET.HostModel.*.nupkg;"
        Category="HostLibraries" />

      <IntermediateNupkgArtifactFile
        Include="
          $(CurrentRepoSourceBuildArtifactsPackagesDir)NonShipping\Microsoft.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\Microsoft.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\System.*.nupkg;
          $(CurrentRepoSourceBuildArtifactsPackagesDir)Shipping\runtime.*.runtime.native.System.*.nupkg;
          "
        Category="Libraries" />
    </ItemGroup>
  </Target>

</Project>
