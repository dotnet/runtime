# The purpose of this pipeline is to exercise various developer workflows in the repo.
# Primarily, it is meant to cover local (non-cross) build scenarios and
# source-build scenarios that commonly cause build breaks.

trigger: none

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    - eng/pipelines/global-build.yml
    exclude:
    - '**.md'
    - .devcontainer/*
    - .github/*
    - docs/*
    - eng/pipelines/coreclr/*.*
    - eng/pipelines/libraries/*.*
    - eng/pipelines/installer/*.*
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    isOfficialBuild: false
    stages:
    - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      - stage: EvaluatePaths
        displayName: Evaluate Paths
        jobs:
          - template: /eng/pipelines/common/evaluate-default-paths.yml

    - stage: Build
      jobs:

      #
      # Build with Release config and runtimeConfiguration with MSBuild generator
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - windows_x86
          jobParameters:
            testGroup: innerloop
            nameSuffix: MSBuild_CMake
            buildArgs: -c Release -msbuild
            timeoutInMinutes: 120
            condition:
              or(
                eq(stageDependencies.EvaluatePaths.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
                eq(stageDependencies.EvaluatePaths.evaluate_paths.outputs['SetPathVars_non_mono_and_wasm.containsChange'], true),
                eq(variables['isRollingBuild'], true))

      #
      # Build with RuntimeFlavor only. This exercise code paths where only RuntimeFlavor is
      # specified. Catches cases where we depend on Configuration also being specified
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: debug
          platforms:
          - linux_x64_dev_innerloop
          jobParameters:
            testGroup: innerloop
            nameSuffix: RuntimeFlavor_Mono
            buildArgs: /p:RuntimeFlavor=Mono
            timeoutInMinutes: 120
            condition:
              or(
                eq(stageDependencies.EvaluatePaths.evaluate_paths.outputs['SetPathVars_non_wasm.containsChange'], true),
                eq(variables['isRollingBuild'], true))

      #
      # Build Libraries AllConfigurations. This exercises the code path where we build libraries for all
      # configurations on a non Windows operating system.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: debug
          platforms:
          - linux_x64_dev_innerloop
          jobParameters:
            nameSuffix: Libraries_AllConfigurations
            buildArgs: -subset libs -allconfigurations
            timeoutInMinutes: 120
            condition:
              or(
                eq(stageDependencies.EvaluatePaths.evaluate_paths.outputs['SetPathVars_non_mono_and_wasm.containsChange'], true),
                eq(variables['isRollingBuild'], true))

      #
      # Build native assets on Alpine. This exercises more modern musl libc changes that have a tendendy to break source-build.
      # We don't add this as a source-build job as the repo source-build infrastructure isn't set up to run on alpine effectively.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - linux_musl_x64_dev_innerloop
          jobParameters:
            nameSuffix: Musl_Validation
            buildArgs: -subset clr.native+libs.native+host.native -c $(_BuildConfig)
            timeoutInMinutes: 120
            condition:
              or(
                eq(stageDependencies.EvaluatePaths.evaluate_paths.outputs['SetPathVars_non_mono_and_wasm.containsChange'], true),
                eq(variables['isRollingBuild'], true))

      #
      # Build Portable SourceBuild
      #
      - template: /eng/common/templates/jobs/source-build.yml
        parameters:
          platforms:
          - name: Linux_x64
            targetRid: linux-x64
            container: SourceBuild_linux_x64
