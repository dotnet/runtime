# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

jobs:
#
# Evaluate paths
#
- ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
  - template: /eng/pipelines/common/evaluate-default-paths.yml

#
# Build the whole product using Mono and run libraries tests
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    buildConfig: Release
    runtimeFlavor: mono
    platforms:
    - Android_x86
    - Android_x64
    - Android_arm64
    variables:
      # map dependencies variables to local variables
      - name: librariesContainsChange
        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'] ]
      - name: monoContainsChange
        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'] ]
    jobParameters:
      testGroup: innerloop
      nameSuffix: AllSubsets_Mono
      buildArgs: -s mono+libs+host+packs+libs.tests -c $(_BuildConfig) /p:ArchiveTests=true /p:RunDisabledAndroidTests=true
      timeoutInMinutes: 180
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_installer.containsChange'], true),
          eq(variables['isFullMatrix'], true))
      # extra steps, run tests
      extraStepsTemplate: /eng/pipelines/libraries/helix.yml
      extraStepsParameters:
        creator: dotnet-bot
        testRunNamePrefixSuffix: Mono_$(_BuildConfig)
        condition: >-
          or(
          eq(variables['librariesContainsChange'], true),
          eq(variables['monoContainsChange'], true),
          eq(variables['isFullMatrix'], true))

#
# Android AOT needs a linker fix in order to work
#
# Build the whole product using Mono and run libraries tests
#
#- template: /eng/pipelines/common/platform-matrix.yml
#  parameters:
#    jobTemplate: /eng/pipelines/common/global-build-job.yml
#    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
#    buildConfig: Release
#    runtimeFlavor: mono
#    platforms:
#    - Android_arm64
#    variables:
#      # map dependencies variables to local variables
#      - name: librariesContainsChange
#        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'] ]
#      - name: monoContainsChange
#        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'] ]
#    jobParameters:
#      testGroup: innerloop
#      nameSuffix: AllSubsets_AOT_Mono
#      buildArgs: -s mono+libs+host+packs+libs.tests -c $(_BuildConfig) /p:ArchiveTests=true /p:RunDisabledAndroidTests=true /p:RunAOTCompilation=true /p:EnableAggressiveTrimming=true
#      timeoutInMinutes: 180
#      condition: >-
#        or(
#          eq(dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'], true),
#          eq(dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'], true),
#          eq(dependencies.evaluate_paths.outputs['SetPathVars_installer.containsChange'], true),
#          eq(variables['isFullMatrix'], true))
      # extra steps, run tests
#      extraStepsTemplate: /eng/pipelines/libraries/helix.yml
#      extraStepsParameters:
#        creator: dotnet-bot
#        testRunNamePrefixSuffix: Mono_$(_BuildConfig)
#        condition: >-
#          or(
#          eq(variables['librariesContainsChange'], true),
#          eq(variables['monoContainsChange'], true),
#          eq(variables['isFullMatrix'], true))

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    buildConfig: Release
    platforms:
    - Android_arm
    jobParameters:
      testGroup: innerloop
      nameSuffix: Build_Subset_Mono
      buildArgs: -subset mono+libs

#
# Build the whole product using Mono for Android and run runtime tests with Android emulator
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    buildConfig: Release
    runtimeFlavor: mono
    platforms:
    - Android_x64
    #- Android_arm64  # disabled due to https://github.com/dotnet/runtime/issues/47850
    variables:
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _HelixSource
          value: pr/dotnet/runtime/$(Build.SourceBranch)
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _HelixSource
          value: ci/dotnet/runtime/$(Build.SourceBranch)
      - name: timeoutPerTestInMinutes
        value: 60
      - name: timeoutPerTestCollectionInMinutes
        value: 180
    jobParameters:
      testGroup: innerloop
      nameSuffix: AllSubsets_Mono_RuntimeTests
      buildArgs: -s mono+libs -c $(_BuildConfig)
      timeoutInMinutes: 240
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'], true),
          eq(variables['isFullMatrix'], true))
      # extra steps, run tests
      extraStepsTemplate: /eng/pipelines/common/templates/runtimes/android-runtime-and-send-to-helix.yml
      extraStepsParameters:
        creator: dotnet-bot
        testRunNamePrefixSuffix: Mono_$(_BuildConfig)
