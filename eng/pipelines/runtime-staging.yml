# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - release/*.*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

schedules:
  - cron: "0 7,19 * * *" # run at 7:00 and 19:00 (UTC) which is 23:00 and 11:00 (PST).
    displayName: Runtime-staging default schedule
    branches:
      include:
      - main
    always: false # run only if there were changes since the last successful scheduled run.

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:

      #
      # Evaluate paths
      #
      - ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
        - template: /eng/pipelines/common/evaluate-default-paths.yml

      #
      # Build the whole product using Mono and run runtime tests with the JIT.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
          buildConfig: Release
          runtimeFlavor: mono
          platforms:
            - iossimulator_x64
          variables:
            - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _HelixSource
                value: pr/dotnet/runtime/$(Build.SourceBranch)
            - ${{ if and(eq(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _HelixSource
                value: ci/dotnet/runtime/$(Build.SourceBranch)
            - name: timeoutPerTestInMinutes
              value: 60
            - name: timeoutPerTestCollectionInMinutes
              value: 180
          jobParameters:
            testGroup: innerloop
            nameSuffix: AllSubsets_Mono_RuntimeTests
            runtimeVariant: minijit
            buildArgs: -s mono+libs -c $(_BuildConfig)
            timeoutInMinutes: 240
            condition: >-
              or(
                eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
                eq(dependencies.evaluate_paths.outputs['SetPathVars_mono_excluding_wasm.containsChange'], true),
                eq(variables['isRollingBuild'], true))
            ${{ if eq(variables['isRollingBuild'], true) }}:
              # extra steps, run tests
              extraStepsTemplate: /eng/pipelines/common/templates/runtimes/build-runtime-tests-and-send-to-helix.yml
              extraStepsParameters:
                creator: dotnet-bot
                testRunNamePrefixSuffix: Mono_$(_BuildConfig)
              extraVariablesTemplates:
                - template: /eng/pipelines/common/templates/runtimes/test-variables.yml
