parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  uploadTests: false

steps:
  # Build coreclr native test output
  - script: $(Build.SourcesDirectory)/src/tests/build$(scriptExt) skipstressdependencies skipmanaged skipgeneratelayout $(buildConfigUpper) ${{ parameters.archType }}
    displayName: Build native test components

  # Copy all build output into artifacts staging directory
  - template: /eng/pipelines/libraries/prepare-for-bin-publish.yml

  # Zip CoreCLR Build Output
  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: $(Build.SourcesDirectory)/artifacts/bin/coreclr/${{ parameters.osGroup }}.${{ parameters.archType }}.$(buildConfigUpper)
      archiveType: $(archiveType)
      tarCompression: $(tarCompression)
      includeRootFolder: false
      archiveExtension: $(archiveExtension)
      artifactName: CoreCLRProduct__${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
      displayName: 'CoreCLR product build'

  # Zip Test Build
  - ${{ if eq(parameters.uploadTests, true) }}:
    - template: /eng/pipelines/common/upload-artifact-step.yml
      parameters:
        rootFolder: $(Build.SourcesDirectory)/artifacts/helix
        includeRootFolder: true
        archiveType: $(archiveType)
        archiveExtension: $(archiveExtension)
        tarCompression: $(tarCompression)
        artifactName: libraries_test_assets_${{ parameters.osGroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
        displayName: Test Assets

  # Zip product native assets for use by Tests
  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: $(Build.SourcesDirectory)/artifacts/tests/coreclr/obj/${{ parameters.osGroup }}.${{ parameters.archType }}.$(buildConfigUpper)
      includeRootFolder: false
      archiveType: $(archiveType)
      tarCompression: $(tarCompression)
      archiveExtension: $(archiveExtension)
      artifactName: CoreCLRNativeTestArtifacts_${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
      displayName: 'native test components'

  # Zip Libraries Build Output
  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: $(Build.ArtifactStagingDirectory)/artifacts
      archiveType: $(archiveType)
      tarCompression: $(tarCompression)
      includeRootFolder: false
      archiveExtension: $(archiveExtension)
      artifactName: libraries_bin_${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}
      displayName: Build Assets
