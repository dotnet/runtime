# This pipeline provides an easy mechanism for us to run runtime and libaries tests with native sanitizers enabled
# without having to compilcate the runtime.yml pipeline.
trigger: none

schedules:
- cron: "0 11 * * 2"
  displayName: Tuesday at 3:00 AM (UTC-8:00)
  branches:
    include:
    - main

variables:
  - template: /eng/pipelines/common/variables.yml

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: AddressSanitizer
      jobs:
      #
      # Build the whole product with CoreCLR and run runtime tests with AddressSanitizer
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
          buildConfig: Checked
          runtimeFlavor: coreclr
          platforms:
            - linux_x64_sanitizer
            - osx_x64
            - windows_x64
          variables:
            - name: _nativeSanitizersArg
              value: -fsanitize address
          jobParameters:
            nameSuffix: CoreCLR_RuntimeTests
            buildArgs: -s clr+libs -c $(_BuildConfig) $(_nativeSanitizersArg)
            timeoutInMinutes: 300
            # extra steps, run tests
            postBuildSteps:
              - template: /eng/pipelines/common/templates/runtimes/build-runtime-tests-and-send-to-helix.yml
                parameters:
                  creator: dotnet-bot
                  testRunNamePrefixSuffix: CoreCLR_$(_BuildConfig)
                  scenarios:
                    - normal
                    - no_tiered_compilation
            extraVariablesTemplates:
              - template: /eng/pipelines/common/templates/runtimes/test-variables.yml
                parameters:
                  testGroup: innerloop
                  sanitizers: 'address'

      #
      # NativeAOT release build and smoke tests with AddressSanitizer
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
          buildConfig: release
          platforms:
            - linux_x64_sanitizer
            - osx_x64
            - windows_x64
          variables:
            - name: _nativeSanitizersArg
              value: -fsanitize address
          jobParameters:
            testGroup: innerloop
            timeoutInMinutes: 120
            nameSuffix: NativeAOT
            buildArgs: -s clr.aot+libs -rc $(_BuildConfig) -lc Release $(_nativeSanitizersArg)
            postBuildSteps:
              - template: /eng/pipelines/coreclr/nativeaot-post-build-steps.yml
                parameters:
                  creator: dotnet-bot
                  testBuildArgs: nativeaot tree nativeaot
                  liveLibrariesBuildConfig: Release
            extraVariablesTemplates:
              - template: /eng/pipelines/common/templates/runtimes/test-variables.yml
                parameters:
                  sanitizers: 'address'
                  liveLibrariesBuildConfig: Release
