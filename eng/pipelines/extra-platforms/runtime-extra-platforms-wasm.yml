# This contains only wasm-specific jobs
# These are run as part of runtime-extra-platforms by default.
# But can also be triggered manually via `runtime-wasm` name
#   /azp run runtime-wasm

parameters:
  isExtraPlatformsBuild: false
  isWasmOnlyBuild: false
  isRollingBuild: false
  excludeLibTests: false
  excludeNonLibTests: false

jobs:

#
# ************ Rolling builds: *************
# - only run eat, and aot tests
# - rest are covered by runtime, and runtime-staging
#
- ${{ if eq(parameters.isRollingBuild, true) }}:
  # AOT Library tests
  - template: /eng/pipelines/common/templates/wasm-library-aot-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      nameSuffix: _AOT
      runAOT: true
      alwaysRun: true

  # High resource AOT Library tests
  - template: /eng/pipelines/common/templates/wasm-library-aot-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      nameSuffix: _HighResource_AOT
      extraBuildArgs: /p:TestAssemblies=false /p:RunHighAOTResourceRequiringTestsOnly=true
      buildAOTOnHelix: false
      runAOT: true
      alwaysRun: true

  # Wasm Debugger tests - firefox
  #  - disabled from rolling builds
  #- template: /eng/pipelines/common/templates/wasm-debugger-tests.yml
    #parameters:
      #platforms:
        #- browser_wasm_firefox
      #browser: firefox
      ## ff tests are unstable currently
      #shouldContinueOnError: true
      #alwaysRun: true

  # Disabled for now
  #- template: /eng/pipelines/coreclr/perf-wasm-jobs.yml
    #parameters:
      #runProfile: 'v8'
      #onlySanityCheck: true

#
# ********** For !rolling builds, IOW - PR builds *************
# - run everything, if relevant paths changed
# - For runtime-wasm, force run all the jobs
#
- ${{ if and(ne(parameters.isRollingBuild, true), ne(parameters.excludeLibTests, true)) }}:
  # Library tests
  # these run on runtime also
  - template: /eng/pipelines/common/templates/wasm-library-tests.yml
    parameters:
      platforms:
        - browser_wasm
      # Don't run for rolling builds, as this is covered
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      scenarios:
        - normal
        - WasmTestOnBrowser

  # this only runs on the extra pipeline
  - template: /eng/pipelines/common/templates/wasm-library-tests.yml
    parameters:
      platforms:
        - browser_wasm
      nameSuffix: _NodeJs
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}
      scenarios:
        - WasmTestOnNodeJS

  # Library tests - Windows
  - template: /eng/pipelines/common/templates/wasm-library-tests.yml
    parameters:
      platforms:
        - browser_wasm_win
      # Don't run for rolling builds, as this is covered
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      scenarios:
        - WasmTestOnBrowser
        - WasmTestOnNodeJS

  # Library tests with full threading 
  - template: /eng/pipelines/common/templates/wasm-library-tests.yml
    parameters:
      platforms:
        - browser_wasm
        #- browser_wasm_win
      nameSuffix: _Threading
      extraBuildArgs: /p:MonoWasmBuildVariant=multithread /p:_WasmPThreadPoolSize=8
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      # Always run for runtime-wasm because tests are not run in runtime
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}

      # NOTE - Since threading is experimental, we don't want to block mainline work
      shouldContinueOnError: true
      scenarios:
        - normal
        - WasmTestOnBrowser
        - WasmTestOnNodeJS

  # Library tests with internal threads only
  - template: /eng/pipelines/common/templates/wasm-library-tests.yml
    parameters:
      platforms:
        - browser_wasm
        #- browser_wasm_win
      nameSuffix: _Threading_PerfTracing
      extraBuildArgs: /p:MonoWasmBuildVariant=perftrace
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      # Always run for runtime-wasm because tests are not run in runtime
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}

      # NOTE - Since threading is experimental, we don't want to block mainline work
      shouldContinueOnError: true
      scenarios:
        - normal
        - WasmTestOnBrowser
        - WasmTestOnNodeJS

  # EAT Library tests - only run on linux
  - template: /eng/pipelines/common/templates/wasm-library-aot-tests.yml
    parameters:
      platforms:
        - browser_wasm
      nameSuffix: _EAT
      runAOT: false
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}

  # AOT Library tests
  - template: /eng/pipelines/common/templates/wasm-library-aot-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      nameSuffix: _AOT
      runAOT: true
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}

  # High resource AOT Library tests
  - template: /eng/pipelines/common/templates/wasm-library-aot-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      nameSuffix: _HighResource_AOT
      extraBuildArgs: /p:TestAssemblies=false /p:RunHighAOTResourceRequiringTestsOnly=true
      buildAOTOnHelix: false
      runAOT: true
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}

- ${{ if and(ne(parameters.isRollingBuild, true), ne(parameters.excludeNonLibTests, true)) }}:
  # Wasm.Build.Tests
  - template: /eng/pipelines/common/templates/wasm-build-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}

  # Debugger tests
  - template: /eng/pipelines/common/templates/wasm-debugger-tests.yml
    parameters:
      platforms:
        - browser_wasm
        - browser_wasm_win
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}

  - template: /eng/pipelines/common/templates/wasm-runtime-tests.yml
    parameters:
      platforms:
        - browser_wasm
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}

  - template: /eng/pipelines/common/templates/wasm-debugger-tests.yml
    parameters:
      platforms:
        - browser_wasm_firefox
      browser: firefox
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isWasmOnlyBuild: ${{ parameters.isWasmOnlyBuild }}
      alwaysRun: ${{ parameters.isWasmOnlyBuild }}
      # ff tests are unstable currently
      shouldContinueOnError: true

  # Disable for now
  #- template: /eng/pipelines/coreclr/perf-wasm-jobs.yml
    #parameters:
      #runProfile: 'v8'
      #onlySanityCheck: true
