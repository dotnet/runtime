# This contains only iOS/tvOS-specific jobs
# These are run as part of runtime-extra-platforms by default.
# But can also be triggered manually via `runtime-ioslike` name
#   /azp run runtime-ioslike

parameters:
  isExtraPlatformsBuild: false
  isiOSLikeOnlyBuild: false
  isRollingBuild: false
  isMonoOnlyBuild: false
  isCoreclrOnlyBuild: false

jobs:

- ${{ if eq(parameters.isCoreclrOnlyBuild, false) }}:
  #
  # iOS/tvOS devices - Full AOT + AggressiveTrimming to reduce size
  # Build the whole product using Mono and run libraries tests
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
      buildConfig: Release
      runtimeFlavor: mono
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isiOSLikeOnlyBuild: ${{ parameters.isiOSLikeOnlyBuild }}
      platforms:
        - ios_arm64
        - tvos_arm64
      variables:
        # map dependencies variables to local variables
        - name: librariesContainsChange
          value: $[ dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'] ]
        - name: monoContainsChange
          value: $[ dependencies.evaluate_paths.outputs['SetPathVars_mono_excluding_wasm.containsChange'] ]
      jobParameters:
        testGroup: innerloop
        nameSuffix: AllSubsets_Mono
        isExtraPlatforms: ${{ parameters.isExtraPlatformsBuild }}
        buildArgs: -s mono+libs+libs.tests -c $(_BuildConfig) /p:ArchiveTests=true /p:DevTeamProvisioning=- /p:RunAOTCompilation=true $(_runSmokeTestsOnlyArg) /p:BuildTestsOnHelix=true /p:EnableAdditionalTimezoneChecks=true /p:UsePortableRuntimePack=true /p:BuildDarwinFrameworks=true /p:IsManualOrRollingBuild=true
        timeoutInMinutes: 180
        # extra steps, run tests
        extraStepsTemplate: /eng/pipelines/libraries/helix.yml
        extraStepsParameters:
          creator: dotnet-bot
          testRunNamePrefixSuffix: Mono_$(_BuildConfig)
          extraHelixArguments: /p:NeedsToBuildAppsOnHelix=true

  #
  # Build the whole product using Mono for iOS/tvOS and run runtime tests with iOS/tvOS devices
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
      buildConfig: Release
      runtimeFlavor: mono
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isiOSLikeOnlyBuild: ${{ parameters.isiOSLikeOnlyBuild }}
      platforms:
        - ios_arm64
        - tvos_arm64
      variables:
        - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
          - name: _HelixSource
            value: pr/dotnet/runtime/$(Build.SourceBranch)
        - ${{ if and(eq(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
          - name: _HelixSource
            value: ci/dotnet/runtime/$(Build.SourceBranch)
        - name: timeoutPerTestInMinutes
          value: 60
        - name: timeoutPerTestCollectionInMinutes
          value: 180
      jobParameters:
        testGroup: innerloop
        nameSuffix: AllSubsets_Mono_RuntimeTests
        buildArgs: -s mono+libs -c $(_BuildConfig)
        timeoutInMinutes: 240
        # extra steps, run tests
        extraVariablesTemplates:
          - template: /eng/pipelines/common/templates/runtimes/test-variables.yml
            parameters:
              testGroup: innerloop
        extraStepsTemplate: /eng/pipelines/common/templates/runtimes/build-runtime-tests-and-send-to-helix.yml
        extraStepsParameters:
          creator: dotnet-bot
          # FIXME: Currently, tracing/eventpipe tests are only enabled on iOS platforms. It should be expanded to include all runtime tests. Tracking issue: https://github.com/dotnet/runtime/issues/84254
          testBuildArgs: tree tracing/eventpipe
          testRunNamePrefixSuffix: Mono_$(_BuildConfig)

- ${{ if eq(parameters.isMonoOnlyBuild, false) }}:
  #
  # Build the whole product using NativeAOT for iOS/tvOS and run runtime tests with iOS/tvOS devices
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
      buildConfig: Release
      runtimeFlavor: coreclr
      isExtraPlatformsBuild: ${{ parameters.isExtraPlatformsBuild }}
      isiOSLikeOnlyBuild: ${{ parameters.isiOSLikeOnlyBuild }}
      platforms:
        - ios_arm64
        - tvos_arm64
      variables:
        - name: timeoutPerTestInMinutes
          value: 60
        - name: timeoutPerTestCollectionInMinutes
          value: 180
      jobParameters:
        testGroup: innerloop
        nameSuffix: AllSubsets_NativeAOT_RuntimeTests
        timeoutInMinutes: 240
        buildArgs: --cross -s clr.alljits+clr.tools+clr.nativeaotruntime+clr.nativeaotlibs+libs -c $(_BuildConfig)
        # extra steps, run tests
        extraVariablesTemplates:
          - template: /eng/pipelines/common/templates/runtimes/test-variables.yml
            parameters:
              testGroup: innerloop
        extraStepsTemplate: /eng/pipelines/common/templates/runtimes/build-runtime-tests-and-send-to-helix.yml
        extraStepsParameters:
          creator: dotnet-bot
          testBuildArgs: tree nativeaot/SmokeTests/UnitTests /p:BuildNativeAOTRuntimePack=true
          testRunNamePrefixSuffix: NativeAOT_$(_BuildConfig)
