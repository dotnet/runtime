# The conditions here are wbt specific right now
parameters:
  alwaysRun: false
  extraBuildArgs: ''
  isExtraPlatformsBuild: false
  nameSuffix: ''
  platforms: []
  publishArtifactsForWorkload: false

jobs:

#
# Build for Browser/wasm and test it
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    buildConfig: Release
    runtimeFlavor: mono
    platforms: ${{ parameters.platforms }}
    variables:
      # map dependencies variables to local variables
      - name: alwaysRunVar
        value: ${{ parameters.alwaysRun }}
      - name: shouldRunOnDefaultPipelines
        value: $[
          or(
            eq(variables['wasmDarcDependenciesChanged'], true),
            eq(dependencies.evaluate_paths.outputs['SetPathVars_tools_illink.containsChange'], true),
            eq(dependencies.evaluate_paths.outputs['SetPathVars_wasmbuildtests.containsChange'], true))
          ]
      - name: workloadSubsetArg
        ${{ if eq(parameters.publishArtifactsForWorkload, true) }}:
          value: '+mono.wasmworkload'
        ${{ else }}:
          value: ''

    jobParameters:
      isExtraPlatforms: ${{ parameters.isExtraPlatformsBuild }}
      testGroup: innerloop
      nameSuffix: ${{ parameters.nameSuffix }}_BuildOnly
      buildArgs: -s mono+libs+packs$(workloadSubsetArg) -c $(_BuildConfig) /p:BrowserHost=$(_hostedOs) ${{ parameters.extraBuildArgs }}
      timeoutInMinutes: 240
      # if !alwaysRun, then:
      #   if this is runtime-wasm (isWasmOnlyBuild):
      #     - then run only if it would not have run on default pipelines (based
      #       on path changes)
      #     - else run based on path changes
      condition: >-
        or(
          eq(variables['alwaysRunVar'], true),
          eq(variables['isDefaultPipeline'], variables['shouldRunOnDefaultPipelines']))
      extraStepsTemplate: /eng/pipelines/common/wasm-post-build-steps.yml
      extraStepsParameters:
        publishArtifactsForWorkload: ${{ parameters.publishArtifactsForWorkload }}
