parameters:
  alwaysRun: false
  isExtraPlatformsBuild: false
  platform: Browser_wasm

jobs:

#
# Build the whole product using Mono and run libraries tests, for Wasm.Build.Tests
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    buildConfig: Release
    runtimeFlavor: mono
    platforms:
      - ${{ parameters.platform }}
    variables:
      # map dependencies variables to local variables
      - name: wasmbuildtestsContainsChange
        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_wasmbuildtests.containsChange'] ]
      - name: allWasmContainsChange
        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_allwasm.containsChange'] ]
      - name: alwaysRunVar
        value: ${{ parameters.alwaysRun }}
      - WasmThreadingNuGetsName: BrowserWasm_NuGets_Threading_$(_hostedOs)
      - WasmThreadingNuGetsFolderPath: '$(Build.SourcesDirectory)/artifacts/threading-nugets'
      - WasmPerfTracingNuGetsName: BrowserWasm_NuGets_Threading_PerfTracing_$(_hostedOs)
      - WasmPerfTracingNuGetsFolderPath: '$(Build.SourcesDirectory)/artifacts/perftracing-nugets'

    jobParameters:
      dependsOn:
        - ${{ if eq(parameters.platform, 'Browser_wasm') }}:
          - build_Browser_wasm_Linux_Release_Threading
          - build_Browser_wasm_Linux_Release_Threading_PerfTracing
        - ${{ if eq(parameters.platform, 'Browser_wasm_win') }}:
          - build_Browser_wasm_Windows_Release_Threading
          - build_Browser_wasm_Windows_Release_Threading_PerfTracing
      isExtraPlatforms: ${{ parameters.isExtraPlatformsBuild }}
      testGroup: innerloop
      nameSuffix: WasmBuildTests
      buildArgs: -s mono+libs+host+packs+libs.tests -c $(_BuildConfig) /p:TestAssemblies=false /p:BrowserHost=$(_hostedOs)
      timeoutInMinutes: 180
      condition: >-
        or(
          eq(variables['alwaysRunVar'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_allwasm.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_wasmbuildtests.containsChange'], true))
      # extra steps, run tests
      extraStepsTemplate: /eng/pipelines/common/templates/pre-steps-with-helix-at-end.yml
      extraStepsParameters:
        preTemplate: /eng/pipelines/common/wasm-get-runtime-packs-prepare-for-wbt.yml
        preTemplateParameters:
          artifactsNameSuffix: ${{ parameters.nameSuffix }}
          uploadNuGets: ${{ parameters.uploadNuGets }}
          uploadTests: ${{ parameters.uploadTests }}
        #extraHelixArguments: ${{ parameters.runSmokeOnlyArg }} ${{ parameters.extraHelixArguments }}
        scenarios: buildwasmapps
        runTests: true
