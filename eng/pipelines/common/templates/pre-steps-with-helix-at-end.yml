parameters:
  archType: ''
  buildConfig: ''
  condition: always()
  creator: ''
  extraHelixArguments: ''
  helixQueues: ''
  interpreter: ''
  osGroup: ''
  preTemplate: ''
  preTemplateParameters: []
  runTests: true
  runtimeFlavor: ''
  shouldContinueOnError: false
  targetRid: ''
  testRunNamePrefixSuffix: ''
  testScope: 'innerloop' # innerloop | outerloop | all
  scenarios: ['normal']

steps:
  - ${{ if ne(parameters.preTemplate, '') }}:
    - template: ${{ parameters.preTemplate }}
      parameters:
        ${{ insert }}: ${{ parameters.preTemplateParameters }}

  - ${{ if eq(parameters.runTests, true) }}:
    - template: /eng/pipelines/libraries/helix.yml
      parameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        archType: ${{ parameters.archType }}
        buildConfig: ${{ parameters.buildConfig }}
        helixQueues: ${{ parameters.helixQueues }}
        osGroup: ${{ parameters.osGroup }}
        targetRid: ${{ parameters.targetRid }}
        testRunNamePrefixSuffix: ${{ parameters.testRunNamePrefixSuffix }}
        testScope: ${{ parameters.testScope }}
        interpreter: ${{ parameters.interpreter }}
        condition: ${{ parameters.condition }}
        shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
        extraHelixArguments: ${{ parameters.extraHelixArguments }} /p:BrowserHost=$(_hostedOs)
        creator: dotnet-bot
        scenarios: ${{ parameters.scenarios }}
