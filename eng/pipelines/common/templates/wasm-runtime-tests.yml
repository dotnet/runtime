parameters:
  alwaysRun: false
  isExtraPlatformsBuild: false
  platforms: []

jobs:

#
# Build the whole product using Mono and run runtime tests
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    buildConfig: Release
    runtimeFlavor: mono
    platforms: ${{ parameters.platforms }}
    variables:
      - name: allWasmContainsChange
        value: $[ dependencies.evaluate_paths.outputs['SetPathVars_allwasm.containsChange'] ]
      - name: alwaysRunVar
        value: ${{ parameters.alwaysRun }}
      - name: timeoutPerTestInMinutes
        value: 10
      - name: timeoutPerTestCollectionInMinutes
        value: 200
    jobParameters:
      testGroup: innerloop
      isExtraPlatforms: ${{ parameters.isExtraPlatformsBuild }}
      nameSuffix: AllSubsets_Mono_RuntimeTests
      runtimeVariant: monointerpreter
      buildArgs: -s mono+libs -c $(_BuildConfig)
      timeoutInMinutes: 180
      condition: >-
        or(
          eq(variables['alwaysRunVar'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_allwasm.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true))
      extraStepsTemplate: /eng/pipelines/common/templates/runtimes/wasm-runtime-and-send-to-helix.yml
      extraStepsParameters:
        creator: dotnet-bot
        testRunNamePrefixSuffix: Mono_$(_BuildConfig)
