### Check out job creating a git bundle and publishing it
### into an Azure artifact for reuse by the subsequent build and test execution phases.
### If paths is specified, we will create a job using evaluate-changed-paths.yml template
### for each path specified.

parameters:
  # Object containing subset include and exclude paths in an array form.
  # Scenarios:
  #  1. exclude paths are specified
  #     Will include all paths except the ones in the exclude list.
  #  2. include paths are specified
  #     Will only include paths specified in the list.
  #  3. exclude + include:
  #     1st we evaluate changes for all paths except ones in excluded list. If we can't find
  #     any applicable changes like that, then we evaluate changes for incldued paths
  #     if any of these two finds changes, then a variable will be set to true.
  #  In order to consume this variable you need to reference it via: $[ dependencies.checkout.outputs['SetPathVars_<subset>.containschange'] ]
  #
  #  Array form example
  #  paths:
  #  - subset: coreclr
  #    include:
  #    - src/libraries/System.Private.CoreLib/*
  #    exclude:
  #    - src/libraries/*
  #
  #  This example will include ALL path changes except the ones under src/libraries/*!System.Private.CoreLib/*
  paths: []

jobs:
- job: checkout
  displayName: Checkout

  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: Hosted MacOS

    ${{ if ne(variables['System.TeamProject'], 'public') }}:
      name: Hosted Mac Internal

  steps:
  - checkout: self
    clean: true
    fetchDepth: 20

  - script: git bundle create $(Build.StagingDirectory)/Checkout.bundle HEAD
    displayName: Create Checkout.bundle

  - publish: $(Build.StagingDirectory)/Checkout.bundle
    artifact: Checkout_bundle
    displayName: Upload Checkout.bundle

  - ${{ if and(ne(parameters.paths[0], ''), eq(variables['Build.Reason'], 'PullRequest')) }}:
    - ${{ each path in parameters.paths }}:
      - template: evaluate-changed-paths.yml
        parameters:
          subsetName: ${{ path.subset }} 
          arguments:
          - --difftarget origin/$(System.PullRequest.TargetBranch)
          - --subset ${{ path.subset }}
          - ${{ if ne(path.include[0], '') }}:
            - --includepaths '${{ join('+', path.include) }}'
          - ${{ if ne(path.exclude[0], '') }}:
            - --excludepaths '${{ join('+', path.exclude) }}'
