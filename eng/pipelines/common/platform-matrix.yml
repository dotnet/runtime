parameters:
  runtimeFlavor: 'coreclr'
  jobTemplate: ''
  buildConfig: ''
  platforms: []
  # platformGroup is a named collection of platforms. Allowed values:
  # 'all' - all platforms
  # 'gcstress' - platforms that support running under GCStress0x3 and GCStress0xC scenarios
  platformGroup: ''
  # helixQueueGroup is a named collection of Helix Queues. If specified, it determines which Helix queues are
  # used, instead of the usual criteria. Allowed values:
  # 'pr' - the queues used for a pull request for the platform. Typically a small set.
  # 'ci' - the queues used for a CI (post-merge) test run.
  # 'all' - the queues used for non-PR, non-CI test runs, e.g., Manual or Scheduled runs. Typically this is all available queues.
  # 'corefx' - the queues used for a corefx test run.
  helixQueueGroup: 'pr'
  # helixQueuesTemplate is a yaml template which will be expanded in order to set up the helix queues
  # for the given platform and helixQueueGroup.
  helixQueuesTemplate: ''
  stagedBuild: false
  # When set to false, suppresses reuse of OSX managed build artifacts (for pipelines without an OSX obj)
  managedOsxBuild: true
  # When set to true, passes the 'platforms' value as a job parameter also named 'platforms'.
  # Handled as an opt-in parameter to avoid excessive yaml.
  passPlatforms: false
  jobParameters: {}

jobs:

# Linux arm

- ${{ if or(containsValue(parameters.platforms, 'Linux_arm'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Linux
      archType: arm
      platform: Linux_arm
      container:
        image: ubuntu-18.04-cross-arm-16.04-09ec757-20200324125113
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Linux
        crossrootfsDir: '/crossrootfs/arm'
        ${{ insert }}: ${{ parameters.jobParameters }}

# Linux arm64

- ${{ if or(containsValue(parameters.platforms, 'Linux_arm64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Linux
      archType: arm64
      platform: Linux_arm64
      container:
        image: ubuntu-16.04-cross-arm64-cfdd435-20200121150126
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Linux
        crossrootfsDir: '/crossrootfs/arm64'
        ${{ insert }}: ${{ parameters.jobParameters }}

# Linux musl x64

- ${{ if or(containsValue(parameters.platforms, 'Linux_musl_x64'), eq(parameters.platformGroup, 'all')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Linux
      osSubgroup: _musl
      archType: x64
      platform: Linux_musl_x64
      container:
        # alpine coreclr cmake errors on newer builds
        ${{ if eq(parameters.runtimeFlavor, 'mono') }}:
          image: alpine-3.9-WithNode-0fc54a3-20200131134036
        ${{ if eq(parameters.runtimeFlavor, 'coreclr') }}:
          image: alpine-3.9-WithNode-0fc54a3-20190918214015
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        ${{ if ne(parameters.managedOsxBuild, true) }}:
          managedTestBuildOsGroup: Linux
          managedTestBuildOsSubgroup: _musl
        ${{ if eq(parameters.managedOsxBuild, true) }}:
          managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# Linux musl arm64

- ${{ if or(containsValue(parameters.platforms, 'Linux_musl_arm64'), eq(parameters.platformGroup, 'all')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Linux
      osSubgroup: _musl
      archType: arm64
      platform: Linux_musl_arm64
      container:
        image: ubuntu-16.04-cross-arm64-alpine-406629a-20200127195039
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Linux
        crossrootfsDir: '/crossrootfs/arm64'
        ${{ insert }}: ${{ parameters.jobParameters }}

# Linux x64

- ${{ if or(containsValue(parameters.platforms, 'Linux_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Linux
      archType: x64
      platform: Linux_x64
      container:
        image: centos-7-359e48e-20200313130914
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        ${{ if ne(parameters.managedOsxBuild, true) }}:
          managedTestBuildOsGroup: Linux
        ${{ if eq(parameters.managedOsxBuild, true) }}:
          managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# WebAssembly

- ${{ if containsValue(parameters.platforms, 'WebAssembly_wasm') }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: WebAssembly
      archType: wasm
      platform: WebAssembly_wasm
      container:
        image: ubuntu-16.04-bfcd90a-20200121150106
        registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        ${{ insert }}: ${{ parameters.jobParameters }}

# FreeBSD

# FreeBSD machines are currently offline. Re-enable in the official build when
# the machines are healthy.

# - template: xplat-setup.yml
#   parameters:
#     jobTemplate: ${{ parameters.jobTemplate }}
#     osGroup: FreeBSD
#     archType: x64
#     jobParameters:
#       runtimeFlavor: ${{ parameters.runtimeFlavor }}
#       buildConfig: ${{ parameters.buildConfig }}
#       # There are no FreeBSD helix queues, so we don't run tests at the moment.
#       helixQueues:
#         asString: ''
#         asArray: []
#       ${{ insert }}: ${{ parameters.jobParameters }}

# iOS x64

- ${{ if containsValue(parameters.platforms, 'iOS_x64') }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: iOS
      archType: x64
      platform: iOS_x64
      jobParameters:
        runtimeFlavor: mono
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# iOS arm

- ${{ if containsValue(parameters.platforms, 'iOS_arm') }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: iOS
      archType: arm
      platform: iOS_x64
      jobParameters:
        runtimeFlavor: mono
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# iOS arm64

- ${{ if containsValue(parameters.platforms, 'iOS_arm64') }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: iOS
      archType: arm64
      platform: iOS_x64
      jobParameters:
        runtimeFlavor: mono
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# macOS x64

- ${{ if or(containsValue(parameters.platforms, 'OSX_x64'), eq(parameters.platformGroup, 'all')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: OSX
      archType: x64
      platform: OSX_x64
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: OSX
        ${{ insert }}: ${{ parameters.jobParameters }}

# Windows x64

- ${{ if or(containsValue(parameters.platforms, 'Windows_NT_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Windows_NT
      archType: x64
      platform: Windows_NT_x64
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Windows_NT
        ${{ insert }}: ${{ parameters.jobParameters }}

# Windows x86

- ${{ if or(containsValue(parameters.platforms, 'Windows_NT_x86'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Windows_NT
      archType: x86
      platform: Windows_NT_x86
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Windows_NT
        ${{ insert }}: ${{ parameters.jobParameters }}

# Windows arm
- ${{ if or(containsValue(parameters.platforms, 'Windows_NT_arm'), eq(parameters.platformGroup, 'all')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Windows_NT
      archType: arm
      platform: Windows_NT_arm
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Windows_NT
        ${{ insert }}: ${{ parameters.jobParameters }}

# Windows arm64

- ${{ if or(containsValue(parameters.platforms, 'Windows_NT_arm64'), eq(parameters.platformGroup, 'all')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      osGroup: Windows_NT
      archType: arm64
      platform: Windows_NT_arm64
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        stagedBuild: ${{ parameters.stagedBuild }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ if eq(parameters.passPlatforms, true) }}:
          platforms: ${{ parameters.platforms }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        managedTestBuildOsGroup: Windows_NT
        ${{ insert }}: ${{ parameters.jobParameters }}
