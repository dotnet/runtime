parameters:
  runtimeFlavor: 'coreclr'
  jobTemplate: ''
  buildConfig: ''
  platforms: []
  # platformGroup is a named collection of platforms. Allowed values:
  # 'all' - all platforms
  # 'gcstress' - platforms that support running under GCStress0x3 and GCStress0xC scenarios
  platformGroup: ''
  # helixQueueGroup is a named collection of Helix Queues. If specified, it determines which Helix queues are
  # used, instead of the usual criteria. Values that must be supported by the supplied helixQueuesTemplate:
  # 'pr' - the queues used for a pull request for the platform. Typically a small set.
  # 'ci' - the queues used for a CI (post-merge) test run.
  # Other values might be supported by the template specified in helixQueuesTemplate, but they do not have specified
  # meanings here.
  helixQueueGroup: 'pr'
  # helixQueuesTemplate is a yaml template which will be expanded in order to set up the helix queues
  # for the given platform and helixQueueGroup.
  helixQueuesTemplate: ''
  container: ''
  shouldContinueOnError: false
  jobParameters: {}
  variables: []

jobs:


# Linux x64

- ${{ if or(containsValue(parameters.platforms, 'linux_x64'), containsValue(parameters.platforms, 'CoreClrTestBuildHost'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      variables: ${{ parameters.variables }}
      osGroup: linux
      archType: x64
      targetRid: linux-x64
      platform: linux_x64
      shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
      ${{ if eq(parameters.container, '') }}:
        container: linux_x64
      ${{ if ne(parameters.container, '') }}:
        container:
          image: ${{ parameters.container }}
          registry: mcr
      jobParameters:
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        buildConfig: ${{ parameters.buildConfig }}
        helixQueueGroup: ${{ parameters.helixQueueGroup }}
        crossBuild: true
        ${{ insert }}: ${{ parameters.jobParameters }}

# Browser WebAssembly

- ${{ if containsValue(parameters.platforms, 'browser_wasm') }}:
  - template: xplat-setup.yml
    parameters:
      jobTemplate: ${{ parameters.jobTemplate }}
      helixQueuesTemplate: ${{ parameters.helixQueuesTemplate }}
      variables: ${{ parameters.variables }}
      osGroup: browser
      archType: wasm
      targetRid: browser-wasm
      platform: browser_wasm
      shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
      container: browser_wasm
      jobParameters:
        hostedOs: linux
        runtimeFlavor: ${{ parameters.runtimeFlavor }}
        buildConfig: ${{ parameters.buildConfig }}
        ${{ insert }}: ${{ parameters.jobParameters }}
