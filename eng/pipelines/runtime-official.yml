trigger:
  batch: true
  branches:
    include:
    - master
    - release/*
    - internal/release/*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

# This is an official pipeline that should not be triggerable from a PR,
# there is no public pipeline assosiated with it.
pr: none

variables:
- template: /eng/pipelines/common/variables.yml
# TODO: (Consolidation) Switch away from old signing/validation variables from former Core-Setup. https://github.com/dotnet/runtime/issues/1027
- name: TeamName
  value: dotnet-core-acquisition
# Set the target blob feed for package publish during official and validation builds.
- name: _DotNetArtifactsCategory
  value: .NETCore
- name: _DotNetValidationArtifactsCategory
  value: .NETCoreValidation
- name: PostBuildSign
  value: true

stages:
- stage: Build
  jobs:

  #
  # Source Index Build
  #
  - template: ./source-index.yml

  #
  # Build CoreCLR
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
      buildConfig: release
      platforms:
      - OSX_arm64
      - OSX_x64
      - Linux_x64
      - Linux_arm
      - Linux_arm64
      - Linux_musl_x64
      - Linux_musl_arm
      - Linux_musl_arm64
      - windows_x86
      - windows_x64
      - windows_arm
      - windows_arm64
      jobParameters:
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        signBinaries: ${{ variables.isOfficialBuild }}
        timeoutInMinutes: 120

  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/crossdac-pack.yml
      buildConfig: release
      platforms:
      - windows_x64
      jobParameters:
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        timeoutInMinutes: 120
        crossDacPlatforms:
        - Linux_x64
        - Linux_arm
        - Linux_arm64
        - Linux_musl_x64
        - Linux_musl_arm
        - Linux_musl_arm64
        - windows_x64
        - windows_arm
        - windows_arm64
  #
  # Build Mono runtime packs
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      buildConfig: release
      runtimeFlavor: mono
      platforms:
      - Android_x64
      - Android_x86
      - Android_arm
      - Android_arm64
      - MacCatalyst_x64
      - MacCatalyst_arm64
      - tvOS_x64
      - tvOS_arm64
      - iOS_x64
      - iOS_x86
      - iOS_arm
      - iOS_arm64
      - OSX_x64
      - Linux_x64
      - Linux_arm
      - Linux_arm64
      - Linux_musl_x64
      - Browser_wasm
      # - Linux_musl_arm
      # - Linux_musl_arm64
      - windows_x64
      - windows_x86
      # - windows_arm
      # - windows_arm64
      jobParameters:
        buildArgs: -s mono+libs+host+packs -c $(_BuildConfig)
        nameSuffix: AllSubsets_Mono
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
        extraStepsParameters:
          name: MonoRuntimePacks

  # Build Mono AOT offset headers once, for consumption elsewhere
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/mono/templates/generate-offsets.yml
      buildConfig: release
      platforms:
      - Android_x64
      - Browser_wasm
      - tvOS_x64
      - iOS_x64

  #
  # Build Mono release AOT cross-compilers
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      runtimeFlavor: mono
      buildConfig: release
      platforms:
      - Linux_x64
      jobParameters:
        buildArgs: -s mono+packs -c $(_BuildConfig)
                   /p:MonoCrossAOTTargetOS=Android+Browser /p:SkipMonoCrossJitConfigure=true /p:BuildMonoAOTCrossCompilerOnly=true
        nameSuffix: CrossAOT_Mono
        runtimeVariant: crossaot
        dependsOn:
        - mono_android_offsets
        - mono_browser_offsets
        monoCrossAOTTargetOS:
        - Android
        - Browser
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
        extraStepsParameters:
          name: MonoRuntimePacks

  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      runtimeFlavor: mono
      buildConfig: release
      platforms:
      - Windows_x64
      jobParameters:
        buildArgs: -s mono+packs -c $(_BuildConfig)
                   /p:MonoCrossAOTTargetOS=Android+Browser /p:SkipMonoCrossJitConfigure=true /p:BuildMonoAOTCrossCompilerOnly=true
                   -ninja
        nameSuffix: CrossAOT_Mono
        runtimeVariant: crossaot
        dependsOn:
        - mono_android_offsets
        - mono_browser_offsets
        monoCrossAOTTargetOS:
        - Android
        - Browser
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
        extraStepsParameters:
          name: MonoRuntimePacks

  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/common/global-build-job.yml
      runtimeFlavor: mono
      buildConfig: release
      platforms:
      - OSX_x64
      jobParameters:
        buildArgs: -s mono+packs -c $(_BuildConfig)
                   /p:MonoCrossAOTTargetOS=Android+Browser+tvOS+iOS /p:SkipMonoCrossJitConfigure=true /p:BuildMonoAOTCrossCompilerOnly=true
        nameSuffix: CrossAOT_Mono
        runtimeVariant: crossaot
        dependsOn:
        - mono_android_offsets
        - mono_browser_offsets
        - mono_tvos_offsets
        - mono_ios_offsets
        monoCrossAOTTargetOS:
        - Android
        - Browser
        - tvOS
        - iOS
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
        extraStepsParameters:
          name: MonoRuntimePacks

  #
  # Build Mono LLVM runtime packs
  #
  - template: /eng/pipelines/common/platform-matrix-multijob.yml
    parameters:
      platforms:
      - OSX_x64
      - Linux_x64
      # - Linux_arm
      - Linux_arm64
      # - Linux_musl_x64
      # - Linux_musl_arm64
      # - windows_x64
      # - windows_x86
      # - windows_arm
      # - windows_arm64
      jobTemplates:
      # LLVMJIT
      - jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig)
                     /p:MonoEnableLLVM=true /p:MonoBundleLLVMOptimizer=false
          nameSuffix: AllSubsets_Mono_LLVMJIT
          runtimeVariant: LLVMJIT
          isOfficialBuild: ${{ variables.isOfficialBuild }}
          extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
          extraStepsParameters:
            name: MonoRuntimePacks
      #LLVMAOT
      - jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig)
                      /p:MonoEnableLLVM=true /p:MonoBundleLLVMOptimizer=true
          nameSuffix: AllSubsets_Mono_LLVMAOT
          runtimeVariant: LLVMAOT
          isOfficialBuild: ${{ variables.isOfficialBuild }}
          extraStepsTemplate: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
          extraStepsParameters:
            name: MonoRuntimePacks

  #
  # Build libraries using live CoreLib from CoreCLR
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/libraries/build-job.yml
      buildConfig: Release
      platforms:
      - OSX_arm64
      - OSX_x64
      - Linux_x64
      - Linux_arm
      - Linux_arm64
      - Linux_musl_x64
      - Linux_musl_arm
      - Linux_musl_arm64
      - windows_x86
      - windows_x64
      - windows_arm
      - windows_arm64
      jobParameters:
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        liveRuntimeBuildConfig: release

  #
  # Build libraries AllConfigurations for packages
  #
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/libraries/build-job.yml
      buildConfig: Release
      platforms:
      - windows_x64
      jobParameters:
        framework: allConfigurations
        isOfficialBuild: ${{ variables.isOfficialBuild }}
        isOfficialAllConfigurations: true
        liveRuntimeBuildConfig: release

  #
  # Installer Build
  #
  - template: /eng/pipelines/installer/installer-matrix.yml
    parameters:
      jobParameters:
        liveRuntimeBuildConfig: release
        liveLibrariesBuildConfig: Release
        isOfficialBuild: ${{ variables.isOfficialBuild }}
      platforms:
      - OSX_arm64
      - OSX_x64
      - Linux_x64
      - Linux_arm
      - Linux_arm64
      - Linux_musl_x64
      - Linux_musl_arm
      - Linux_musl_arm64
      - windows_x86
      - windows_x64
      - windows_arm
      - windows_arm64

#  #
#  # Build PGO CoreCLR release
#  #
#  - template: /eng/pipelines/common/platform-matrix.yml
#    parameters:
#      jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
#      buildConfig: release
#      platforms:
#      - windows_x64
#      jobParameters:
#        testGroup: innerloop
#        pgoType: 'PGO'
#
#  #
#  # PGO Build
#  #
#  - template: /eng/pipelines/installer/installer-matrix.yml
#    parameters:
#      buildConfig: Release
#      jobParameters:
#        isOfficialBuild: ${{ variables.isOfficialBuild }}
#        liveRuntimeBuildConfig: release
#        liveLibrariesBuildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
#        pgoType: 'PGO'
#      platforms:
#      - windows_x64

- ${{ if eq(variables.isOfficialBuild, true) }}:
  - template: /eng/pipelines/official/stages/publish.yml
    parameters:
      isOfficialBuild: ${{ variables.isOfficialBuild }}
