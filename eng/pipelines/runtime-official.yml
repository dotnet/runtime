trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
    - internal/release/*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

# This is an official pipeline that should not be triggerable from a PR,
# there is no public pipeline associated with it.
pr: none

variables:
- template: /eng/pipelines/common/variables.yml
  parameters:
    templatePath: 'templates-official'
- template: /eng/pipelines/common/internal-variables.yml
  parameters:
    teamName: dotnet-core-acquisition

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    isOfficialBuild: true
    stages:
    - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      - stage: Localization
        dependsOn: []
        jobs:
        #
        # Localization build
        #
        - template: /eng/common/templates-official/job/onelocbuild.yml
          parameters:
            MirrorRepo: runtime
            MirrorBranch: main
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-RUNTIME'
      - stage: Source_Index
        dependsOn: []
        displayName: Source Index
        jobs:
        #
        # Source Index Build
        #
          - template: /eng/common/templates-official/job/source-index-stage1.yml
            parameters:
              sourceIndexBuildCommand: build.cmd -subset libs.sfx+libs.oob -binarylog -os linux -ci /p:SkipLibrariesNativeRuntimePackages=true

    - stage: Build
      dependsOn: []
      jobs:
      #
      # Build all runtime packs to ensure that the SDL tooling can analyze the code in this repo (including all dependencies on all platforms).
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - windows_x64
          - windows_x86
          - windows_arm64
          - osx_arm64
          - osx_x64
          - linux_x64
          - linux_arm
          - linux_arm64
          - linux_musl_x64
          - linux_musl_arm
          - linux_musl_arm64
          - android_x64
          - android_x86
          - android_arm
          - android_arm64
          - maccatalyst_x64
          - maccatalyst_arm64
          - tvossimulator_x64
          - tvossimulator_arm64
          - tvos_arm64
          - iossimulator_x64
          - iossimulator_arm64
          - ios_arm64
          - linux_bionic_x64
          - linux_bionic_arm
          - linux_bionic_arm64
          - browser_wasm
          - wasi_wasm
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -c $(_BuildConfig) -restore -build -publish /p:DotNetBuildAllRuntimePacks=true
            nameSuffix: AllRuntimes
            isOfficialBuild: true
            timeoutInMinutes: 120

      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          runtimeFlavor: mono
          platforms:
          - browser_wasm
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -c $(_BuildConfig) -restore -build -publish /p:DotNetBuildAllRuntimePacks=true /p:WasmEnableThreads=true
            nameSuffix: Mono_multithread
            isOfficialBuild: true
            runtimeVariant: multithread

      #
      # Build Mono LLVM runtime packs
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          platforms:
          - osx_x64
          - linux_x64
          - linux_arm64
          buildConfig: release
          runtimeFlavor: mono
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -s mono+libs+host+packs -c $(_BuildConfig) -restore -build -publish
                        /p:MonoEnableLLVM=true /p:MonoAOTEnableLLVM=true /p:MonoBundleLLVMOptimizer=true
            nameSuffix: Mono_LLVMAOT
            runtimeVariant: LLVMAOT
            isOfficialBuild: true

      #
      # Build libraries (all TFMs) and packages
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: Release
          platforms:
          - windows_x64
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -s tools.illink+libs -restore -build -pack -publish -c $(_BuildConfig) /p:TestAssemblies=false /p:TestPackages=true /p:EnableDefaultRidSpecificArtifacts=false
            nameSuffix: Libraries_WithPackages
            isOfficialBuild: true
            timeoutInMinutes: 95

    - stage: Publish
      dependsOn: []
      jobs:
      - template: /eng/common/templates-official/job/publish-build-assets.yml
        parameters:
          publishUsingPipelines: true
          publishAssetsImmediately: true
          isAssetlessBuild: true
          pool:
            name: $(DncEngInternalBuildPool)
            demands: ImageOverride -equals 1es-windows-2022
