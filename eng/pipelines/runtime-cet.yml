
trigger:
  batch: true
  branches:
    include:
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

jobs:

#
# Evaluate paths
#
# - ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
#   - template: /eng/pipelines/common/evaluate-default-paths.yml

#
# Build CoreCLR checked
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: checked
    platforms:
    - windows_x64
    jobParameters:
      testGroup: innerloop
      condition: >-
        eq(variables['isRollingBuild'], true)
#         or(
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
#           eq(variables['isRollingBuild'], true))
          
#
# Build CoreCLR release
# Always as they are needed by Installer and we always build and test the Installer.
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: release
    platforms:
    - windows_x64
    jobParameters:
      testGroup: innerloop


- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: release
    platforms:
    - windows_x64
    jobParameters:
      testScope: innerloop

#
# Libraries release build that only runs when coreclr is changed in PRs
# We need these for checked coreclr + release libraries tests runs.
#
- ${{ if eq(variables['isRollingBuild'], false) }}:
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/libraries/build-job.yml
      buildConfig: Release
      platforms:
      - windows_x64
      jobParameters:
        condition: >-
          true
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true)

#
# CoreCLR Test builds using live libraries release build
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/templates/runtimes/build-test-job.yml
    buildConfig: checked
    platforms:
    - CoreClrTestBuildHost # Either OSX_x64 or Linux_x64
    jobParameters:
      testGroup: innerloop
      condition: >-
        eq(variables['isRollingBuild'], true)
#         or(
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
#           eq(variables['isRollingBuild'], true))


#
# CoreCLR Test executions using live libraries
# Only when CoreCLR is changed
#

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/templates/runtimes/run-test-job.yml
    buildConfig: checked
    platforms:
    - windows_x64
    helixQueueGroup: cet
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: release
      condition: >-
        eq(variables['isRollingBuild'], true)
#         or(
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
#           eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
#           eq(variables['isRollingBuild'], true))