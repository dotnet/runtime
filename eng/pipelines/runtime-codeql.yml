trigger:
  none

schedules:
  - cron: 0 12 * * 1,4,6
    # CodeQL auto-injects into other pipelines and will do a scan if one hasn't
    # been done in 72 hours. These can cause timeouts, so we ensure that one has
    # already been performed. We can increase this to 4x/week or be more
    # sophisticated if the 72 hour period ending Thursday ("4" in the cron line)
    # causes a problem.
    displayName: 3x/week CodeQL/Semmle run
    branches:
      include:
      - main
    always: true

variables:
  - template: /eng/pipelines/common/variables.yml
  - name: Codeql.Cadence
    value: 0
  - name: Codeql.TSAEnabled
    value: True
  - name: Codeql.BuildIdentifier
    value: $(System.JobDisplayName)
  - name: Codeql.Language
    value: cpp,csharp,java,python

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    isOfficialBuild: true
    stages:
    - stage: Build
      jobs:
      #
      # Build all runtime packs to ensure that the SDL tooling can analyze the code in this repo (including all dependencies on all platforms).
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - windows_x64
          - linux_x64
          - linux_musl_arm64
          - android_x64
          - linux_bionic_x64
          - browser_wasm
          - wasi_wasm
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -c $(_BuildConfig) -restore -build -pack /p:DotNetBuildAllRuntimePacks=true
            nameSuffix: CodeQL
            isOfficialBuild: false
            timeoutInMinutes: 360
            preBuildSteps:
              - task: CodeQL3000Init@0
                displayName: Initialize CodeQL (manually-injected)
            postBuildSteps:
              - task: CodeQL3000Finalize@0
                displayName: Finalize CodeQL (manually-injected)
              - task: CopyFiles@2
                displayName: Gather packages for publish to artifacts
                inputs:
                  SourceFolder: 'artifacts/packages'
                  Contents: '**'
                  TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
            templateContext:
              outputs:
              - output: pipelineArtifact
                displayName: Publish artifacts
                targetPath: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
                artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
                condition: always()
                retryCountOnTaskFailure: 10 # for any logs being locked
                continueOnError: true

      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - maccatalyst_x64
          - osx_arm64
          - tvos_arm64
          - ios_arm64
          jobParameters:
            templatePath: 'templates-official'
            buildArgs: -c $(_BuildConfig) -restore -build -pack /p:DotNetBuildAllRuntimePacks=true
            isOfficialBuild: false
            timeoutInMinutes: 120
            postBuildSteps:
              - task: CopyFiles@2
                displayName: Gather packages for publish to artifacts
                inputs:
                  SourceFolder: 'artifacts/packages'
                  Contents: '**'
                  TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
            templateContext:
              outputs:
              - output: pipelineArtifact
                displayName: Publish artifacts
                targetPath: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
                artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)
                condition: always()
                retryCountOnTaskFailure: 10 # for any logs being locked
                continueOnError: true
