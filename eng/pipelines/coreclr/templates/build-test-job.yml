parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  container: ''
  testGroup: ''
  displayNameArgs: ''
  condition: true
  stagedBuild: false

### Build managed test components (native components are getting built as part
### of the the product build job).

### TODO: As of today, build of managed test components requires the product build
### as a prerequisite due to dependency on System.Private.Corelib. After switching
### over to its reference assembly we should be able to remove this dependency and
### run managed test builds in parallel with the product build job.

jobs:
- template: xplat-pipeline-job.yml
  parameters:
    buildConfig: ${{ parameters.buildConfig }}
    archType: ${{ parameters.archType }}
    osGroup: ${{ parameters.osGroup }}
    osSubgroup: ${{ parameters.osSubgroup }}
    managedTestBuildOsGroup: ${{ parameters.osGroup }}
    managedTestBuildOsSubgroup: ${{ parameters.osSubgroup }}
    container: ${{ parameters.container }}
    testGroup: ${{ parameters.testGroup }}
    stagedBuild: ${{ parameters.stagedBuild }}

    # Test jobs should continue on error for internal builds
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      continueOnError: true

    # Compute job name from template parameters
    ${{ if eq(parameters.testGroup, 'innerloop') }}:
      name: 'build_test_p0_${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}'      
      displayName: 'Build Test Pri0 ${{ parameters.osGroup }}${{ parameters.osSubgroup }} ${{ parameters.archType }} ${{ parameters.buildConfig }}'

    ${{ if ne(parameters.testGroup, 'innerloop') }}:
      name: 'build_test_p1_${{ parameters.osGroup }}${{ parameters.osSubgroup }}_${{ parameters.archType }}_${{ parameters.buildConfig }}'      
      displayName: 'Build Test Pri1 ${{ parameters.osGroup }}${{ parameters.osSubgroup }} ${{ parameters.archType }} ${{ parameters.buildConfig }}'

    # Since the condition is being altered, merge the default with the additional conditions.
    # See https://docs.microsoft.com/azure/devops/pipelines/process/conditions
    condition: and(succeeded(), ${{ parameters.condition }})

    # TODO: Build of managed test components currently depends on the corresponding build job
    # because it needs System.Private.Corelib; we should be able to remove this dependency
    # by switching over to using reference assembly.
    ${{ if ne(parameters.stagedBuild, true) }}:
      dependsOn: ${{ format('build_{0}{1}_{2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}

    ${{ if eq(parameters.testGroup, 'innerloop') }}:
      timeoutInMinutes: 90

    ${{ if ne(parameters.testGroup, 'innerloop') }}:
      timeoutInMinutes: 160

    steps:

    # Install test build dependencies
    - ${{ if eq(parameters.osGroup, 'OSX') }}:
      - script: sh $(coreClrRepoRootDir)eng/install-native-dependencies.sh $(osGroup)
        displayName: Install native dependencies
    - ${{ if eq(parameters.osGroup, 'Windows_NT') }}:
      # Necessary to install correct cmake version
      - script: $(coreClrRepoRootDir)eng\common\init-tools-native.cmd -InstallDirectory $(Build.SourcesDirectory)\native-tools -Force
        displayName: Install native dependencies


    # Download product binaries directory
    - template: download-artifact-step.yml
      parameters:
        downloadFolder: $(binTestsPath)/tmp
        unpackFolder: $(buildProductRootFolderPath)
        artifactFileName: '$(buildProductArtifactName)$(archiveExtension)'
        artifactName: '$(buildProductArtifactName)'
        displayName: 'product build'


    # Build managed test components
    - ${{ if ne(parameters.osGroup, 'Windows_NT') }}:
      - script: $(coreClrRepoRootDir)build-test$(scriptExt) skipnative skipgeneratelayout $(buildConfig) $(archType) $(crossArg) $(priorityArg) ci
        displayName: Build managed test components
    - ${{ if eq(parameters.osGroup, 'Windows_NT') }}:
      - script: $(coreClrRepoRootDir)build-test$(scriptExt) skipnative skipgeneratelayout $(buildConfig) $(archType) $(priorityArg) ci
        displayName: Build managed test components


    # Zip and publish managed test components
    - template: upload-artifact-step.yml
      parameters:
        rootFolder: $(testRootFolderPath)
        includeRootFolder: false
        archiveFile: '$(Build.StagingDirectory)/$(testArtifactName)$(archiveExtension)'
        archiveType: $(archiveType)
        tarCompression: $(tarCompression)
        artifactName: $(testArtifactName)
        displayName: 'managed test components'


    # Publish .packages/microsoft.net.sdk.il needed for traversing
    # test projects during the copynativeonly command in run test job.
    - template: upload-artifact-step.yml
      parameters:
        rootFolder: $(microsoftNetSdkIlFolderPath)
        includeRootFolder: false
        archiveFile: $(Build.StagingDirectory)/$(microsoftNetSdkIlArtifactName)$(archiveExtension)
        archiveType: $(archiveType)
        tarCompression: $(tarCompression)
        artifactName: $(microsoftNetSdkIlArtifactName)
        displayName: 'Microsoft.NET.Sdk.IL package'


    # Publish Logs
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        pathtoPublish: $(coreClrRepoRoot)/bin/Logs
        artifactName: 'TestBuildLogs_$(osGroup)$(osSubgroup)_$(archType)_$(buildConfig)_${{ parameters.testGroup }}'
      continueOnError: true
      condition: always()
