parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  container: ''
  framework: netcoreapp5.0 # Specify the appropriate framework when running release branches (ie netcoreapp3.0 for release/3.0)
  liveLibrariesBuildConfig: ''
  variables: {}
  pool: ''

### Perf job

### Each perf job depends on a corresponding build job with the same
### buildConfig and archType.

jobs:
- template: run-performance-job.yml
  parameters:
    # Compute job name from template parameters
    jobName: ${{ format('perfbuild_{0}{1}_{2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
    displayName: ${{ format('Performance {0}{1} {2} {3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
    pool: ${{ parameters.pool }}
    buildConfig: ${{ parameters.buildConfig }}
    archType: ${{ parameters.archType }}
    osGroup: ${{ parameters.osGroup }}
    osSubgroup: ${{ parameters.osSubgroup }}
    # Test job depends on the corresponding build job
    dependsOn:
    - ${{ format('coreclr_product_build_{0}{1}_{2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
    - ${{ if ne(parameters.liveLibrariesBuildConfig, '') }}:
      - ${{ format('libraries_build_{0}_{1}{2}_{3}_{4}', 'netcoreapp', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.liveLibrariesBuildConfig) }}

    ${{ if eq(parameters.osGroup, 'Windows_NT') }}:
      extraSetupParameters: -CoreRootDirectory $(Build.SourcesDirectory)\artifacts\tests\coreclr\${{ parameters.osGroup }}.${{ parameters.archType }}.Release\Tests\Core_Root -Architecture ${{ parameters.archType }}
    ${{ if ne(parameters.osGroup, 'Windows_NT') }}:
      extraSetupParameters: --corerootdirectory $(Build.SourcesDirectory)/artifacts/tests/coreclr/${{ parameters.osGroup }}.${{ parameters.archType }}.Release/Tests/Core_Root --architecture ${{ parameters.archType }}
    
    variables: ${{ parameters.variables }}

    frameworks:
      - ${{ parameters.framework }}
    steps:
    # Extra steps that will be passed to the performance template and run before sending the job to helix (all of which is done in the template)


    # Optionally download live-built libraries
    - ${{ if ne(parameters.liveLibrariesBuildConfig, '') }}:
      - template: /eng/pipelines/common/download-artifact-step.yml
        parameters:
          unpackFolder: $(librariesDownloadDir)
          cleanUnpackFolder: false
          artifactFileName: '$(librariesBuildArtifactName)$(archiveExtension)'
          artifactName: '$(librariesBuildArtifactName)'
          displayName: 'live-built libraries'


    # Download product binaries directory
    - template: /eng/pipelines/common/download-artifact-step.yml
      parameters:
        unpackFolder: $(buildProductRootFolderPath)
        artifactFileName: '$(buildProductArtifactName)$(archiveExtension)'
        artifactName: '$(buildProductArtifactName)'
        displayName: 'product build'


    # Create Core_Root
    - script: $(coreClrRepoRootDir)build-test$(scriptExt) $(buildConfig) $(archType) generatelayoutonly $(librariesOverrideArg)
      displayName: Create Core_Root
