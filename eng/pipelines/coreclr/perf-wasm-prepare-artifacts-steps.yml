parameters:
  configForBuild: 'Release'

steps:
  - script: >-
      ./dotnet.sh build -p:TargetOS=Browser -p:TargetArchitecture=wasm /nr:false /p:TreatWarningsAsErrors=true
      /p:Configuration=${{ parameters.configForBuild }}
      /p:ContinuousIntegrationBuild=true
      /t:InstallWorkloadUsingArtifacts
      $(Build.SourcesDirectory)/src/tests/BuildWasmApps/Wasm.Build.Tests/Wasm.Build.Tests.csproj
    displayName: "Install workload using artifacts"

  - script: >-
      mkdir -p $(Build.SourcesDirectory)/artifacts/staging &&
      cp -r $(Build.SourcesDirectory)/artifacts/bin/dotnet-workload $(Build.SourcesDirectory)/artifacts/staging &&
      cp -r $(Build.SourcesDirectory)/artifacts/bin/microsoft.netcore.app.runtime.browser-wasm $(Build.SourcesDirectory)/artifacts/staging &&
      cp -r $(Build.SourcesDirectory)/artifacts/bin/microsoft.netcore.app.ref $(Build.SourcesDirectory)/artifacts/staging
    displayName: "Prepare artifacts staging directory"

  - template: /eng/pipelines/common/upload-artifact-step.yml
    parameters:
      rootFolder: '$(Build.SourcesDirectory)/artifacts/staging'
      includeRootFolder: true
      displayName: Browser Wasm Artifacts
      artifactName: BrowserWasm
      archiveType: zip
      archiveExtension: .zip
