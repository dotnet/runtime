# This contains all the wasm related perf jobs

parameters:
  runProfile: 'non-v8'
  compare: false
  onlySanityCheck: false
  downloadSpecificBuild: null # { buildId, pipeline, branchName, project }

jobs:

- ${{ if eq(parameters.runProfile, 'non-v8') }}:
  - ${{ if eq(parameters.downloadSpecificBuild.buildId, '') }}:
    # build mono on wasm - if not using an existing build
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: Release
        runtimeFlavor: mono
        platforms:
        - browser_wasm
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig) /p:AotHostArchitecture=x64 /p:AotHostOS=$(_hostedOS)
          nameSuffix: wasm
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/coreclr/perf-wasm-prepare-artifacts-steps.yml
              parameters:
                configForBuild: Release

  #run mono wasm microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml # NOTE: should we move this file out of coreclr tempelates because it contains mono jobs?
      buildConfig: Release
      runtimeFlavor: wasm
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: wasm
        codeGenType: 'wasm'
        runKind: micro
        logicalMachine: 'perftiger'
        javascriptEngine: 'javascriptcore'
        downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}
        #downloadSpecificBuild:
          #buildId: '1693181'
          #pipeline: 'perf-wasm'
          #branchName: 'refs/pull/67312/head'

  #run mono wasm aot microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml # note: should we move this file out of coreclr tempelates because it contains mono jobs?
      buildconfig: Release
      runtimeflavor: wasm
      platforms:
      - linux_x64
      jobparameters:
        livelibrariesbuildconfig: Release
        runtimetype: wasm
        codegentype: 'aot'
        runkind: micro
        logicalMachine: 'perftiger'
        javascriptengine: 'javascriptcore'
        downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}

- ${{ if eq(parameters.runProfile, 'v8') }}:
  - ${{ if eq(parameters.downloadSpecificBuild.buildId, '') }}:
    # build mono on wasm - if not using an existing build
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: Release
        runtimeFlavor: mono
        platforms:
        - browser_wasm
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig) /p:AotHostArchitecture=x64 /p:AotHostOS=$(_hostedOS)
          nameSuffix: wasm
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/coreclr/perf-wasm-prepare-artifacts-steps.yml
              parameters:
                configForBuild: Release

  # run mono wasm interpreter (default) microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml # NOTE: should we move this file out of coreclr tempelates because it contains mono jobs?
      buildConfig: release
      runtimeFlavor: wasm
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: wasm
        codeGenType: 'wasm'
        runKind: micro
        logicalMachine: 'perftiger'
        javascriptEngine: 'v8'
        # For working with a newer sdk, and previous tfm (eg. 9.0 sdk, and net8.0 tfm)
        #additionalSetupParameters: '--dotnet-versions 8.0.0'
        compare: ${{ parameters.compare }}
        onlySanityCheck: ${{ parameters.onlySanityCheck }}
        downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}

  #run mono wasm aot microbenchmarks perf job
  # Disabled for runtime-wasm-perf on PRs due to https://github.com/dotnet/runtime/issues/95101
  - ${{if not(in(variables['Build.DefinitionName'], 'runtime-wasm-perf')) }}:
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml # note: should we move this file out of coreclr tempelates because it contains mono jobs?
        buildconfig: release
        runtimeflavor: wasm
        platforms:
        - linux_x64
        jobparameters:
          livelibrariesbuildconfig: Release
          runtimetype: wasm
          codegentype: 'aot'
          runkind: micro
          logicalMachine: 'perftiger'
          javascriptEngine: 'v8'
          # For working with a newer sdk, and previous tfm (eg. 9.0 sdk, and net8.0 tfm)
          #additionalSetupParameters: '--dotnet-versions 8.0.0' # passed to ci_setup.py
          compare: ${{ parameters.compare }}
          onlySanityCheck: ${{ parameters.onlySanityCheck }}
          downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}

  # run mono wasm blazor perf job
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml
      buildConfig: release
      runtimeFlavor: wasm
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: wasm
        projectFile: $(Build.SourcesDirectory)/eng/testing/performance/blazor_perf.proj
        runKind: blazor_scenarios
        isScenario: true
        # For working with a newer sdk, and previous tfm (eg. 9.0 sdk, and net8.0 tfm)
        #additionalSetupParameters: '--dotnetversions 8.0.0' # passed to run-performance-job.py
        logicalMachine: 'perftiger'
        downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}

- ${{if or(and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule')), in(variables['Build.DefinitionName'], 'runtime-wasm-perf')) }}:
  # run mono wasm blazor perf job
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/coreclr/templates/run-performance-job.yml
      buildConfig: release
      runtimeFlavor: wasm
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: wasm
        projectFile: $(Build.SourcesDirectory)/eng/testing/performance/blazor_perf.proj
        runKind: blazor_scenarios
        isScenario: true
        # For working with a newer sdk, and previous tfm (eg. 9.0 sdk, and net8.0 tfm)
        #additionalSetupParameters: '--dotnetversions 8.0.0' # passed to run-performance-job.py
        logicalMachine: 'perftiger'
        downloadSpecificBuild: ${{ parameters.downloadSpecificBuild }}
        hybridGlobalization: True
