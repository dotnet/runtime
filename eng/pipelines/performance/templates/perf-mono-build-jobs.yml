parameters:
    mono_x64: false
    monoAot_x64: false
    mono_arm64: false
    monoAot_arm64: false
    monoAndroid: false
    monoAndroidPacks: false

jobs:
  - ${{ if eq(parameters.monoAot_x64, true) }}:
    # build mono for AOT
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - linux_x64
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig) /p:MonoAOTEnableLLVM=true /p:MonoEnableLLVM=true /p:BuildMonoAOTCrossCompiler=true /p:AotHostArchitecture=x64 /p:AotHostOS=linux
          nameSuffix: AOT
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/common/upload-artifact-step.yml
              parameters:
                rootFolder: '$(Build.SourcesDirectory)/artifacts/'
                includeRootFolder: true
                displayName: AOT Mono Artifacts
                artifactName: LinuxMonoAOTx64
                archiveExtension: '.tar.gz'
                archiveType: tar
                tarCompression: gz

  - ${{ if eq(parameters.mono_x64, true) }}:
    # build mono
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - linux_x64
        jobParameters:
          nameSuffix: mono
          buildArgs: -s mono+clr.iltools+clr.hosts+libs+host+packs -c $(_BuildConfig)
          isOfficialBuild: false
          postBuildSteps:
          - template: /eng/pipelines/common/upload-artifact-step.yml
            parameters:
              rootFolder: $(Build.SourcesDirectory)/artifacts/bin
              includeRootFolder: false
              archiveType: $(archiveType)
              archiveExtension: $(archiveExtension)
              tarCompression: $(tarCompression)
              artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_mono
              displayName: Build Assets

  - ${{ if eq(parameters.mono_arm64, true) }}:
    # build mono_arm64
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        platforms:
          - linux_arm64
        jobParameters:
          nameSuffix: mono
          buildArgs: -s mono+clr.iltools+clr.hosts+libs+host+packs -c $(_BuildConfig)
          isOfficialBuild: false
          postBuildSteps:
          - template: /eng/pipelines/common/upload-artifact-step.yml
            parameters:
              rootFolder: $(Build.SourcesDirectory)/artifacts/bin
              includeRootFolder: false
              archiveType: $(archiveType)
              archiveExtension: $(archiveExtension)
              tarCompression: $(tarCompression)
              artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_mono
              displayName: Build Assets

  - ${{ if eq(parameters.monoAot_arm64, true) }}:
    # build monoAot_arm64
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        runtimeVariant: 'llvmaot'
        platforms:
          - linux_arm64
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig) /p:MonoAOTEnableLLVM=true /p:MonoEnableLLVM=true /p:BuildMonoAOTCrossCompiler=true /p:AotHostArchitecture=arm64 /p:AotHostOS=linux
          nameSuffix: AOT
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/common/upload-artifact-step.yml
              parameters:
                rootFolder: '$(Build.SourcesDirectory)/artifacts/'
                includeRootFolder: true
                displayName: AOT Mono Artifacts
                artifactName: LinuxMonoAOTarm64
                archiveExtension: '.tar.gz'
                archiveType: tar
                tarCompression: gz

  - ${{ if eq(parameters.monoAndroid, true) }}:
    # build mono Android scenarios
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - android_arm64
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig)
          nameSuffix: AndroidMono
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/performance/templates/build-perf-sample-apps.yml
              parameters:
                runtimeType: mono

  - ${{ if eq(parameters.monoAndroidPacks, true) }}:
    # build mono runtime packs
    - template: /eng/pipelines/common/platform-matrix.yml
      parameters:
        jobTemplate: /eng/pipelines/common/global-build-job.yml
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - android_arm64
        jobParameters:
          buildArgs: -s mono+libs+host+packs -c $(_BuildConfig)
          nameSuffix: Mono_Packs
          isOfficialBuild: false
          postBuildSteps:
            - template: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
              parameters:
                name: MonoRuntimePacks
                isOfficialBuild: false
