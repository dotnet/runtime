parameters:
  PublishRidAgnosticPackagesFromPlatform: ''
  isOfficialBuild: false
  logArtifactName: 'Logs-PrepareSignedArtifacts_Attempt$(System.JobAttempt)'

jobs:
- template: /eng/common/templates-official/job/job.yml
  parameters:
    name: 'PrepareSignedArtifacts'
    displayName: 'Prepare Signed Artifacts'
    
    # Disable SBOM at job template level
    enableSbom: false

    pool:
      name: $(DncEngInternalBuildPool)
      demands: ImageOverride -equals 1es-windows-2022

    # Double the default timeout.
    timeoutInMinutes: 240

    workspace:
      clean: all

    enableMicrobuild: true

    variables:
      - name: '_SignType'
        value: $[ coalesce(variables.OfficialSignType, 'real') ]
      
    templateContext:
      inputs:
      - input: checkout
        repository: self
        clean: true
        fetchDepth: 20
      - input: pipelineArtifact
        artifactName: IntermediateArtifacts
        targetPath: $(Build.SourcesDirectory)\artifacts\PackageDownload\IntermediateArtifacts
      outputs:
      - output: pipelineArtifact
        displayName: 'Publish BuildLogs'
        condition: succeededOrFailed()
        targetPath: '$(Build.StagingDirectory)\BuildLogs'
        artifactName: ${{ parameters.logArtifactName }}
    
    steps:
    - script: >-
        build.cmd -ci
        -subset publish
        -configuration Release
        /p:PublishRidAgnosticPackagesFromPlatform=${{ parameters.PublishRidAgnosticPackagesFromPlatform }}
        /p:OfficialBuildId=$(Build.BuildNumber)
        /p:SignType=$(_SignType)
        /p:DotNetSignType=$(_SignType)
        /bl:$(Build.SourcesDirectory)\prepare-artifacts.binlog
      displayName: Prepare artifacts and upload to build

    - template: /eng/common/templates-official/steps/generate-sbom.yml
      parameters:
        BuildDropPath: $(Build.SourcesDirectory)\artifacts

    - task: CopyFiles@2
      displayName: Copy Files to $(Build.StagingDirectory)\BuildLogs
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          **/*.log
          **/*.binlog
        TargetFolder: '$(Build.StagingDirectory)\BuildLogs'
      continueOnError: true
      condition: succeededOrFailed()