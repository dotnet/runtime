parameters:
  buildConfig: ''
  osGroup: ''
  osSubgroup: ''
  archType: ''
  framework: netcoreapp
  isOfficialBuild: false
  timeoutInMinutes: 150
  container: ''
  publishTestArtifacs: true
  runTests: true
  helixQueues: []
  variables: {}

jobs:
  - template: /eng/pipelines/libraries/base-job.yml
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      osGroup:  ${{ parameters.osGroup }}
      osSubgroup:  ${{ parameters.osSubgroup }}
      archType:  ${{ parameters.archType }}
      framework:  ${{ parameters.framework }}
      isOfficialBuild: ${{ parameters.isOfficialBuild }}
      timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
      container: ${{ parameters.container }}

      pool: Hosted VS2017 # remove when using common templates

      name: ${{ format('libraries_test_{0}_{1}{2}_{3}_{4}', parameters.framework, parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
      ${{ if eq(parameters.framework, 'netcoreapp') }}:
        displayName: ${{ format('{0}{1} Test {2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
      ${{ if ne(parameters.framework, 'netcoreapp') }}:
        displayName: ${{ format('{0} Test {1} {2}_{3}', parameters.osGroup, parameters.framework, parameters.archType, parameters.buildConfig) }}

      dependsOn:
      - ${{ format('libraries_build_{0}_{1}{2}_{3}_{4}', parameters.framework, parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}

      variables:
        - _archiveTestsParameter: /p:ArchiveTests=Tests
        - _skipTestRestoreArg: /p:SkipTestRestore=false 
        - ${{ if eq(parameters.framework, 'allConfigurations') }}:
          - _archiveTestsParameter: /p:ArchiveTests=Packages
        
        - ${{ parameters.variables }}

      preBuildSteps:
        - template: /eng/pipelines/common/download-artifact-step.yml
          parameters:
            displayName: Build Assets
            artifactName: ${{ format('libraries_bin_{0}_{1}{2}_{3}_{4}', parameters.framework, parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}
            artifactFileName: ${{ format('libraries_bin_{0}_{1}{2}_{3}_{4}', parameters.framework, parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.buildConfig) }}.zip
            unpackFolder: $(Build.SourcesDirectory)/artifacts

      steps:
        - script: $(_buildScript)
                -buildtests
                $(_buildArguments)
                $(_archiveTestsParameter)
          displayName: Build

        - ${{ if eq(parameters.runTests, 'true') }}:
          - template: /eng/pipelines/libraries/helix.yml
            parameters:
              targetOS: ${{ parameters.osGroup }}
              archGroup: ${{ parameters.archType }}
              configuration: ${{ parameters.buildConfig }}
              helixQueues: ${{ join(';', parameters.helixQueues) }}
              msbuildScript: $(_msbuildCommand)
              framework: ${{ parameters.framework }}
              testScope: ${{ parameters.testScope }}
              creator: dotnet-bot
              helixToken: ''