trigger: none

pr:
  branches:
    include:
    - "*"

schedules:
- cron: "0 13 * * *" # 1PM UTC => 5 AM PST
  displayName: SslStress nightly run
  branches:
    include:
    - main
    - release/8.0
    - release/9.0

variables:
  - template: ../variables.yml
  - name: dockerfilesFolder
    value: $(Build.SourcesDirectory)/eng/docker
  - name: sslStressProject
    value: $(sourcesRoot)/System.Net.Security/tests/StressTests/SslStress
  - name: sdkBaseImage
    value: dotnet-sdk-libraries-current


extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:

      - job: linux
        displayName: Docker Linux
        timeoutInMinutes: 120
        variables:
          DUMPS_SHARE_MOUNT_ROOT: "/dumps-share"
          DUMPS_SHARE: "$(Build.ArtifactStagingDirectory)/dumps/"
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals Build.Ubuntu.2204.Amd64.Open

        steps:
        - checkout: self
          clean: true
          fetchDepth: 5

        - bash: |
            $(dockerfilesFolder)/build-docker-sdk.sh -t $(sdkBaseImage) -c $(BUILD_CONFIGURATION)
          displayName: Build CLR and Libraries

        - bash: |
            $(sslStressProject)/run-docker-compose.sh -o -c $(BUILD_CONFIGURATION) -t $(sdkBaseImage)
          displayName: Build SslStress

        - bash: |
            cd '$(sslStressProject)'
            export STRESS_CLIENT_ARGS=$SSLSTRESS_CLIENT_ARGS
            export STRESS_SERVER_ARGS=$SSLSTRESS_SERVER_ARGS
            mkdir -p $DUMPS_SHARE
            docker-compose up --abort-on-container-exit --no-color
          displayName: Run SslStress

        - publish: $(Build.ArtifactStagingDirectory)/dumps
          artifact: DumpsLinux
          condition: failed()

      - job: windows
        displayName: Docker NanoServer
        timeoutInMinutes: 120
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals 1es-windows-2022-open
        variables:
          DUMPS_SHARE_MOUNT_ROOT: "C:/dumps-share"
          DUMPS_SHARE: "$(Build.ArtifactStagingDirectory)/dumps/"
        steps:
        - checkout: self
          clean: true
          fetchDepth: 5
          lfs: false

        - powershell: |
            $(dockerfilesFolder)/build-docker-sdk.ps1 -w -t $(sdkBaseImage) -c $(BUILD_CONFIGURATION)
          displayName: Build CLR and Libraries

        - powershell: |
            $(sslStressProject)/run-docker-compose.ps1 -w -o -c $(BUILD_CONFIGURATION) -t $(sdkBaseImage)
          displayName: Build SslStress

        - powershell: |
            cd '$(sslStressProject)'
            $env:STRESS_CLIENT_ARGS = $env:SSLSTRESS_CLIENT_ARGS
            $env:STRESS_SERVER_ARGS = $env:SSLSTRESS_SERVER_ARGS
            New-Item -Force $env:DUMPS_SHARE -ItemType Directory
            docker compose up --abort-on-container-exit --no-color
          displayName: Run SslStress

        - publish: $(Build.ArtifactStagingDirectory)/dumps
          artifact: DumpsWindows
          condition: failed()