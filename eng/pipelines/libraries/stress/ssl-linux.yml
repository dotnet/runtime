trigger: none

pr:
  branches:
    include:
    - "*"

schedules:
- cron: "0 13 * * *" # 1PM UTC => 5 AM PST
  displayName: SslStress nightly run
  branches:
    include:
    - master

pool:
  name: Hosted Ubuntu 1604

variables:
  - template: ../variables.yml
  - name: sslStressProject
    value: $(sourcesRoot)/System.Net.Security/tests/StressTests/SslStress/
    # Avoid duplication by referencing corefx build infrastructure hosted in HttpStress
    # TODO move to eng/ folder.
  - name: httpStressProject
    value: $(sourcesRoot)/System.Net.Http/tests/StressTests/HttpStress/
  - name: sdkBaseImage
    value: sdk-corefx-current
  - name: sslStressImage
    value: sslstress

steps:
- checkout: self
  clean: true
  fetchDepth: 1
  lfs: false

- bash: |
    docker build -t $(sdkBaseImage) --build-arg CONFIGURATION=$(BUILD_CONFIGURATION) --build-arg BUILD_SCRIPT_NAME=$(buildScriptFileName) -f $(httpStressProject)corefx.Dockerfile .
  displayName: Build Libraries

- bash: |
    # we need to include the entire src/libraries folder in the build context due to Common/ dependencies
    docker build -t $(sslStressImage) --build-arg SDK_BASE_IMAGE=$(sdkBaseImage) --build-arg CONFIGURATION=$(BUILD_CONFIGURATION) -f $(sslStressProject)/Dockerfile src/libraries
  displayName: Build SslStress

- bash: |
    cd '$(sslStressProject)'
    docker-compose up --abort-on-container-exit --no-color
  displayName: Run SslStress
  env:
    HTTPSTRESS_IMAGE: $(sslStressImage)
