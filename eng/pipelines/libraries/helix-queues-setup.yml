parameters:
  jobTemplate: ''
  variables: []
  osGroup: ''
  osSubgroup: ''
  archType: ''
  container: ''
  pool: ''
  platform: ''
  runtimeFlavorDisplayName: ''
  shouldContinueOnError: false
  dependOnEvaluatePaths: false
  jobParameters: {}

jobs:
- template: ${{ parameters.jobTemplate }}
  parameters:
    variables: ${{ parameters.variables }}
    osGroup: ${{ parameters.osGroup }}
    osSubgroup: ${{ parameters.osSubgroup }}
    archType: ${{ parameters.archType }}
    container: ${{ parameters.container }}
    pool: ${{ parameters.pool }}
    shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
    dependOnEvaluatePaths: ${{ parameters.dependOnEvaluatePaths}}
    runtimeFlavorDisplayName: ${{ parameters.runtimeFlavorDisplayName }}
    helixQueues:

    # Linux arm
    - ${{ if eq(parameters.platform, 'Linux_arm') }}:
      - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
        - (Debian.10.Arm32.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-arm32v7
        - (Debian.11.Arm32.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-helix-arm32v7

    # Linux arm64
    - ${{ if eq(parameters.platform, 'Linux_arm64') }}:
      - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
        - (Ubuntu.1804.Arm64.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8
      - ${{ if eq(parameters.jobParameters.isFullMatrix, false) }}:
        - (Ubuntu.1804.Arm64.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8

    # Linux musl x64
    - ${{ if eq(parameters.platform, 'Linux_musl_x64') }}:
      - (Alpine.316.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.17-helix-amd64
      - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
        - (Alpine.319.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.19-helix-amd64

    # Linux musl arm64
    - ${{ if and(eq(parameters.platform, 'Linux_musl_arm64'), eq(parameters.jobParameters.isFullMatrix, true)) }}:
      - (Alpine.316.Arm64.Open)ubuntu.2204.armarch.open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.17-helix-arm64v8
      - (Alpine.319.Arm64.Open)ubuntu.2204.armarch.open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.19-helix-arm64v8

    # Linux x64
    - ${{ if eq(parameters.platform, 'Linux_x64') }}:
      - ${{ if and(eq(parameters.jobParameters.interpreter, ''), ne(parameters.jobParameters.isSingleFile, true)) }}:
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - RedHat.7.Amd64.Open
          - SLES.15.Amd64.Open
          - (Fedora.34.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-helix
          - ubuntu.2204.amd64.open.svc
          - (Debian.10.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
            - (Centos.7.Amd64.Open)Ubuntu.2204.Amd64.Open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-helix
            - RedHat.7.Amd64.Open
            - Ubuntu.1804.Amd64.Open
            - SLES.12.Amd64.Open
            - SLES.15.Amd64.Open
            - (Fedora.34.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-helix
            - ubuntu.2204.amd64.open.svc
            - (Debian.10.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64
            - (Debian.11.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-helix-amd64
            - (Mariner.1.0.Amd64.Open)ubuntu.2204.amd64.open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-1.0-helix
          - ${{ if eq(parameters.jobParameters.isFullMatrix, false) }}:
            - (Centos.7.Amd64.Open)Ubuntu.2204.Amd64.Open.svc@mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-helix
            - RedHat.7.Amd64.Open
            - (Debian.10.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64
            - Ubuntu.1804.Amd64.Open
      - ${{ if or(eq(parameters.jobParameters.interpreter, 'true'), eq(parameters.jobParameters.isSingleFile, true)) }}:
        # Limiting interp runs as we don't need as much coverage.
        - (Debian.10.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64

    # Linux s390x
    - ${{ if eq(parameters.platform, 'Linux_s390x') }}:
        - Ubuntu.2004.S390X.Experimental.Open

    # OSX arm64
    - ${{ if eq(parameters.platform, 'OSX_arm64') }}:
      - OSX.1100.ARM64.Open

    # OSX x64
    - ${{ if eq(parameters.platform, 'OSX_x64') }}:
        - OSX.1200.Amd64.Open

    # Android
    - ${{ if in(parameters.platform, 'Android_x86', 'Android_x64') }}:
      - Ubuntu.1804.Amd64.Android.29.Open
    - ${{ if in(parameters.platform, 'Android_arm', 'Android_arm64') }}:
      - Windows.10.Amd64.Android.Open

    # iOS Simulator/Mac Catalyst arm64
    - ${{ if in(parameters.platform, 'MacCatalyst_arm64', 'iOSSimulator_arm64') }}:
      - OSX.1100.ARM64.Open

    # iOS/tvOS simulator x64/x86 & MacCatalyst x64
    - ${{ if in(parameters.platform, 'iOSSimulator_x64', 'iOSSimulator_x86', 'tvOSSimulator_x64', 'MacCatalyst_x64') }}:
      - OSX.1200.Amd64.Open

    # iOS devices
    - ${{ if in(parameters.platform, 'iOS_arm64') }}:
      - OSX.13.Amd64.Iphone.Open

    # tvOS devices
    - ${{ if in(parameters.platform, 'tvOS_arm64') }}:
      - OSX.13.Amd64.AppleTV.Open

    # windows x64
    - ${{ if eq(parameters.platform, 'windows_x64') }}:
      # netcoreapp
      - ${{ if notIn(parameters.jobParameters.framework, 'net48') }}:
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - Windows.81.Amd64.Open
          - Windows.Amd64.Server2022.Open
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
            - Windows.81.Amd64.Open
            - Windows.10.Amd64.ServerRS5.Open
            - Windows.Amd64.Server2022.Open
            - ${{ if ne(parameters.jobParameters.runtimeFlavor, 'mono') }}:
              - (Windows.Nano.1809.Amd64.Open)windows.10.amd64.serverrs5.open@mcr.microsoft.com/dotnet-buildtools/prereqs:nanoserver-1809-helix-amd64
              - (Windows.Server.Core.ltsc2022.Open)windows.amd64.server2022.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2022-helix-amd64
          - ${{ if ne(parameters.jobParameters.isFullMatrix, true) }}:
            - Windows.81.Amd64.Open
            - Windows.Amd64.Server2022.Open
            - Windows.11.Amd64.Client.Open
            - ${{ if eq(parameters.jobParameters.testScope, 'outerloop') }}:
              - (Windows.Server.Core.ltsc2022.Open)windows.amd64.server2022.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2022-helix-amd64
            - ${{ if ne(parameters.jobParameters.runtimeFlavor, 'mono') }}:
              - (Windows.Nano.1809.Amd64.Open)windows.10.amd64.serverrs5.open@mcr.microsoft.com/dotnet-buildtools/prereqs:nanoserver-1809-helix-amd64

      # .NETFramework
      - ${{ if eq(parameters.jobParameters.framework, 'net48') }}:
        - Windows.10.Amd64.Client.Open

    # windows x86
    - ${{ if eq(parameters.platform, 'windows_x86') }}:
      # netcoreapp
      - ${{ if notIn(parameters.jobParameters.framework, 'net48') }}:
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - Windows.10.Amd64.ServerRS5.Open
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
            - Windows.10.Amd64.ServerRS5.Open
            - Windows.Amd64.Server2022.Open
          - ${{ if ne(parameters.jobParameters.isFullMatrix, true) }}:
            - ${{ if eq(parameters.jobParameters.buildConfig, 'Release') }}:
              - Windows.Amd64.Server2022.Open
            - ${{ if eq(parameters.jobParameters.buildConfig, 'Debug') }}:
              - Windows.Amd64.Server2022.Open

      # .NETFramework
      - ${{ if eq(parameters.jobParameters.framework, 'net48') }}:
        - Windows.10.Amd64.Client.Open

    # windows arm
    - ${{ if eq(parameters.platform, 'windows_arm') }}:
      - Windows.11.Arm64.Open

    # windows arm64
    - ${{ if eq(parameters.platform, 'windows_arm64') }}:
      - Windows.11.Arm64.Open

    # WebAssembly
    - ${{ if eq(parameters.platform, 'Browser_wasm') }}:
      - Ubuntu.1804.Amd64.Open

    # WebAssembly windows
    - ${{ if eq(parameters.platform, 'Browser_wasm_win') }}:
      - (Windows.Amd64.Server2022.Open)windows.amd64.server2022.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2022-helix-webassembly

    ${{ insert }}: ${{ parameters.jobParameters }}
