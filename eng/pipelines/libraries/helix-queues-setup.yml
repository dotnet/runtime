parameters:
  jobTemplate: ''
  variables: []
  osGroup: ''
  osSubgroup: ''
  archType: ''
  container: ''
  pool: ''
  platform: ''
  shouldContinueOnError: false
  dependOnEvaluatePaths: false
  jobParameters: {}

jobs:
- template: ${{ parameters.jobTemplate }}
  parameters:
    variables: ${{ parameters.variables }}
    osGroup: ${{ parameters.osGroup }}
    osSubgroup: ${{ parameters.osSubgroup }}
    archType: ${{ parameters.archType }}
    container: ${{ parameters.container }}
    pool: ${{ parameters.pool }}
    platform: ${{ parameters.platform }}
    shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
    dependOnEvaluatePaths: ${{ parameters.dependOnEvaluatePaths}}
    helixQueues:

    # Linux arm
    - ${{ if eq(parameters.platform, 'Linux_arm') }}:
      - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Debian.10.Arm32.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-arm32v7-20210304164340-6616c63
        - (Debian.11.Arm32.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-helix-arm32v7-20210304164347-5a7c380

    # Linux armv6
    - ${{ if eq(parameters.platform, 'Linux_armv6') }}:
#      - ${{ if eq(parameters.jobParameters.isFullMatrix, true) }}:
      - (Raspbian.10.Armv6.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:raspbian-10-helix-arm32v6-20211215185610-60748cc

    # Linux arm64
    - ${{ if eq(parameters.platform, 'Linux_arm64') }}:
      - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Ubuntu.2204.Arm64.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-arm64v8-20220909180915-6c91216
      - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Ubuntu.1804.Arm64.Open)Ubuntu.1804.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8-20220909180906-777c06f
      - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Debian.10.Arm64.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-arm64v8-20220908131935-59ee6b3
      - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Debian.11.Arm64.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-helix-arm64v8-20220908131932-59ee6b3

    # Linux musl x64
    - ${{ if eq(parameters.platform, 'Linux_musl_x64') }}:
      - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Alpine.314.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.14-helix-amd64-20220803180115-99b3286
      - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
        - (Alpine.313.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.13-helix-amd64-20210910135845-8a6f4f3

    # Linux musl arm64
    - ${{ if and(eq(parameters.platform, 'Linux_musl_arm64'), or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true))) }}:
      - (Alpine.313.Arm64.Open)ubuntu.1804.armarch.open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.13-helix-arm64v8-20210910135808-8a6f4f3
      - (Alpine.314.Arm64.Open)ubuntu.1804.armarch.open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.14-helix-arm64v8-20210910135810-8a6f4f3

    # Linux x64
    - ${{ if eq(parameters.platform, 'Linux_x64') }}:
      - ${{ if and(eq(parameters.jobParameters.interpreter, ''), ne(parameters.jobParameters.isSingleFile, true)) }}:
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - RedHat.7.Amd64.Open
          - SLES.15.Amd64.Open
          - (Fedora.34.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-helix-20220908220224-98605e8
          - (Ubuntu.2204.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-amd64-20220909180913-1b9461f
          - (Debian.10.Amd64.Open)Ubuntu.2204.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64-20220908132009-59ee6b3
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - SLES.15.Amd64.Open
            - (Fedora.34.Amd64.Open)ubuntu.1804.amd64.open@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-helix-20220908220224-98605e8
            - Ubuntu.2204.Amd64.Open
            - (Debian.11.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-helix-amd64-20220908132354-59ee6b3
            - (Mariner.1.0.Amd64.Open)ubuntu.1604.amd64.open@mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-1.0-helix-20210528192219-92bf620
            - (openSUSE.15.2.Amd64.Open)ubuntu.1604.amd64.open@mcr.microsoft.com/dotnet-buildtools/prereqs:opensuse-15.2-helix-amd64-20220912173041-1d2766c
          - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - (Centos.7.Amd64.Open)Ubuntu.1604.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-helix-20220601183719-dde38af
            - RedHat.7.Amd64.Open
            - (Debian.10.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64-20220908132009-59ee6b3
            - Ubuntu.1804.Amd64.Open
      - ${{ if or(eq(parameters.jobParameters.interpreter, 'true'), eq(parameters.jobParameters.isSingleFile, true)) }}:
        # Limiting interp runs as we don't need as much coverage.
        - (Debian.10.Amd64.Open)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-10-helix-amd64-20220908132009-59ee6b3

    # Linux s390x
    - ${{ if eq(parameters.platform, 'Linux_s390x') }}:
        - Ubuntu.2004.S390X.Experimental.Open

    # Linux PPC64le
    - ${{ if eq(parameters.platform, 'Linux_ppc64le') }}:
        - Ubuntu.2004.PPC64le.Experimental.Open

    # OSX arm64
    - ${{ if eq(parameters.platform, 'OSX_arm64') }}:
      - OSX.1200.ARM64.Open

    # OSX x64
    - ${{ if eq(parameters.platform, 'OSX_x64') }}:
      - OSX.1200.Amd64.Open

    # Android
    - ${{ if in(parameters.platform, 'Android_x86', 'Android_x64', 'Linux_bionic_x64') }}:
      - Ubuntu.1804.Amd64.Android.29.Open
    - ${{ if in(parameters.platform, 'Android_arm', 'Android_arm64', 'Linux_bionic_arm64') }}:
      - Windows.10.Amd64.Android.Open

    # iOS Simulator/Mac Catalyst arm64
    - ${{ if in(parameters.platform, 'MacCatalyst_arm64', 'iOSSimulator_arm64') }}:
      - OSX.1200.Arm64.Open

    # iOS/tvOS simulator x64/x86 & MacCatalyst x64
    - ${{ if in(parameters.platform, 'iOSSimulator_x64', 'iOSSimulator_x86', 'tvOSSimulator_x64', 'MacCatalyst_x64') }}:
      - OSX.1200.Amd64.Open

    # iOS devices
    - ${{ if in(parameters.platform, 'iOS_arm64') }}:
      # split traffic for runtime-extra-platforms (which mostly runs on rolling builds)
      - ${{ if ne(parameters.jobParameters.isExtraPlatforms, true) }}:
        - OSX.1015.Amd64.Iphone.Open
      - ${{ if eq(parameters.jobParameters.isExtraPlatforms, true) }}:
        - OSX.1200.Amd64.Iphone.Open

    # tvOS devices
    - ${{ if in(parameters.platform, 'tvOS_arm64') }}:
      # split traffic for runtime-extra-platforms (which mostly runs on rolling builds)
      - ${{ if ne(parameters.jobParameters.isExtraPlatforms, true) }}:
        - OSX.1015.Amd64.AppleTV.Open
      - ${{ if eq(parameters.jobParameters.isExtraPlatforms, true) }}:
        - OSX.1100.Amd64.AppleTV.Open

    # windows x64
    - ${{ if eq(parameters.platform, 'windows_x64') }}:
      # netcoreapp
      - ${{ if notIn(parameters.jobParameters.framework, 'net48') }}:
        # libraries on mono outerloop
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - Windows.Amd64.Server2022.Open
        # libraries on coreclr (outerloop and innerloop), or libraries on mono innerloop
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - Windows.Amd64.Server2022.Open
            - ${{ if ne(parameters.jobParameters.testScope, 'outerloop') }}:
              - (Windows.10.Amd64.ServerRS5.Open)windows.10.amd64.serverrs5.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2019-helix-amd64-20220502135740-56c6673
          - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - Windows.81.Amd64.Open
            - Windows.10.Amd64.Server2022.ES.Open
            - Windows.11.Amd64.Client.Open
            - ${{ if eq(parameters.jobParameters.testScope, 'outerloop') }}:
              - (Windows.10.Amd64.ServerRS5.Open)windows.10.amd64.serverrs5.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2019-helix-amd64-20220502135740-56c6673
            - ${{ if ne(parameters.jobParameters.runtimeFlavor, 'mono') }}:
              - (Windows.Nano.1809.Amd64.Open)windows.10.amd64.serverrs5.open@mcr.microsoft.com/dotnet-buildtools/prereqs:nanoserver-1809-helix-amd64-08e8e40-20200107182504

      # .NETFramework
      - ${{ if eq(parameters.jobParameters.framework, 'net48') }}:
        - Windows.11.Amd64.Client.Open


    # windows x86
    - ${{ if eq(parameters.platform, 'windows_x86') }}:
      # netcoreapp
      - ${{ if notIn(parameters.jobParameters.framework, 'net48') }}:
        # mono outerloop
        - ${{ if and(eq(parameters.jobParameters.testScope, 'outerloop'), eq(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - Windows.7.Amd64.Open
          - Windows.11.Amd64.Client.Open
        # libraries on coreclr (outerloop and innerloop), or libraries on mono innerloop
        - ${{ if or(ne(parameters.jobParameters.testScope, 'outerloop'), ne(parameters.jobParameters.runtimeFlavor, 'mono')) }}:
          - ${{ if or(eq(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - Windows.11.Amd64.Client.Open
            - Windows.Amd64.Server2022.Open
          - ${{ if or(ne(parameters.jobParameters.isExtraPlatforms, true), eq(parameters.jobParameters.includeAllPlatforms, true)) }}:
            - Windows.10.Amd64.Server2022.ES.Open
            - Windows.7.Amd64.Open

      # .NETFramework
      - ${{ if eq(parameters.jobParameters.framework, 'net48') }}:
        - Windows.10.Amd64.Client21H1.Open

    # windows arm
    - ${{ if eq(parameters.platform, 'windows_arm') }}:
      - Windows.10.Arm64v8.Open

    # windows arm64
    - ${{ if eq(parameters.platform, 'windows_arm64') }}:
      - Windows.10.Arm64.Open
      # TODO: Uncomment once there is HW deployed to service Win11 ARM64 queue
      # - Windows.11.Arm64.Open

    # WebAssembly
    - ${{ if eq(parameters.platform, 'Browser_wasm') }}:
      - Ubuntu.1804.Amd64.Open

    # WebAssembly Firefox
    - ${{ if eq(parameters.platform, 'Browser_wasm_firefox') }}:
      - (Ubuntu.1804.Amd64)Ubuntu.1804.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-webassembly-20220908122752-67908a0

    # WebAssembly windows
    - ${{ if eq(parameters.platform, 'Browser_wasm_win') }}:
      - (Windows.Amd64.Server2022.Open)windows.amd64.server2022.open@mcr.microsoft.com/dotnet-buildtools/prereqs:windowsservercore-ltsc2022-helix-webassembly-20220908122953-3a6fb49

    ${{ insert }}: ${{ parameters.jobParameters }}
