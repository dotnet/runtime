parameters:
  buildConfig: ''
  osGroup: ''
  archType: ''
  osSubgroup: ''
  framework: ''
  isOfficialBuild: false
  timeoutInMinutes: 150
  container: ''
  steps: []
  preBuildSteps: []
  dependsOn: []
  variables: {}
  name: ''
  displayName: ''
  pool: ''

jobs:
  - template: /eng/common/templates/job/job.yml
    parameters:
      name: ${{ parameters.name }}
      displayName: ${{ parameters.displayName }}
      enableTelemetry: ${{ parameters.isOfficialBuild }} # TODO: figure out if it's needed
      container: ${{ parameters.container }}
      helixRepo: dotnet/runtime
      pool: ${{ parameters.pool }}
      variables:
        # Tempoarily moved from variables.yml
        - name: buildScriptFileName
          value: libraries
        - name: sourcesRoot
          value: $(Build.SourcesDirectory)/src/libraries
        - name: pipelinesPath
          value: /eng/pipelines/libraries

        - _BuildConfig: ${{ parameters.buildConfig }}
        - _msbuildCommonParameters: ''
        - _stripSymbolsArg: ''
        - _finalFrameworkArg: -framework ${{ parameters.framework }}
        - _buildScript: $(Build.SourcesDirectory)$(dir)$(buildScriptFileName)$(scriptExt)

        - ${{ if eq(parameters.framework, 'allConfigurations' ) }}:
          - _finalFrameworkArg: -allConfigurations

        - ${{ if eq(parameters.isOfficialBuild, 'true') }}:
          - _msbuildCommonParameters: /p:OfficialBuildId=$(Build.BuildNumber)

        # Windows variables
        - ${{ if eq(parameters.osGroup, 'Windows_NT') }}:
          - _msbuildCommand: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 -warnaserror:0 -ci

        # Non-Windows variables
        - ${{ if ne(parameters.osGroup, 'Windows_NT') }}:
          - _msbuildCommand: ./eng/common/msbuild.sh --warnaserror false --ci
          - ${{ if eq(parameters.isOfficialBuild, 'true') }}:
            - _stripSymbolsArg: -stripSymbols

        - _buildArguments: -configuration ${{ parameters.buildConfig }} -ci -arch ${{ parameters.archType }} $(_finalFrameworkArg) $(_stripSymbolsArg) $(_msbuildCommonParameters)
        - ${{ parameters.variables }}

      dependsOn:
      - ${{ parameters.dependsOn }}
      workspace:
        clean: all

      enablePublishBuildArtifacts: true
      timeoutInMinutes: ${{ parameters.timeoutInMinutes }}

      steps:
        - ${{ if eq(parameters.osGroup, 'OSX') }}:
          - script: |
              brew install pkgconfig openssl
              ln -s /usr/local/opt/openssl/lib/pkgconfig/libcrypto.pc /usr/local/lib/pkgconfig/
              ln -s /usr/local/opt/openssl/lib/pkgconfig/libssl.pc /usr/local/lib/pkgconfig/
              ln -s /usr/local/opt/openssl/lib/pkgconfig/openssl.pc /usr/local/lib/pkgconfig/
            displayName: Install Build Dependencies

        - ${{ if ne(parameters.preBuildSteps[0], '') }}:
          - ${{ parameters.preBuildSteps }}

        - script: $(_buildScript) -restore $(_buildArguments) $(_skipTestRestoreArg)
          displayName: Restore

        - ${{ parameters.steps }}
