trigger: none

resources:
  repositories:
    - repository: diagnostics
      type: github
      name: dotnet/diagnostics
      endpoint: public

variables:
  - template: /eng/pipelines/common/variables.yml

schedules:
- cron: "30 2 * * *"
  displayName: Every night at 2:30AM
  branches:
    include:
    - main
  always: true

pr:
  branches:
    include:
    - main
  paths:
    include:
    - '/eng/pipelines/**'
    - '/src/coreclr/**'
    - '/src/native/**'

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - windows_x64
          jobParameters:
            buildArgs: -s clr+libs+tools.cdacreader+host+packs -c $(_BuildConfig)
            nameSuffix: AllSubsets_CoreCLR
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            timeoutInMinutes: 360
            postBuildSteps:
            - powershell: |
                $versionDir = Get-ChildItem -Directory -Path "$(Build.SourcesDirectory)\artifacts\bin\testhost\net*\shared\Microsoft.NETCore.App" | Select-Object -ExpandProperty FullName
                Write-Host "##vso[task.setvariable variable=versionDir]$versionDir"
              displayName: 'Set Path to Shared Framework Artifacts'
            - template: /eng/pipelines/common/upload-artifact-step.yml
              parameters:
                rootFolder: $(versionDir)
                includeRootFolder: false
                archiveType: $(archiveType)
                archiveExtension: $(archiveExtension)
                tarCompression: $(tarCompression)
                artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr
                displayName: Build Assets
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/diagnostics/runtime-diag-job.yml
          buildConfig: release
          platforms:
          - windows_x64
          jobParameters:
            name: Windows
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            liveRuntimeDir: $(Build.SourcesDirectory)/artifacts/runtime
            timeoutInMinutes: 360
            dependsOn:
            - build_windows_x64_release_AllSubsets_CoreCLR
            preBuildSteps:
              - template: /eng/pipelines/common/download-artifact-step.yml
                parameters:
                  artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr
                  artifactFileName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr$(archiveExtension)
                  unpackFolder: $(Build.SourcesDirectory)/artifacts/runtime
                  displayName: 'Runtime Build Artifacts'
            postBuildSteps:
            - task: PublishTestResults@2
              inputs:
                testResultsFormat: xUnit
                testResultsFiles: '**/*.xml'
                searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults'
                testRunTitle: 'Tests $(_PhaseName)'
                failTaskOnFailedTests: true
                publishRunAttachments: true
                mergeTestResults: true
                buildConfiguration: $(_BuildConfig)
              continueOnError: true
              condition: always()
