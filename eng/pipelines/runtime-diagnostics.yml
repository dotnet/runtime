trigger: none

resources:
  repositories:
    - repository: diagnostics
      type: github
      name: dotnet/diagnostics
      endpoint: public
      ref: refs/heads/stpfiste/live-runtime-option

variables:
  - template: /eng/pipelines/common/variables.yml

schedules:
- cron: "30 2 * * *"
  displayName: Every night at 2:30AM
  branches:
    include:
    - main
  always: true

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: release
          platforms:
          - windows_x64
          jobParameters:
            buildArgs: -s clr+libs+host+packs -c $(_BuildConfig)
            nameSuffix: AllSubsets_CoreCLR
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            timeoutInMinutes: 360
            postBuildSteps:
            - template: /eng/pipelines/common/upload-artifact-step.yml
              parameters:
                rootFolder: $(Build.SourcesDirectory)/artifacts/bin/testhost/net*/shared/Microsoft.NETCore.App/**/
                includeRootFolder: false
                archiveType: $(archiveType)
                archiveExtension: $(archiveExtension)
                tarCompression: $(tarCompression)
                artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr
                displayName: Build Assets            
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/diagnostics/runtime-diag-job.yml
          buildConfig: release
          runtimeFlavor: mono
          platforms:
          - windows_x64
          jobParameters:
            name: Windows
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            liveRuntimeDir: $(Build.SourcesDirectory)/artifacts/runtime
            timeoutInMinutes: 360
            dependsOn: build_windows_x64_release_AllSubsets_CoreCLR
            preBuildSteps:
              - template: /eng/pipelines/common/download-artifact-step.yml
                parameters:
                  artifactName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr
                  artifactFileName: BuildArtifacts_$(osGroup)$(osSubgroup)_$(archType)_$(_BuildConfig)_coreclr$(archiveExtension)
                  unpackFolder: $(Build.SourcesDirectory)/artifacts/runtime
                  displayName: 'Runtime Build Artifacts'